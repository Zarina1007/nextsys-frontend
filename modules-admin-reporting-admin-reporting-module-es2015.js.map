{"version":3,"sources":["./src/app/modules/admin-reporting/accounting/accounting.component.ts","./src/app/modules/admin-reporting/accounting/accounting.component.html","./src/app/modules/admin-reporting/admin-reporting-routing.module.ts","./src/app/modules/admin-reporting/admin-reporting.module.ts","./src/app/modules/admin-reporting/all-reporting/all-reporting.component.ts","./src/app/modules/admin-reporting/all-reporting/all-reporting.component.html","./src/app/modules/admin-reporting/apptitude/apptitude.component.ts","./src/app/modules/admin-reporting/apptitude/apptitude.component.html","./src/app/modules/admin-reporting/bing-direct/bing-direct.component.ts","./src/app/modules/admin-reporting/bing-direct/bing-direct.component.html","./src/app/modules/admin-reporting/hopkins/hopkins.component.ts","./src/app/modules/admin-reporting/hopkins/hopkins.component.html","./src/app/modules/admin-reporting/imgage-advantage/imgage-advantage.component.ts","./src/app/modules/admin-reporting/imgage-advantage/imgage-advantage.component.html","./src/app/modules/admin-reporting/lyons/lyons.component.ts","./src/app/modules/admin-reporting/lyons/lyons.component.html","./src/app/modules/admin-reporting/manual-split-update/manual-split-update.component.ts","./src/app/modules/admin-reporting/manual-split-update/manual-split-update.component.html","./src/app/modules/admin-reporting/manual-update/manual-update.component.ts","./src/app/modules/admin-reporting/manual-update/manual-update.component.html","./src/app/modules/admin-reporting/media-net/media-net.component.ts","./src/app/modules/admin-reporting/media-net/media-net.component.html","./src/app/modules/admin-reporting/perion/perion.component.ts","./src/app/modules/admin-reporting/perion/perion.component.html","./src/app/modules/admin-reporting/rubi/rubi.component.ts","./src/app/modules/admin-reporting/rubi/rubi.component.html","./src/app/modules/admin-reporting/solex-bc/solex-bc.component.ts","./src/app/modules/admin-reporting/solex-bc/solex-bc.component.html","./src/app/modules/admin-reporting/system1/system1.component.ts","./src/app/modules/admin-reporting/system1/system1.component.html","./src/app/modules/admin-reporting/third-party/third-party.component.ts","./src/app/modules/admin-reporting/third-party/third-party.component.html","./src/app/modules/admin-reporting/verizon-direct/verizon-direct.component.ts","./src/app/modules/admin-reporting/verizon-direct/verizon-direct.component.html","./src/app/shared/service/admin-stats/accounting.service.ts","./src/app/shared/service/admin-stats/update.service.ts"],"names":[],"mappings":"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","file":"modules-admin-reporting-admin-reporting-module-es2015.js","sourcesContent":["import { Component, AfterViewInit, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { UsersService } from '../../../shared/service/users.service';\nimport { AccountingService } from 'src/app/shared/service/admin-stats/accounting.service';\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\nimport { CompanyManagementService } from 'src/app/modules/company-management/company-management.service';\n\n@Component({\n  selector: 'app-accounting',\n  templateUrl: './accounting.component.html',\n  styleUrls: ['./accounting.component.scss']\n})\nexport class AccountingComponent implements AfterViewInit {\n\n  selectedCompany: any;\n  @ViewChild('expandableTable') table: any;\n  rows: any = [];\n  loadingIndicator = true;\n  range = {\n    startDate: '',\n    endDate: '',\n  };\n  allRubiStats: any = [];\n  allLyonStats: any = [];\n  allPerionStats: any = [];\n  allSystem1Stats: any = [];\n  allVerizonStats: any = [];\n  allSolexBCStats: any = [];\n  allApptitudeStats: any = [];\n  tagList: any = [];\n  LyonData: any;\n  PerionData: any;\n  RubiData: any;\n  System1Data: any;\n  VerizonData: any;\n  SolexBCData: any;\n  ApptitudeData: any;\n  tempStatData: any = [];\n  tempUpdateStatData: any = [];\n  reportTypeData: any = [];\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private userService: UsersService,\n    private accountingService: AccountingService,\n    private tagService: TagManagementService,\n    private companyService: CompanyManagementService,\n  ) {\n    this.selectedCompany = this.getSelectedCompanyStored();\n  }\n\n  async ngAfterViewInit() {\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\n    this.reportTypeData = await this.getReportingProviderList();\n    this.rows = [];\n    this.tempStatData = [];\n    this.PerionData = await this.getPerionStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.LyonData = await this.getLyonStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.RubiData = await this.getRubiStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.ApptitudeData = await this.getApptitudeStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.SolexBCData = await this.getSolexBCStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n\n    this.VerizonData = await this.getVerizonDirectStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.System1Data = await this.getSystem1Stats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n\n    if (this.reportTypeData.includes('perion')) {\n      this.tempStatData = this.tempStatData.concat(this.PerionData);\n    }\n    if (this.reportTypeData.includes('lyons')) {\n      this.tempStatData = this.tempStatData.concat(this.LyonData);\n    }\n    if (this.reportTypeData.includes('rubi')) {\n      this.tempStatData = this.tempStatData.concat(this.RubiData);\n    }\n    if (this.reportTypeData.includes('apptitude')) {\n      this.tempStatData = this.tempStatData.concat(this.ApptitudeData);\n    }\n\n    if (this.reportTypeData.includes('solex-bc')) {\n      this.tempStatData = this.tempStatData.concat(this.SolexBCData);\n    }\n    if (this.reportTypeData.includes('verizon-direct')) {\n      this.tempStatData = this.tempStatData.concat(this.VerizonData);\n    }\n    if (this.reportTypeData.includes('verizon-direct')) {\n      this.tempStatData = this.tempStatData.concat(this.System1Data);\n    }\n    const result = [];\n\n    this.tempStatData.forEach((object: { publisher: any; reporting: any[]; revenue: any; everyrevenue: string[]; total: any; }) => {\n      const existing = result.filter((item) => item.publisher == object.publisher);\n      if (existing.length) {\n        const existingIndex = result.indexOf(existing[0]);\n        result[existingIndex].reporting = result[existingIndex].reporting.concat(object.reporting);\n        result[existingIndex].everyrevenue = result[existingIndex].everyrevenue.concat(String(object.revenue));\n        result[existingIndex].total = result[existingIndex].total + object.revenue;\n      } else {\n        if (typeof object.reporting == 'string') object.reporting = [object.reporting];\n        if (typeof object.revenue == 'number') {\n          object.everyrevenue = [String(object.revenue)];\n          object.total = object.revenue;\n        }\n        result.push(object);\n      }\n    });\n    this.rows = result;\n\n    this.loadingIndicator = false;\n    this.cdr.detectChanges();\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyStored() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  public async updateReportingFiltering(range: any) {\n    this.range = range;\n    this.rows = [];\n    this.tempUpdateStatData = [];\n    var perionUpData = [];\n    var lyonsUpData = [];\n    var rubiUpData = [];\n    var apptitudeUpData = [];\n    var solexBCUpData = [];\n    var verizonUpData = [];\n    var system1UpData = [];\n    perionUpData = await this.getPerionStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    lyonsUpData = await this.getLyonStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    rubiUpData = await this.getRubiStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    apptitudeUpData = await this.getApptitudeStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    solexBCUpData = await this.getSolexBCStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    verizonUpData = await this.getVerizonDirectStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    system1UpData = await this.getSystem1Stats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    if (this.reportTypeData.includes('perion')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(perionUpData);\n    }\n    if (this.reportTypeData.includes('lyons')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(lyonsUpData);\n    }\n    if (this.reportTypeData.includes('rubi')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(rubiUpData);\n    }\n    if (this.reportTypeData.includes('apptitude')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(apptitudeUpData);\n    }\n\n    if (this.reportTypeData.includes('solex-bc')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(solexBCUpData);\n    }\n    if (this.reportTypeData.includes('verizon-direct')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(verizonUpData);\n    }\n    if (this.reportTypeData.includes('system1')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(system1UpData);\n    }\n    const result = [];\n\n    this.tempUpdateStatData.forEach((object: { publisher: any; reporting: any[]; revenue: any; everyrevenue: string[]; total: any; }) => {\n      const existing = result.filter((item) => item.publisher == object.publisher);\n      if (existing.length) {\n        const existingIndex = result.indexOf(existing[0]);\n        result[existingIndex].reporting = result[existingIndex].reporting.concat(object.reporting);\n        result[existingIndex].everyrevenue = result[existingIndex].everyrevenue.concat(String(object.revenue));\n        result[existingIndex].total = result[existingIndex].total + object.revenue;\n      } else {\n        if (typeof object.reporting == 'string') object.reporting = [object.reporting];\n        if (typeof object.revenue == 'number') {\n          object.everyrevenue = [String(object.revenue)];\n          object.total = object.revenue;\n        }\n        result.push(object);\n      }\n    });\n    this.rows = result;\n    this.loadingIndicator = false;\n    this.cdr.detectChanges();\n  }\n\n  //get Report Providers in Current Company\n  async getReportingProviderList() {\n    if (this.selectedCompany) {\n      try {\n        const res = await this.companyService.getReportCompany(this.selectedCompany.split('/')[1]).toPromise();\n        var providerList = [];\n        res.reportingProviders.map(report => {\n          providerList.push(report.reportingProvider);\n        });\n        return providerList;\n      } catch (error) {\n        return error;\n      };\n    }\n  }\n\n  async getRubiStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getRubiStats(company, startDate, endDate).toPromise();\n    this.allRubiStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"rubi\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allRubiStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Rubi\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allRubiStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Rubi\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allRubiStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Rubi\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allRubiStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Rubi\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var rubiStats = [];\n    var helperRubiSummary = {};\n    if (this.allRubiStats.length > 0) {\n      var groupRubiData = this.allRubiStats.reduce(function(r, o) {\n        var key = o.publisher;\n        if(!helperRubiSummary[key]) {\n          helperRubiSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperRubiSummary[key]);\n        } else {\n          helperRubiSummary[key].revenue += parseFloat(o.revenue);\n        } \n        return r;\n      }, []);\n      groupRubiData.map((rubiOne: any) => {\n        rubiStats.push({\n          publisher: rubiOne.publisher ? rubiOne.publisher : \"No Publisher\",\n          reporting: rubiOne.reporting ? rubiOne.reporting : \"No Reporting\",\n          revenue: rubiOne.revenue\n        });\n      });\n      \n    }\n\n    return rubiStats;\n  }\n\n  async getSolexBCStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getSolexBCStats(company, startDate, endDate).toPromise();\n    this.allSolexBCStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"solex-bc\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allSolexBCStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Solex BC\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allSolexBCStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Solex BC\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allSolexBCStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Solex BC\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allSolexBCStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Solex BC\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var solexBCStats = [];\n    var helperSolexBCSummary = {}\n    if (this.allSolexBCStats.length > 0) {\n      var groupSolexBCData = this.allSolexBCStats.reduce(function(r, o) {\n        var key = o.publisher;\n        if(!helperSolexBCSummary[key]) {\n          helperSolexBCSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperSolexBCSummary[key]);\n        } else {\n          helperSolexBCSummary[key].revenue += parseFloat(o.revenue);\n        } \n        return r;\n      }, []);\n      groupSolexBCData.map((solexbcOne: any) => {\n        solexBCStats.push({\n          publisher: solexbcOne.publisher ? solexbcOne.publisher : \"No Publisher\",\n          reporting: solexbcOne.reporting ? solexbcOne.reporting : \"No Reporting\",\n          revenue: solexbcOne.revenue\n        });\n      });\n      \n    }\n\n    return solexBCStats;\n  }\n\n  async getVerizonDirectStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getVerizonDirectStats(company, startDate, endDate).toPromise();\n    this.allVerizonStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"verizon-direct\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allVerizonStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Verizon Direct\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allVerizonStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Verizon Direct\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allVerizonStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Verizon Direct\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allVerizonStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Verizon Direct\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var verizonStats = [];\n    var helperVerizonSummary = {};\n    if (this.allVerizonStats.length > 0) {\n      var groupVerizonData = this.allVerizonStats.reduce(function(r, o) {\n        var key = o.publisher;\n        if(!helperVerizonSummary[key]) {\n          helperVerizonSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperVerizonSummary[key]);\n        } else {\n          helperVerizonSummary[key].revenue += parseFloat(o.revenue);\n        } \n        return r;\n      }, []);\n      groupVerizonData.map((verizonOne: any) => {\n        verizonStats.push({\n          publisher: verizonOne.publisher ? verizonOne.publisher : \"No Publisher\",\n          reporting: verizonOne.reporting ? verizonOne.reporting : \"No Reporting\",\n          revenue: verizonOne.revenue\n        });\n      });\n      \n    }\n\n    return verizonStats;\n  }\n\n  async getLyonStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getLyonStats(company, startDate, endDate).toPromise();\n    this.allLyonStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"lyons\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allLyonStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Lyons\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allLyonStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Lyons\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allLyonStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Lyons\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allLyonStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Lyons\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var lyonStats = [];\n    var helperLyonsSummary = {}\n    if (this.allLyonStats.length > 0) {\n      var groupLyonsData = this.allLyonStats.reduce(function(r, o) {\n        var key = o.publisher;\n        if(!helperLyonsSummary[key]) {\n          helperLyonsSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperLyonsSummary[key]);\n        } else {\n          helperLyonsSummary[key].revenue += parseFloat(o.revenue);\n        } \n        return r;\n      }, []);\n      groupLyonsData.map((lyonOne: any) => {\n        lyonStats.push({\n          publisher: lyonOne.publisher ? lyonOne.publisher : \"No Publisher\",\n          reporting: lyonOne.reporting ? lyonOne.reporting : \"No Reporting\",\n          revenue: lyonOne.revenue\n        });\n      });\n      \n    }\n\n    return lyonStats;\n  }\n\n  async getPerionStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getPerionStats(company, startDate, endDate).toPromise();\n    this.allPerionStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"perion\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allPerionStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Perion\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allPerionStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Perion\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allPerionStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Perion\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allPerionStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Perion\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var perionStats = [];\n    var helperPerionSummary = {};\n\n    if (this.allPerionStats.length > 0) {\n      var groupPerionData = this.allPerionStats.reduce(function(r, o) {\n        var key = o.publisher;\n        if(!helperPerionSummary[key]) {\n          helperPerionSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperPerionSummary[key]);\n        } else {\n          helperPerionSummary[key].revenue += parseFloat(o.revenue);\n        } \n        return r;\n      }, []);\n      groupPerionData.map((perionOne: any) => {\n        perionStats.push({\n          publisher: perionOne.publisher ? perionOne.publisher : \"No Publisher\",\n          reporting: perionOne.reporting ? perionOne.reporting : \"No Reporting\",\n          revenue: perionOne.revenue\n        });\n      });\n      \n    }\n    return perionStats;\n  }\n\n  async getApptitudeStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getApptitudeStats(company, startDate, endDate).toPromise();\n    this.allApptitudeStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"apptitude\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allApptitudeStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Apptitude\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allApptitudeStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Apptitude\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allApptitudeStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Apptitude\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allApptitudeStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Apptitude\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var apptitudeStats = [];\n    var helperApptitudeSummary = {};\n    if (this.allApptitudeStats.length > 0) {\n      var groupApptitudeData = this.allApptitudeStats.reduce(function(r, o) {\n        var key = o.publisher;\n        if(!helperApptitudeSummary[key]) {\n          helperApptitudeSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperApptitudeSummary[key]);\n        } else {\n          helperApptitudeSummary[key].revenue += parseFloat(o.revenue);\n        } \n        return r;\n      }, []);\n      groupApptitudeData.map((apptitudeOne: any) => {\n        apptitudeStats.push({\n          publisher: apptitudeOne.publisher ? apptitudeOne.publisher : \"No Publisher\",\n          reporting: apptitudeOne.reporting ? apptitudeOne.reporting : \"No Reporting\",\n          revenue: apptitudeOne.revenue\n        });\n      });\n      \n    }\n    // console.log(this.allApptitudeStats, \"dfsdfsdf\")\n\n    return apptitudeStats;\n  }\n\n  async getSystem1Stats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getSystem1Stats(company, startDate, endDate).toPromise();\n    this.allSystem1Stats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"system1\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allSystem1Stats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"System1\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allSystem1Stats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"System1\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allSystem1Stats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"System1\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allSystem1Stats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"System1\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var system1Stats = [];\n    var helperSystem1Summary = {};\n    if (this.allSystem1Stats.length > 0) {\n      var groupSystem1Data = this.allSystem1Stats.reduce(function(r, o) {\n        var key = o.publisher;\n        if(!helperSystem1Summary[key]) {\n          helperSystem1Summary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperSystem1Summary[key]);\n        } else {\n          helperSystem1Summary[key].revenue += parseFloat(o.revenue);\n        } \n        return r;\n      }, []);\n      groupSystem1Data.map((system1One: any) => {\n        system1Stats.push({\n          publisher: system1One.publisher ? system1One.publisher : \"No Publisher\",\n          reporting: system1One.reporting ? system1One.reporting : \"No Reporting\",\n          revenue: system1One.revenue\n        });\n      });\n      \n    }\n\n    return system1Stats;\n  }\n\n  //get Tags with selected company\n  async getCompanyTags(selectedCompany: string) {\n    var companyId = selectedCompany.split(\"/\")[1];\n    try {\n      const response = await this.tagService.getCompanyTags(companyId).toPromise();\n      return response;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  toggleExpandRow(row: any) {\n    console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event: any) {\n    console.log('Detail Toggled', event);\n  }\n\n}\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\n\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 30px; height: 500px\"\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [rows]=\"rows\"\n  [loadingIndicator]=\"loadingIndicator\">\n  <!-- Row Detail Template -->\n  <ngx-datatable-row-detail [rowHeight]=\"170\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\n      <div style=\"padding-left: 25px;\">\n        <div *ngFor=\"let report of row.reporting; let i = index;\">\n          <div style=\"display: flex;\">\n            <div style=\"min-width: 100px;\">\n              <strong>{{ report }} : </strong>\n            </div>\n            <div style=\"min-width: 100px;\">\n              <strong>{{ row.everyrevenue[i] | currency: 'USD' }}</strong>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <div style=\"padding-left: 25px; margin-top: 5px\">\n        <div style=\"display: flex;\">\n          <div style=\"min-width: 100px;\">\n            <strong>Total : </strong>\n          </div>\n          <div style=\"min-width: 100px;\">\n            <strong>{{ row.total | currency: 'USD' }}</strong>\n          </div>\n        </div>\n\n      </div>\n\n    </ng-template>\n  </ngx-datatable-row-detail>\n\n  <ngx-datatable-column [width]=\"30\" [resizeable]=\"false\" [sortable]=\"false\" [draggable]=\"false\"\n    [canAutoResize]=\"false\">\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\n      <a href=\"javascript:void(0)\" [class.datatable-icon-right]=\"!expanded\" [class.datatable-icon-down]=\"expanded\"\n        title=\"Expand/Collapse Row\" (click)=\"toggleExpandRow(row)\">\n      </a>\n    </ng-template>\n  </ngx-datatable-column>\n  <!-- PUBLISHER -->\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Publisher Name\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n</ngx-datatable>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllReportingComponent } from './all-reporting/all-reporting.component';\r\nimport { ApptitudeComponent } from './apptitude/apptitude.component';\r\nimport { HopkinsComponent } from './hopkins/hopkins.component';\r\nimport { ImgageAdvantageComponent } from './imgage-advantage/imgage-advantage.component';\r\nimport { MediaNetComponent } from './media-net/media-net.component';\r\nimport { PerionComponent } from './perion/perion.component';\r\nimport { AdminReportingComponent } from './admin-reporting.component';\r\nimport { ThirdPartyComponent } from './third-party/third-party.component';\r\nimport { BingDirectComponent } from './bing-direct/bing-direct.component';\r\nimport { LyonsComponent } from './lyons/lyons.component';\r\nimport { RubiComponent } from './rubi/rubi.component';\r\nimport { VerizonDirectComponent } from './verizon-direct/verizon-direct.component';\r\nimport { System1Component } from './system1/system1.component';\r\nimport { ManualUpdateComponent } from './manual-update/manual-update.component';\r\nimport { ManualSplitUpdateComponent } from './manual-split-update/manual-split-update.component';\r\nimport { SolexBcComponent } from './solex-bc/solex-bc.component';\r\nimport { AccountingComponent } from './accounting/accounting.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminReportingComponent,\r\n    children: [\r\n      {\r\n        path: 'accounting',\r\n        component: AccountingComponent,\r\n      },\r\n      {\r\n        path: 'perion',\r\n        component: PerionComponent,\r\n      },\r\n      {\r\n        path: 'image-advantage',\r\n        component: ImgageAdvantageComponent,\r\n      },\r\n      {\r\n        path: 'hopkins',\r\n        component: HopkinsComponent,\r\n      },\r\n      {\r\n        path: 'apptitude',\r\n        component: ApptitudeComponent,\r\n      },\r\n      {\r\n        path: 'media-net',\r\n        component: MediaNetComponent,\r\n      },\r\n      {\r\n        path: 'bing-direct',\r\n        component: BingDirectComponent,\r\n      },\r\n      {\r\n        path: 'lyons',\r\n        component: LyonsComponent,\r\n      },\r\n      {\r\n        path: 'rubi',\r\n        component: RubiComponent,\r\n      },\r\n      {\r\n        path: 'system1',\r\n        component: System1Component,\r\n      },\r\n      {\r\n        path: 'verizon-direct',\r\n        component: VerizonDirectComponent,\r\n      },\r\n      {\r\n        path: 'third-party',\r\n        component: ThirdPartyComponent,\r\n      },\r\n      {\r\n        path: 'solex-bc',\r\n        component: SolexBcComponent,\r\n      },\r\n      {\r\n        path: 'manual-stat-update',\r\n        component: ManualUpdateComponent,\r\n      },\r\n      {\r\n        path: 'manual-split-update',\r\n        component: ManualSplitUpdateComponent,\r\n      },\r\n      { path: '', redirectTo: '', pathMatch: 'full' },\r\n      { path: '**', redirectTo: '', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminReportingRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminReportingRoutingModule } from './admin-reporting-routing.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PerionComponent } from './perion/perion.component';\r\nimport { ImgageAdvantageComponent } from './imgage-advantage/imgage-advantage.component';\r\nimport { HopkinsComponent } from './hopkins/hopkins.component';\r\nimport { ApptitudeComponent } from './apptitude/apptitude.component';\r\nimport { AllReportingComponent } from './all-reporting/all-reporting.component';\r\nimport { MediaNetComponent } from './media-net/media-net.component';\r\nimport { ThirdPartyComponent } from './third-party/third-party.component';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatNativeDateModule, MatOptionModule } from '@angular/material/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { BingDirectComponent } from './bing-direct/bing-direct.component';\r\nimport { LyonsComponent } from './lyons/lyons.component';\r\nimport { RubiComponent } from './rubi/rubi.component';\r\nimport { VerizonDirectComponent } from './verizon-direct/verizon-direct.component';\r\nimport { ManualUpdateComponent } from './manual-update/manual-update.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\nimport { ManualSplitUpdateComponent } from './manual-split-update/manual-split-update.component';\r\nimport { System1Component } from './system1/system1.component';\r\nimport { SolexBcComponent } from './solex-bc/solex-bc.component';\r\nimport { AccountingComponent } from './accounting/accounting.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PerionComponent,\r\n    ImgageAdvantageComponent,\r\n    HopkinsComponent,\r\n    ApptitudeComponent,\r\n    AllReportingComponent,\r\n    MediaNetComponent,\r\n    ThirdPartyComponent,\r\n    BingDirectComponent,\r\n    LyonsComponent,\r\n    RubiComponent,\r\n    VerizonDirectComponent,\r\n    ManualUpdateComponent,\r\n    ManualSplitUpdateComponent,\r\n    System1Component,\r\n    SolexBcComponent,\r\n    AccountingComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    AdminReportingRoutingModule,\r\n    NgxDatatableModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatListModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatSelectModule,\r\n    SharedModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    InlineSVGModule\r\n  ],\r\n  entryComponents: [],\r\n})\r\nexport class AdminReportingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-all-reporting',\r\n  templateUrl: './all-reporting.component.html',\r\n  styleUrls: ['./all-reporting.component.scss']\r\n})\r\nexport class AllReportingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>all-reporting works!</p>\r\n","import { Component, AfterViewInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport * as echarts from 'echarts';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { ApptitudeService } from 'src/app/shared/service/admin-stats/apptitude.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { TagManagementService } from '../../tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-apptitude',\r\n  templateUrl: './apptitude.component.html',\r\n  styleUrls: ['./apptitude.component.scss'],\r\n})\r\nexport class ApptitudeComponent implements AfterViewInit {\r\n  //Chart setup variables\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  @ViewChild('expandableTable') table: any;\r\n  chartData: ChartDataInterface;\r\n\r\n  expanded: any = {};\r\n  allStats: any[];\r\n  summaryMetrics: any;\r\n  tagList: any = [];\r\n  groupFlag = false;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private apptitudeService: ApptitudeService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyStored();\r\n  }\r\n\r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n    this.rows = [];\r\n\r\n    this.rows = await this.getAllApptitudeStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany,this.range.startDate, this.range.endDate);\r\n   \r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  async getAllApptitudeStats(company, startDate, endDate) {\r\n    const response = await this.apptitudeService.getApptitudeStats(company, startDate, endDate).toPromise();\r\n    console.log('getApptitudeStats() response:', response);\r\n    this.loadingIndicator = false;\r\n    this.allStats = response.stats;\r\n    this.allStats.map(function (resStat) {\r\n      resStat.publisher = \"No Publisher\";\r\n    });\r\n    for (var tagL of this.tagList) {\r\n      if (tagL.tag.advertiser == \"apptitude\") {\r\n        for (var tagSub of tagL.tag.subids) {\r\n          if (tagSub.filterTag == \"Contains\") {\r\n            this.allStats.map(stat => {\r\n              if (stat.subid.includes(tagSub.subid)) {\r\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"StartsWith\") {\r\n            this.allStats.map(stat_1 => {\r\n              if (stat_1.subid.startsWith(tagSub.subid)) {\r\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"EndsWith\") {\r\n            this.allStats.map(stat_2 => {\r\n              if (stat_2.subid.endsWith(tagSub.subid)) {\r\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"ExactValue\") {\r\n            this.allStats.map(stat_3 => {\r\n              if (stat_3.subid == tagSub.subid) {\r\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n              }\r\n            });\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return this.allStats;\r\n    \r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyStored() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  public async updateReportingFiltering(range) {\r\n    this.range = range;\r\n    \r\n    this.rows = await this.getAllApptitudeStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany,this.range.startDate, this.range.endDate);\r\n    this.groupFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStats.reduce(function(r, o) {\r\n        var key = o.publisher;\r\n        \r\n        if(!helperSummary[key]) {\r\n          helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n          helperSummary[key].counter = 1;\r\n          r.push(helperSummary[key]);\r\n        } else {\r\n          helperSummary[key].clicks += parseFloat(o.clicks);\r\n          helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n          helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n          helperSummary[key].impressions += parseFloat(o.impressions ? o.impressions : 0);\r\n          helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n          helperSummary[key].revenue += parseFloat(o.revenue);\r\n          helperSummary[key].split += parseFloat(o.split);\r\n          helperSummary[key].profit += parseFloat(o.profit);\r\n          helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n          helperSummary[key].counter++;\r\n        } \r\n        return r;\r\n      }, []);\r\n      for (var group of groupData) {\r\n        group.split = group.split / group.counter;\r\n        group.cpc = group.cpc / group.counter;\r\n        group.ctr = group.ctr / group.counter;\r\n\r\n      }\r\n      this.rows = groupData;\r\n      this.groupFlag = true;\r\n    this.cdr.markForCheck();\r\n  }\r\n  backProvider() {\r\n    this.rows = this.allStats;\r\n    this.groupFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  async getChartMetrics(company, startDate, endDate) {\r\n    try {\r\n      const response = await this.apptitudeService\r\n        .getChartMetrics(company, startDate, endDate)\r\n        .toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n  async getSummaryMetrics(company: any, startDate: string, endDate: string) {\r\n    const response = await this.apptitudeService.getSummaryMetrics(this.selectedCompany, startDate, endDate).toPromise();\r\n    var allSummary = {};\r\n    var currentPercentPace = 0;\r\n    var lastPercentPace = 0;\r\n    var selectedPercentPace = 0;\r\n    if (response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n      currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n    }\r\n    if (response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n      lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n    }\r\n    if (response.summary[0].prevSelectedStat[0].profitPace != 0) {\r\n      selectedPercentPace = (response.summary[0].selectedStat[0].profitPace - response.summary[0].prevSelectedStat[0].profitPace) / (response.summary[0].prevSelectedStat[0].profitPace) * 100;\r\n    }\r\n    response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n    response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n    response.summary[0].selectedStat[0].percentPace = selectedPercentPace;\r\n    allSummary['summary'] = response.summary;\r\n    return allSummary;\r\n  }\r\n\r\n  //get Tags with selected company\r\n  async getCompanyTags(selectedCompany: string) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    try {\r\n      const response = await this.tagService.getCompanyTags(companyId).toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\r\n\r\n<!--Chart Data Show-->\r\n<app-reporting-revenue-chart *ngIf=\"chartData\" [chartData]=\"chartData\"></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-3\" (click)=\"groupProvider()\">\r\n    Group\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-3\" (click)=\"backProvider()\">\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\">\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column [width]=\"50\" [resizeable]=\"false\" [sortable]=\"false\" [draggable]=\"false\"\r\n    [canAutoResize]=\"false\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n      <a href=\"javascript:void(0)\" [class.datatable-icon-right]=\"!expanded\" [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\" (click)=\"toggleExpandRow(row)\">\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"publisher\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Impressions -->\r\n  <ngx-datatable-column name=\"impressions\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Impressions\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CPC -->\r\n  <ngx-datatable-column name=\"cpc\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CPC\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number: '1.2-2' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number: '1.2-2' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"split\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher Net -->\r\n  <ngx-datatable-column name=\"publisherNet\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher Net\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PROFIT -->\r\n  <ngx-datatable-column name=\"profit\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Profit\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bing-direct',\r\n  templateUrl: './bing-direct.component.html',\r\n  styleUrls: ['./bing-direct.component.scss']\r\n})\r\nexport class BingDirectComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>bing-direct works!</p>\r\n","import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { HopkinService } from 'src/app/shared/service/admin-stats/hopkin.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { TagManagementService } from '../../tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-hopkins',\r\n  templateUrl: './hopkins.component.html',\r\n  styleUrls: ['./hopkins.component.scss'],\r\n})\r\nexport class HopkinsComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  @ViewChild('expandableTable') table: any;\r\n  chartData: ChartDataInterface;\r\n  groupFlag = false;\r\n  expanded: any = {};\r\n  allStats: any[];\r\n  summaryMetrics: any;\r\n  tagList: any = [];\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private hopkinService: HopkinService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyStored();\r\n  }\r\n\r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n    this.rows = [];\r\n    this.rows = await this.getAllHopkinStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\r\n    this.refreshTable();\r\n  }\r\n  async getAllHopkinStats(company: any, startDate: string, endDate: string) {\r\n    const response = await this.hopkinService.getHopkinStats(company, startDate, endDate).toPromise();\r\n    console.log('response:', response);\r\n    this.loadingIndicator = false;\r\n    this.allStats = response.stats;\r\n    this.allStats.map(function (resStat) {\r\n      resStat.publisher = \"No Publisher\";\r\n      resStat.tagname = \"No Tag\";\r\n    });\r\n    for (var tagL of this.tagList) {\r\n      if (tagL.tag.advertiser == \"hopkins\") {\r\n        for (var tagSub of tagL.tag.subids) {\r\n          if (tagSub.filterTag == \"Contains\") {\r\n\r\n            this.allStats.map(stat => {\r\n              if (stat.subid.includes(tagSub.subid)) {\r\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"StartsWith\") {\r\n            this.allStats.map(stat_1 => {\r\n              if (stat_1.subid.startsWith(tagSub.subid)) {\r\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_1.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"EndsWith\") {\r\n            this.allStats.map(stat_2 => {\r\n              if (stat_2.subid.endsWith(tagSub.subid)) {\r\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_2.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"ExactValue\") {\r\n            this.allStats.map(stat_3 => {\r\n              if (stat_3.subid == tagSub.subid) {\r\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_3.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return this.allStats;\r\n  }\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStats.reduce(function (r, o) {\r\n      var key = o.publisher;\r\n\r\n      if (!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n        helperSummary[key].coverage += parseFloat(o.coverage ? o.coverage : 0);\r\n        helperSummary[key].ppc += parseFloat(o.ppc ? o.ppc : 0);\r\n        helperSummary[key].tq += parseFloat(o.tq ? o.tq : 0);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].counter++;\r\n      }\r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupFlag = true;\r\n    this.cdr.markForCheck();\r\n  }\r\n  backProvider() {\r\n    this.rows = this.allStats;\r\n    this.groupFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n  public async updateReportingFiltering(range: { startDate: string; endDate: string; }) {\r\n    this.range = range;\r\n    this.rows = await this.getAllHopkinStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\r\n    this.groupFlag = false;\r\n    this.refreshTable();\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyStored() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  toggleExpandRow(row: any) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event: any) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  //get Tags with selected company\r\n  async getCompanyTags(selectedCompany: string) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    try {\r\n      const response = await this.tagService.getCompanyTags(companyId).toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  async getChartMetrics(company: any, startDate: string, endDate: string) {\r\n    try {\r\n      const response = await this.hopkinService\r\n        .getChartMetrics(company, startDate, endDate)\r\n        .toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n  async getSummaryMetrics(company: any, startDate: string, endDate: string) {\r\n    const response = await this.hopkinService.getSummaryMetrics(company, startDate, endDate).toPromise();\r\n    var allSummary = {};\r\n    var currentPercentPace = 0;\r\n    var lastPercentPace = 0;\r\n    var selectedPercentPace = 0;\r\n    if (response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n      currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n    }\r\n    if (response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n      lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n    }\r\n    if (response.summary[0].prevSelectedStat[0].profitPace != 0) {\r\n      selectedPercentPace = (response.summary[0].selectedStat[0].profitPace - response.summary[0].prevSelectedStat[0].profitPace) / (response.summary[0].prevSelectedStat[0].profitPace) * 100;\r\n    }\r\n    response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n    response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n    response.summary[0].selectedStat[0].percentPace = selectedPercentPace;\r\n    allSummary['summary'] = response.summary;\r\n    return allSummary;\r\n  }\r\n}\r\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\r\n\r\n<!--Chart Data Show-->\r\n<app-reporting-revenue-chart *ngIf=\"chartData\" [chartData]=\"chartData\"></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-3\" (click)=\"groupProvider()\">\r\n    Group\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-3\" (click)=\"backProvider()\">\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\">\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column [width]=\"30\" [resizeable]=\"false\" [sortable]=\"false\" [draggable]=\"false\"\r\n    [canAutoResize]=\"false\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n      <a href=\"javascript:void(0)\" [class.datatable-icon-right]=\"!expanded\" [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\" (click)=\"toggleExpandRow(row)\">\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER -->\r\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Coverage -->\r\n  <ngx-datatable-column name=\"coverage\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Coverage\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PPC -->\r\n  <ngx-datatable-column name=\"ppc\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      PPC\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TQ -->\r\n  <ngx-datatable-column name=\"tq\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      TQ\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher Net -->\r\n  <ngx-datatable-column name=\"publisherNet\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher Net\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PROFIT -->\r\n  <ngx-datatable-column name=\"profit\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Profit\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n\r\n</ngx-datatable>","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-imgage-advantage',\r\n  templateUrl: './imgage-advantage.component.html',\r\n  styleUrls: ['./imgage-advantage.component.scss'],\r\n})\r\nexport class ImgageAdvantageComponent implements OnInit {\r\n  rows = [\r\n    {\r\n      name: 'Greg',\r\n      tag: 'YHS Organic',\r\n      totalSearches: '536412',\r\n      monetizedSearches: '501235',\r\n      revenue: '52623',\r\n      clicks: 50351,\r\n      followOn: '13%',\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Month to Date Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $103,201.26</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Revenue Pace: $131,285.19</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $21,109.59</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit Pace: $173,121.45</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +27%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Last Month Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $113,542.23</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $14,121.39</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +11%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"followOn\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Follow On\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { LyonService } from 'src/app/shared/service/admin-stats/lyon.service';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-lyons',\r\n  templateUrl: './lyons.component.html',\r\n  styleUrls: ['./lyons.component.scss']\r\n})\r\nexport class LyonsComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  summary = {\r\n    revenue: 0,\r\n    profit: 0,\r\n  };\r\n  loadingIndicator = true;\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n\r\n  tagList: any = [];\r\n  //Sends chartData to ReportingRevenueChartComponent\r\n  chartData: ChartDataInterface;\r\n\r\n  //Sends summaryMetrics to SummaryMetricsComponent\r\n  summaryMetricsData: any;\r\n  currentMonthData: any;\r\n  beforeMonthData: any;\r\n  twoBeforeMonthData: any;\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  allstat: any;\r\n  allChart: any;\r\n  filteredLyonStat: any[] = [];\r\n  groupFlag = false\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor(\r\n    private lyonService: LyonService,\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n\r\n    this.rows = [];\r\n    this.rows = await this.getAllLyonStats(\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetricsData = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\r\n    this.refreshTable();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  async routeTester() {\r\n    console.log('Testing Route');\r\n    this.lyonService.testingRoute().subscribe((response) => {\r\n      console.log(response);\r\n    }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  //get Tags with selected company\r\n  async getCompanyTags(selectedCompany) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    try {\r\n      const response = await this.tagService.getCompanyTags(companyId).toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n  //get Stat all\r\n  async getAllLyonStats(startDate, endDate) {\r\n    try {\r\n      const response = await this.lyonService.getAllStats(startDate, endDate).toPromise();\r\n      this.loadingIndicator = false;\r\n      this.allstat = response;\r\n      this.allstat.map(function (resStat) {\r\n        resStat.publisher = \"No Publisher\";\r\n        resStat.tagname = \"No Tag\";\r\n      });\r\n      // var allLyonStat = [];\r\n      for (var tagL of this.tagList) {\r\n        if (tagL.tag.advertiser == \"lyons\") {\r\n          for (var tagSub of tagL.tag.subids) {\r\n            if (tagSub.filterTag == \"Contains\") {\r\n\r\n              this.allstat.map(stat => {\r\n                if (stat.subid.includes(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                  stat.tagname = tagL.tag.name;\r\n                }\r\n              });\r\n\r\n            } else if (tagSub.filterTag == \"StartsWith\") {\r\n              this.allstat.map(stat_1 => {\r\n                if (stat_1.subid.startsWith(tagSub.subid)) {\r\n                  stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                  stat_1.tagname = tagL.tag.name;\r\n                }\r\n              });\r\n\r\n            } else if (tagSub.filterTag == \"EndsWith\") {\r\n              this.allstat.map(stat_2 => {\r\n                if (stat_2.subid.endsWith(tagSub.subid)) {\r\n                  stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                  stat_2.tagname = tagL.tag.name;\r\n                }\r\n              });\r\n\r\n            } else if (tagSub.filterTag == \"ExactValue\") {\r\n              this.allstat.map(stat_3 => {\r\n                if (stat_3.subid == tagSub.subid) {\r\n                  stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                  stat_3.tagname = tagL.tag.name;\r\n                }\r\n              });\r\n\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n      return this.allstat;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n\r\n  }\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allstat.reduce(function (r, o) {\r\n      var key = o.publisher;\r\n\r\n      if (!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n        helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n        helperSummary[key].biddedCtr += parseFloat(o.biddedCtr ? o.biddedCtr : 0);\r\n        helperSummary[key].biddedSearches += parseFloat(o.biddedSearches ? o.biddedSearches : 0);\r\n        helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].counter++;\r\n      }\r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n      group.biddedCtr = group.biddedCtr / group.counter;\r\n      group.ctr = group.ctr / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupFlag = true;\r\n    this.cdr.markForCheck();\r\n  }\r\n  backProvider() {\r\n    this.rows = this.allstat;\r\n    this.groupFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  updateAllLyonStats(company, startDate, endDate) {\r\n    this.lyonService\r\n      .updateAllLyonStats(company, startDate, endDate)\r\n      .subscribe((response) => {\r\n        console.log(response);\r\n      }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  public async updateReportingFiltering(range) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllLyonStats(\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetricsData = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\r\n    this.groupFlag = false;\r\n    this.refreshTable();\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  async getSummaryMetrics(company: any, startDate: string, endDate: string) {\r\n    try {\r\n      const response = await this.lyonService.getSummaryMetrics(company, startDate, endDate).toPromise();\r\n      var allSummary = {};\r\n      var currentPercentPace = 0;\r\n      var lastPercentPace = 0;\r\n      var selectedPercentPace = 0;\r\n      if (response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n      }\r\n      if (response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n      }\r\n      if (response.summary[0].prevSelectedStat[0].profitPace != 0) {\r\n        selectedPercentPace = (response.summary[0].selectedStat[0].profitPace - response.summary[0].prevSelectedStat[0].profitPace) / (response.summary[0].prevSelectedStat[0].profitPace) * 100;\r\n      }\r\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n      response.summary[0].selectedStat[0].percentPace = selectedPercentPace;\r\n      allSummary['summary'] = response.summary;\r\n      return allSummary;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  async getChartMetrics(company, startDate, endDate) {\r\n    try {\r\n      const response = await this.lyonService.getAllStats(startDate, endDate).toPromise();\r\n      var sortResponse = response.slice().sort((a, b) => a.date - b.date);\r\n      this.allChart = sortResponse;\r\n      // var chartAllLyonStat = [];\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       chartAllLyonStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n      //       chartAllLyonStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //       chartAllLyonStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid == tagSub.subid ))\r\n      //       chartAllLyonStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     }\r\n      //   }\r\n      // }\r\n      //duplicated remove\r\n      // let filter_data = chartAllLyonStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      var helperChart = {};\r\n      // this.allChart.map(f =>{\r\n      //   f.revenue = parseFloat(f.revenue);\r\n      //   f.ctr = parseFloat(f.ctr);\r\n      //   f.searches = parseFloat(f.searches);\r\n      //   f.biddedCtr = parseFloat(f.biddedCTR);\r\n      // })\r\n      var resultChart = this.allChart.reduce(function (r, o) {\r\n        var key = o.date;\r\n        if (!helperChart[key]) {\r\n          helperChart[key] = Object.assign({}, o); // create a copy of o\r\n          r.push(helperChart[key]);\r\n        } else {\r\n          helperChart[key].searches += parseInt(o.searches);\r\n          if (o.revenue) {\r\n            helperChart[key].revenue += o.revenue;\r\n          }\r\n        }\r\n        return r;\r\n      }, []);\r\n\r\n      var revenuePerDayVal = [];\r\n      var datesOfRevenueVal = [];\r\n      var searchesPerDayVal = [];\r\n      var chartDataValue = {};\r\n      for (var resVal of resultChart) {\r\n        revenuePerDayVal.push(resVal.revenue);\r\n        datesOfRevenueVal.push(resVal.date);\r\n        searchesPerDayVal.push(resVal.searches);\r\n      }\r\n      chartDataValue['revenuePerDay'] = revenuePerDayVal;\r\n      chartDataValue['datesOfRevenue'] = datesOfRevenueVal;\r\n      chartDataValue['searchesPerDay'] = searchesPerDayVal;\r\n      return chartDataValue;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  combineSummaryMetrics(metrics) {\r\n    metrics.summary.keys.forEach((element) => {\r\n      this.summary.revenue += element.revenue;\r\n      this.summary.profit += element.revenue * ((100 - element.split) * 0.01);\r\n    });\r\n  }\r\n}\r\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\r\n\r\n<app-reporting-revenue-chart *ngIf=\"chartData\" [chartData]=\"chartData\"></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetricsData\" [summaryMetricsData]=\"summaryMetricsData\"></app-summary-metrics>\r\n\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-3\" (click)=\"groupProvider()\">\r\n    Group\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-3\" (click)=\"backProvider()\">\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\">\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column [width]=\"30\" [resizeable]=\"false\" [sortable]=\"false\" [draggable]=\"false\"\r\n    [canAutoResize]=\"false\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n      <a href=\"javascript:void(0)\" [class.datatable-icon-right]=\"!expanded\" [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\" (click)=\"toggleExpandRow(row)\">\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher -->\r\n  <ngx-datatable-column name=\"publisher\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  <!-- BID SEARCHES -->\r\n  <ngx-datatable-column name=\"biddedSearches\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Bid Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- biddedCTR -->\r\n  <ngx-datatable-column name=\"biddedCtr\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      BiddedCTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number: '2.2-2') || (0 | number: '2.2-2') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{\r\n        (value | number: '2.2-2') || (0 | number: '2.2-2')\r\n        }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher Net -->\r\n  <ngx-datatable-column name=\"publisherNet\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher Net\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PROFIT -->\r\n  <ngx-datatable-column name=\"profit\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Profit\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Split -->\r\n  <ngx-datatable-column name=\"split\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Spilt\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { ManualUpdateService } from 'src/app/shared/service/admin-stats/update.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\nimport { CompanyManagementService } from 'src/app/modules/company-management/company-management.service';\r\nimport * as moment from 'moment';\r\nimport { TagManagementService } from '../../tag-management/tag-management.service';\r\n\r\ninterface preSetDateRanges {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\ninterface PreSetDateRange {\r\n  startDate: string;\r\n  endDate: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-manual-split-update',\r\n  templateUrl: './manual-split-update.component.html',\r\n  styleUrls: ['./manual-split-update.component.scss']\r\n})\r\nexport class ManualSplitUpdateComponent implements OnInit {\r\n  manaulUpFG: FormGroup;\r\n  reportProviderData: any = [];\r\n  tagData: any =[];\r\n  selectedTagData: any =[];\r\n  reportUpdateTitle = 'Report Split Update'\r\n  selectedTagName = '';\r\n  preSetDateRanges: preSetDateRanges[];\r\n  range: FormGroup;\r\n  selectedRange: PreSetDateRange;\r\n\r\n  preSelectValue: String;\r\n\r\n  preSelectDates: any;\r\n  companySelected: any;\r\n  currentUser: any;\r\n\r\n  constructor(\r\n    private manualUpdateService: ManualUpdateService,\r\n    private fb: FormBuilder,\r\n    private companyService: CompanyManagementService,\r\n    private authService: AuthService,\r\n    private userService: UsersService,\r\n    private notification: NotificationService,\r\n    private tagService: TagManagementService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    this.currentUser = this.authService.currentUserValue;\r\n    this.companySelected = this.getSelectedCompanyLocalStorage();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getReportingProviderList();\r\n    this.getAllTags();\r\n    this.manaulUpFG = this.fb.group({\r\n      reportType: new FormControl('', Validators.required),\r\n      tag: new FormControl('', Validators.required),\r\n      preSelectValue: new FormControl('', Validators.required),\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required),\r\n    })\r\n    //Get the all PRESELECT ranges\r\n    this.preSetDateRanges = this.getDateRanges();\r\n    this.range = new FormGroup({\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required)\r\n    });\r\n\r\n    //Selected range of date picker\r\n    this.selectedRange = {\r\n      startDate: '',\r\n      endDate: '',\r\n    };\r\n\r\n    //Starting value of mat select\r\n    this.preSelectValue = 'last7days';\r\n\r\n    //Gets the true start and end date values in date format\r\n    this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\r\n\r\n    //Manually updates the mat date picker with new start and end dates\r\n    this.updateDatePickerRange(\r\n      this.preSelectDates.startDate,\r\n      this.preSelectDates.endDate\r\n    );\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  getAllTags() {\r\n    this.tagService.getAllTags().subscribe((response) => {\r\n      var resData = [];\r\n      if(this.companySelected) {\r\n        resData = response.filter(res => res.company[0]['_id'] == this.companySelected);\r\n      }\r\n      resData.map(res => {\r\n        this.tagData.push({\r\n          value: res._id,\r\n          viewValue: res.name,\r\n          advertiser: res.advertiser\r\n\r\n        })\r\n      });\r\n      this.selectedTagData = this.tagData;\r\n      this.cdr.detectChanges();\r\n    });\r\n    \r\n  }\r\n\r\n  handleTag(event: any) {\r\n    this.selectedTagName = this.tagData.filter((tag: { value: any; }) => tag.value == event.value)[0].viewValue;\r\n  }\r\n  //get report Provider List\r\n  getReportingProviderList() {\r\n    if (this.companySelected) {\r\n      this.companyService.getOneCompany(this.companySelected.split('/')[1]).subscribe(res => {\r\n        res.reportingProviders.map(report => {\r\n          this.reportProviderData.push({\r\n            value: report.reportingProvider,\r\n            viewValue: report.reportingProvider\r\n          })\r\n        });\r\n      });\r\n    }\r\n  }\r\n  //Updates the date picker range manually\r\n  //Params startDate and endDate\r\n  updateDatePickerRange(startDate: moment.MomentInput, endDate: moment.MomentInput) {\r\n    this.manaulUpFG.patchValue({\r\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\r\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\r\n    });\r\n    this.range.patchValue({\r\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\r\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\r\n    });\r\n  }\r\n  //Grabbing the mat selector options\r\n  private getDateRanges() {\r\n    return [\r\n      { value: 'today', viewValue: 'Today' },\r\n      { value: 'yesterday', viewValue: 'Yesterday' },\r\n      { value: 'last7days', viewValue: 'Last 7 Days' },\r\n      { value: 'last30days', viewValue: 'Last 30 Days' },\r\n      { value: 'monthToDate', viewValue: 'Month to Date' },\r\n      { value: 'lastMonth', viewValue: 'Last Month' },\r\n      { value: 'custom', viewValue: 'Custom' },\r\n    ];\r\n  }\r\n  //Monitors mat selector, if changed (and not custom). updates the actual date picker\r\n  onPreSetRangeSelectChange(selection: any) {\r\n    if (selection.value !== 'custom') {\r\n      this.preSelectValue = selection.value;\r\n      this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\r\n\r\n      //Updates the date picker range manually\r\n      this.updateDatePickerRange(\r\n        this.preSelectDates.startDate,\r\n        this.preSelectDates.endDate\r\n      );\r\n    }\r\n  }\r\n  //Convert mat selector options and return actual dates\r\n  private getPreSetDateRange(selection: any) {\r\n    let dateFormat = 'MM-DD-YYYY';\r\n    switch (selection) {\r\n      case 'today':\r\n        return {\r\n          startDate: moment().utc().startOf('day').format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'yesterday':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(1, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment()\r\n            .subtract(1, 'days')\r\n            .utc()\r\n            .endOf('day')\r\n            .format(dateFormat),\r\n        };\r\n      case 'last7days':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(7, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'last30days':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(30, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'monthToDate':\r\n        return {\r\n          startDate: moment()\r\n            .startOf('month')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'lastMonth':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(1, 'months')\r\n            .startOf('month')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment()\r\n            .utc()\r\n            .subtract(1, 'months')\r\n            .endOf('month')\r\n            .format(dateFormat),\r\n        };\r\n    }\r\n  }\r\n  handleReport(event: { value: string; }) {\r\n    if (event.value.length > 0) {\r\n      var typeName = event.value.toLowerCase().replace(/\\b[a-z]/g, function (letter) {\r\n        return letter.toUpperCase();\r\n      });\r\n      this.reportUpdateTitle = `${typeName} Split Update`;\r\n      \r\n      this.selectedTagData = this.tagData.filter((tag: { advertiser: string; }) => tag.advertiser == event.value);\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  onReportSubmit() {\r\n    if (this.manaulUpFG.valid) {\r\n      this.manaulUpFG.addControl('company', new FormControl('', Validators.required));\r\n      this.manaulUpFG.patchValue({\r\n        company: this.companySelected,\r\n      });\r\n      //var reportTypeValue = this.manaulUpFG.value['reportType'];\r\n      this.manualUpdateService.updateManualSplit(this.manaulUpFG.value).subscribe((response) => {\r\n        var checkExist = this.isObjectEmpty(response);\r\n        if (!checkExist) {\r\n          this.notification.showSuccess(`${this.selectedTagName} data splits  successfully updated!`, \"\")\r\n        } else {\r\n          this.notification.showWarning(`${this.selectedTagName} data not existed!`, \"\")\r\n        }\r\n      })\r\n    }\r\n  }\r\n  isObjectEmpty(obj: {}) {\r\n    return Object.keys(obj).length === 0;\r\n  }\r\n  //Detects when datepicker change is updated\r\n  public changeDatePicker(): void {\r\n    if (this.range.valid) {\r\n\r\n      this.selectedRange.startDate = this.range.value.startDate;\r\n      this.selectedRange.endDate = this.range.value.endDate;\r\n\r\n      this.manaulUpFG.patchValue({\r\n        startDate: moment(this.range.value.startDate, 'MM-DD-YYYY').toDate(),\r\n        endDate: moment(this.range.value.endDate, 'MM-DD-YYYY').toDate(),\r\n      });\r\n\r\n      this.preSelectValue = 'custom';\r\n    }\r\n  }\r\n}\r\n","<form class=\"example-container\" id=\"manaulUpForm\" [formGroup]=\"manaulUpFG\" (ngSubmit)=\"onReportSubmit()\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">{{reportUpdateTitle}}</h3>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n          <mat-form-field>\r\n            <mat-label>Provider</mat-label>\r\n            <mat-select matNativeControl placeholder=\"Select Provider\" formControlName=\"reportType\"\r\n              (selectionChange)=\"handleReport($event)\">\r\n              <mat-option *ngFor=\"let reportProvider of reportProviderData\" [value]=\"reportProvider.value\">\r\n                {{ reportProvider.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Tag</mat-label>\r\n            <mat-select matNativeControl placeholder=\"Select Report\" formControlName=\"tag\" (selectionChange)=\"handleTag($event)\">\r\n              <mat-option\r\n                *ngFor=\"let tagItem of selectedTagData\"\r\n                [value]=\"tagItem.value\"\r\n              >\r\n                {{ tagItem.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Enter a custom date range</mat-label>\r\n            <mat-date-range-input [rangePicker]=\"picker\" [formGroup]=\"range\" (dateChange)=\"changeDatePicker()\">\r\n              <input matStartDate formControlName=\"startDate\" placeholder=\"Start date\" required />\r\n              <input matEndDate formControlName=\"endDate\" placeholder=\"End date\" required\r\n                (dateChange)=\"changeDatePicker()\" />\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n            <mat-error *ngIf=\"manaulUpFG.controls.startDate.hasError('matStartDateInvalid')\">Invalid start date\r\n            </mat-error>\r\n            <mat-error *ngIf=\"manaulUpFG.controls.endDate.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n            <!-- Required Date Messages -->\r\n            <mat-error *ngIf=\"manaulUpFG.controls.startDate.errors?.required\">Start Date Required</mat-error>\r\n            <mat-error *ngIf=\"manaulUpFG.controls.endDate.errors?.required\">End Date Required</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Preset Date Range</mat-label>\r\n            <mat-select [(ngModel)]=\"preSelectValue\" (selectionChange)=\"onPreSetRangeSelectChange($event)\"\r\n              formControlName=\"preSelectValue\">\r\n              <mat-option *ngFor=\"let dateRange of preSetDateRanges\" [value]=\"dateRange.value\">\r\n                {{ dateRange.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <!-- update report -->\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-6\">\r\n              <button mat-raised-button color=\"primary\" type=\"submit\">Update Splits</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { CompanyManagementService } from 'src/app/modules/company-management/company-management.service';\r\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { ManualUpdateService } from 'src/app/shared/service/admin-stats/update.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\n\r\ninterface preSetDateRanges {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\ninterface PreSetDateRange {\r\n  startDate: string;\r\n  endDate: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-manual-update',\r\n  templateUrl: './manual-update.component.html',\r\n  styleUrls: ['./manual-update.component.scss']\r\n})\r\nexport class ManualUpdateComponent implements OnInit {\r\n  reportUpdateTitle = 'Report Stat Update'\r\n  manaulUpFG: FormGroup;\r\n  reportTypeData: any = [];\r\n\r\n  preSetDateRanges: preSetDateRanges[];\r\n  range: FormGroup;\r\n  selectedRange: PreSetDateRange;\r\n\r\n  preSelectValue: String;\r\n\r\n  preSelectDates: any;\r\n  companySelected: any;\r\n\r\n  currentUser: any;\r\n  constructor(\r\n    private manualUpdateService: ManualUpdateService,\r\n    private fb: FormBuilder,\r\n    private companyService: CompanyManagementService,\r\n    private authService: AuthService,\r\n    private userService: UsersService,\r\n    private notification: NotificationService,\r\n  ) {\r\n    this.currentUser = this.authService.currentUserValue;\r\n    this.companySelected = this.getSelectedCompanyLocalStorage();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getReportingProviderList();\r\n    this.manaulUpFG = this.fb.group({\r\n      reportType: new FormControl('', Validators.required),\r\n      preSelectValue: new FormControl('', Validators.required),\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required),\r\n    })\r\n    //Get the all PRESELECT ranges\r\n    this.preSetDateRanges = this.getDateRanges();\r\n    this.range = new FormGroup({\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required)\r\n    });\r\n\r\n    //Selected range of date picker\r\n    this.selectedRange = {\r\n      startDate: '',\r\n      endDate: '',\r\n    };\r\n\r\n    //Starting value of mat select\r\n    this.preSelectValue = 'last7days';\r\n\r\n    //Gets the true start and end date values in date format\r\n    this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\r\n\r\n    //Manually updates the mat date picker with new start and end dates\r\n    this.updateDatePickerRange(\r\n      this.preSelectDates.startDate,\r\n      this.preSelectDates.endDate\r\n    );\r\n  }\r\n\r\n  //get Report Providers in Current Company\r\n  getReportingProviderList() {\r\n    if (this.companySelected) {\r\n      this.companyService.getOneCompany(this.companySelected.split('/')[1]).subscribe(res => {\r\n        res.reportingProviders.map(report => {\r\n          this.reportTypeData.push({\r\n            value: report.reportingProvider,\r\n            viewValue: report.reportingProvider\r\n          })\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  onReportSubmit() {\r\n    if (this.manaulUpFG.valid) {\r\n      this.manaulUpFG.addControl('company', new FormControl('', Validators.required));\r\n      this.manaulUpFG.patchValue({\r\n        company: this.companySelected,\r\n      });\r\n      var reportTypeValue = this.manaulUpFG.value['reportType'];\r\n      this.manualUpdateService.updateManualStats(this.manaulUpFG.value).subscribe((response) => {\r\n        var checkExist = this.isObjectEmpty(response);\r\n        if (!checkExist) {\r\n          this.notification.showSuccess(`${reportTypeValue} data stats successfully updated!`, \"\")\r\n        } else {\r\n          this.notification.showWarning(`${reportTypeValue} data not existed!`, \"\")\r\n        }\r\n      })\r\n    }\r\n  }\r\n  isObjectEmpty(obj: {}) {\r\n    return Object.keys(obj).length === 0;\r\n  }\r\n  //Grabbing the mat selector options\r\n  private getDateRanges() {\r\n    return [\r\n      { value: 'today', viewValue: 'Today' },\r\n      { value: 'yesterday', viewValue: 'Yesterday' },\r\n      { value: 'last7days', viewValue: 'Last 7 Days' },\r\n      { value: 'last30days', viewValue: 'Last 30 Days' },\r\n      { value: 'monthToDate', viewValue: 'Month to Date' },\r\n      { value: 'lastMonth', viewValue: 'Last Month' },\r\n      { value: 'custom', viewValue: 'Custom' },\r\n    ];\r\n  }\r\n  //Detects when datepicker change is updated\r\n  public changeDatePicker(): void {\r\n    if (this.range.valid) {\r\n\r\n      this.selectedRange.startDate = this.range.value.startDate;\r\n      this.selectedRange.endDate = this.range.value.endDate;\r\n      this.manaulUpFG.patchValue({\r\n        startDate: moment(this.range.value.startDate, 'MM-DD-YYYY').toDate(),\r\n        endDate: moment(this.range.value.endDate, 'MM-DD-YYYY').toDate(),\r\n      });\r\n\r\n      this.preSelectValue = 'custom';\r\n    }\r\n  }\r\n\r\n  //Monitors mat selector, if changed (and not custom). updates the actual date picker\r\n  onPreSetRangeSelectChange(selection: any) {\r\n    if (selection.value !== 'custom') {\r\n      this.preSelectValue = selection.value;\r\n      this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\r\n\r\n      //Updates the date picker range manually\r\n      this.updateDatePickerRange(\r\n        this.preSelectDates.startDate,\r\n        this.preSelectDates.endDate\r\n      );\r\n    }\r\n  }\r\n\r\n  //Updates the date picker range manually\r\n  //Params startDate and endDate\r\n  updateDatePickerRange(startDate: moment.MomentInput, endDate: moment.MomentInput) {\r\n    this.manaulUpFG.patchValue({\r\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\r\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\r\n    });\r\n    this.range.patchValue({\r\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\r\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\r\n    });\r\n  }\r\n\r\n  //Convert mat selector options and return actual dates\r\n  private getPreSetDateRange(selection: any) {\r\n    let dateFormat = 'MM-DD-YYYY';\r\n    switch (selection) {\r\n      case 'today':\r\n        return {\r\n          startDate: moment().utc().startOf('day').format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'yesterday':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(1, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment()\r\n            .subtract(1, 'days')\r\n            .utc()\r\n            .endOf('day')\r\n            .format(dateFormat),\r\n        };\r\n      case 'last7days':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(7, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'last30days':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(30, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'monthToDate':\r\n        return {\r\n          startDate: moment()\r\n            .startOf('month')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'lastMonth':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(1, 'months')\r\n            .startOf('month')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment()\r\n            .utc()\r\n            .subtract(1, 'months')\r\n            .endOf('month')\r\n            .format(dateFormat),\r\n        };\r\n    }\r\n  }\r\n  handleReport(event: { value: string; }) {\r\n    if (event.value.length > 0) {\r\n      var typeName = event.value.toLowerCase().replace(/\\b[a-z]/g, function (letter) {\r\n        return letter.toUpperCase();\r\n      });\r\n      this.reportUpdateTitle = `${typeName} Stat Update`\r\n    }\r\n  }\r\n}\r\n","<form class=\"example-container\" id=\"manaulUpForm\" [formGroup]=\"manaulUpFG\" (ngSubmit)=\"onReportSubmit()\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">{{reportUpdateTitle}}</h3>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n          <mat-form-field>\r\n            <mat-label>Report Type</mat-label>\r\n            <mat-select matNativeControl placeholder=\"Select Report\" formControlName=\"reportType\"\r\n              (selectionChange)=\"handleReport($event)\">\r\n              <mat-option *ngFor=\"let reportItem of reportTypeData\" [value]=\"reportItem.value\">\r\n                {{ reportItem.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Enter a custom date range</mat-label>\r\n            <mat-date-range-input [rangePicker]=\"picker\" [formGroup]=\"range\" (dateChange)=\"changeDatePicker()\">\r\n              <input matStartDate formControlName=\"startDate\" placeholder=\"Start date\" required />\r\n              <input matEndDate formControlName=\"endDate\" placeholder=\"End date\" required\r\n                (dateChange)=\"changeDatePicker()\" />\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n            <mat-error *ngIf=\"manaulUpFG.controls.startDate.hasError('matStartDateInvalid')\">Invalid start date\r\n            </mat-error>\r\n            <mat-error *ngIf=\"manaulUpFG.controls.endDate.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n            <!-- Required Date Messages -->\r\n            <mat-error *ngIf=\"manaulUpFG.controls.startDate.errors?.required\">Start Date Required</mat-error>\r\n            <mat-error *ngIf=\"manaulUpFG.controls.endDate.errors?.required\">End Date Required</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Preset Date Range</mat-label>\r\n            <mat-select [(ngModel)]=\"preSelectValue\" (selectionChange)=\"onPreSetRangeSelectChange($event)\"\r\n              formControlName=\"preSelectValue\">\r\n              <mat-option *ngFor=\"let dateRange of preSetDateRanges\" [value]=\"dateRange.value\">\r\n                {{ dateRange.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <!-- update report -->\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-6\">\r\n              <button mat-raised-button color=\"primary\" type=\"submit\">Update Stats</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-media-net',\r\n  templateUrl: './media-net.component.html',\r\n  styleUrls: ['./media-net.component.scss']\r\n})\r\nexport class MediaNetComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>media-net works!</p>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { PerionService } from 'src/app/shared/service/admin-stats/perion.service';\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-perion',\r\n  templateUrl: './perion.component.html',\r\n  styleUrls: ['./perion.component.scss'],\r\n})\r\nexport class PerionComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  \r\n  summary = {\r\n    revenue: 0,\r\n    profit: 0,\r\n  };\r\n  groupFlag = false;\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  allStat: any[];\r\n  allChartStat: any[];\r\n  //Sends chartData to ReportingRevenueChartComponent\r\n  chartData: ChartDataInterface;\r\n\r\n  //Sends summaryMetrics to SummaryMetricsComponent\r\n  summaryMetrics: any;\r\n  tagList: any = [];\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  summaryMetricsData: any;\r\n  currentMonthData: any;\r\n  beforeMonthData: any;\r\n  twoBeforeMonthData: any;\r\n\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor(\r\n    private perionService: PerionService,\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  async ngAfterViewInit() {   \r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n\r\n    this.rows = [];\r\n    this.rows = await this.getAllPerionStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany,this.range.startDate, this.range.endDate);\r\n    this.refreshTable();\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  async routeTester() {\r\n    console.log('Testing Route');\r\n    this.perionService.testingRoute().subscribe((response) => {\r\n      console.log(response);\r\n    }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  updateAllPerionStats(company, startDate, endDate) {\r\n    this.perionService\r\n      .updateAllPerionStats(company, startDate, endDate)\r\n      .subscribe((response) => {\r\n        console.log(response);\r\n      }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  public async updateReportingFiltering(range) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllPerionStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\r\n    this.groupFlag = false;\r\n    this.refreshTable();\r\n  }\r\n\r\n  async getAllPerionStats(company, startDate, endDate) {\r\n    try {\r\n      const response = await this.perionService\r\n        .getAllPerionStats(company, startDate, endDate)\r\n        .toPromise();\r\n      // console.log('response:', response);\r\n      this.loadingIndicator = false;\r\n      this.allStat = response.stats;\r\n      this.allStat.map(function (resStat) {\r\n        resStat.publisher = \"No Publisher\";\r\n        resStat.tagname = \"No Tag\";\r\n      });\r\n\r\n      for (var tagL of this.tagList) {\r\n        if (tagL.tag.advertiser == \"perion\") {\r\n          for (var tagSub of tagL.tag.subids) {\r\n            if (tagSub.filterTag == \"Contains\") {\r\n\r\n              this.allStat.map(stat => {\r\n                if (stat.subid.includes(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                  stat.tagname = tagL.tag.name;\r\n                }\r\n              });\r\n\r\n            } else if (tagSub.filterTag == \"StartsWith\") {\r\n              this.allStat.map(stat_1 => {\r\n                if (stat_1.subid.startsWith(tagSub.subid)) {\r\n                  stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                  stat_1.tagname = tagL.tag.name;\r\n                }\r\n              });\r\n\r\n            } else if (tagSub.filterTag == \"EndsWith\") {\r\n              this.allStat.map(stat_2 => {\r\n                if (stat_2.subid.endsWith(tagSub.subid)) {\r\n                  stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                  stat_2.tagname = tagL.tag.name;\r\n                }\r\n              });\r\n\r\n            } else if (tagSub.filterTag == \"ExactValue\") {\r\n              this.allStat.map(stat_3 => {\r\n                if (stat_3.subid == tagSub.subid) {\r\n                  stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                  stat_3.tagname = tagL.tag.name;\r\n                }\r\n              });\r\n\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return this.allStat;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStat.reduce(function(r, o) {\r\n      var key = o.publisher;\r\n      \r\n      if(!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n        helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n        helperSummary[key].impressions += parseFloat(o.impressions ? o.impressions : 0);\r\n        helperSummary[key].totalsearches += parseFloat(o.totalsearches ? o.totalsearches : 0);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].counter++;\r\n      } \r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n      group.followon = group.followon / group.counter;\r\n      group.ctr = group.ctr / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupFlag = true;\r\n    this.cdr.markForCheck();\r\n  }\r\n  backProvider() {\r\n    this.rows = this.allStat;\r\n    this.groupFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  async getSummaryMetrics(company: any, startDate: string, endDate: string) {\r\n    try {\r\n      const response = await this.perionService.getSummaryMetrics(company, startDate, endDate).toPromise();\r\n      var allSummary = {};\r\n      var currentPercentPace = 0;\r\n      var lastPercentPace = 0;\r\n      var selectedPercentPace = 0;\r\n      if (response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n      }\r\n      if (response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n      }\r\n      if (response.summary[0].prevSelectedStat[0].profitPace != 0) {\r\n        selectedPercentPace = (response.summary[0].selectedStat[0].profitPace - response.summary[0].prevSelectedStat[0].profitPace) / (response.summary[0].prevSelectedStat[0].profitPace) * 100;\r\n      }\r\n\r\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n      response.summary[0].selectedStat[0].percentPace = selectedPercentPace;\r\n      allSummary['summary'] = response.summary;\r\n      return allSummary;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  async getChartMetrics(company, startDate, endDate) {\r\n    try {\r\n      const response = await this.perionService\r\n        .getAllPerionStats(company, startDate, endDate)\r\n        .toPromise();\r\n      // console.log('getAllPerionStats() response:');\r\n      this.allChartStat = response.stats;\r\n      \r\n      this.allChartStat = this.allChartStat.slice().sort((a, b) => a.date - b.date);\r\n      var helperChart = {};\r\n      var resultChart = this.allChartStat.reduce(function (r, o) {\r\n        var key = o.date;\r\n        if (!helperChart[key]) {\r\n          helperChart[key] = Object.assign({}, o); // create a copy of o\r\n          r.push(helperChart[key]);\r\n        } else {\r\n          helperChart[key].totalsearches += parseInt(o.totalsearches);\r\n          if (o.revenue) {\r\n            helperChart[key].revenue += o.revenue;\r\n          }\r\n        }\r\n        return r;\r\n      }, []);\r\n      var revenuePerDayVal = [];\r\n      var datesOfRevenueVal = [];\r\n      var searchesPerDayVal = [];\r\n      var chartDataValue = {};\r\n      for (var resVal of resultChart) {\r\n        revenuePerDayVal.push(resVal.revenue);\r\n        datesOfRevenueVal.push(resVal.date);\r\n        searchesPerDayVal.push(resVal.totalsearches);\r\n      }\r\n      chartDataValue['revenuePerDay'] = revenuePerDayVal;\r\n      chartDataValue['datesOfRevenue'] = datesOfRevenueVal;\r\n      chartDataValue['searchesPerDay'] = searchesPerDayVal;\r\n      return chartDataValue;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  combineSummaryMetrics(metrics: { summary: { keys: any[]; }; }) {\r\n    metrics.summary.keys.forEach((element) => {\r\n      console.log(element.revenue);\r\n      this.summary.revenue += element.revenue;\r\n      this.summary.profit += element.revenue * ((100 - element.split) * 0.01);\r\n    });\r\n  }\r\n\r\n  //get Tags with selected company\r\n  async getCompanyTags(selectedCompany: string) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    try {\r\n      const response = await this.tagService.getCompanyTags(companyId).toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\r\n\r\n<app-reporting-revenue-chart *ngIf=\"chartData\" [chartData]=\"chartData\"></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-3\" (click)=\"groupProvider()\">\r\n    Group\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-3\" (click)=\"backProvider()\">\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n\r\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\">\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column [width]=\"30\" [resizeable]=\"false\" [sortable]=\"false\" [draggable]=\"false\"\r\n    [canAutoResize]=\"false\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n      <a href=\"javascript:void(0)\" [class.datatable-icon-right]=\"!expanded\" [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\" (click)=\"toggleExpandRow(row)\">\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"totalsearches\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CPC -->\r\n  <ngx-datatable-column name=\"cpc\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CPC\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | currency: 'USD') || (0 | currency: 'USD') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{\r\n        (value | percent: '2.2-2') || (0 | percent: '2.2-2')\r\n        }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher Net -->\r\n  <ngx-datatable-column name=\"publisherNet\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher Net\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Profit -->\r\n  <ngx-datatable-column name=\"profit\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Profit\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewChild,\r\n} from '@angular/core';\r\n\r\nimport { UsersService } from '../../../shared/service/users.service';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { RubiService } from 'src/app/shared/service/admin-stats/rubi.service';\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-rubi',\r\n  templateUrl: './rubi.component.html',\r\n  styleUrls: ['./rubi.component.scss']\r\n})\r\nexport class RubiComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  @ViewChild('expandableTable') table: any;\r\n  chartData: ChartDataInterface;\r\n  groupFlag = false;\r\n  expanded: any = {};\r\n  allStats: any[];\r\n  summaryMetrics: any;\r\n  tagList: any = [];\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private rubiService: RubiService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyStored();\r\n  }\r\n\r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n    this.rows = [];\r\n    this.rows = await this.getAllRubiStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany,this.range.startDate, this.range.endDate);\r\n    this.refreshTable();\r\n  }\r\n  public async updateReportingFiltering(range: { startDate: string; endDate: string; }) {\r\n    this.range = range;\r\n    this.rows = await this.getAllRubiStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany,this.range.startDate, this.range.endDate);\r\n    this.groupFlag = false;\r\n    this.refreshTable();\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyStored() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  toggleExpandRow(row: any) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event: any) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n  async getAllRubiStats(company: any, startDate: string, endDate: string) {\r\n    const response = await this.rubiService.getRubiStats(company, startDate, endDate).toPromise();\r\n    console.log('getRubiStats() response:', response);\r\n    this.loadingIndicator = false;\r\n    this.allStats = response.stats;\r\n    this.allStats.map(function (resStat) {\r\n      resStat.publisher = \"No Publisher\";\r\n      resStat.tagname = \"No Tag\";\r\n    });\r\n    for (var tagL of this.tagList) {\r\n      if (tagL.tag.advertiser == \"rubi\") {\r\n        for (var tagSub of tagL.tag.subids) {\r\n          if (tagSub.filterTag == \"Contains\") {\r\n\r\n            this.allStats.map(stat => {\r\n              if (stat.subid.includes(tagSub.subid)) {\r\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"StartsWith\") {\r\n            this.allStats.map(stat_1 => {\r\n              if (stat_1.subid.startsWith(tagSub.subid)) {\r\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_1.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"EndsWith\") {\r\n            this.allStats.map(stat_2 => {\r\n              if (stat_2.subid.endsWith(tagSub.subid)) {\r\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_2.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"ExactValue\") {\r\n            this.allStats.map(stat_3 => {\r\n              if (stat_3.subid == tagSub.subid) {\r\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_3.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return this.allStats;\r\n  }\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStats.reduce(function (r, o) {\r\n      var key = o.publisher;\r\n\r\n      if (!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n        helperSummary[key].monetized_searches += parseFloat(o.monetized_searches ? o.monetized_searches : 0);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].counter++;\r\n      }\r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupFlag = true;\r\n    this.cdr.markForCheck();\r\n  }\r\n  backProvider() {\r\n    this.rows = this.allStats;\r\n    this.groupFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n  async getChartMetrics(company: any, startDate: string, endDate: string) {\r\n    try {\r\n      const response = await this.rubiService\r\n        .getChartMetrics(company, startDate, endDate)\r\n        .toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n  async getSummaryMetrics(company: any, startDate: string, endDate: string) {\r\n    const response = await this.rubiService.getSummaryMetrics(company, startDate, endDate).toPromise();\r\n    var allSummary = {};\r\n    var currentPercentPace = 0;\r\n    var lastPercentPace = 0;\r\n    var selectedPercentPace = 0;\r\n    if (response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n      currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n    }\r\n    if (response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n      lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n    }\r\n    if (response.summary[0].prevSelectedStat[0].profitPace != 0) {\r\n      selectedPercentPace = (response.summary[0].selectedStat[0].profitPace - response.summary[0].prevSelectedStat[0].profitPace) / (response.summary[0].prevSelectedStat[0].profitPace) * 100;\r\n    }\r\n    response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n    response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n    response.summary[0].selectedStat[0].percentPace = selectedPercentPace;\r\n    allSummary['summary'] = response.summary;\r\n    return allSummary;\r\n  }\r\n  //get Tags with selected company\r\n  async getCompanyTags(selectedCompany: string) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    try {\r\n      const response = await this.tagService.getCompanyTags(companyId).toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\r\n\r\n<!--Chart Data Show-->\r\n<app-reporting-revenue-chart *ngIf=\"chartData\" [chartData]=\"chartData\"></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-3\" (click)=\"groupProvider()\">\r\n    Group\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-3\" (click)=\"backProvider()\">\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\">\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column [width]=\"30\" [resizeable]=\"false\" [sortable]=\"false\" [draggable]=\"false\"\r\n    [canAutoResize]=\"false\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n      <a href=\"javascript:void(0)\" [class.datatable-icon-right]=\"!expanded\" [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\" (click)=\"toggleExpandRow(row)\">\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER -->\r\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher Net -->\r\n  <ngx-datatable-column name=\"publisherNet\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher Net\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PROFIT -->\r\n  <ngx-datatable-column name=\"profit\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Profit\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n\r\n</ngx-datatable>","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ViewChild,\n} from '@angular/core';\n\nimport { UsersService } from '../../../shared/service/users.service';\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\nimport { SolexBCService } from 'src/app/shared/service/admin-stats/solexbc.service';\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\n\n@Component({\n  selector: 'app-solex-bc',\n  templateUrl: './solex-bc.component.html',\n  styleUrls: ['./solex-bc.component.scss']\n})\nexport class SolexBcComponent implements AfterViewInit {\n  range = {\n    startDate: '',\n    endDate: '',\n  };\n  loadingIndicator = true;\n  rows: any[];\n  selectedCompany: any;\n  @ViewChild('expandableTable') table: any;\n  chartData: ChartDataInterface;\n\n  expanded: any = {};\n  allStats: any[];\n  summaryMetrics: any;\n  tagList: any = [];\n  groupFlag = false;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private userService: UsersService,\n    private solexBCService: SolexBCService,\n    private tagService: TagManagementService,\n  ) { \n    this.selectedCompany = this.getSelectedCompanyStored();\n  }\n\n  async ngAfterViewInit() {\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\n    this.rows = [];\n    this.rows = await this.getAllSolexBCStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.chartData = await this.getChartMetrics(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    \n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\n    this.refreshTable();\n  }\n  public async updateReportingFiltering(range) {\n    this.range = range;\n    this.rows = await this.getAllSolexBCStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.chartData = await this.getChartMetrics(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\n    this.groupFlag = false;\n    this.refreshTable();\n  }\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyStored() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  toggleExpandRow(row) {\n    console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event) {\n    console.log('Detail Toggled', event);\n  }\n\n  refreshTable() {\n    this.cdr.markForCheck();\n  }\n\n  getAllSolexBCStats(company, startDate, endDate) {\n    return this.solexBCService.getSolexBCStats(company, startDate, endDate).toPromise().then((response) => {\n      console.log('getSolexBCStats() response:', response);\n      this.loadingIndicator = false;\n      this.allStats = response.stats;\n      this.allStats.map(function(resStat) {\n        resStat.publisher = \"No Publisher\"\n        resStat.tagname = \"No Tag\" \n      });\n      for (var tagL of this.tagList) {\n        if(tagL.tag.advertiser == \"solex-bc\") {\n          for (var tagSub of tagL.tag.subids) {\n            if(tagSub.filterTag ==\"Contains\") {\n              this.allStats.map(stat => {\n                if (stat.subid.includes(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } else if (tagSub.filterTag ==\"StartsWith\") {\n              this.allStats.map(stat => {\n                if (stat.subid.startsWith(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } else if (tagSub.filterTag ==\"EndsWith\") {\n              this.allStats.map(stat => {\n                if (stat.subid.endsWith(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              }) \n              \n            } else if (tagSub.filterTag ==\"ExactValue\") {\n              this.allStats.map(stat => {\n                if (stat.subid == tagSub.subid) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } \n          }\n        }\n      }\n      return this.allStats;\n    })\n  }\n  groupProvider() {\n    var helperSummary = {};\n    var groupData = this.allStats.reduce(function(r, o) {\n        var key = o.publisher;\n        \n        if(!helperSummary[key]) {\n          helperSummary[key] = Object.assign({}, o); // create a copy of o\n          helperSummary[key].counter = 1;\n          r.push(helperSummary[key]);\n        } else {\n          helperSummary[key].clicks += parseFloat(o.clicks);\n          helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\n          helperSummary[key].revenue += parseFloat(o.revenue);\n          helperSummary[key].split += parseFloat(o.split);\n          helperSummary[key].profit += parseFloat(o.profit);\n          helperSummary[key].publisherNet += parseFloat(o.publisherNet);\n          helperSummary[key].counter++;\n        } \n        return r;\n      }, []);\n      for (var group of groupData) {\n        group.split = group.split / group.counter;\n\n      }\n      this.rows = groupData;\n      this.groupFlag = true;\n    this.cdr.markForCheck();\n  }\n  backProvider() {\n    this.rows = this.allStats;\n    this.groupFlag = false;\n    this.cdr.markForCheck();\n  }\n  getChartMetrics(company, startDate, endDate) {\n    return this.solexBCService\n      .getChartMetrics(company, startDate, endDate)\n      .toPromise()\n      .then((response) => {\n        return response;\n      })\n      .catch((error) => {\n        return error;\n      });\n  }\n  getSummaryMetrics(company: any, startDate: string, endDate: string) {\n    return this.solexBCService.getSummaryMetrics(company, startDate, endDate).toPromise().then((response) => {\n      var allSummary = {};\n      var currentPercentPace = 0;\n      var lastPercentPace = 0;\n      var selectedPercentPace = 0;\n      if(response.summary[0].lastMonthStat[0].profitPace != 0) {\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\n      }\n      if(response.summary[0].twoLastMonthStat[0].profitPace != 0) {\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\n      }\n      if (response.summary[0].prevSelectedStat[0].profitPace != 0) {\n        selectedPercentPace = (response.summary[0].selectedStat[0].profitPace - response.summary[0].prevSelectedStat[0].profitPace) / (response.summary[0].prevSelectedStat[0].profitPace) * 100;\n      }\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\n      response.summary[0].selectedStat[0].percentPace = selectedPercentPace;\n      allSummary['summary'] = response.summary;\n      return allSummary;\n    })\n  }\n  //get Tags with selected company\n  getCompanyTags(selectedCompany) {\n    var companyId = selectedCompany.split(\"/\")[1];\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \n      return response;\n    })\n    .catch((error) => {\n      return error;\n    })\n  }\n\n}\n","<app-reporting-filtering\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\n></app-reporting-filtering>\n\n<!--Chart Data Show-->\n<app-reporting-revenue-chart *ngIf=\"chartData\"\n  [chartData]=\"chartData\"\n></app-reporting-revenue-chart>\n\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\n\n<div class=\"row px-6\">\n  <button class=\"btn btn-sm btn-primary mx-3\"\n    (click)=\"groupProvider()\"\n  >\n    Group\n  </button>\n  <button class=\"btn btn-sm btn-dark mx-3\"\n    (click)=\"backProvider()\"\n  >\n    Back\n  </button>\n</div>\n\n<ngx-datatable\n  #expandableTable\n  class=\"material fullscreen expandable\"\n  style=\"top: 30px; height: 500px\"\n  [columnMode]=\"'force'\"\n  [headerHeight]=\"50\"\n  [footerHeight]=\"0\"\n  [rowHeight]=\"50\"\n  [scrollbarV]=\"true\"\n  [rows]=\"rows\"\n  [loadingIndicator]=\"loadingIndicator\"\n>\n  <!-- Row Detail Template -->\n  <ngx-datatable-row-detail\n    [rowHeight]=\"100\"\n    #myDetailRow\n    (toggle)=\"onDetailToggle($event)\"\n  >\n    <ng-template\n      let-row=\"row\"\n      let-expanded=\"expanded\"\n      ngx-datatable-row-detail-template\n    >\n      <div style=\"padding-left: 35px\">\n        <div><strong>Address</strong></div>\n        <div>Test</div>\n      </div>\n    </ng-template>\n  </ngx-datatable-row-detail>\n\n  <!-- Column Templates -->\n  <ngx-datatable-column\n    [width]=\"30\"\n    [resizeable]=\"false\"\n    [sortable]=\"false\"\n    [draggable]=\"false\"\n    [canAutoResize]=\"false\"\n  >\n    <ng-template\n      let-row=\"row\"\n      let-expanded=\"expanded\"\n      ngx-datatable-cell-template\n    >\n      <a\n        href=\"javascript:void(0)\"\n        [class.datatable-icon-right]=\"!expanded\"\n        [class.datatable-icon-down]=\"expanded\"\n        title=\"Expand/Collapse Row\"\n        (click)=\"toggleExpandRow(row)\"\n      >\n      </a>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Date -->\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupFlag\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Date\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | date }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SUBID -->\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupFlag\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Subid\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SUBID -->\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Publisher\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SEARCHES -->\n  <ngx-datatable-column name=\"searches\" *ngIf=\"!groupFlag\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Searches\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- CLICKS -->\n  <ngx-datatable-column name=\"clicks\" *ngIf=\"!groupFlag\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Clicks\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SPLIT -->\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Split\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Publisher Net -->\n  <ngx-datatable-column name=\"publisherNet\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Publisher Net\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | currency: 'USD' }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- PROFIT -->\n  <ngx-datatable-column name=\"profit\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Profit\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | currency: 'USD' }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n  \n  <!-- REVENUE -->\n  <ngx-datatable-column name=\"revenue\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Revenue\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | currency: 'USD' }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  \n</ngx-datatable>","import { Component, AfterViewInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { UsersService } from '../../../shared/service/users.service';\r\nimport { System1Service } from 'src/app/shared/service/admin-stats/system1.service';\r\n\r\n@Component({\r\n  selector: 'app-system1',\r\n  templateUrl: './system1.component.html',\r\n  styleUrls: ['./system1.component.scss']\r\n})\r\nexport class System1Component implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  rows: any[];\r\n  allStats: any[];\r\n  loadingIndicator = true;\r\n  selectedCompany: any;\r\n  groupFlag = false;\r\n  @ViewChild('expandableTable') table: any;\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private system1Service: System1Service,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n   }\r\n\r\n  async ngAfterViewInit() {\r\n    this.rows = [];\r\n    this.rows = await this.getAllSystem1Stats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n  }\r\n  public async updateReportingFiltering(range) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllSystem1Stats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.groupFlag = false;\r\n    this.refreshTable();\r\n  }\r\n\r\n  //get Stat all\r\n  getAllSystem1Stats(company, startDate, endDate) {\r\n    return this.system1Service.getAllSystem1Stats(company, startDate, endDate).toPromise().then((response) => {\r\n      console.log('getAllSystem1Stats() response:', response);\r\n      this.loadingIndicator = false;\r\n      this.allStats = response.stats;\r\n      return this.allStats;\r\n    });\r\n  }\r\n\r\n  getSummaryMetrics(company) {\r\n    return [];\r\n  }\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n}\r\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\r\n\r\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\">\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column [width]=\"30\" [resizeable]=\"false\" [sortable]=\"false\" [draggable]=\"false\"\r\n    [canAutoResize]=\"false\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n      <a href=\"javascript:void(0)\" [class.datatable-icon-right]=\"!expanded\" [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\" (click)=\"toggleExpandRow(row)\">\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Device -->\r\n  <ngx-datatable-column name=\"device\" [minWidth]=\"100\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Device\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PAGEVIEWS -->\r\n  <ngx-datatable-column name=\"pageviews\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      PageViews\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Impressions -->\r\n  <ngx-datatable-column name=\"impressions\" [minWidth]=\"35\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Impressions\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n</ngx-datatable>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as echarts from 'echarts';\r\n\r\n@Component({\r\n  selector: 'app-third-party',\r\n  templateUrl: './third-party.component.html',\r\n  styleUrls: ['./third-party.component.scss'],\r\n})\r\nexport class ThirdPartyComponent implements OnInit {\r\n  //Chart setup variables\r\n  chartDom;\r\n  myChart;\r\n  option;\r\n\r\n  rows = [\r\n    {\r\n      name: 'Datalox',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n    {\r\n      name: 'Hopkins Branded',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n    {\r\n      name: 'Datalox 2',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    let revenueByDayArray = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (8000 - 4000) + 4000)\r\n    );\r\n    let searchesPerDay = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (100000 - 40000) + 40000)\r\n    );\r\n    this.setChartOptions(\r\n      10000,\r\n      100000,\r\n      [\r\n        'Nov 1, Nov 2, Nov 3, Nov 4',\r\n        'Nov 5',\r\n        'Nov 5',\r\n        'Nov 6',\r\n        'Nov 7',\r\n        'Nov 8',\r\n        'Nov 9',\r\n        'Nov 10',\r\n        'Nov 11',\r\n        'Nov 12',\r\n        'Nov 13',\r\n        'Nov 14',\r\n        'Nov 15',\r\n        'Nov 16',\r\n        'Nov 17',\r\n        'Nov 18',\r\n        'Nov 19',\r\n        'Nov 20',\r\n      ],\r\n      revenueByDayArray,\r\n      searchesPerDay\r\n    );\r\n  }\r\n\r\n  public updateReportingFiltering(range) {\r\n    // this.range = range;\r\n    // this.getAllPerionStats(\r\n    //   'manic_perion',\r\n    //   this.range.startDate,\r\n    //   this.range.endDate\r\n    // );\r\n    console.log('Report');\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  setChartOptions(\r\n    maxRevenue,\r\n    maxSearches,\r\n    daysArray,\r\n    revenueByDayArray,\r\n    searchesPerDay\r\n  ) {\r\n    this.chartDom = document.getElementById('main')!;\r\n    this.myChart = echarts.init(this.chartDom);\r\n\r\n    this.option = {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          crossStyle: {\r\n            color: '#999',\r\n          },\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          dataView: { show: true, readOnly: false },\r\n          magicType: { show: true, type: ['line', 'bar'] },\r\n          restore: { show: true },\r\n          saveAsImage: { show: true },\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['Revenue', 'Searches'],\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: daysArray,\r\n          axisPointer: {\r\n            type: 'shadow',\r\n          },\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          name: 'Revenue',\r\n          min: 0,\r\n          max: maxRevenue,\r\n          interval: 25000,\r\n          axisLabel: {\r\n            formatter: '${value}',\r\n          },\r\n        },\r\n        {\r\n          type: 'value',\r\n          name: 'Searches',\r\n          min: 0,\r\n          max: maxSearches,\r\n          interval: 100000,\r\n          axisLabel: {\r\n            formatter: '{value}',\r\n          },\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'Revenue',\r\n          type: 'bar',\r\n          data: revenueByDayArray,\r\n        },\r\n        {\r\n          name: 'Searches',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: searchesPerDay,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.option && this.myChart.setOption(this.option);\r\n  }\r\n}\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<div id=\"main\" style=\"width: 100%; height: 300px\"></div>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { VerizonService } from 'src/app/shared/service/admin-stats/verizon.service';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-verizon-direct',\r\n  templateUrl: './verizon-direct.component.html',\r\n  styleUrls: ['./verizon-direct.component.scss']\r\n})\r\nexport class VerizonDirectComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  tagList: any = [];\r\n  //Sends chartData to ReportingRevenueChartComponent\r\n  chartData: ChartDataInterface;\r\n  //Sends summaryMetrics to SummaryMetricsComponent\r\n  summaryMetrics: any;\r\n\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  allStats: any;\r\n\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor(\r\n    private verizonService: VerizonService,\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n    this.rows = [];\r\n    this.rows = await this.getAllVerizonStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\r\n    this.refreshTable();\r\n  }\r\n\r\n  //get Tags with selected company\r\n  async getCompanyTags(selectedCompany: string) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    try {\r\n      const response = await this.tagService.getCompanyTags(companyId).toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  public async updateReportingFiltering(range: { startDate: string; endDate: string; }) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllVerizonStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\r\n    this.refreshTable();\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  toggleExpandRow(row: any) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event: any) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  async getChartMetrics(company: any, startDate: string, endDate: string) {\r\n    try {\r\n      const response = await this.verizonService\r\n        .getChartMetrics(company, startDate, endDate)\r\n        .toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  async getAllVerizonStats(company: any, startDate: string, endDate: string) {\r\n    const response = await this.verizonService.getAllVerizonStats(company, startDate, endDate).toPromise();\r\n    console.log('getAllVerizonStats() response:', response);\r\n    this.loadingIndicator = false;\r\n    this.allStats = response.stats;\r\n    this.allStats.map(function (resStat: { publisher: string; tagname: string; }) {\r\n      resStat.publisher = \"No Publisher\";\r\n      resStat.tagname = \"No Tag\";\r\n    });\r\n    for (var tagL of this.tagList) {\r\n      if (tagL.tag.advertiser == \"verizon-direct\") {\r\n        for (var tagSub of tagL.tag.subids) {\r\n          if (tagSub.filterTag == \"Contains\") {\r\n\r\n            this.allStats.map((stat: { subid: string | any[]; publisher: any; tagname: any; }) => {\r\n              if (stat.subid.includes(tagSub.subid)) {\r\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"StartsWith\") {\r\n            this.allStats.map((stat_1: { subid: string; publisher: any; tagname: any; }) => {\r\n              if (stat_1.subid.startsWith(tagSub.subid)) {\r\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_1.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"EndsWith\") {\r\n            this.allStats.map((stat_2: { subid: string; publisher: any; tagname: any; }) => {\r\n              if (stat_2.subid.endsWith(tagSub.subid)) {\r\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_2.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"ExactValue\") {\r\n            this.allStats.map((stat_3: { subid: any; publisher: any; tagname: any; }) => {\r\n              if (stat_3.subid == tagSub.subid) {\r\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_3.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return this.allStats;\r\n  }\r\n\r\n  async getSummaryMetrics(company: any, startDate: string, endDate: string) {\r\n    const response = await this.verizonService.getSummaryMetrics(company, startDate, endDate).toPromise();\r\n    var allSummary = {};\r\n    var currentPercentPace = 0;\r\n    var lastPercentPace = 0;\r\n    var selectedPercentPace = 0;\r\n    if (response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n      currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n    }\r\n    if (response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n      lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n    }\r\n    if (response.summary[0].prevSelectedStat[0].profitPace != 0) {\r\n      selectedPercentPace = (response.summary[0].selectedStat[0].profitPace - response.summary[0].prevSelectedStat[0].profitPace) / (response.summary[0].prevSelectedStat[0].profitPace) * 100;\r\n    }\r\n    response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n    response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n    response.summary[0].selectedStat[0].percentPace = selectedPercentPace;\r\n    allSummary['summary'] = response.summary;\r\n    return allSummary;\r\n  }\r\n}\r\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\r\n\r\n<!--Chart Data Show-->\r\n<app-reporting-revenue-chart *ngIf=\"chartData\" [chartData]=\"chartData\"></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\">\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column [width]=\"30\" [resizeable]=\"false\" [sortable]=\"false\" [draggable]=\"false\"\r\n    [canAutoResize]=\"false\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n      <a href=\"javascript:void(0)\" [class.datatable-icon-right]=\"!expanded\" [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\" (click)=\"toggleExpandRow(row)\">\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!--Bid SEARCHES -->\r\n  <ngx-datatable-column name=\"biddedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Bid Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!--Bid SEARCHES Result -->\r\n  <ngx-datatable-column name=\"biddedResults\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Bid Searches Result\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- COVERAGE -->\r\n  <ngx-datatable-column name=\"coverage\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Coverage\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CPC -->\r\n  <ngx-datatable-column name=\"cpc\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CPC\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- RN -->\r\n  <ngx-datatable-column name=\"rn\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      RN\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TqScore -->\r\n  <ngx-datatable-column name=\"tqScore\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      TqScore\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher Net -->\r\n  <ngx-datatable-column name=\"publisherNet\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher Net\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PROFIT -->\r\n  <ngx-datatable-column name=\"profit\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Profit\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\nconst API_ACCOUNTING_URL = `${environment.apiUrl}/stats/admin/accounting`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class AccountingService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getRubiStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n    return this.http.get<any>(API_ACCOUNTING_URL + '/rubi', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getPerionStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n    return this.http.get<any>(API_ACCOUNTING_URL + '/perion', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getLyonStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n    return this.http.get<any>(API_ACCOUNTING_URL + '/lyons', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n  getApptitudeStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n    return this.http.get<any>(API_ACCOUNTING_URL + '/apptitude', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getSolexBCStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n    return this.http.get<any>(API_ACCOUNTING_URL + '/solex-bc', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getVerizonDirectStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n    return this.http.get<any>(API_ACCOUNTING_URL + '/verizon-direct', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getSystem1Stats(company: any, startDate: any, endDate: any): Observable<any> {\r\n    return this.http.get<any>(API_ACCOUNTING_URL + '/system1', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport * as moment from 'moment';\r\n\r\nconst API_MANUAL_UPDATE_URL = `${environment.apiUrl}/stats/admin/manual-update`;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class ManualUpdateService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    updateManualStats(updateData: any): Observable<any> {\r\n        const { company, reportType, startDate, endDate } = updateData;\r\n        var data = {\r\n            \"company\": company,\r\n            \"reportType\": reportType,\r\n            'startDate': moment(startDate).format(\"YYYY-MM-DD\"),\r\n            'endDate': moment(endDate).format(\"YYYY-MM-DD\")\r\n        }\r\n        return this.http.put<any>(API_MANUAL_UPDATE_URL + '/stat-update', data);\r\n    }\r\n    updateManualSplit(updateData: any): Observable<any> {\r\n        const { company, reportType, tag, startDate, endDate } = updateData;\r\n        var data = {\r\n            \"company\": company,\r\n            \"reportType\": reportType,\r\n            \"tag\": tag,\r\n            'startDate': startDate,\r\n            'endDate': endDate\r\n        }\r\n        return this.http.put<any>(API_MANUAL_UPDATE_URL + '/split-update', data);\r\n    }\r\n}"],"sourceRoot":"webpack:///"}