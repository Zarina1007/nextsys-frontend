{"version":3,"sources":["./src/app/modules/company-management/companies/companies.component.ts","./src/app/modules/company-management/companies/companies.component.html","./src/app/modules/company-management/company-management-routing.module.ts","./src/app/modules/company-management/company-management.module.ts","./src/app/modules/company-management/edit-company/edit-company.component.ts","./src/app/modules/company-management/edit-company/edit-company.component.html","./src/app/modules/company-management/new-company/new-company.component.ts","./src/app/modules/company-management/new-company/new-company.component.html"],"names":[],"mappings":"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","file":"modules-company-management-company-management-module-es2015.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { CompanyManagementService } from '../company-management.service';\r\nimport { CompanyInterface } from 'src/app/shared/models/company.interface';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-companies',\r\n  templateUrl: './companies.component.html',\r\n  styleUrls: ['./companies.component.scss'],\r\n})\r\nexport class CompaniesComponent implements OnInit {\r\n  loadingIndicator = true;\r\n  rows: Array<CompanyInterface>;\r\n  // columns = [{ name: 'Name' }, {prop: '_id'}];\\\r\n\r\n  constructor(\r\n    private companyService: CompanyManagementService,\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router\r\n  ) {\r\n    this.getAllCompanies();\r\n  }\r\n\r\n  getAllCompanies() {\r\n    this.companyService.getAllCompanies().subscribe((x) => {\r\n      this.rows = x;\r\n      console.log(this.rows);\r\n      this.loadingIndicator = false;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  editCompany(companyID) {\r\n    this.router.navigateByUrl('/company-management/edit/' + companyID);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // console.log(companies)\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-xl-12\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">View Companies</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <ngx-datatable\r\n          class=\"material fullscreen\"\r\n          [rows]=\"rows\"\r\n          [columnMode]=\"'force'\"\r\n          [loadingIndicator]=\"loadingIndicator\"\r\n          [footerHeight]=\"50\"\r\n          [rowHeight]=\"50\"\r\n          [scrollbarH]=\"true\"\r\n          [headerHeight]=\"50\"\r\n          [limit]=\"10\"\r\n        >\r\n          <ngx-datatable-column name=\"Name\">\r\n            <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n              Name\r\n            </ng-template>\r\n            <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n              {{ value }}\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column name=\"id\">\r\n            <ng-template ngx-datatable-header-template>Edit</ng-template>\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n              <button\r\n                class=\"btn btn-sm btn-icon btn-icon-white btn-bg-primary\"\r\n                color=\"primary\"\r\n                (click)=\"editCompany(row._key)\"\r\n              >\r\n              <i class=\"flaticon2-pen\"></i>\r\n              </button>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TagManagementComponent } from '../tag-management/tag-management.component';\r\nimport { CompaniesComponent } from './companies/companies.component';\r\nimport { CompanyManagementComponent } from './company-management.component';\r\nimport { EditCompanyComponent } from './edit-company/edit-company.component';\r\nimport { NewCompanyComponent } from './new-company/new-company.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompanyManagementComponent,\r\n    children: [\r\n      {\r\n        path: 'companies',\r\n        component: CompaniesComponent\r\n      },\r\n      {\r\n        path: 'new',\r\n        component: NewCompanyComponent\r\n      },\r\n      {\r\n        path: 'edit/:id',\r\n        component: EditCompanyComponent,\r\n        pathMatch: 'full'\r\n      },\r\n      { path: '', redirectTo: '', pathMatch: 'full' },\r\n      { path: '**', redirectTo: '', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyManagementRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CompanyManagementRoutingModule } from './company-management-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { NewCompanyComponent } from './new-company/new-company.component';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { CompaniesComponent } from './companies/companies.component';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { EditCompanyComponent } from './edit-company/edit-company.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\n@NgModule({\r\n  declarations: [NewCompanyComponent, CompaniesComponent, EditCompanyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyManagementRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    NgxDatatableModule,\r\n  ],\r\n  providers: [SnackbarService],\r\n  entryComponents: [NewCompanyComponent],\r\n})\r\nexport class CompanyManagementModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, FormArray } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyInterface } from 'src/app/shared/models/company.interface';\r\nimport { CompanyService } from 'src/app/shared/service/companies.service';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { CompanyManagementService } from '../company-management.service';\r\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-company',\r\n  templateUrl: './edit-company.component.html',\r\n  styleUrls: ['./edit-company.component.scss']\r\n})\r\nexport class EditCompanyComponent implements OnInit {\r\n\r\n  companyFG: FormGroup;\r\n  company: CompanyInterface;\r\n  currentUser:any;\r\n  currentUserRole: number;\r\n  reportingProviderList = [\r\n    { value : \"apptitude\", viewValue: \"Apptitude\"},\r\n    { value : \"bing-direct\", viewValue: \"Bing Direct\"},\r\n    { value : \"hopkins\", viewValue: \"Hopkins\"},\r\n    { value : \"lyons\", viewValue: \"Lyons\"},\r\n    { value : \"media-net\", viewValue: \"Media.net\"},\r\n    { value : \"perion\", viewValue: \"Perion\"},\r\n    { value : \"rubi\", viewValue: \"Rubi\"},\r\n    { value : \"verizon-direct\", viewValue: \"Verizon Direct\"},\r\n  ]\r\n  reportingProviderHandleList = []\r\n  constructor(\r\n    private fb: FormBuilder, \r\n    private authService: AuthService,\r\n    private route: ActivatedRoute, \r\n    private companyManagementService: CompanyManagementService, \r\n    private snackService: SnackbarService, \r\n    private router: Router) { \r\n      this.currentUser = this.authService.currentUserValue;\r\n      this.currentUserRole = this.currentUser.role;\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.reportingProviderHandleList = this.reportingProviderList.sort((a, b) => (a.viewValue > b.viewValue) ? 1 : -1)\r\n    //Create update formgroup\r\n    this.companyFG = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      adServerUrls: this.fb.array([]),\r\n      reportingProviders: this.fb.array([]),\r\n    })\r\n\r\n    //Get the current company to edit\r\n    if (this.route.snapshot.params.id) {\r\n      this.companyManagementService.getOneCompany(this.route.snapshot.params.id).subscribe(res => {\r\n        this.company = res;\r\n        res['adServerUrls'].map((item) => {\r\n          this.adServerUrls.push(this.fb.group(item));\r\n        });\r\n        res['reportingProviders'].map((reporting) => {\r\n          this.reportingProviders.push(this.fb.group(reporting));\r\n        });\r\n        this.companyFG.setValue({\r\n          name: res['name'],\r\n          adServerUrls: res['adServerUrls'],\r\n          reportingProviders: res['reportingProviders']\r\n        });\r\n      });\r\n    } else {\r\n      // this.user = this.authService.currentUserSubject.value as any;\r\n    }\r\n  }\r\n\r\n  //Update one company\r\n  //Checks to see if edits were made\r\n  //If edits were made updates current company with new updated fields\r\n  updateOneCompany($event: any) {\r\n    this.companyFG.markAllAsTouched();\r\n    if (this.companyFG.valid) {\r\n      this.company = {...this.company, ...this.companyFG.value};\r\n      this.companyManagementService.updateOneCompany(this.company).subscribe(x => {\r\n        this.snackService.info('Successfully updated company.');\r\n      }, (err) => {\r\n        this.snackService.info(`Error updating company: ${err.statusText}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteOneCompany() {\r\n      this.companyManagementService.deleteOneCompany(this.company).subscribe(x => {\r\n        this.snackService.info('Successfully deleted company.');\r\n        this.router.navigate(['/company-management/companies']).then(() => {\r\n          window.location.reload();\r\n        });\r\n      }, (err) => {\r\n        this.snackService.info(`Error deleting company: ${err.statusText}`);\r\n      });\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['/company-management/companies']);\r\n  }\r\n\r\n  get adServerUrls() {\r\n    return this.companyFG.controls['adServerUrls'] as FormArray;\r\n  }\r\n  get reportingProviders() {\r\n    return this.companyFG.controls['reportingProviders'] as FormArray;\r\n  }\r\n  newAdServerUrls(): FormGroup {\r\n    return this.fb.group({\r\n      adServerUrl: ['', Validators.required],\r\n    })\r\n  }\r\n  addAdServerUrl(event) {\r\n    this.adServerUrls.push(this.newAdServerUrls());\r\n  }\r\n  removeAdServerUrl(i:number) {\r\n    this.adServerUrls.removeAt(i);\r\n  }\r\n  newReporingProvider(): FormGroup {\r\n    return this.fb.group({\r\n      reportingProvider: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      apiUrl: [''],\r\n      apiKey: [''],\r\n    })\r\n  }\r\n  handleReportingProvider() {\r\n    this.reportingProviders.push(this.newReporingProvider());\r\n  }\r\n  handleChangeProvider(event:any) {\r\n    console.log(\"==========\", event)\r\n    if(event) {\r\n      console.log(this.reportingProviderList)\r\n    }\r\n  }\r\n  removeReportingProvider(i:number) {\r\n    this.reportingProviders.removeAt(i);\r\n  }\r\n}\r\n","<form class=\"example-container\" [formGroup]=\"companyFG\" (submit)=\"updateOneCompany($event)\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Edit Company</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          {{ companyFG.value | json }}\r\n          <div class=\"row pb-2\"> \r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input\r\n                  matInput\r\n                  formControlName=\"name\"\r\n                  placeholder=\"Company Name\"\r\n                />\r\n                <mat-error *ngIf=\"companyFG.get('name').errors?.required\"\r\n                  >Company Name is required.\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>           \r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <button\r\n                class=\"save-button\"\r\n                mat-raised-button\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <button\r\n                class=\"back-button\"\r\n                mat-raised-button\r\n                color=\"secondary\"\r\n                (click)=\"back()\"\r\n              >\r\n                Back\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\" *ngIf=\"currentUserRole == 1\">\r\n            <a class=\"delete\" (click)=\"deleteOneCompany()\">Delete</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Add Stats</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <form\r\n            class=\"example-container\"\r\n            [formGroup]=\"companyFG\"\r\n            (submit)=\"updateOneCompany($event)\"\r\n          >\r\n            <div class=\"row\">\r\n              {{ companyFG.value | json }}\r\n              <div class=\"col-md-12\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"name\"\r\n                    placeholder=\"Company Name\"\r\n                  />\r\n                  <mat-error *ngIf=\"companyFG.get('name').errors?.required\"\r\n                    >Company Name is required.\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <button\r\n                  class=\"save-button\"\r\n                  mat-raised-button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <button\r\n                  class=\"back-button\"\r\n                  mat-raised-button\r\n                  color=\"secondary\"\r\n                  (click)=\"back()\"\r\n                >\r\n                  Back\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"currentUserRole == 1\">\r\n              <a class=\"delete\" (click)=\"deleteOneCompany()\">Delete</a>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title col-12\" style=\"justify-content: space-between;display:flex;\">\r\n              <h3 class=\"card-label\">Reporting Providers</h3>\r\n              <button\r\n                type=\"button\"\r\n                class=\"\r\n                    btn\r\n                    btn-sm\r\n                    btn-icon\r\n                    btn-bg-light\r\n                    btn-icon-primary\r\n                    btn-hover-primary\r\n                \"\r\n                (click)=\"handleReportingProvider()\"\r\n                >\r\n                <i class=\"flaticon-add-circular-button\"></i>\r\n              </button>\r\n          </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n          <div formArrayName=\"reportingProviders\">\r\n              <div *ngFor=\"let reportItem of reportingProviders.controls; let i=index\" [formGroupName]=\"i\">\r\n                  <div class=\"row pb-2\">\r\n                      <div class=\"col-xl-4\">\r\n                          <mat-form-field>\r\n                              <mat-label>Reporting Providers</mat-label>\r\n                              <mat-select matNativeControl formControlName=\"reportingProvider\" (selectionChange)=\"handleChangeProvider($event.value)\">\r\n                                  <mat-option\r\n                                      *ngFor=\"let reportingProvider of reportingProviderHandleList\"\r\n                                      [value]=\"reportingProvider.value\"\r\n                                  >\r\n                                      {{ reportingProvider.viewValue }}\r\n                                  </mat-option>\r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"reportItem.get('reportingProvider').errors?.required\">\r\n                                  Reporting Provider is required.\r\n                              </mat-error>\r\n                          </mat-form-field>\r\n                      </div>\r\n                      <div class=\"col-xl-4\">\r\n                          <mat-form-field>\r\n                              <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                              <mat-error *ngIf=\"reportItem.get('email').errors?.email\"\r\n                              >Email is not valid</mat-error\r\n                              >\r\n                          </mat-form-field>\r\n                      </div>\r\n                      <div class=\"col-xl-4\">\r\n                          <mat-form-field>\r\n                          <input\r\n                              matInput\r\n                              formControlName=\"password\"\r\n                              placeholder=\"Password\"\r\n                              type=\"password\"\r\n                              autocomplete=\"off\"\r\n                          />\r\n                          <mat-error\r\n                              *ngIf=\"reportItem.get('password').errors?.required\"\r\n                              >Password is required</mat-error\r\n                          >\r\n                          </mat-form-field>\r\n                      </div>\r\n                  </div>\r\n          \r\n                  <div class=\"row pb-2\">\r\n                      <div class=\"col-xl-5\">\r\n                          <mat-form-field>\r\n                              <input matInput formControlName=\"apiUrl\" placeholder=\"ApiUrl\" />\r\n                              <mat-error *ngIf=\"reportItem.get('apiUrl').errors?.required\">ApiUrl Name is required.\r\n                              </mat-error>\r\n                          </mat-form-field>\r\n                      </div>\r\n                      <div class=\"col-xl-5\">\r\n                          <mat-form-field>\r\n                              <input matInput formControlName=\"apiKey\" placeholder=\"ApiKey\" />\r\n                              <mat-error *ngIf=\"reportItem.get('apiKey').errors?.required\">ApiKey Name is required.\r\n                              </mat-error>\r\n                          </mat-form-field>\r\n                      </div>\r\n                      <div class=\"col-xl-2\">\r\n                          <button\r\n                              class=\"\r\n                                  btn\r\n                                  btn-sm\r\n                                  btn-icon\r\n                                  btn-bg-light\r\n                                  btn-icon-danger\r\n                                  btn-hover-danger\r\n                              \"\r\n                              (click)=\"removeReportingProvider(i)\"\r\n                              >\r\n                              <i class=\"flaticon2-line\"></i>\r\n                          </button>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      </div>\r\n      \r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n            <div class=\"card-title\">\r\n                <h3 class=\"card-label\">Ad Server Url</h3>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row pb-2\">\r\n            <div class=\"col-md-3\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"\r\n                    btn\r\n                    btn-sm\r\n                    btn-icon\r\n                    btn-bg-light\r\n                    btn-icon-primary\r\n                    btn-hover-primary\r\n                \"\r\n                (click)=\"addAdServerUrl($event)\"\r\n                >\r\n                <i class=\"flaticon-add-circular-button\"></i>\r\n              </button>\r\n            </div>           \r\n          </div>\r\n          <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                  <div formArrayName=\"adServerUrls\">\r\n                      <div class=\"row\" *ngFor=\"let adUrlItem of adServerUrls.controls; let i=index\" [formGroupName]=\"i\">\r\n                          <div class=\"col-md-10\">\r\n                              <mat-form-field>\r\n                                  <input matInput placeholder=\"Ad Server Url\" formControlName=\"adServerUrl\" />\r\n                                  <mat-error *ngIf=\"adUrlItem.get('adServerUrl').errors?.required\">\r\n                                      AdServerURL is required.\r\n                                  </mat-error>\r\n                              </mat-form-field>\r\n                          </div>\r\n                          <div class=\"col-md-2\">\r\n                              <button\r\n                                class=\"\r\n                                    btn\r\n                                    btn-sm\r\n                                    btn-icon\r\n                                    btn-bg-light\r\n                                    btn-icon-danger\r\n                                    btn-hover-danger\r\n                                \"\r\n                                (click)=\"removeAdServerUrl(i)\"\r\n                                >\r\n                                <i class=\"flaticon2-line\"></i>\r\n                              </button>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n</form>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators, FormArray, FormGroupDirective } from '@angular/forms';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { CompanyManagementService } from '../company-management.service';\r\n\r\n@Component({\r\n  selector: 'app-new-company',\r\n  templateUrl: './new-company.component.html',\r\n  styleUrls: ['./new-company.component.scss']\r\n})\r\nexport class NewCompanyComponent implements OnInit {\r\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\r\n  companyFG: FormGroup;\r\n\r\n  intialServerUrl = { adServerUrl: ['', Validators.required] } \r\n  intialReportProvider = { \r\n    reportingProvider: ['', Validators.required],\r\n    email: [''],\r\n    password: [''],\r\n    apiUrl: [''],\r\n    apiKey: [''],\r\n  } \r\n  reportingProviderList = [\r\n    { value : \"apptitude\", viewValue: \"Apptitude\"},\r\n    { value : \"bing-direct\", viewValue: \"Bing Direct\"},\r\n    { value : \"hopkins\", viewValue: \"Hopkins\"},\r\n    { value : \"lyons\", viewValue: \"Lyons\"},\r\n    { value : \"media-net\", viewValue: \"Media.net\"},\r\n    { value : \"perion\", viewValue: \"Perion\"},\r\n    { value : \"rubi\", viewValue: \"Rubi\"},\r\n    { value : \"verizon-direct\", viewValue: \"Verizon Direct\"},\r\n  ]\r\n  reportingProviderHandleList = []\r\n\r\n  constructor(\r\n    private companyManagementService: CompanyManagementService,\r\n    private snackService: SnackbarService,\r\n    private fb: FormBuilder, \r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.companyFG = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      adServerUrls: this.fb.array([]),\r\n      reportingProviders: this.fb.array([]),\r\n    });\r\n    this.adServerUrls.push(this.fb.group(this.intialServerUrl));\r\n    this.reportingProviders.push(this.fb.group(this.intialReportProvider));\r\n    this.reportingProviderHandleList = this.reportingProviderList.sort((a, b) => (a.viewValue > b.viewValue) ? 1 : -1)\r\n  }\r\n\r\n  save(): void {\r\n    this.companyFG.markAllAsTouched();\r\n    if (this.companyFG.valid) {\r\n      this.companyManagementService.addCompany(this.companyFG.value).subscribe(x => {\r\n        this.snackService.info('Successfully added a new company.');\r\n        this.companyFG.reset();\r\n        this.formGroupDirective.resetForm();\r\n      }, (err) => {\r\n        this.snackService.info(err.error);\r\n      });\r\n    }\r\n  }\r\n  get reportingProviders() {\r\n    return this.companyFG.controls['reportingProviders'] as FormArray;\r\n  }\r\n  get adServerUrls() {\r\n    return this.companyFG.controls['adServerUrls'] as FormArray;\r\n  }\r\n  newAdServerUrls(): FormGroup {\r\n    return this.fb.group({\r\n      adServerUrl: ['', Validators.required],\r\n    })\r\n  }\r\n  addAdServerUrl(event) {\r\n    this.adServerUrls.push(this.newAdServerUrls());\r\n  }\r\n  removeAdServerUrl(i:number) {\r\n    this.adServerUrls.removeAt(i);\r\n  }\r\n  removeReportingProvider(i:number) {\r\n    this.reportingProviders.removeAt(i);\r\n  }\r\n  newReporingProvider(): FormGroup {\r\n    return this.fb.group({\r\n      reportingProvider: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      apiUrl: [''],\r\n      apiKey: [''],\r\n    })\r\n  }\r\n  handleReportingProvider() {\r\n    this.reportingProviders.push(this.newReporingProvider());\r\n  }\r\n  handleChangeProvider(event:any) {\r\n    console.log(\"==========\", event)\r\n    if(event) {\r\n      console.log(this.reportingProviderList)\r\n    }\r\n  }\r\n}\r\n","<form class=\"example-container\" [formGroup]=\"companyFG\" (submit)=\"save()\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xl-6\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12\">\r\n                    <div class=\"card card-custom example example-compact gutter-b\">\r\n                        <div class=\"card-header\">\r\n                            <div class=\"card-title\">\r\n                                <h3 class=\"card-label\">Create New Company</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            {{companyFG.value | json}}\r\n                            <div class=\"row pb-2 pt-2\">\r\n                                <div class=\"col-md-12\">\r\n                                    <mat-form-field>\r\n                                        <input matInput formControlName=\"name\" placeholder=\"Company Name\" />\r\n                                        <mat-error *ngIf=\"companyFG.get('name').errors?.required\">Company Name is required.\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-md-12\">\r\n                                    <button class=\"save-button\" mat-raised-button color=\"primary\" type=\"submit\">Save</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12\">\r\n                    <div class=\"card card-custom example example-compact gutter-b\">\r\n                        <div class=\"card-header\">\r\n                            <div class=\"card-title col-12\" style=\"justify-content: space-between;display:flex;\">\r\n                                <h3 class=\"card-label\">Reporting Providers</h3>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"\r\n                                        btn\r\n                                        btn-sm\r\n                                        btn-icon\r\n                                        btn-bg-light\r\n                                        btn-icon-primary\r\n                                        btn-hover-primary\r\n                                    \"\r\n                                    (click)=\"handleReportingProvider()\"\r\n                                    >\r\n                                    <i class=\"flaticon-add-circular-button\"></i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <div formArrayName=\"reportingProviders\">\r\n                                <div *ngFor=\"let reportItem of reportingProviders.controls; let i=index\" [formGroupName]=\"i\">\r\n                                    <div class=\"row pb-2\">\r\n                                        <div class=\"col-xl-4\">\r\n                                            <mat-form-field>\r\n                                                <mat-label>Reporting Providers</mat-label>\r\n                                                <mat-select matNativeControl formControlName=\"reportingProvider\" (selectionChange)=\"handleChangeProvider($event.value)\">\r\n                                                    <mat-option\r\n                                                        *ngFor=\"let reportingProvider of reportingProviderHandleList\"\r\n                                                        [value]=\"reportingProvider.value\"\r\n                                                    >\r\n                                                        {{ reportingProvider.viewValue }}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                                <mat-error *ngIf=\"reportItem.get('reportingProvider').errors?.required\">\r\n                                                    Reporting Provider is required.\r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                        <div class=\"col-xl-4\">\r\n                                            <mat-form-field>\r\n                                                <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                                                <mat-error *ngIf=\"reportItem.get('email').errors?.email\"\r\n                                                >Email is not valid</mat-error\r\n                                                >\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                        <div class=\"col-xl-4\">\r\n                                            <mat-form-field>\r\n                                            <input\r\n                                                matInput\r\n                                                formControlName=\"password\"\r\n                                                placeholder=\"Password\"\r\n                                                type=\"password\"\r\n                                                autocomplete=\"off\"\r\n                                            />\r\n                                            <mat-error\r\n                                                *ngIf=\"reportItem.get('password').errors?.required\"\r\n                                                >Password is required</mat-error\r\n                                            >\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                    </div>\r\n                            \r\n                                    <div class=\"row pb-2\">\r\n                                        <div class=\"col-xl-5\">\r\n                                            <mat-form-field>\r\n                                                <input matInput formControlName=\"apiUrl\" placeholder=\"ApiUrl\" />\r\n                                                <mat-error *ngIf=\"reportItem.get('apiUrl').errors?.required\">ApiUrl Name is required.\r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                        <div class=\"col-xl-5\">\r\n                                            <mat-form-field>\r\n                                                <input matInput formControlName=\"apiKey\" placeholder=\"ApiKey\" />\r\n                                                <mat-error *ngIf=\"reportItem.get('apiKey').errors?.required\">ApiKey Name is required.\r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                        <div class=\"col-xl-2\">\r\n                                            <button\r\n                                                class=\"\r\n                                                    btn\r\n                                                    btn-sm\r\n                                                    btn-icon\r\n                                                    btn-bg-light\r\n                                                    btn-icon-danger\r\n                                                    btn-hover-danger\r\n                                                \"\r\n                                                (click)=\"removeReportingProvider(i)\"\r\n                                                >\r\n                                                <i class=\"flaticon2-line\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-xl-6\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12\">\r\n                    <div class=\"card card-custom example example-compact gutter-b\">\r\n                        <div class=\"card-header\">\r\n                            <div class=\"card-title\">\r\n                                <h3 class=\"card-label\">Ad Server Url</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"row pb-2\">\r\n                                <div class=\"col-md-3\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        class=\"\r\n                                            btn\r\n                                            btn-sm\r\n                                            btn-icon\r\n                                            btn-bg-light\r\n                                            btn-icon-primary\r\n                                            btn-hover-primary\r\n                                        \"\r\n                                        (click)=\"addAdServerUrl($event)\"\r\n                                        >\r\n                                        <i class=\"flaticon-add-circular-button\"></i>\r\n                                    </button>\r\n                                </div>           \r\n                            </div>\r\n                            <div class=\"row pb-2\">\r\n                                <div class=\"col-md-12\">\r\n                                    <div formArrayName=\"adServerUrls\">\r\n                                        <div class=\"row\" *ngFor=\"let adUrlItem of adServerUrls.controls; let i=index\" [formGroupName]=\"i\">\r\n                                            <div class=\"col-md-10\">\r\n                                                <mat-form-field>\r\n                                                    <input matInput placeholder=\"Ad Server Url\" formControlName=\"adServerUrl\" />\r\n                                                    <mat-error *ngIf=\"adUrlItem.get('adServerUrl').errors?.required\">\r\n                                                        AdServerURL is required.\r\n                                                    </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                            <div class=\"col-md-2\">\r\n                                                <button\r\n                                                class=\"\r\n                                                    btn\r\n                                                    btn-sm\r\n                                                    btn-icon\r\n                                                    btn-bg-light\r\n                                                    btn-icon-danger\r\n                                                    btn-hover-danger\r\n                                                \"\r\n                                                (click)=\"removeAdServerUrl(i)\"\r\n                                                >\r\n                                                <i class=\"flaticon2-line\"></i>\r\n                                            </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n    \r\n</form>\r\n"],"sourceRoot":"webpack:///"}