{"version":3,"sources":["webpack:///src/app/modules/google-sheet-reporting/all-sheets/all-sheets.component.ts","webpack:///src/app/modules/google-sheet-reporting/all-sheets/all-sheets.component.html","webpack:///src/app/modules/google-sheet-reporting/edit-sheet/edit-sheet.component.ts","webpack:///src/app/modules/google-sheet-reporting/edit-sheet/edit-sheet.component.html","webpack:///src/app/modules/google-sheet-reporting/google-sheet-reporting-routing.module.ts","webpack:///src/app/modules/google-sheet-reporting/google-sheet-reporting.component.ts","webpack:///src/app/modules/google-sheet-reporting/google-sheet-reporting.component.html","webpack:///src/app/modules/google-sheet-reporting/google-sheet-reporting.module.ts","webpack:///src/app/modules/google-sheet-reporting/new-sheet/new-sheet.component.ts","webpack:///src/app/modules/google-sheet-reporting/new-sheet/new-sheet.component.html","webpack:///src/app/modules/google-sheet-reporting/sheet/sheet.component.html","webpack:///src/app/modules/google-sheet-reporting/sheet/sheet.component.ts"],"names":["AllSheetsComponent","googlesheetService","cdr","router","userService","notification","loadingIndicator","hidden","localStorageCompany","getSelectedCompanyFromLocalStorage","showError","getSheetList","subscribe","res","rows","detectChanges","err","error","sheetId","navigateByUrl","id","window","confirm","deleteSheet","data","navigate","then","location","reload","showSuccess","console","log","selector","templateUrl","styleUrls","EditSheetComponent","route","googleSheetReportingServie","editSheetFG","sheetName","required","sheetUrl","snapshot","params","getOneSheet","sheet","setValue","markAllAsTouched","valid","value","updateSheet","statusText","formGroupDirective","routes","path","component","children","pathMatch","redirectTo","GoogleSheetReportingRoutingModule","forChild","imports","exports","GoogleSheetReportingComponent","GoogleSheetReportingModule","forRoot","declarations","entryComponents","NewSheetComponent","sheetFG","addSheet","JSON","stringify","SheetComponent","googleSheetReportingService","sheetData","range","startDate","endDate","selectedCompany","routeParams","googlesheetId","getSheetInformation","markForCheck","getSheetData","toPromise","sheetFiltering","table"],"mappings":"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","file":"modules-google-sheet-reporting-google-sheet-reporting-module-es5.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { SheetInterface } from 'src/app/shared/models/sheet.interface';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\nimport { UsersService } from 'src/app/shared/service/users.service';\nimport { GoogleSheetReportingService } from '../google-sheet-reporting.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-all-sheets',\n  templateUrl: './all-sheets.component.html',\n  styleUrls: ['./all-sheets.component.scss']\n})\nexport class AllSheetsComponent implements OnInit {\n  loadingIndicator = true;\n  rows: Array<SheetInterface>;\n  hidden = false;\n  //Local Storage Company\n  localStorageCompany: any;\n  constructor(\n    private googlesheetService: GoogleSheetReportingService,\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private userService: UsersService,\n    private notification: NotificationService,\n  ) { }\n\n  ngOnInit(): void {\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\n    //access page part\n    if (!this.localStorageCompany) {\n      this.hidden = true;\n      this.notification.showError(\"Please select your Company!\", \"\")\n    } else {\n      this.hidden = false;\n    }\n\n    this.googlesheetService.getSheetList().subscribe((res) => {\n      this.rows = res;\n      this.loadingIndicator = false;\n      this.cdr.detectChanges();\n    }, (err) => {\n      this.notification.showError(err.error, \"\");\n    });\n  }\n\n  editSheet(sheetId: string) {\n    this.router.navigateByUrl('/google-sheet-reporting/edit/' + sheetId);\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  deleteSheet(id: any) {\n    if(window.confirm('Do you want to go ahead?')) {\n      this.googlesheetService.deleteSheet(id).subscribe((data) => {\n        this.router.navigate(['/google-sheet-reporting/all-sheets']).then(() => {\n          window.location.reload();\n        });\n        this.notification.showSuccess('Successfully deleted sheet.', \"\");\n      }, (error) => {\n        console.log(error)\n        this.notification.showError(`Error deleting sheet: ${error}`, \"\");\n      });\n    } \n  }\n\n}\n","<div class=\"row\" *ngIf=\"!hidden\">\n    <div class=\"col-xl-12\">\n      <div class=\"card card-custom example example-compact gutter-b\">\n        <div class=\"card-header\">\n          <div class=\"card-title\">\n            <h3 class=\"card-label\">Google Sheet Reporting</h3>\n          </div>\n        </div>\n        <div class=\"card-body\">\n          <ngx-datatable class=\"material fullscreen\" [rows]=\"rows\" [columnMode]=\"'force'\"\n            [loadingIndicator]=\"loadingIndicator\" [footerHeight]=\"50\" [rowHeight]=\"50\" [scrollbarH]=\"true\"\n            [headerHeight]=\"50\" [limit]=\"10\">\n            <ngx-datatable-column name=\"SheetName\" [width]=\"150\">\n              <ng-template let-column=\"column\" ngx-datatable-header-template>\n                Sheet Name\n              </ng-template>\n              <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                {{ value }}\n              </ng-template>\n            </ngx-datatable-column>\n            \n            <ngx-datatable-column name=\"SheetUrl\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                  Sheet Url\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n              </ngx-datatable-column>\n\n            <ngx-datatable-column name=\"id\" [width]=\"100\">\n              <ng-template ngx-datatable-header-template>Action</ng-template>\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                <a title=\"Edit Sheet\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n                  (click)=\"editSheet(row._key)\">\n                  <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\n                    class=\"svg-icon svg-icon-md svg-icon-primary\">\n                  </span>\n                </a>\n\n                <a title=\"Delete Sheet\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n                  (click)=\"deleteSheet(row._key)\">\n                  <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"false\"\n                    class=\"svg-icon svg-icon-md svg-icon-danger\">\n                  </span>\n                </a>\n              </ng-template>\n            </ngx-datatable-column>\n          </ngx-datatable>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- begin:: Error -->\n  <div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\n    display: block;\n    min-height: 80vh;\n    font-size: 14px;\n    line-height: 1.4;\n    color: #0e1724;\">\n    <!--begin::Content-->\n    <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\n      <p class=\"display-4 font-weight-boldest text-white mb-12\">\n        How did you get here\n      </p>\n      <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\n        Sorry you can't access the page you're looking for.\n      </p>\n      <p class=\"font-size-h4 line-height-md\">\n        There may be a misspelling in the URL entered,<br />or the page you are\n        looking for may no longer exist.\n      </p>\n    </div>\n    <!--end::Content-->\n  </div>\n  <!-- end:: Error -->","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { GoogleSheetReportingService } from '../google-sheet-reporting.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UsersService } from 'src/app/shared/service/users.service';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\nimport { SheetInterface } from 'src/app/shared/models/sheet.interface';\n\n@Component({\n  selector: 'app-edit-sheet',\n  templateUrl: './edit-sheet.component.html',\n  styleUrls: ['./edit-sheet.component.scss']\n})\nexport class EditSheetComponent implements OnInit {\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\n  editSheetFG: FormGroup;\n  sheet: SheetInterface;\n  hidden = false;\n  localStorageCompany: any;\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UsersService,\n    private notification: NotificationService,\n    private googleSheetReportingServie: GoogleSheetReportingService,\n  ) {\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\n  }\n\n  ngOnInit(): void {\n    //access page part\n    if (!this.localStorageCompany) {\n      this.hidden = true;\n      this.notification.showError(\"Please select your Company!\", \"\")\n    } else {\n      this.hidden = false;\n    }\n\n    this.editSheetFG = new FormGroup({\n      sheetName: new FormControl('', Validators.required),\n      sheetUrl: new FormControl('', Validators.required),\n    });\n\n    if (this.route.snapshot.params.id) {\n      this.googleSheetReportingServie.getOneSheet(this.route.snapshot.params.id).subscribe(res => {\n        this.sheet = res;\n\n        this.editSheetFG.setValue({\n          sheetName: res['sheetName'],\n          sheetUrl: res['sheetUrl'],\n        });\n      })\n    }\n\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  submitHandle() {\n    this.editSheetFG.markAllAsTouched();\n    if (this.editSheetFG.valid) {\n      this.sheet = { ...this.sheet, ...this.editSheetFG.value };\n      this.googleSheetReportingServie.updateSheet(this.sheet).subscribe(res => {\n        this.notification.showSuccess('Successfully updated the Sheet.', \"\");\n      }, (err) => {\n        this.notification.showError(`Error updating sheet: ${err.statusText}`, \"\");\n      })\n    }\n  }\n\n}\n","<form class=\"example-container\" [formGroup]=\"editSheetFG\" (submit)=\"submitHandle()\" *ngIf=\"!hidden\">\n    <div class=\"row\">\n        <div class=\"col-xl-8\">\n            <div class=\"row\">\n                <div class=\"col-xl-12\">\n                    <div class=\"card card-custom example example-compact gutter-b\">\n                        <div class=\"card-header\">\n                            <div class=\"card-title\">\n                                <h3 class=\"card-label\">Edit Google Sheet</h3>\n                            </div>\n                        </div>\n                        <div class=\"card-body\">\n                            {{editSheetFG.value | json}}\n                            <div class=\"row pb-2 pt-2\">\n                                <div class=\"col-md-12\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"sheetName\" placeholder=\"Sheet Name\" />\n                                        <mat-error *ngIf=\"editSheetFG.get('sheetName').errors?.required\">Sheet Name is required.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row pb-2 pt-2\">\n                                <div class=\"col-md-12\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"sheetUrl\" placeholder=\"Sheet Url\" type=\"url\" />\n                                        <mat-hint align=\"start\">e.g. https://docs.google.com/spreadsheets/d/1taJZ7W-sds54</mat-hint>\n                                        <mat-error *ngIf=\"editSheetFG.get('sheetUrl').errors?.required\">Sheet Url is required.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row pt-2\">\n                                <div class=\"col-md-12\">\n                                    <button class=\"save-button\" mat-raised-button color=\"primary\"\n                                        type=\"submit\">Save</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</form>\n<!-- begin:: Error -->\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\n  display: block;\n  min-height: 80vh;\n  font-size: 14px;\n  line-height: 1.4;\n  color: #0e1724;\">\n    <!--begin::Content-->\n    <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\n        <p class=\"display-4 font-weight-boldest text-white mb-12\">\n            How did you get here\n        </p>\n        <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\n            Sorry you can't access the page you're looking for.\n        </p>\n        <p class=\"font-size-h4 line-height-md\">\n            There may be a misspelling in the URL entered,<br />or the page you are\n            looking for may no longer exist.\n        </p>\n    </div>\n    <!--end::Content-->\n</div>\n<!-- end:: Error -->","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllSheetsComponent } from './all-sheets/all-sheets.component';\nimport { GoogleSheetReportingComponent } from './google-sheet-reporting.component';\nimport { NewSheetComponent } from './new-sheet/new-sheet.component';\nimport { EditSheetComponent } from './edit-sheet/edit-sheet.component';\nimport { SheetComponent } from './sheet/sheet.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GoogleSheetReportingComponent,\n    children: [\n      {\n        path: 'all-sheets',\n        component: AllSheetsComponent,\n      },\n      {\n        path: 'new-sheet',\n        component: NewSheetComponent,\n      },\n      {\n        path: 'edit/:id',\n        component: EditSheetComponent,\n        pathMatch: 'full'\n      },\n      {\n        path: 'sheet/:sheetId',\n        component: SheetComponent,\n        pathMatch: 'full'\n      },\n      { path: '', redirectTo: '', pathMatch: 'full' },\n      { path: '**', redirectTo: '', pathMatch: 'full' },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GoogleSheetReportingRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-google-sheet-reporting',\n  templateUrl: './google-sheet-reporting.component.html',\n  styleUrls: ['./google-sheet-reporting.component.scss']\n})\nexport class GoogleSheetReportingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GoogleSheetReportingRoutingModule } from './google-sheet-reporting-routing.module';\nimport { GoogleSheetReportingComponent } from './google-sheet-reporting.component';\nimport { NewSheetComponent } from './new-sheet/new-sheet.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AllSheetsComponent } from './all-sheets/all-sheets.component';\nimport { EditSheetComponent } from './edit-sheet/edit-sheet.component';\nimport { SheetComponent } from './sheet/sheet.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\n\n\n@NgModule({\n  declarations: [GoogleSheetReportingComponent, NewSheetComponent, AllSheetsComponent, EditSheetComponent, SheetComponent],\n  imports: [\n    CommonModule,\n    GoogleSheetReportingRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatIconModule,\n    NgxDatatableModule,\n    SharedModule,\n    InlineSVGModule.forRoot()\n  ],\n  entryComponents: [],\n})\nexport class GoogleSheetReportingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\nimport { UsersService } from 'src/app/shared/service/users.service';\nimport { GoogleSheetReportingService } from '../google-sheet-reporting.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-sheet',\n  templateUrl: './new-sheet.component.html',\n  styleUrls: ['./new-sheet.component.scss']\n})\nexport class NewSheetComponent implements OnInit {\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\n  sheetFG: FormGroup;\n  hidden = false;\n  localStorageCompany: any;\n\n  constructor(\n    private userService: UsersService,\n    private googleSheetReportingServie: GoogleSheetReportingService,\n    private router: Router,\n    private notification: NotificationService,\n  ) {\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\n  }\n\n  ngOnInit(): void {\n    //access page part\n    if (!this.localStorageCompany) {\n      this.hidden = true;\n      this.notification.showError(\"Please select your Company!\", \"\")\n    } else {\n      this.hidden = false;\n    }\n\n    this.sheetFG = new FormGroup({\n      sheetName: new FormControl('', Validators.required),\n      sheetUrl: new FormControl('', Validators.required),\n    });\n  }\n\n  submitHandle() {\n    this.sheetFG.markAllAsTouched();\n    if (this.sheetFG.valid) {\n      this.googleSheetReportingServie.addSheet(this.sheetFG.value).subscribe(res => {\n        this.notification.showSuccess('Successfully added a new Sheet.', \"\");\n        this.router.navigate(['/google-sheet-reporting/all-sheets']);\n      }, (error) => {\n        this.notification.showError(JSON.stringify(error.error), \"\");\n      })\n    }\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n}\n","<form class=\"example-container\" [formGroup]=\"sheetFG\" (submit)=\"submitHandle()\" *ngIf=\"!hidden\">\n    <div class=\"row\">\n        <div class=\"col-xl-8\">\n            <div class=\"row\">\n                <div class=\"col-xl-12\">\n                    <div class=\"card card-custom example example-compact gutter-b\">\n                        <div class=\"card-header\">\n                            <div class=\"card-title\">\n                                <h3 class=\"card-label\">Create New Google Sheet</h3>\n                            </div>\n                        </div>\n                        <div class=\"card-body\">\n                            {{sheetFG.value | json}}\n                            <div class=\"row pb-2 pt-2\">\n                                <div class=\"col-md-12\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"sheetName\" placeholder=\"Sheet Name\" />\n                                        <mat-error *ngIf=\"sheetFG.get('sheetName').errors?.required\">Sheet Name is required.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row pb-2 pt-2\">\n                                <div class=\"col-md-12\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"sheetUrl\" placeholder=\"Sheet Url\" type=\"url\" />\n                                        <mat-hint align=\"start\">e.g. https://docs.google.com/spreadsheets/d/1taJZ7W-sds54</mat-hint>\n                                        <mat-error *ngIf=\"sheetFG.get('sheetUrl').errors?.required\">Sheet Url is required.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row pt-2\">\n                                <div class=\"col-md-12\">\n                                    <button class=\"save-button\" mat-raised-button color=\"primary\"\n                                        type=\"submit\">Save</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</form>\n<!-- begin:: Error -->\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\n  display: block;\n  min-height: 80vh;\n  font-size: 14px;\n  line-height: 1.4;\n  color: #0e1724;\">\n    <!--begin::Content-->\n    <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\n        <p class=\"display-4 font-weight-boldest text-white mb-12\">\n            How did you get here\n        </p>\n        <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\n            Sorry you can't access the page you're looking for.\n        </p>\n        <p class=\"font-size-h4 line-height-md\">\n            There may be a misspelling in the URL entered,<br />or the page you are\n            looking for may no longer exist.\n        </p>\n    </div>\n    <!--end::Content-->\n</div>\n<!-- end:: Error -->","<app-reporting-filtering (onDatesPicked)=\"sheetFiltering($event)\"></app-reporting-filtering>\n\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 10px; height: 500px\" [loadingIndicator]=\"loadingIndicator\"\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [scrollbarH]=\"true\"\n  [rows]=\"sheetData\">\n\n  <!-- Date -->\n  <ngx-datatable-column name=\"date\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Date\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | date }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Searches -->\n  <ngx-datatable-column name=\"searches\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Searches\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Clicks -->\n  <ngx-datatable-column name=\"clicks\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Clicks\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n       <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- CTR -->\n  <ngx-datatable-column name=\"ctr\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      CTR\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n        <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- RPC -->\n  <ngx-datatable-column name=\"rpc\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n        RPC\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n    <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- REVENUE -->\n  <ngx-datatable-column name=\"revenue\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Revenue\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- TQ -->\n  <ngx-datatable-column name=\"tq\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n        TQ\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n    <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n</ngx-datatable>","import { ChangeDetectorRef, Component, AfterViewInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UsersService } from 'src/app/shared/service/users.service';\nimport { GoogleSheetReportingService } from '../google-sheet-reporting.service';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\n\n@Component({\n  selector: 'app-sheet',\n  templateUrl: './sheet.component.html',\n  styleUrls: ['./sheet.component.scss']\n})\nexport class SheetComponent implements AfterViewInit {\n  @ViewChild('expandableTable') table: any;\n  loadingIndicator = true;\n  selectedCompany: any;\n  sheetData: any = [];\n  googlesheetId: string;\n  range = {\n    startDate: '',\n    endDate: '',\n  };\n\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UsersService,\n    private cdr: ChangeDetectorRef,\n    private googleSheetReportingService: GoogleSheetReportingService,\n    private notification: NotificationService\n  ) {\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\n   }\n\n   async ngAfterViewInit() {\n    this.loadingIndicator = true;\n    this.route.params.subscribe(async routeParams => {\n      this.googlesheetId = routeParams.sheetId;\n      this.sheetData = [];\n      this.sheetData = await this.getSheetInformation(this.googlesheetId, this.range.startDate, this.range.endDate);\n      this.cdr.markForCheck();\n    });\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  public async sheetFiltering(range: any) {\n    this.loadingIndicator = true;\n    this.range = range;\n    this.sheetData = [];\n    this.route.params.subscribe(async routeParams => {\n      this.sheetData = [];\n      this.sheetData = await this.getSheetInformation(routeParams.sheetId, this.range.startDate, this.range.endDate);\n      this.cdr.markForCheck();\n    })\n  }\n\n  getSheetInformation(googlesheetId, startDate, endDate) {\n    this.loadingIndicator = true;\n    return this.googleSheetReportingService.getSheetData(googlesheetId, startDate, endDate).toPromise().then((res) => {\n      this.loadingIndicator = false;\n      return res;\n    }).catch((error) => {\n      return error;\n    });\n  }\n\n}\n"]}