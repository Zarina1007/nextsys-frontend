{"version":3,"sources":["webpack:///src/app/modules/admin-reporting/accounting/accounting.component.html","webpack:///src/app/modules/admin-reporting/accounting/accounting.component.ts","webpack:///src/app/modules/admin-reporting/admin-reporting-routing.module.ts","webpack:///src/app/modules/admin-reporting/admin-reporting.module.ts","webpack:///src/app/modules/admin-reporting/all-reporting/all-reporting.component.ts","webpack:///src/app/modules/admin-reporting/all-reporting/all-reporting.component.html","webpack:///src/app/modules/admin-reporting/apptitude/apptitude.component.html","webpack:///src/app/modules/admin-reporting/apptitude/apptitude.component.ts","webpack:///src/app/modules/admin-reporting/bing-direct/bing-direct.component.ts","webpack:///src/app/modules/admin-reporting/bing-direct/bing-direct.component.html","webpack:///src/app/modules/admin-reporting/hopkins/hopkins.component.html","webpack:///src/app/modules/admin-reporting/hopkins/hopkins.component.ts","webpack:///src/app/modules/admin-reporting/imgage-advantage/imgage-advantage.component.ts","webpack:///src/app/modules/admin-reporting/imgage-advantage/imgage-advantage.component.html","webpack:///src/app/modules/admin-reporting/lyons/lyons.component.html","webpack:///src/app/modules/admin-reporting/lyons/lyons.component.ts","webpack:///src/app/modules/admin-reporting/manual-split-update/manual-split-update.component.ts","webpack:///src/app/modules/admin-reporting/manual-split-update/manual-split-update.component.html","webpack:///src/app/modules/admin-reporting/manual-update/manual-update.component.ts","webpack:///src/app/modules/admin-reporting/manual-update/manual-update.component.html","webpack:///src/app/modules/admin-reporting/media-net/media-net.component.ts","webpack:///src/app/modules/admin-reporting/media-net/media-net.component.html","webpack:///src/app/modules/admin-reporting/perion/perion.component.html","webpack:///src/app/modules/admin-reporting/perion/perion.component.ts","webpack:///src/app/modules/admin-reporting/rubi/rubi.component.html","webpack:///src/app/modules/admin-reporting/rubi/rubi.component.ts","webpack:///src/app/modules/admin-reporting/solex-bc/solex-bc.component.html","webpack:///src/app/modules/admin-reporting/solex-bc/solex-bc.component.ts","webpack:///src/app/modules/admin-reporting/system1/system1.component.html","webpack:///src/app/modules/admin-reporting/system1/system1.component.ts","webpack:///src/app/modules/admin-reporting/third-party/third-party.component.ts","webpack:///src/app/modules/admin-reporting/third-party/third-party.component.html","webpack:///src/app/modules/admin-reporting/verizon-direct/verizon-direct.component.html","webpack:///src/app/modules/admin-reporting/verizon-direct/verizon-direct.component.ts","webpack:///src/app/shared/service/admin-stats/accounting.service.ts","webpack:///src/app/shared/service/admin-stats/update.service.ts"],"names":["AccountingComponent","cdr","userService","accountingService","tagService","companyService","rows","loadingIndicator","range","startDate","endDate","allRubiStats","allLyonStats","allPerionStats","allSystem1Stats","allVerizonStats","allSolexBCStats","allApptitudeStats","tagList","tempStatData","tempUpdateStatData","reportTypeData","selectedCompany","getSelectedCompanyStored","getCompanyTags","getReportingProviderList","getPerionStats","PerionData","getLyonStats","LyonData","getRubiStats","RubiData","getApptitudeStats","ApptitudeData","getSolexBCStats","SolexBCData","getVerizonDirectStats","VerizonData","getSystem1Stats","System1Data","includes","concat","result","forEach","object","existing","filter","item","publisher","length","existingIndex","indexOf","reporting","everyrevenue","String","revenue","total","push","resultData","detailHeight","detectChanges","getSelectedCompanyFromLocalStorage","perionUpData","lyonsUpData","rubiUpData","apptitudeUpData","solexBCUpData","verizonUpData","system1UpData","getReportCompany","split","toPromise","res","providerList","reportingProviders","map","report","reportingProvider","company","response","stats","tagL","tag","advertiser","subids","tagSub","filterTag","stat","subid","user","fullname","stat_1","startsWith","stat_2","endsWith","stat_3","rubiStats","helperRubiSummary","groupRubiData","reduce","r","o","key","Object","assign","parseFloat","rubiOne","solexBCStats","helperSolexBCSummary","groupSolexBCData","solexbcOne","verizonStats","helperVerizonSummary","groupVerizonData","verizonOne","lyonStats","helperLyonsSummary","groupLyonsData","lyonOne","perionStats","helperPerionSummary","groupPerionData","perionOne","apptitudeStats","helperApptitudeSummary","groupApptitudeData","apptitudeOne","system1Stats","helperSystem1Summary","groupSystem1Data","system1One","companyId","row","console","log","table","rowDetail","toggleExpandRow","event","index","height","updateReportingFiltering","onDetailToggle","selector","templateUrl","styleUrls","routes","path","component","children","redirectTo","pathMatch","AdminReportingRoutingModule","forChild","imports","exports","AdminReportingModule","declarations","entryComponents","AllReportingComponent","ApptitudeComponent","apptitudeService","expanded","groupPublishFlag","getAllApptitudeStats","getChartMetrics","chartData","getSummaryMetrics","summaryMetrics","markForCheck","allStats","resStat","helperSummary","groupData","counter","clicks","cpc","ctr","impressions","searches","profit","publisherNet","group","allSummary","currentPercentPace","lastPercentPace","selectedPercentPace","summary","lastMonthStat","profitPace","twoLastMonthStat","prevSelectedStat","selectedStat","percentPace","selectedStartDate","selectedEndDate","groupProvider","backProvider","BingDirectComponent","HopkinsComponent","hopkinService","getAllHopkinStats","refreshTable","getHopkinStats","tagname","name","coverage","ppc","tq","ImgageAdvantageComponent","totalSearches","monetizedSearches","followOn","columns","prop","LyonsComponent","lyonService","filteredLyonStat","groupDateShowFlag","groupSubidShowFlag","getAllLyonStats","summaryMetricsData","testingRoute","subscribe","err","getAllStats","allstat","date","biddedCtr","biddedSearches","updateAllLyonStats","sortResponse","slice","sort","a","b","allChart","helperChart","resultChart","parseInt","revenuePerDayVal","datesOfRevenueVal","searchesPerDayVal","chartDataValue","resVal","metrics","keys","element","groupDate","groupSubid","backGroup","ManualSplitUpdateComponent","manualUpdateService","fb","authService","notification","reportProviderData","tagData","selectedTagData","reportUpdateTitle","selectedTagName","currentUser","currentUserValue","companySelected","getSelectedCompanyLocalStorage","getAllTags","manaulUpFG","reportType","required","preSelectValue","preSetDateRanges","getDateRanges","selectedRange","preSelectDates","getPreSetDateRange","updateDatePickerRange","resData","value","_id","viewValue","getOneCompany","patchValue","toDate","selection","dateFormat","utc","startOf","format","endOf","subtract","typeName","toLowerCase","replace","letter","toUpperCase","valid","addControl","updateManualSplit","checkExist","isObjectEmpty","showSuccess","showWarning","obj","onReportSubmit","handleReport","handleTag","changeDatePicker","onPreSetRangeSelectChange","ManualUpdateComponent","message","reportTypeValue","updateManualStats","MediaNetComponent","PerionComponent","perionService","getAllPerionStats","updateAllPerionStats","allStat","totalsearches","followon","allChartStat","RubiComponent","rubiService","getAllRubiStats","monetized_searches","SolexBcComponent","solexBCService","getAllSolexBCStats","then","error","System1Component","system1Service","getAllSystem1Stats","ThirdPartyComponent","revenueByDayArray","Array","from","Math","floor","random","searchesPerDay","setChartOptions","maxRevenue","maxSearches","daysArray","chartDom","document","getElementById","myChart","option","tooltip","trigger","axisPointer","type","crossStyle","color","toolbox","feature","dataView","show","readOnly","magicType","restore","saveAsImage","legend","data","xAxis","yAxis","min","max","interval","axisLabel","formatter","series","yAxisIndex","setOption","VerizonDirectComponent","verizonService","getAllVerizonStats","rn","biddedResults","API_ACCOUNTING_URL","apiUrl","AccountingService","http","get","params","providedIn","API_MANUAL_UPDATE_URL","ManualUpdateService","updateData","put"],"mappings":"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","file":"modules-admin-reporting-admin-reporting-module-es5.js","sourcesContent":["<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\n\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 30px; height: 500px\"\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [rows]=\"rows\"\n  [loadingIndicator]=\"loadingIndicator\">\n  <!-- Row Detail Template -->\n  <ngx-datatable-row-detail [rowHeight]=\"getDetailRowHeight\" (toggle)=\"onDetailToggle($event)\">\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\n      <div style=\"padding-left: 36px;\">\n        <div *ngFor=\"let report of row.reporting; let i = index;\">\n          <div style=\"display: flex;\">\n            <div style=\"min-width: 20%;\">\n              <span>{{ report }} : </span>\n            </div>\n            <div style=\"min-width: 80%;\">\n              <span>{{ row.everyrevenue[i] | currency: 'USD' }}</span>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <div style=\"padding-left: 36px; margin-top: 5px\">\n        <div style=\"display: flex;\">\n          <div style=\"min-width: 20%;\">\n            <strong style=\"font-size: 14px;\">Total : </strong>\n          </div>\n          <div style=\"min-width: 80%;\">\n            <strong style=\"font-size: 14px;\">{{ row.total | currency: 'USD' }}</strong>\n          </div>\n        </div>\n\n      </div>\n\n    </ng-template>\n  </ngx-datatable-row-detail>\n\n  <ngx-datatable-column [width]=\"30\" [resizeable]=\"false\" [sortable]=\"false\" [draggable]=\"false\"\n    [canAutoResize]=\"false\">\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\n      <a href=\"javascript:void(0)\" [class.datatable-icon-right]=\"!expanded\" [class.datatable-icon-down]=\"expanded\"\n        title=\"Expand/Collapse Row\" (click)=\"toggleExpandRow(row)\">\n      </a>\n    </ng-template>\n  </ngx-datatable-column>\n  <!-- PUBLISHER -->\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Publisher Name\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n</ngx-datatable>","import { Component, AfterViewInit, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { UsersService } from '../../../shared/service/users.service';\nimport { AccountingService } from 'src/app/shared/service/admin-stats/accounting.service';\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\nimport { CompanyManagementService } from 'src/app/modules/company-management/company-management.service';\n\n@Component({\n  selector: 'app-accounting',\n  templateUrl: './accounting.component.html',\n  styleUrls: ['./accounting.component.scss']\n})\nexport class AccountingComponent implements AfterViewInit {\n\n  selectedCompany: any;\n  @ViewChild('expandableTable') table: any;\n  rows: any = [];\n  loadingIndicator = true;\n  range = {\n    startDate: '',\n    endDate: '',\n  };\n  allRubiStats: any = [];\n  allLyonStats: any = [];\n  allPerionStats: any = [];\n  allSystem1Stats: any = [];\n  allVerizonStats: any = [];\n  allSolexBCStats: any = [];\n  allApptitudeStats: any = [];\n  tagList: any = [];\n  LyonData: any;\n  PerionData: any;\n  RubiData: any;\n  System1Data: any;\n  VerizonData: any;\n  SolexBCData: any;\n  ApptitudeData: any;\n  tempStatData: any = [];\n  tempUpdateStatData: any = [];\n  reportTypeData: any = [];\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private userService: UsersService,\n    private accountingService: AccountingService,\n    private tagService: TagManagementService,\n    private companyService: CompanyManagementService,\n  ) {\n    this.selectedCompany = this.getSelectedCompanyStored();\n  }\n\n  async ngAfterViewInit() {\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\n    this.reportTypeData = await this.getReportingProviderList();\n    this.rows = [];\n    this.tempStatData = [];\n    this.PerionData = await this.getPerionStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.LyonData = await this.getLyonStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.RubiData = await this.getRubiStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    \n    this.ApptitudeData = await this.getApptitudeStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.SolexBCData = await this.getSolexBCStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n\n    this.VerizonData = await this.getVerizonDirectStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.System1Data = await this.getSystem1Stats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n\n    if (this.reportTypeData.includes('perion')) {\n      this.tempStatData = this.tempStatData.concat(this.PerionData);\n    }\n    if (this.reportTypeData.includes('lyons')) {\n      this.tempStatData = this.tempStatData.concat(this.LyonData);\n    }\n    if (this.reportTypeData.includes('rubi')) {\n      this.tempStatData = this.tempStatData.concat(this.RubiData);\n    }\n    if (this.reportTypeData.includes('apptitude')) {\n      this.tempStatData = this.tempStatData.concat(this.ApptitudeData);\n    }\n\n    if (this.reportTypeData.includes('solex-bc')) {\n      this.tempStatData = this.tempStatData.concat(this.SolexBCData);\n    }\n    if (this.reportTypeData.includes('verizon-direct')) {\n      this.tempStatData = this.tempStatData.concat(this.VerizonData);\n    }\n    if (this.reportTypeData.includes('verizon-direct')) {\n      this.tempStatData = this.tempStatData.concat(this.System1Data);\n    }\n    const result = [];\n\n    this.tempStatData.forEach((object: { publisher: any; reporting: any[]; revenue: any; everyrevenue: string[]; total: any; }) => {\n      const existing = result.filter((item) => item.publisher == object.publisher);\n      if (existing.length) {\n        const existingIndex = result.indexOf(existing[0]);\n        result[existingIndex].reporting = result[existingIndex].reporting.concat(object.reporting);\n        result[existingIndex].everyrevenue = result[existingIndex].everyrevenue.concat(String(object.revenue));\n        result[existingIndex].total = result[existingIndex].total + object.revenue;\n      } else {\n        if (typeof object.reporting == 'string') object.reporting = [object.reporting];\n        if (typeof object.revenue == 'number') {\n          object.everyrevenue = [String(object.revenue)];\n          object.total = object.revenue;\n        }\n        result.push(object);\n      }\n    });\n\n    for(var resultData of result) {\n      \n      resultData.detailHeight = (resultData.reporting.length + 1) * 30;\n    }\n    this.rows = result;\n\n    this.loadingIndicator = false;\n    this.cdr.detectChanges();\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyStored() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  public async updateReportingFiltering(range: any) {\n    this.loadingIndicator = true;\n    this.range = range;\n    this.rows = [];\n    this.tempUpdateStatData = [];\n    var perionUpData = [];\n    var lyonsUpData = [];\n    var rubiUpData = [];\n    var apptitudeUpData = [];\n    var solexBCUpData = [];\n    var verizonUpData = [];\n    var system1UpData = [];\n    perionUpData = await this.getPerionStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    lyonsUpData = await this.getLyonStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    rubiUpData = await this.getRubiStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    \n    apptitudeUpData = await this.getApptitudeStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    solexBCUpData = await this.getSolexBCStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    verizonUpData = await this.getVerizonDirectStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    system1UpData = await this.getSystem1Stats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    if (this.reportTypeData.includes('perion')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(perionUpData);\n    }\n    if (this.reportTypeData.includes('lyons')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(lyonsUpData);\n    }\n    if (this.reportTypeData.includes('rubi')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(rubiUpData);\n    }\n    if (this.reportTypeData.includes('apptitude')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(apptitudeUpData);\n    }\n\n    if (this.reportTypeData.includes('solex-bc')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(solexBCUpData);\n    }\n    if (this.reportTypeData.includes('verizon-direct')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(verizonUpData);\n    }\n    if (this.reportTypeData.includes('system1')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(system1UpData);\n    }\n    const result = [];\n\n    this.tempUpdateStatData.forEach((object: { publisher: any; reporting: any[]; revenue: any; everyrevenue: string[]; total: any; }) => {\n      const existing = result.filter((item) => item.publisher == object.publisher);\n      if (existing.length) {\n        const existingIndex = result.indexOf(existing[0]);\n        result[existingIndex].reporting = result[existingIndex].reporting.concat(object.reporting);\n        result[existingIndex].everyrevenue = result[existingIndex].everyrevenue.concat(String(object.revenue));\n        result[existingIndex].total = result[existingIndex].total + object.revenue;\n      } else {\n        if (typeof object.reporting == 'string') object.reporting = [object.reporting];\n        if (typeof object.revenue == 'number') {\n          object.everyrevenue = [String(object.revenue)];\n          object.total = object.revenue;\n        }\n        result.push(object);\n      }\n    });\n    for(var resultData of result) {\n      resultData.detailHeight = (resultData.reporting.length + 1) * 30;\n    }\n    this.rows = result;\n    this.loadingIndicator = false;\n    this.cdr.detectChanges();\n  }\n\n  //get Report Providers in Current Company\n  async getReportingProviderList() {\n    if (this.selectedCompany) {\n      try {\n        const res = await this.companyService.getReportCompany(this.selectedCompany.split('/')[1]).toPromise();\n        var providerList = [];\n        res.reportingProviders.map(report => {\n          providerList.push(report.reportingProvider);\n        });\n        return providerList;\n      } catch (error) {\n        return error;\n      };\n    }\n  }\n\n  async getRubiStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getRubiStats(company, startDate, endDate).toPromise();\n    this.allRubiStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"rubi\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allRubiStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Rubi\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allRubiStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Rubi\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allRubiStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Rubi\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allRubiStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Rubi\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var rubiStats = [];\n    var helperRubiSummary = {};\n    if (this.allRubiStats.length > 0) {\n      var groupRubiData = this.allRubiStats.reduce(function(r, o) {\n        var key = o.publisher;\n        if(!helperRubiSummary[key]) {\n          helperRubiSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperRubiSummary[key]);\n        } else {\n          helperRubiSummary[key].revenue += parseFloat(o.revenue);\n        } \n        return r;\n      }, []);\n      groupRubiData.map((rubiOne: any) => {\n        rubiStats.push({\n          publisher: rubiOne.publisher ? rubiOne.publisher : \"No Publisher\",\n          reporting: rubiOne.reporting ? rubiOne.reporting : \"No Reporting\",\n          revenue: rubiOne.revenue\n        });\n      });\n    }\n\n    return rubiStats;\n  }\n\n  async getSolexBCStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getSolexBCStats(company, startDate, endDate).toPromise();\n    this.allSolexBCStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"solex-bc\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allSolexBCStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Solex BC\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allSolexBCStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Solex BC\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allSolexBCStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Solex BC\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allSolexBCStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Solex BC\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var solexBCStats = [];\n    var helperSolexBCSummary = {}\n    if (this.allSolexBCStats.length > 0) {\n      var groupSolexBCData = this.allSolexBCStats.reduce(function(r, o) {\n        var key = o.publisher;\n        if(!helperSolexBCSummary[key]) {\n          helperSolexBCSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperSolexBCSummary[key]);\n        } else {\n          helperSolexBCSummary[key].revenue += parseFloat(o.revenue);\n        } \n        return r;\n      }, []);\n      groupSolexBCData.map((solexbcOne: any) => {\n        solexBCStats.push({\n          publisher: solexbcOne.publisher ? solexbcOne.publisher : \"No Publisher\",\n          reporting: solexbcOne.reporting ? solexbcOne.reporting : \"No Reporting\",\n          revenue: solexbcOne.revenue\n        });\n      });\n      \n    }\n\n    return solexBCStats;\n  }\n\n  async getVerizonDirectStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getVerizonDirectStats(company, startDate, endDate).toPromise();\n    this.allVerizonStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"verizon-direct\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allVerizonStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Verizon Direct\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allVerizonStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Verizon Direct\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allVerizonStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Verizon Direct\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allVerizonStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Verizon Direct\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var verizonStats = [];\n    var helperVerizonSummary = {};\n    if (this.allVerizonStats.length > 0) {\n      var groupVerizonData = this.allVerizonStats.reduce(function(r, o) {\n        var key = o.publisher;\n        if(!helperVerizonSummary[key]) {\n          helperVerizonSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperVerizonSummary[key]);\n        } else {\n          helperVerizonSummary[key].revenue += parseFloat(o.revenue);\n        } \n        return r;\n      }, []);\n      groupVerizonData.map((verizonOne: any) => {\n        verizonStats.push({\n          publisher: verizonOne.publisher ? verizonOne.publisher : \"No Publisher\",\n          reporting: verizonOne.reporting ? verizonOne.reporting : \"No Reporting\",\n          revenue: verizonOne.revenue\n        });\n      });\n      \n    }\n\n    return verizonStats;\n  }\n\n  async getLyonStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getLyonStats(company, startDate, endDate).toPromise();\n    this.allLyonStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"lyons\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allLyonStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Lyons\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allLyonStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Lyons\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allLyonStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Lyons\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allLyonStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Lyons\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var lyonStats = [];\n    var helperLyonsSummary = {}\n    if (this.allLyonStats.length > 0) {\n      var groupLyonsData = this.allLyonStats.reduce(function(r, o) {\n        var key = o.publisher;\n        if(!helperLyonsSummary[key]) {\n          helperLyonsSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperLyonsSummary[key]);\n        } else {\n          helperLyonsSummary[key].revenue += parseFloat(o.revenue);\n        } \n        return r;\n      }, []);\n      groupLyonsData.map((lyonOne: any) => {\n        lyonStats.push({\n          publisher: lyonOne.publisher ? lyonOne.publisher : \"No Publisher\",\n          reporting: lyonOne.reporting ? lyonOne.reporting : \"No Reporting\",\n          revenue: lyonOne.revenue\n        });\n      });\n      \n    }\n\n    return lyonStats;\n  }\n\n  async getPerionStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getPerionStats(company, startDate, endDate).toPromise();\n    this.allPerionStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"perion\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allPerionStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Perion\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allPerionStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Perion\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allPerionStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Perion\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allPerionStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Perion\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var perionStats = [];\n    var helperPerionSummary = {};\n\n    if (this.allPerionStats.length > 0) {\n      var groupPerionData = this.allPerionStats.reduce(function(r, o) {\n        var key = o.publisher;\n        if(!helperPerionSummary[key]) {\n          helperPerionSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperPerionSummary[key]);\n        } else {\n          helperPerionSummary[key].revenue += parseFloat(o.revenue);\n        } \n        return r;\n      }, []);\n      groupPerionData.map((perionOne: any) => {\n        perionStats.push({\n          publisher: perionOne.publisher ? perionOne.publisher : \"No Publisher\",\n          reporting: perionOne.reporting ? perionOne.reporting : \"No Reporting\",\n          revenue: perionOne.revenue\n        });\n      });\n      \n    }\n    return perionStats;\n  }\n\n  async getApptitudeStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getApptitudeStats(company, startDate, endDate).toPromise();\n    this.allApptitudeStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"apptitude\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allApptitudeStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Apptitude\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allApptitudeStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Apptitude\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allApptitudeStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Apptitude\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allApptitudeStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Apptitude\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var apptitudeStats = [];\n    var helperApptitudeSummary = {};\n    if (this.allApptitudeStats.length > 0) {\n      var groupApptitudeData = this.allApptitudeStats.reduce(function(r, o) {\n        var key = o.publisher;\n        if(!helperApptitudeSummary[key]) {\n          helperApptitudeSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperApptitudeSummary[key]);\n        } else {\n          helperApptitudeSummary[key].revenue += parseFloat(o.revenue);\n        } \n        return r;\n      }, []);\n      groupApptitudeData.map((apptitudeOne: any) => {\n        apptitudeStats.push({\n          publisher: apptitudeOne.publisher ? apptitudeOne.publisher : \"No Publisher\",\n          reporting: apptitudeOne.reporting ? apptitudeOne.reporting : \"No Reporting\",\n          revenue: apptitudeOne.revenue\n        });\n      });\n      \n    }\n    // console.log(this.allApptitudeStats, \"dfsdfsdf\")\n\n    return apptitudeStats;\n  }\n\n  async getSystem1Stats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getSystem1Stats(company, startDate, endDate).toPromise();\n    this.allSystem1Stats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"system1\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allSystem1Stats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"System1\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allSystem1Stats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"System1\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allSystem1Stats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"System1\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allSystem1Stats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"System1\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var system1Stats = [];\n    var helperSystem1Summary = {};\n    if (this.allSystem1Stats.length > 0) {\n      var groupSystem1Data = this.allSystem1Stats.reduce(function(r, o) {\n        var key = o.publisher;\n        if(!helperSystem1Summary[key]) {\n          helperSystem1Summary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperSystem1Summary[key]);\n        } else {\n          helperSystem1Summary[key].revenue += parseFloat(o.revenue);\n        } \n        return r;\n      }, []);\n      groupSystem1Data.map((system1One: any) => {\n        system1Stats.push({\n          publisher: system1One.publisher ? system1One.publisher : \"No Publisher\",\n          reporting: system1One.reporting ? system1One.reporting : \"No Reporting\",\n          revenue: system1One.revenue\n        });\n      });\n      \n    }\n\n    return system1Stats;\n  }\n\n  //get Tags with selected company\n  async getCompanyTags(selectedCompany: string) {\n    var companyId = selectedCompany.split(\"/\")[1];\n    try {\n      const response = await this.tagService.getCompanyTags(companyId).toPromise();\n      return response;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  toggleExpandRow(row: any) {\n    console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event: any) {\n    console.log('Detail Toggled', event);\n  }\n\n  getDetailRowHeight(row: any, index: number): number {\n    let height;\n    if (row) {\n      height = row.detailHeight;\n    }\n    console.log(height, \"-------\")\n    return height;\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllReportingComponent } from './all-reporting/all-reporting.component';\r\nimport { ApptitudeComponent } from './apptitude/apptitude.component';\r\nimport { HopkinsComponent } from './hopkins/hopkins.component';\r\nimport { ImgageAdvantageComponent } from './imgage-advantage/imgage-advantage.component';\r\nimport { MediaNetComponent } from './media-net/media-net.component';\r\nimport { PerionComponent } from './perion/perion.component';\r\nimport { AdminReportingComponent } from './admin-reporting.component';\r\nimport { ThirdPartyComponent } from './third-party/third-party.component';\r\nimport { BingDirectComponent } from './bing-direct/bing-direct.component';\r\nimport { LyonsComponent } from './lyons/lyons.component';\r\nimport { RubiComponent } from './rubi/rubi.component';\r\nimport { VerizonDirectComponent } from './verizon-direct/verizon-direct.component';\r\nimport { System1Component } from './system1/system1.component';\r\nimport { ManualUpdateComponent } from './manual-update/manual-update.component';\r\nimport { ManualSplitUpdateComponent } from './manual-split-update/manual-split-update.component';\r\nimport { SolexBcComponent } from './solex-bc/solex-bc.component';\r\nimport { AccountingComponent } from './accounting/accounting.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminReportingComponent,\r\n    children: [\r\n      {\r\n        path: 'accounting',\r\n        component: AccountingComponent,\r\n      },\r\n      {\r\n        path: 'perion',\r\n        component: PerionComponent,\r\n      },\r\n      {\r\n        path: 'image-advantage',\r\n        component: ImgageAdvantageComponent,\r\n      },\r\n      {\r\n        path: 'hopkins',\r\n        component: HopkinsComponent,\r\n      },\r\n      {\r\n        path: 'apptitude',\r\n        component: ApptitudeComponent,\r\n      },\r\n      {\r\n        path: 'media-net',\r\n        component: MediaNetComponent,\r\n      },\r\n      {\r\n        path: 'bing-direct',\r\n        component: BingDirectComponent,\r\n      },\r\n      {\r\n        path: 'lyons',\r\n        component: LyonsComponent,\r\n      },\r\n      {\r\n        path: 'rubi',\r\n        component: RubiComponent,\r\n      },\r\n      {\r\n        path: 'system1',\r\n        component: System1Component,\r\n      },\r\n      {\r\n        path: 'verizon-direct',\r\n        component: VerizonDirectComponent,\r\n      },\r\n      {\r\n        path: 'third-party',\r\n        component: ThirdPartyComponent,\r\n      },\r\n      {\r\n        path: 'solex-bc',\r\n        component: SolexBcComponent,\r\n      },\r\n      {\r\n        path: 'manual-stat-update',\r\n        component: ManualUpdateComponent,\r\n      },\r\n      {\r\n        path: 'manual-split-update',\r\n        component: ManualSplitUpdateComponent,\r\n      },\r\n      { path: '', redirectTo: '', pathMatch: 'full' },\r\n      { path: '**', redirectTo: '', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminReportingRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminReportingRoutingModule } from './admin-reporting-routing.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PerionComponent } from './perion/perion.component';\r\nimport { ImgageAdvantageComponent } from './imgage-advantage/imgage-advantage.component';\r\nimport { HopkinsComponent } from './hopkins/hopkins.component';\r\nimport { ApptitudeComponent } from './apptitude/apptitude.component';\r\nimport { AllReportingComponent } from './all-reporting/all-reporting.component';\r\nimport { MediaNetComponent } from './media-net/media-net.component';\r\nimport { ThirdPartyComponent } from './third-party/third-party.component';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatNativeDateModule, MatOptionModule } from '@angular/material/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { BingDirectComponent } from './bing-direct/bing-direct.component';\r\nimport { LyonsComponent } from './lyons/lyons.component';\r\nimport { RubiComponent } from './rubi/rubi.component';\r\nimport { VerizonDirectComponent } from './verizon-direct/verizon-direct.component';\r\nimport { ManualUpdateComponent } from './manual-update/manual-update.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\nimport { ManualSplitUpdateComponent } from './manual-split-update/manual-split-update.component';\r\nimport { System1Component } from './system1/system1.component';\r\nimport { SolexBcComponent } from './solex-bc/solex-bc.component';\r\nimport { AccountingComponent } from './accounting/accounting.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PerionComponent,\r\n    ImgageAdvantageComponent,\r\n    HopkinsComponent,\r\n    ApptitudeComponent,\r\n    AllReportingComponent,\r\n    MediaNetComponent,\r\n    ThirdPartyComponent,\r\n    BingDirectComponent,\r\n    LyonsComponent,\r\n    RubiComponent,\r\n    VerizonDirectComponent,\r\n    ManualUpdateComponent,\r\n    ManualSplitUpdateComponent,\r\n    System1Component,\r\n    SolexBcComponent,\r\n    AccountingComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    AdminReportingRoutingModule,\r\n    NgxDatatableModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatListModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatSelectModule,\r\n    SharedModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    InlineSVGModule\r\n  ],\r\n  entryComponents: [],\r\n})\r\nexport class AdminReportingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-all-reporting',\r\n  templateUrl: './all-reporting.component.html',\r\n  styleUrls: ['./all-reporting.component.scss']\r\n})\r\nexport class AllReportingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>all-reporting works!</p>\r\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\r\n\r\n<!--Chart Data Show-->\r\n<app-reporting-revenue-chart *ngIf=\"chartData\" [chartData]=\"chartData\"></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-3\" (click)=\"groupProvider()\">\r\n    Group\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-3\" (click)=\"backProvider()\">\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\">\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column [width]=\"50\" [resizeable]=\"false\" [sortable]=\"false\" [draggable]=\"false\"\r\n    [canAutoResize]=\"false\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n      <a href=\"javascript:void(0)\" [class.datatable-icon-right]=\"!expanded\" [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\" (click)=\"toggleExpandRow(row)\">\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"publisher\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Impressions -->\r\n  <ngx-datatable-column name=\"impressions\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Impressions\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CPC -->\r\n  <ngx-datatable-column name=\"cpc\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CPC\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number: '1.2-2' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number: '1.2-2' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"split\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher Net -->\r\n  <ngx-datatable-column name=\"publisherNet\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher Net\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PROFIT -->\r\n  <ngx-datatable-column name=\"profit\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Profit\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>","import { Component, AfterViewInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport * as echarts from 'echarts';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { ApptitudeService } from 'src/app/shared/service/admin-stats/apptitude.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { TagManagementService } from '../../tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-apptitude',\r\n  templateUrl: './apptitude.component.html',\r\n  styleUrls: ['./apptitude.component.scss'],\r\n})\r\nexport class ApptitudeComponent implements AfterViewInit {\r\n  //Chart setup variables\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  @ViewChild('expandableTable') table: any;\r\n  chartData: ChartDataInterface;\r\n\r\n  expanded: any = {};\r\n  allStats: any[];\r\n  summaryMetrics: any;\r\n  tagList: any = [];\r\n  groupPublishFlag = false;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private apptitudeService: ApptitudeService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyStored();\r\n  }\r\n\r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n    this.rows = [];\r\n\r\n    this.rows = await this.getAllApptitudeStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany,this.range.startDate, this.range.endDate);\r\n   \r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  async getAllApptitudeStats(company, startDate, endDate) {\r\n    const response = await this.apptitudeService.getApptitudeStats(company, startDate, endDate).toPromise();\r\n    console.log('getApptitudeStats() response:', response);\r\n    this.loadingIndicator = false;\r\n    this.allStats = response.stats;\r\n    this.allStats.map(function (resStat) {\r\n      resStat.publisher = \"No Publisher\";\r\n    });\r\n    for (var tagL of this.tagList) {\r\n      if (tagL.tag.advertiser == \"apptitude\") {\r\n        for (var tagSub of tagL.tag.subids) {\r\n          if (tagSub.filterTag == \"Contains\") {\r\n            this.allStats.map(stat => {\r\n              if (stat.subid.includes(tagSub.subid)) {\r\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"StartsWith\") {\r\n            this.allStats.map(stat_1 => {\r\n              if (stat_1.subid.startsWith(tagSub.subid)) {\r\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"EndsWith\") {\r\n            this.allStats.map(stat_2 => {\r\n              if (stat_2.subid.endsWith(tagSub.subid)) {\r\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"ExactValue\") {\r\n            this.allStats.map(stat_3 => {\r\n              if (stat_3.subid == tagSub.subid) {\r\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n              }\r\n            });\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return this.allStats;\r\n    \r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyStored() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  public async updateReportingFiltering(range) {\r\n    this.range = range;\r\n    \r\n    this.rows = await this.getAllApptitudeStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany,this.range.startDate, this.range.endDate);\r\n    this.groupPublishFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStats.reduce(function(r, o) {\r\n        var key = o.publisher;\r\n        \r\n        if(!helperSummary[key]) {\r\n          helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n          helperSummary[key].counter = 1;\r\n          r.push(helperSummary[key]);\r\n        } else {\r\n          helperSummary[key].clicks += parseFloat(o.clicks);\r\n          helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n          helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n          helperSummary[key].impressions += parseFloat(o.impressions ? o.impressions : 0);\r\n          helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n          helperSummary[key].revenue += parseFloat(o.revenue);\r\n          helperSummary[key].split += parseFloat(o.split);\r\n          helperSummary[key].profit += parseFloat(o.profit);\r\n          helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n          helperSummary[key].counter++;\r\n        } \r\n        return r;\r\n      }, []);\r\n      for (var group of groupData) {\r\n        group.split = group.split / group.counter;\r\n        group.cpc = group.cpc / group.counter;\r\n        group.ctr = group.ctr / group.counter;\r\n\r\n      }\r\n      this.rows = groupData;\r\n      this.groupPublishFlag = true;\r\n    this.cdr.markForCheck();\r\n  }\r\n  backProvider() {\r\n    this.rows = this.allStats;\r\n    this.groupPublishFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  async getChartMetrics(company, startDate, endDate) {\r\n    try {\r\n      const response = await this.apptitudeService\r\n        .getChartMetrics(company, startDate, endDate)\r\n        .toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n  async getSummaryMetrics(company: any, startDate: string, endDate: string) {\r\n    const response = await this.apptitudeService.getSummaryMetrics(this.selectedCompany, startDate, endDate).toPromise();\r\n    var allSummary = {};\r\n    var currentPercentPace = 0;\r\n    var lastPercentPace = 0;\r\n    var selectedPercentPace = 0;\r\n    if (response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n      currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n    }\r\n    if (response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n      lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n    }\r\n    if (response.summary[0].prevSelectedStat[0].profitPace != 0) {\r\n      selectedPercentPace = (response.summary[0].selectedStat[0].profitPace - response.summary[0].prevSelectedStat[0].profitPace) / (response.summary[0].prevSelectedStat[0].profitPace) * 100;\r\n    }\r\n    response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n    response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n    response.summary[0].selectedStat[0].percentPace = selectedPercentPace;\r\n    response.summary[0].selectedStat[0].selectedStartDate = startDate;\r\n    response.summary[0].selectedStat[0].selectedEndDate = endDate;\r\n    allSummary['summary'] = response.summary;\r\n    return allSummary;\r\n  }\r\n\r\n  //get Tags with selected company\r\n  async getCompanyTags(selectedCompany: string) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    try {\r\n      const response = await this.tagService.getCompanyTags(companyId).toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bing-direct',\r\n  templateUrl: './bing-direct.component.html',\r\n  styleUrls: ['./bing-direct.component.scss']\r\n})\r\nexport class BingDirectComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>bing-direct works!</p>\r\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\r\n\r\n<!--Chart Data Show-->\r\n<app-reporting-revenue-chart *ngIf=\"chartData\" [chartData]=\"chartData\"></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-3\" (click)=\"groupProvider()\">\r\n    Group\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-3\" (click)=\"backProvider()\">\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\">\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column [width]=\"30\" [resizeable]=\"false\" [sortable]=\"false\" [draggable]=\"false\"\r\n    [canAutoResize]=\"false\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n      <a href=\"javascript:void(0)\" [class.datatable-icon-right]=\"!expanded\" [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\" (click)=\"toggleExpandRow(row)\">\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER -->\r\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Coverage -->\r\n  <ngx-datatable-column name=\"coverage\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Coverage\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PPC -->\r\n  <ngx-datatable-column name=\"ppc\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      PPC\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TQ -->\r\n  <ngx-datatable-column name=\"tq\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      TQ\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher Net -->\r\n  <ngx-datatable-column name=\"publisherNet\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher Net\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PROFIT -->\r\n  <ngx-datatable-column name=\"profit\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Profit\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n\r\n</ngx-datatable>","import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { HopkinService } from 'src/app/shared/service/admin-stats/hopkin.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { TagManagementService } from '../../tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-hopkins',\r\n  templateUrl: './hopkins.component.html',\r\n  styleUrls: ['./hopkins.component.scss'],\r\n})\r\nexport class HopkinsComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  @ViewChild('expandableTable') table: any;\r\n  chartData: ChartDataInterface;\r\n  groupPublishFlag = false;\r\n  expanded: any = {};\r\n  allStats: any[];\r\n  summaryMetrics: any;\r\n  tagList: any = [];\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private hopkinService: HopkinService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyStored();\r\n  }\r\n\r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n    this.rows = [];\r\n    this.rows = await this.getAllHopkinStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\r\n    this.refreshTable();\r\n  }\r\n  async getAllHopkinStats(company: any, startDate: string, endDate: string) {\r\n    const response = await this.hopkinService.getHopkinStats(company, startDate, endDate).toPromise();\r\n    console.log('response:', response);\r\n    this.loadingIndicator = false;\r\n    this.allStats = response.stats;\r\n    this.allStats.map(function (resStat) {\r\n      resStat.publisher = \"No Publisher\";\r\n      resStat.tagname = \"No Tag\";\r\n    });\r\n    for (var tagL of this.tagList) {\r\n      if (tagL.tag.advertiser == \"hopkins\") {\r\n        for (var tagSub of tagL.tag.subids) {\r\n          if (tagSub.filterTag == \"Contains\") {\r\n\r\n            this.allStats.map(stat => {\r\n              if (stat.subid.includes(tagSub.subid)) {\r\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"StartsWith\") {\r\n            this.allStats.map(stat_1 => {\r\n              if (stat_1.subid.startsWith(tagSub.subid)) {\r\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_1.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"EndsWith\") {\r\n            this.allStats.map(stat_2 => {\r\n              if (stat_2.subid.endsWith(tagSub.subid)) {\r\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_2.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"ExactValue\") {\r\n            this.allStats.map(stat_3 => {\r\n              if (stat_3.subid == tagSub.subid) {\r\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_3.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return this.allStats;\r\n  }\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStats.reduce(function (r, o) {\r\n      var key = o.publisher;\r\n\r\n      if (!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n        helperSummary[key].coverage += parseFloat(o.coverage ? o.coverage : 0);\r\n        helperSummary[key].ppc += parseFloat(o.ppc ? o.ppc : 0);\r\n        helperSummary[key].tq += parseFloat(o.tq ? o.tq : 0);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].counter++;\r\n      }\r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupPublishFlag = true;\r\n    this.cdr.markForCheck();\r\n  }\r\n  backProvider() {\r\n    this.rows = this.allStats;\r\n    this.groupPublishFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n  public async updateReportingFiltering(range: { startDate: string; endDate: string; }) {\r\n    this.range = range;\r\n    this.rows = await this.getAllHopkinStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\r\n    this.groupPublishFlag = false;\r\n    this.refreshTable();\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyStored() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  toggleExpandRow(row: any) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event: any) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  //get Tags with selected company\r\n  async getCompanyTags(selectedCompany: string) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    try {\r\n      const response = await this.tagService.getCompanyTags(companyId).toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  async getChartMetrics(company: any, startDate: string, endDate: string) {\r\n    try {\r\n      const response = await this.hopkinService\r\n        .getChartMetrics(company, startDate, endDate)\r\n        .toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n  async getSummaryMetrics(company: any, startDate: string, endDate: string) {\r\n    const response = await this.hopkinService.getSummaryMetrics(company, startDate, endDate).toPromise();\r\n    var allSummary = {};\r\n    var currentPercentPace = 0;\r\n    var lastPercentPace = 0;\r\n    var selectedPercentPace = 0;\r\n    if (response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n      currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n    }\r\n    if (response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n      lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n    }\r\n    if (response.summary[0].prevSelectedStat[0].profitPace != 0) {\r\n      selectedPercentPace = (response.summary[0].selectedStat[0].profitPace - response.summary[0].prevSelectedStat[0].profitPace) / (response.summary[0].prevSelectedStat[0].profitPace) * 100;\r\n    }\r\n    response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n    response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n    response.summary[0].selectedStat[0].percentPace = selectedPercentPace;\r\n    response.summary[0].selectedStat[0].selectedStartDate = startDate;\r\n    response.summary[0].selectedStat[0].selectedEndDate = endDate;\r\n    allSummary['summary'] = response.summary;\r\n    return allSummary;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-imgage-advantage',\r\n  templateUrl: './imgage-advantage.component.html',\r\n  styleUrls: ['./imgage-advantage.component.scss'],\r\n})\r\nexport class ImgageAdvantageComponent implements OnInit {\r\n  rows = [\r\n    {\r\n      name: 'Greg',\r\n      tag: 'YHS Organic',\r\n      totalSearches: '536412',\r\n      monetizedSearches: '501235',\r\n      revenue: '52623',\r\n      clicks: 50351,\r\n      followOn: '13%',\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Month to Date Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $103,201.26</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Revenue Pace: $131,285.19</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $21,109.59</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit Pace: $173,121.45</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +27%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Last Month Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $113,542.23</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $14,121.39</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +11%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"followOn\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Follow On\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\r\n\r\n<app-reporting-revenue-chart *ngIf=\"chartData\" [chartData]=\"chartData\"></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetricsData\" [summaryMetricsData]=\"summaryMetricsData\"></app-summary-metrics>\r\n\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-1\" (click)=\"groupDate()\">\r\n    Group by Date\r\n  </button>\r\n  <button class=\"btn btn-sm btn-success mx-1\" (click)=\"groupProvider()\">\r\n    Group by Publisher\r\n  </button>\r\n  <button class=\"btn btn-sm btn-info mx-1\" (click)=\"groupSubid()\">\r\n    Group by Subid\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-1\" (click)=\"backGroup()\">\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\">\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column [width]=\"30\" [resizeable]=\"false\" [sortable]=\"false\" [draggable]=\"false\"\r\n    [canAutoResize]=\"false\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n      <a href=\"javascript:void(0)\" [class.datatable-icon-right]=\"!expanded\" [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\" (click)=\"toggleExpandRow(row)\">\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" *ngIf=\"!groupPublishFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher -->\r\n  <ngx-datatable-column name=\"publisher\" *ngIf=\"!groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  <!-- BID SEARCHES -->\r\n  <ngx-datatable-column name=\"biddedSearches\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Bid Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- biddedCTR -->\r\n  <ngx-datatable-column name=\"biddedCtr\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      BiddedCTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number: '2.2-2') || (0 | number: '2.2-2') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{\r\n        (value | number: '2.2-2') || (0 | number: '2.2-2')\r\n        }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher Net -->\r\n  <ngx-datatable-column name=\"publisherNet\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher Net\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PROFIT -->\r\n  <ngx-datatable-column name=\"profit\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Profit\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Split -->\r\n  <ngx-datatable-column name=\"split\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Spilt\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { LyonService } from 'src/app/shared/service/admin-stats/lyon.service';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-lyons',\r\n  templateUrl: './lyons.component.html',\r\n  styleUrls: ['./lyons.component.scss']\r\n})\r\nexport class LyonsComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  summary = {\r\n    revenue: 0,\r\n    profit: 0,\r\n  };\r\n  loadingIndicator = true;\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n\r\n  tagList: any = [];\r\n  //Sends chartData to ReportingRevenueChartComponent\r\n  chartData: ChartDataInterface;\r\n\r\n  //Sends summaryMetrics to SummaryMetricsComponent\r\n  summaryMetricsData: any;\r\n  currentMonthData: any;\r\n  beforeMonthData: any;\r\n  twoBeforeMonthData: any;\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  allstat: any;\r\n  allChart: any;\r\n  filteredLyonStat: any[] = [];\r\n  groupPublishFlag = false;\r\n  groupDateShowFlag = false;\r\n  groupSubidShowFlag = false;\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor(\r\n    private lyonService: LyonService,\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n\r\n    this.rows = [];\r\n    this.rows = await this.getAllLyonStats(\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetricsData = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\r\n    this.refreshTable();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  async routeTester() {\r\n    console.log('Testing Route');\r\n    this.lyonService.testingRoute().subscribe((response) => {\r\n      console.log(response);\r\n    }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  //get Tags with selected company\r\n  async getCompanyTags(selectedCompany) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    try {\r\n      const response = await this.tagService.getCompanyTags(companyId).toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n  //get Stat all\r\n  async getAllLyonStats(startDate, endDate) {\r\n    try {\r\n      const response = await this.lyonService.getAllStats(startDate, endDate).toPromise();\r\n      this.loadingIndicator = false;\r\n      this.allstat = response;\r\n      this.allstat.map(function (resStat) {\r\n        resStat.publisher = \"No Publisher\";\r\n        resStat.tagname = \"No Tag\";\r\n      });\r\n      // var allLyonStat = [];\r\n      for (var tagL of this.tagList) {\r\n        if (tagL.tag.advertiser == \"lyons\") {\r\n          for (var tagSub of tagL.tag.subids) {\r\n            if (tagSub.filterTag == \"Contains\") {\r\n\r\n              this.allstat.map(stat => {\r\n                if (stat.subid.includes(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                  stat.tagname = tagL.tag.name;\r\n                }\r\n              });\r\n\r\n            } else if (tagSub.filterTag == \"StartsWith\") {\r\n              this.allstat.map(stat_1 => {\r\n                if (stat_1.subid.startsWith(tagSub.subid)) {\r\n                  stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                  stat_1.tagname = tagL.tag.name;\r\n                }\r\n              });\r\n\r\n            } else if (tagSub.filterTag == \"EndsWith\") {\r\n              this.allstat.map(stat_2 => {\r\n                if (stat_2.subid.endsWith(tagSub.subid)) {\r\n                  stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                  stat_2.tagname = tagL.tag.name;\r\n                }\r\n              });\r\n\r\n            } else if (tagSub.filterTag == \"ExactValue\") {\r\n              this.allstat.map(stat_3 => {\r\n                if (stat_3.subid == tagSub.subid) {\r\n                  stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                  stat_3.tagname = tagL.tag.name;\r\n                }\r\n              });\r\n\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n      return this.allstat;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n\r\n  }\r\n\r\n  groupDate() {\r\n    var helperSummary = {};\r\n    var groupData = this.allstat.reduce(function (r, o) {\r\n      var key = o.date;\r\n\r\n      if (!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n        helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n        helperSummary[key].biddedCtr += parseFloat(o.biddedCtr ? o.biddedCtr : 0);\r\n        helperSummary[key].biddedSearches += parseFloat(o.biddedSearches ? o.biddedSearches : 0);\r\n        helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].counter++;\r\n      }\r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n      group.biddedCtr = group.biddedCtr / group.counter;\r\n      group.ctr = group.ctr / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupPublishFlag = false;\r\n    this.groupDateShowFlag = true;\r\n    this.groupSubidShowFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  groupSubid() {\r\n    var helperSummary = {};\r\n    var groupData = this.allstat.reduce(function (r, o) {\r\n      var key = o.subid;\r\n\r\n      if (!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n        helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n        helperSummary[key].biddedCtr += parseFloat(o.biddedCtr ? o.biddedCtr : 0);\r\n        helperSummary[key].biddedSearches += parseFloat(o.biddedSearches ? o.biddedSearches : 0);\r\n        helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].counter++;\r\n      }\r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n      group.biddedCtr = group.biddedCtr / group.counter;\r\n      group.ctr = group.ctr / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupPublishFlag = false;\r\n    this.groupDateShowFlag = false;\r\n    this.groupSubidShowFlag = true;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allstat.reduce(function (r, o) {\r\n      var key = o.publisher;\r\n\r\n      if (!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n        helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n        helperSummary[key].biddedCtr += parseFloat(o.biddedCtr ? o.biddedCtr : 0);\r\n        helperSummary[key].biddedSearches += parseFloat(o.biddedSearches ? o.biddedSearches : 0);\r\n        helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].counter++;\r\n      }\r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n      group.biddedCtr = group.biddedCtr / group.counter;\r\n      group.ctr = group.ctr / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupPublishFlag = true;\r\n    this.groupDateShowFlag = false;\r\n    this.groupSubidShowFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n  backGroup() {\r\n    this.rows = this.allstat;\r\n    this.groupPublishFlag = false;\r\n    this.groupDateShowFlag = false;\r\n    this.groupSubidShowFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  updateAllLyonStats(company, startDate, endDate) {\r\n    this.lyonService\r\n      .updateAllLyonStats(company, startDate, endDate)\r\n      .subscribe((response) => {\r\n        console.log(response);\r\n      }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  public async updateReportingFiltering(range) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllLyonStats(\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetricsData = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\r\n    this.groupPublishFlag = false;\r\n    this.refreshTable();\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  async getSummaryMetrics(company: any, startDate: string, endDate: string) {\r\n    try {\r\n      const response = await this.lyonService.getSummaryMetrics(company, startDate, endDate).toPromise();\r\n      var allSummary = {};\r\n      var currentPercentPace = 0;\r\n      var lastPercentPace = 0;\r\n      var selectedPercentPace = 0;\r\n      if (response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n      }\r\n      if (response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n      }\r\n      if (response.summary[0].prevSelectedStat[0].profitPace != 0) {\r\n        selectedPercentPace = (response.summary[0].selectedStat[0].profitPace - response.summary[0].prevSelectedStat[0].profitPace) / (response.summary[0].prevSelectedStat[0].profitPace) * 100;\r\n      }\r\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n      response.summary[0].selectedStat[0].percentPace = selectedPercentPace;\r\n      response.summary[0].selectedStat[0].selectedStartDate = startDate;\r\n      response.summary[0].selectedStat[0].selectedEndDate = endDate;\r\n      allSummary['summary'] = response.summary;\r\n      return allSummary;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  async getChartMetrics(company, startDate, endDate) {\r\n    try {\r\n      const response = await this.lyonService.getAllStats(startDate, endDate).toPromise();\r\n      var sortResponse = response.slice().sort((a, b) => a.date - b.date);\r\n      this.allChart = sortResponse;\r\n      // var chartAllLyonStat = [];\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       chartAllLyonStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n      //       chartAllLyonStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //       chartAllLyonStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid == tagSub.subid ))\r\n      //       chartAllLyonStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     }\r\n      //   }\r\n      // }\r\n      //duplicated remove\r\n      // let filter_data = chartAllLyonStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      var helperChart = {};\r\n      // this.allChart.map(f =>{\r\n      //   f.revenue = parseFloat(f.revenue);\r\n      //   f.ctr = parseFloat(f.ctr);\r\n      //   f.searches = parseFloat(f.searches);\r\n      //   f.biddedCtr = parseFloat(f.biddedCTR);\r\n      // })\r\n      var resultChart = this.allChart.reduce(function (r, o) {\r\n        var key = o.date;\r\n        if (!helperChart[key]) {\r\n          helperChart[key] = Object.assign({}, o); // create a copy of o\r\n          r.push(helperChart[key]);\r\n        } else {\r\n          helperChart[key].searches += parseInt(o.searches);\r\n          if (o.revenue) {\r\n            helperChart[key].revenue += o.revenue;\r\n          }\r\n        }\r\n        return r;\r\n      }, []);\r\n\r\n      var revenuePerDayVal = [];\r\n      var datesOfRevenueVal = [];\r\n      var searchesPerDayVal = [];\r\n      var chartDataValue = {};\r\n      for (var resVal of resultChart) {\r\n        revenuePerDayVal.push(resVal.revenue);\r\n        datesOfRevenueVal.push(resVal.date);\r\n        searchesPerDayVal.push(resVal.searches);\r\n      }\r\n      chartDataValue['revenuePerDay'] = revenuePerDayVal;\r\n      chartDataValue['datesOfRevenue'] = datesOfRevenueVal;\r\n      chartDataValue['searchesPerDay'] = searchesPerDayVal;\r\n      return chartDataValue;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  combineSummaryMetrics(metrics) {\r\n    metrics.summary.keys.forEach((element) => {\r\n      this.summary.revenue += element.revenue;\r\n      this.summary.profit += element.revenue * ((100 - element.split) * 0.01);\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { ManualUpdateService } from 'src/app/shared/service/admin-stats/update.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\nimport { CompanyManagementService } from 'src/app/modules/company-management/company-management.service';\r\nimport * as moment from 'moment';\r\nimport { TagManagementService } from '../../tag-management/tag-management.service';\r\n\r\ninterface preSetDateRanges {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\ninterface PreSetDateRange {\r\n  startDate: string;\r\n  endDate: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-manual-split-update',\r\n  templateUrl: './manual-split-update.component.html',\r\n  styleUrls: ['./manual-split-update.component.scss']\r\n})\r\nexport class ManualSplitUpdateComponent implements OnInit {\r\n  manaulUpFG: FormGroup;\r\n  reportProviderData: any = [];\r\n  tagData: any =[];\r\n  selectedTagData: any =[];\r\n  reportUpdateTitle = 'Report Split Update'\r\n  selectedTagName = '';\r\n  preSetDateRanges: preSetDateRanges[];\r\n  range: FormGroup;\r\n  selectedRange: PreSetDateRange;\r\n\r\n  preSelectValue: String;\r\n\r\n  preSelectDates: any;\r\n  companySelected: any;\r\n  currentUser: any;\r\n\r\n  constructor(\r\n    private manualUpdateService: ManualUpdateService,\r\n    private fb: FormBuilder,\r\n    private companyService: CompanyManagementService,\r\n    private authService: AuthService,\r\n    private userService: UsersService,\r\n    private notification: NotificationService,\r\n    private tagService: TagManagementService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    this.currentUser = this.authService.currentUserValue;\r\n    this.companySelected = this.getSelectedCompanyLocalStorage();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getReportingProviderList();\r\n    this.getAllTags();\r\n    this.manaulUpFG = this.fb.group({\r\n      reportType: new FormControl('', Validators.required),\r\n      tag: new FormControl('', Validators.required),\r\n      preSelectValue: new FormControl('', Validators.required),\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required),\r\n    })\r\n    //Get the all PRESELECT ranges\r\n    this.preSetDateRanges = this.getDateRanges();\r\n    this.range = new FormGroup({\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required)\r\n    });\r\n\r\n    //Selected range of date picker\r\n    this.selectedRange = {\r\n      startDate: '',\r\n      endDate: '',\r\n    };\r\n\r\n    //Starting value of mat select\r\n    this.preSelectValue = 'last7days';\r\n\r\n    //Gets the true start and end date values in date format\r\n    this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\r\n\r\n    //Manually updates the mat date picker with new start and end dates\r\n    this.updateDatePickerRange(\r\n      this.preSelectDates.startDate,\r\n      this.preSelectDates.endDate\r\n    );\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  getAllTags() {\r\n    this.tagService.getAllTags().subscribe((response) => {\r\n      var resData = [];\r\n      if(this.companySelected) {\r\n        resData = response.filter(res => res.company[0]['_id'] == this.companySelected);\r\n      }\r\n      resData.map(res => {\r\n        this.tagData.push({\r\n          value: res._id,\r\n          viewValue: res.name,\r\n          advertiser: res.advertiser\r\n\r\n        })\r\n      });\r\n      this.selectedTagData = this.tagData;\r\n      this.cdr.detectChanges();\r\n    });\r\n    \r\n  }\r\n\r\n  handleTag(event: any) {\r\n    this.selectedTagName = this.tagData.filter((tag: { value: any; }) => tag.value == event.value)[0].viewValue;\r\n  }\r\n  //get report Provider List\r\n  getReportingProviderList() {\r\n    if (this.companySelected) {\r\n      this.companyService.getOneCompany(this.companySelected.split('/')[1]).subscribe(res => {\r\n        res.reportingProviders.map(report => {\r\n          this.reportProviderData.push({\r\n            value: report.reportingProvider,\r\n            viewValue: report.reportingProvider\r\n          })\r\n        });\r\n      });\r\n    }\r\n  }\r\n  //Updates the date picker range manually\r\n  //Params startDate and endDate\r\n  updateDatePickerRange(startDate: moment.MomentInput, endDate: moment.MomentInput) {\r\n    this.manaulUpFG.patchValue({\r\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\r\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\r\n    });\r\n    this.range.patchValue({\r\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\r\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\r\n    });\r\n  }\r\n  //Grabbing the mat selector options\r\n  private getDateRanges() {\r\n    return [\r\n      { value: 'today', viewValue: 'Today' },\r\n      { value: 'yesterday', viewValue: 'Yesterday' },\r\n      { value: 'last7days', viewValue: 'Last 7 Days' },\r\n      { value: 'last30days', viewValue: 'Last 30 Days' },\r\n      { value: 'monthToDate', viewValue: 'Month to Date' },\r\n      { value: 'lastMonth', viewValue: 'Last Month' },\r\n      { value: 'custom', viewValue: 'Custom' },\r\n    ];\r\n  }\r\n  //Monitors mat selector, if changed (and not custom). updates the actual date picker\r\n  onPreSetRangeSelectChange(selection: any) {\r\n    if (selection.value !== 'custom') {\r\n      this.preSelectValue = selection.value;\r\n      this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\r\n\r\n      //Updates the date picker range manually\r\n      this.updateDatePickerRange(\r\n        this.preSelectDates.startDate,\r\n        this.preSelectDates.endDate\r\n      );\r\n    }\r\n  }\r\n  //Convert mat selector options and return actual dates\r\n  private getPreSetDateRange(selection: any) {\r\n    let dateFormat = 'MM-DD-YYYY';\r\n    switch (selection) {\r\n      case 'today':\r\n        return {\r\n          startDate: moment().utc().startOf('day').format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'yesterday':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(1, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment()\r\n            .subtract(1, 'days')\r\n            .utc()\r\n            .endOf('day')\r\n            .format(dateFormat),\r\n        };\r\n      case 'last7days':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(7, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'last30days':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(30, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'monthToDate':\r\n        return {\r\n          startDate: moment()\r\n            .startOf('month')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'lastMonth':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(1, 'months')\r\n            .startOf('month')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment()\r\n            .utc()\r\n            .subtract(1, 'months')\r\n            .endOf('month')\r\n            .format(dateFormat),\r\n        };\r\n    }\r\n  }\r\n  handleReport(event: { value: string; }) {\r\n    if (event.value.length > 0) {\r\n      var typeName = event.value.toLowerCase().replace(/\\b[a-z]/g, function (letter) {\r\n        return letter.toUpperCase();\r\n      });\r\n      this.reportUpdateTitle = `${typeName} Split Update`;\r\n      \r\n      this.selectedTagData = this.tagData.filter((tag: { advertiser: string; }) => tag.advertiser == event.value);\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  onReportSubmit() {\r\n    if (this.manaulUpFG.valid) {\r\n      this.manaulUpFG.addControl('company', new FormControl('', Validators.required));\r\n      this.manaulUpFG.patchValue({\r\n        company: this.companySelected,\r\n      });\r\n      //var reportTypeValue = this.manaulUpFG.value['reportType'];\r\n      this.manualUpdateService.updateManualSplit(this.manaulUpFG.value).subscribe((response) => {\r\n        var checkExist = this.isObjectEmpty(response);\r\n        if (!checkExist) {\r\n          this.notification.showSuccess(`${this.selectedTagName} data splits  successfully updated!`, \"\")\r\n        } else {\r\n          this.notification.showWarning(`${this.selectedTagName} data not existed!`, \"\")\r\n        }\r\n      })\r\n    }\r\n  }\r\n  isObjectEmpty(obj: {}) {\r\n    return Object.keys(obj).length === 0;\r\n  }\r\n  //Detects when datepicker change is updated\r\n  public changeDatePicker(): void {\r\n    if (this.range.valid) {\r\n\r\n      this.selectedRange.startDate = this.range.value.startDate;\r\n      this.selectedRange.endDate = this.range.value.endDate;\r\n\r\n      this.manaulUpFG.patchValue({\r\n        startDate: moment(this.range.value.startDate, 'MM-DD-YYYY').toDate(),\r\n        endDate: moment(this.range.value.endDate, 'MM-DD-YYYY').toDate(),\r\n      });\r\n\r\n      this.preSelectValue = 'custom';\r\n    }\r\n  }\r\n}\r\n","<form class=\"example-container\" id=\"manaulUpForm\" [formGroup]=\"manaulUpFG\" (ngSubmit)=\"onReportSubmit()\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">{{reportUpdateTitle}}</h3>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n          <mat-form-field>\r\n            <mat-label>Provider</mat-label>\r\n            <mat-select matNativeControl placeholder=\"Select Provider\" formControlName=\"reportType\"\r\n              (selectionChange)=\"handleReport($event)\">\r\n              <mat-option *ngFor=\"let reportProvider of reportProviderData\" [value]=\"reportProvider.value\">\r\n                {{ reportProvider.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Tag</mat-label>\r\n            <mat-select matNativeControl placeholder=\"Select Report\" formControlName=\"tag\" (selectionChange)=\"handleTag($event)\">\r\n              <mat-option\r\n                *ngFor=\"let tagItem of selectedTagData\"\r\n                [value]=\"tagItem.value\"\r\n              >\r\n                {{ tagItem.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Enter a custom date range</mat-label>\r\n            <mat-date-range-input [rangePicker]=\"picker\" [formGroup]=\"range\" (dateChange)=\"changeDatePicker()\">\r\n              <input matStartDate formControlName=\"startDate\" placeholder=\"Start date\" required />\r\n              <input matEndDate formControlName=\"endDate\" placeholder=\"End date\" required\r\n                (dateChange)=\"changeDatePicker()\" />\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n            <mat-error *ngIf=\"manaulUpFG.controls.startDate.hasError('matStartDateInvalid')\">Invalid start date\r\n            </mat-error>\r\n            <mat-error *ngIf=\"manaulUpFG.controls.endDate.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n            <!-- Required Date Messages -->\r\n            <mat-error *ngIf=\"manaulUpFG.controls.startDate.errors?.required\">Start Date Required</mat-error>\r\n            <mat-error *ngIf=\"manaulUpFG.controls.endDate.errors?.required\">End Date Required</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Preset Date Range</mat-label>\r\n            <mat-select [(ngModel)]=\"preSelectValue\" (selectionChange)=\"onPreSetRangeSelectChange($event)\"\r\n              formControlName=\"preSelectValue\">\r\n              <mat-option *ngFor=\"let dateRange of preSetDateRanges\" [value]=\"dateRange.value\">\r\n                {{ dateRange.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <!-- update report -->\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-6\">\r\n              <button mat-raised-button color=\"primary\" type=\"submit\">Update Splits</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { CompanyManagementService } from 'src/app/modules/company-management/company-management.service';\r\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { ManualUpdateService } from 'src/app/shared/service/admin-stats/update.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\n\r\ninterface preSetDateRanges {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\ninterface PreSetDateRange {\r\n  startDate: string;\r\n  endDate: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-manual-update',\r\n  templateUrl: './manual-update.component.html',\r\n  styleUrls: ['./manual-update.component.scss']\r\n})\r\nexport class ManualUpdateComponent implements OnInit {\r\n  reportUpdateTitle = 'Report Stat Update'\r\n  manaulUpFG: FormGroup;\r\n  reportTypeData: any = [];\r\n  message:any = null;\r\n  preSetDateRanges: preSetDateRanges[];\r\n  range: FormGroup;\r\n  selectedRange: PreSetDateRange;\r\n\r\n  preSelectValue: String;\r\n\r\n  preSelectDates: any;\r\n  companySelected: any;\r\n  deviceToken: any;\r\n  currentUser: any;\r\n  constructor(\r\n    private manualUpdateService: ManualUpdateService,\r\n    private fb: FormBuilder,\r\n    private companyService: CompanyManagementService,\r\n    private authService: AuthService,\r\n    private userService: UsersService,\r\n    private notification: NotificationService,\r\n  ) {\r\n    this.currentUser = this.authService.currentUserValue;\r\n    this.companySelected = this.getSelectedCompanyLocalStorage();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getReportingProviderList();\r\n    this.manaulUpFG = this.fb.group({\r\n      reportType: new FormControl('', Validators.required),\r\n      preSelectValue: new FormControl('', Validators.required),\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required),\r\n    })\r\n    //Get the all PRESELECT ranges\r\n    this.preSetDateRanges = this.getDateRanges();\r\n    this.range = new FormGroup({\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required)\r\n    });\r\n\r\n    //Selected range of date picker\r\n    this.selectedRange = {\r\n      startDate: '',\r\n      endDate: '',\r\n    };\r\n\r\n    //Starting value of mat select\r\n    this.preSelectValue = 'last7days';\r\n\r\n    //Gets the true start and end date values in date format\r\n    this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\r\n\r\n    //Manually updates the mat date picker with new start and end dates\r\n    this.updateDatePickerRange(\r\n      this.preSelectDates.startDate,\r\n      this.preSelectDates.endDate\r\n    );\r\n  }\r\n\r\n  //get Report Providers in Current Company\r\n  getReportingProviderList() {\r\n    if (this.companySelected) {\r\n      this.companyService.getOneCompany(this.companySelected.split('/')[1]).subscribe(res => {\r\n        res.reportingProviders.map(report => {\r\n          this.reportTypeData.push({\r\n            value: report.reportingProvider,\r\n            viewValue: report.reportingProvider\r\n          })\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  onReportSubmit() {\r\n    if (this.manaulUpFG.valid) {\r\n      this.manaulUpFG.addControl('company', new FormControl('', Validators.required));\r\n      this.manaulUpFG.patchValue({\r\n        company: this.companySelected,\r\n      });\r\n      var reportTypeValue = this.manaulUpFG.value['reportType'];\r\n      this.manualUpdateService.updateManualStats(this.manaulUpFG.value).subscribe((response) => {\r\n        var checkExist = this.isObjectEmpty(response);\r\n        if (!checkExist) {\r\n          if (response.stats == \"ok\") {\r\n            this.notification.showSuccess(`${reportTypeValue} data stats successfully updated!`, \"\")\r\n          } else if (response.stats == \"warn\") {\r\n            this.notification.showWarning(`${reportTypeValue} data not existed!`, \"\")\r\n          }\r\n          \r\n        } else {\r\n          this.notification.showWarning(`${reportTypeValue} data not existed!`, \"\")\r\n        }\r\n      })\r\n    }\r\n  }\r\n  isObjectEmpty(obj: {}) {\r\n    return Object.keys(obj).length === 0;\r\n  }\r\n  //Grabbing the mat selector options\r\n  private getDateRanges() {\r\n    return [\r\n      { value: 'today', viewValue: 'Today' },\r\n      { value: 'yesterday', viewValue: 'Yesterday' },\r\n      { value: 'last7days', viewValue: 'Last 7 Days' },\r\n      { value: 'last30days', viewValue: 'Last 30 Days' },\r\n      { value: 'monthToDate', viewValue: 'Month to Date' },\r\n      { value: 'lastMonth', viewValue: 'Last Month' },\r\n      { value: 'custom', viewValue: 'Custom' },\r\n    ];\r\n  }\r\n  //Detects when datepicker change is updated\r\n  public changeDatePicker(): void {\r\n    if (this.range.valid) {\r\n\r\n      this.selectedRange.startDate = this.range.value.startDate;\r\n      this.selectedRange.endDate = this.range.value.endDate;\r\n      this.manaulUpFG.patchValue({\r\n        startDate: moment(this.range.value.startDate, 'MM-DD-YYYY').toDate(),\r\n        endDate: moment(this.range.value.endDate, 'MM-DD-YYYY').toDate(),\r\n      });\r\n\r\n      this.preSelectValue = 'custom';\r\n    }\r\n  }\r\n\r\n  //Monitors mat selector, if changed (and not custom). updates the actual date picker\r\n  onPreSetRangeSelectChange(selection: any) {\r\n    if (selection.value !== 'custom') {\r\n      this.preSelectValue = selection.value;\r\n      this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\r\n\r\n      //Updates the date picker range manually\r\n      this.updateDatePickerRange(\r\n        this.preSelectDates.startDate,\r\n        this.preSelectDates.endDate\r\n      );\r\n    }\r\n  }\r\n\r\n  //Updates the date picker range manually\r\n  //Params startDate and endDate\r\n  updateDatePickerRange(startDate: moment.MomentInput, endDate: moment.MomentInput) {\r\n    this.manaulUpFG.patchValue({\r\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\r\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\r\n    });\r\n    this.range.patchValue({\r\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\r\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\r\n    });\r\n  }\r\n\r\n  //Convert mat selector options and return actual dates\r\n  private getPreSetDateRange(selection: any) {\r\n    let dateFormat = 'MM-DD-YYYY';\r\n    switch (selection) {\r\n      case 'today':\r\n        return {\r\n          startDate: moment().utc().startOf('day').format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'yesterday':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(1, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment()\r\n            .subtract(1, 'days')\r\n            .utc()\r\n            .endOf('day')\r\n            .format(dateFormat),\r\n        };\r\n      case 'last7days':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(7, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'last30days':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(30, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'monthToDate':\r\n        return {\r\n          startDate: moment()\r\n            .startOf('month')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'lastMonth':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(1, 'months')\r\n            .startOf('month')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment()\r\n            .utc()\r\n            .subtract(1, 'months')\r\n            .endOf('month')\r\n            .format(dateFormat),\r\n        };\r\n    }\r\n  }\r\n  handleReport(event: { value: string; }) {\r\n    if (event.value.length > 0) {\r\n      var typeName = event.value.toLowerCase().replace(/\\b[a-z]/g, function (letter) {\r\n        return letter.toUpperCase();\r\n      });\r\n      this.reportUpdateTitle = `${typeName} Stat Update`\r\n    }\r\n  }\r\n}\r\n","<form class=\"example-container\" id=\"manaulUpForm\" [formGroup]=\"manaulUpFG\" (ngSubmit)=\"onReportSubmit()\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">{{reportUpdateTitle}}</h3>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n          <mat-form-field>\r\n            <mat-label>Report Type</mat-label>\r\n            <mat-select matNativeControl placeholder=\"Select Report\" formControlName=\"reportType\"\r\n              (selectionChange)=\"handleReport($event)\">\r\n              <mat-option *ngFor=\"let reportItem of reportTypeData\" [value]=\"reportItem.value\">\r\n                {{ reportItem.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Enter a custom date range</mat-label>\r\n            <mat-date-range-input [rangePicker]=\"picker\" [formGroup]=\"range\" (dateChange)=\"changeDatePicker()\">\r\n              <input matStartDate formControlName=\"startDate\" placeholder=\"Start date\" required />\r\n              <input matEndDate formControlName=\"endDate\" placeholder=\"End date\" required\r\n                (dateChange)=\"changeDatePicker()\" />\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n            <mat-error *ngIf=\"manaulUpFG.controls.startDate.hasError('matStartDateInvalid')\">Invalid start date\r\n            </mat-error>\r\n            <mat-error *ngIf=\"manaulUpFG.controls.endDate.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n            <!-- Required Date Messages -->\r\n            <mat-error *ngIf=\"manaulUpFG.controls.startDate.errors?.required\">Start Date Required</mat-error>\r\n            <mat-error *ngIf=\"manaulUpFG.controls.endDate.errors?.required\">End Date Required</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Preset Date Range</mat-label>\r\n            <mat-select [(ngModel)]=\"preSelectValue\" (selectionChange)=\"onPreSetRangeSelectChange($event)\"\r\n              formControlName=\"preSelectValue\">\r\n              <mat-option *ngFor=\"let dateRange of preSetDateRanges\" [value]=\"dateRange.value\">\r\n                {{ dateRange.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <!-- update report -->\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-6\">\r\n              <button mat-raised-button color=\"primary\" type=\"submit\">Update Stats</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-media-net',\r\n  templateUrl: './media-net.component.html',\r\n  styleUrls: ['./media-net.component.scss']\r\n})\r\nexport class MediaNetComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>media-net works!</p>\r\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\r\n\r\n<app-reporting-revenue-chart *ngIf=\"chartData\" [chartData]=\"chartData\"></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-1\" (click)=\"groupDate()\">\r\n    Group by Date\r\n  </button>\r\n  <button class=\"btn btn-sm btn-success mx-1\" (click)=\"groupProvider()\">\r\n    Group by Publisher\r\n  </button>\r\n  <button class=\"btn btn-sm btn-info mx-1\" (click)=\"groupSubid()\">\r\n    Group by Subid\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-1\" (click)=\"backGroup()\">\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n\r\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\">\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column [width]=\"30\" [resizeable]=\"false\" [sortable]=\"false\" [draggable]=\"false\"\r\n    [canAutoResize]=\"false\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n      <a href=\"javascript:void(0)\" [class.datatable-icon-right]=\"!expanded\" [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\" (click)=\"toggleExpandRow(row)\">\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupPublishFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher -->\r\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\" *ngIf=\"!groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"totalsearches\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CPC -->\r\n  <ngx-datatable-column name=\"cpc\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CPC\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | currency: 'USD') || (0 | currency: 'USD') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{\r\n        (value | percent: '2.2-2') || (0 | percent: '2.2-2')\r\n        }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher Net -->\r\n  <ngx-datatable-column name=\"publisherNet\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher Net\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Profit -->\r\n  <ngx-datatable-column name=\"profit\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Profit\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  \r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n</ngx-datatable>","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { PerionService } from 'src/app/shared/service/admin-stats/perion.service';\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-perion',\r\n  templateUrl: './perion.component.html',\r\n  styleUrls: ['./perion.component.scss'],\r\n})\r\nexport class PerionComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  \r\n  summary = {\r\n    revenue: 0,\r\n    profit: 0,\r\n  };\r\n  groupPublishFlag = false;\r\n  groupDateShowFlag = false;\r\n  groupSubidShowFlag = false;\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  allStat: any[];\r\n  allChartStat: any[];\r\n  //Sends chartData to ReportingRevenueChartComponent\r\n  chartData: ChartDataInterface;\r\n\r\n  //Sends summaryMetrics to SummaryMetricsComponent\r\n  summaryMetrics: any;\r\n  tagList: any = [];\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  summaryMetricsData: any;\r\n  currentMonthData: any;\r\n  beforeMonthData: any;\r\n  twoBeforeMonthData: any;\r\n\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor(\r\n    private perionService: PerionService,\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  async ngAfterViewInit() {   \r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n\r\n    this.rows = [];\r\n    this.rows = await this.getAllPerionStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany,this.range.startDate, this.range.endDate);\r\n    this.refreshTable();\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  async routeTester() {\r\n    console.log('Testing Route');\r\n    this.perionService.testingRoute().subscribe((response) => {\r\n      console.log(response);\r\n    }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  updateAllPerionStats(company, startDate, endDate) {\r\n    this.perionService\r\n      .updateAllPerionStats(company, startDate, endDate)\r\n      .subscribe((response) => {\r\n        console.log(response);\r\n      }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  public async updateReportingFiltering(range) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllPerionStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\r\n    this.groupPublishFlag = false;\r\n    this.refreshTable();\r\n  }\r\n\r\n  async getAllPerionStats(company, startDate, endDate) {\r\n    try {\r\n      const response = await this.perionService\r\n        .getAllPerionStats(company, startDate, endDate)\r\n        .toPromise();\r\n      // console.log('response:', response);\r\n      this.loadingIndicator = false;\r\n      this.allStat = response.stats;\r\n      this.allStat.map(function (resStat) {\r\n        resStat.publisher = \"No Publisher\";\r\n        resStat.tagname = \"No Tag\";\r\n      });\r\n\r\n      for (var tagL of this.tagList) {\r\n        if (tagL.tag.advertiser == \"perion\") {\r\n          for (var tagSub of tagL.tag.subids) {\r\n            if (tagSub.filterTag == \"Contains\") {\r\n\r\n              this.allStat.map(stat => {\r\n                if (stat.subid.includes(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                  stat.tagname = tagL.tag.name;\r\n                }\r\n              });\r\n\r\n            } else if (tagSub.filterTag == \"StartsWith\") {\r\n              this.allStat.map(stat_1 => {\r\n                if (stat_1.subid.startsWith(tagSub.subid)) {\r\n                  stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                  stat_1.tagname = tagL.tag.name;\r\n                }\r\n              });\r\n\r\n            } else if (tagSub.filterTag == \"EndsWith\") {\r\n              this.allStat.map(stat_2 => {\r\n                if (stat_2.subid.endsWith(tagSub.subid)) {\r\n                  stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                  stat_2.tagname = tagL.tag.name;\r\n                }\r\n              });\r\n\r\n            } else if (tagSub.filterTag == \"ExactValue\") {\r\n              this.allStat.map(stat_3 => {\r\n                if (stat_3.subid == tagSub.subid) {\r\n                  stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                  stat_3.tagname = tagL.tag.name;\r\n                }\r\n              });\r\n\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return this.allStat;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  groupDate() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStat.reduce(function(r, o) {\r\n      var key = o.date;\r\n      \r\n      if(!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n        helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n        helperSummary[key].impressions += parseFloat(o.impressions ? o.impressions : 0);\r\n        helperSummary[key].totalsearches += parseFloat(o.totalsearches ? o.totalsearches : 0);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].counter++;\r\n      } \r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n      group.followon = group.followon / group.counter;\r\n      group.ctr = group.ctr / group.counter;\r\n\r\n    }\r\n    console.log(\"=======\", groupData)\r\n    this.rows = groupData;\r\n    this.groupDateShowFlag = true;\r\n    this.groupPublishFlag = false;\r\n    this.groupSubidShowFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  groupSubid() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStat.reduce(function(r, o) {\r\n      var key = o.subid;\r\n      \r\n      if(!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n        helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n        helperSummary[key].impressions += parseFloat(o.impressions ? o.impressions : 0);\r\n        helperSummary[key].totalsearches += parseFloat(o.totalsearches ? o.totalsearches : 0);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].counter++;\r\n      } \r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n      group.followon = group.followon / group.counter;\r\n      group.ctr = group.ctr / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupPublishFlag = false;\r\n    this.groupDateShowFlag = false;\r\n    this.groupSubidShowFlag = true;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStat.reduce(function(r, o) {\r\n      var key = o.publisher;\r\n      \r\n      if(!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n        helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n        helperSummary[key].impressions += parseFloat(o.impressions ? o.impressions : 0);\r\n        helperSummary[key].totalsearches += parseFloat(o.totalsearches ? o.totalsearches : 0);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].counter++;\r\n      } \r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n      group.followon = group.followon / group.counter;\r\n      group.ctr = group.ctr / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupPublishFlag = true;\r\n    this.groupDateShowFlag = false;\r\n    this.groupSubidShowFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n  backGroup() {\r\n    this.rows = this.allStat;\r\n    this.groupPublishFlag = false;\r\n    this.groupDateShowFlag = false;\r\n    this.groupSubidShowFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  async getSummaryMetrics(company: any, startDate: string, endDate: string) {\r\n    try {\r\n      const response = await this.perionService.getSummaryMetrics(company, startDate, endDate).toPromise();\r\n      var allSummary = {};\r\n      var currentPercentPace = 0;\r\n      var lastPercentPace = 0;\r\n      var selectedPercentPace = 0;\r\n      if (response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n      }\r\n      if (response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n      }\r\n      if (response.summary[0].prevSelectedStat[0].profitPace != 0) {\r\n        selectedPercentPace = (response.summary[0].selectedStat[0].profitPace - response.summary[0].prevSelectedStat[0].profitPace) / (response.summary[0].prevSelectedStat[0].profitPace) * 100;\r\n      }\r\n\r\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n      response.summary[0].selectedStat[0].percentPace = selectedPercentPace;\r\n      response.summary[0].selectedStat[0].selectedStartDate = startDate;\r\n      response.summary[0].selectedStat[0].selectedEndDate = endDate;\r\n      allSummary['summary'] = response.summary;\r\n      return allSummary;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  async getChartMetrics(company, startDate, endDate) {\r\n    try {\r\n      const response = await this.perionService\r\n        .getAllPerionStats(company, startDate, endDate)\r\n        .toPromise();\r\n      // console.log('getAllPerionStats() response:');\r\n      this.allChartStat = response.stats;\r\n      \r\n      this.allChartStat = this.allChartStat.slice().sort((a, b) => a.date - b.date);\r\n      var helperChart = {};\r\n      var resultChart = this.allChartStat.reduce(function (r, o) {\r\n        var key = o.date;\r\n        if (!helperChart[key]) {\r\n          helperChart[key] = Object.assign({}, o); // create a copy of o\r\n          r.push(helperChart[key]);\r\n        } else {\r\n          helperChart[key].totalsearches += parseInt(o.totalsearches);\r\n          if (o.revenue) {\r\n            helperChart[key].revenue += o.revenue;\r\n          }\r\n        }\r\n        return r;\r\n      }, []);\r\n      var revenuePerDayVal = [];\r\n      var datesOfRevenueVal = [];\r\n      var searchesPerDayVal = [];\r\n      var chartDataValue = {};\r\n      for (var resVal of resultChart) {\r\n        revenuePerDayVal.push(resVal.revenue);\r\n        datesOfRevenueVal.push(resVal.date);\r\n        searchesPerDayVal.push(resVal.totalsearches);\r\n      }\r\n      chartDataValue['revenuePerDay'] = revenuePerDayVal;\r\n      chartDataValue['datesOfRevenue'] = datesOfRevenueVal;\r\n      chartDataValue['searchesPerDay'] = searchesPerDayVal;\r\n      return chartDataValue;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  combineSummaryMetrics(metrics: { summary: { keys: any[]; }; }) {\r\n    metrics.summary.keys.forEach((element) => {\r\n      console.log(element.revenue);\r\n      this.summary.revenue += element.revenue;\r\n      this.summary.profit += element.revenue * ((100 - element.split) * 0.01);\r\n    });\r\n  }\r\n\r\n  //get Tags with selected company\r\n  async getCompanyTags(selectedCompany: string) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    try {\r\n      const response = await this.tagService.getCompanyTags(companyId).toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\r\n\r\n<!--Chart Data Show-->\r\n<app-reporting-revenue-chart *ngIf=\"chartData\" [chartData]=\"chartData\"></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-1\" (click)=\"groupDate()\">\r\n    Group by Date\r\n  </button>\r\n  <button class=\"btn btn-sm btn-success mx-1\" (click)=\"groupProvider()\">\r\n    Group by Publisher\r\n  </button>\r\n  <button class=\"btn btn-sm btn-info mx-1\" (click)=\"groupSubid()\">\r\n    Group by Subid\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-1\" (click)=\"backGroup()\">\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\">\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column [width]=\"30\" [resizeable]=\"false\" [sortable]=\"false\" [draggable]=\"false\"\r\n    [canAutoResize]=\"false\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n      <a href=\"javascript:void(0)\" [class.datatable-icon-right]=\"!expanded\" [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\" (click)=\"toggleExpandRow(row)\">\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupPublishFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER -->\r\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\" *ngIf=\"!groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher Net -->\r\n  <ngx-datatable-column name=\"publisherNet\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher Net\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PROFIT -->\r\n  <ngx-datatable-column name=\"profit\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Profit\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n\r\n</ngx-datatable>","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewChild,\r\n} from '@angular/core';\r\n\r\nimport { UsersService } from '../../../shared/service/users.service';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { RubiService } from 'src/app/shared/service/admin-stats/rubi.service';\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-rubi',\r\n  templateUrl: './rubi.component.html',\r\n  styleUrls: ['./rubi.component.scss']\r\n})\r\nexport class RubiComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  @ViewChild('expandableTable') table: any;\r\n  chartData: ChartDataInterface;\r\n  groupPublishFlag = false;\r\n  groupDateShowFlag = false;\r\n  groupSubidShowFlag = false;\r\n  expanded: any = {};\r\n  allStats: any[];\r\n  summaryMetrics: any;\r\n  tagList: any = [];\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private rubiService: RubiService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyStored();\r\n  }\r\n\r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n    this.rows = [];\r\n    this.rows = await this.getAllRubiStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany,this.range.startDate, this.range.endDate);\r\n    this.refreshTable();\r\n  }\r\n  public async updateReportingFiltering(range: { startDate: string; endDate: string; }) {\r\n    this.range = range;\r\n    this.rows = await this.getAllRubiStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany,this.range.startDate, this.range.endDate);\r\n    this.groupPublishFlag = false;\r\n    this.refreshTable();\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyStored() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  toggleExpandRow(row: any) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event: any) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n  async getAllRubiStats(company: any, startDate: string, endDate: string) {\r\n    const response = await this.rubiService.getRubiStats(company, startDate, endDate).toPromise();\r\n    console.log('getRubiStats() response:', response);\r\n    this.loadingIndicator = false;\r\n    this.allStats = response.stats;\r\n    this.allStats.map(function (resStat) {\r\n      resStat.publisher = \"No Publisher\";\r\n      resStat.tagname = \"No Tag\";\r\n    });\r\n    for (var tagL of this.tagList) {\r\n      if (tagL.tag.advertiser == \"rubi\") {\r\n        for (var tagSub of tagL.tag.subids) {\r\n          if (tagSub.filterTag == \"Contains\") {\r\n\r\n            this.allStats.map(stat => {\r\n              if (stat.subid.includes(tagSub.subid)) {\r\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"StartsWith\") {\r\n            this.allStats.map(stat_1 => {\r\n              if (stat_1.subid.startsWith(tagSub.subid)) {\r\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_1.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"EndsWith\") {\r\n            this.allStats.map(stat_2 => {\r\n              if (stat_2.subid.endsWith(tagSub.subid)) {\r\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_2.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"ExactValue\") {\r\n            this.allStats.map(stat_3 => {\r\n              if (stat_3.subid == tagSub.subid) {\r\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_3.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return this.allStats;\r\n  }\r\n\r\n  groupDate() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStats.reduce(function (r, o) {\r\n      var key = o.date;\r\n\r\n      if (!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n        helperSummary[key].monetized_searches += parseFloat(o.monetized_searches ? o.monetized_searches : 0);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].counter++;\r\n      }\r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupPublishFlag = false;\r\n    this.groupDateShowFlag = true;\r\n    this.groupSubidShowFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  groupSubid() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStats.reduce(function (r, o) {\r\n      var key = o.subid;\r\n\r\n      if (!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n        helperSummary[key].monetized_searches += parseFloat(o.monetized_searches ? o.monetized_searches : 0);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].counter++;\r\n      }\r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupPublishFlag = false;\r\n    this.groupDateShowFlag = false;\r\n    this.groupSubidShowFlag = true;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStats.reduce(function (r, o) {\r\n      var key = o.publisher;\r\n\r\n      if (!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n        helperSummary[key].monetized_searches += parseFloat(o.monetized_searches ? o.monetized_searches : 0);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].counter++;\r\n      }\r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupPublishFlag = true;\r\n    this.groupDateShowFlag = false;\r\n    this.groupSubidShowFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n  backGroup() {\r\n    this.rows = this.allStats;\r\n    this.groupPublishFlag = false;\r\n    this.groupDateShowFlag = false;\r\n    this.groupSubidShowFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n  async getChartMetrics(company: any, startDate: string, endDate: string) {\r\n    try {\r\n      const response = await this.rubiService\r\n        .getChartMetrics(company, startDate, endDate)\r\n        .toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n  async getSummaryMetrics(company: any, startDate: string, endDate: string) {\r\n    const response = await this.rubiService.getSummaryMetrics(company, startDate, endDate).toPromise();\r\n    var allSummary = {};\r\n    var currentPercentPace = 0;\r\n    var lastPercentPace = 0;\r\n    var selectedPercentPace = 0;\r\n    if (response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n      currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n    }\r\n    if (response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n      lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n    }\r\n    if (response.summary[0].prevSelectedStat[0].profitPace != 0) {\r\n      selectedPercentPace = (response.summary[0].selectedStat[0].profitPace - response.summary[0].prevSelectedStat[0].profitPace) / (response.summary[0].prevSelectedStat[0].profitPace) * 100;\r\n    }\r\n    response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n    response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n    response.summary[0].selectedStat[0].percentPace = selectedPercentPace;\r\n    response.summary[0].selectedStat[0].selectedStartDate = startDate;\r\n    response.summary[0].selectedStat[0].selectedEndDate = endDate;\r\n    allSummary['summary'] = response.summary;\r\n    return allSummary;\r\n  }\r\n  //get Tags with selected company\r\n  async getCompanyTags(selectedCompany: string) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    try {\r\n      const response = await this.tagService.getCompanyTags(companyId).toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n","<app-reporting-filtering\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\n></app-reporting-filtering>\n\n<!--Chart Data Show-->\n<app-reporting-revenue-chart *ngIf=\"chartData\"\n  [chartData]=\"chartData\"\n></app-reporting-revenue-chart>\n\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\n\n<div class=\"row px-6\">\n  <button class=\"btn btn-sm btn-primary mx-1\" (click)=\"groupDate()\">\n    Group by Date\n  </button>\n  <button class=\"btn btn-sm btn-success mx-1\" (click)=\"groupProvider()\">\n    Group by Publisher\n  </button>\n  <button class=\"btn btn-sm btn-info mx-1\" (click)=\"groupSubid()\">\n    Group by Subid\n  </button>\n  <button class=\"btn btn-sm btn-dark mx-1\" (click)=\"backGroup()\">\n    Back\n  </button>\n</div>\n\n<ngx-datatable\n  #expandableTable\n  class=\"material fullscreen expandable\"\n  style=\"top: 30px; height: 500px\"\n  [columnMode]=\"'force'\"\n  [headerHeight]=\"50\"\n  [footerHeight]=\"0\"\n  [rowHeight]=\"50\"\n  [scrollbarV]=\"true\"\n  [rows]=\"rows\"\n  [loadingIndicator]=\"loadingIndicator\"\n>\n  <!-- Row Detail Template -->\n  <ngx-datatable-row-detail\n    [rowHeight]=\"100\"\n    #myDetailRow\n    (toggle)=\"onDetailToggle($event)\"\n  >\n    <ng-template\n      let-row=\"row\"\n      let-expanded=\"expanded\"\n      ngx-datatable-row-detail-template\n    >\n      <div style=\"padding-left: 35px\">\n        <div><strong>Address</strong></div>\n        <div>Test</div>\n      </div>\n    </ng-template>\n  </ngx-datatable-row-detail>\n\n  <!-- Column Templates -->\n  <ngx-datatable-column\n    [width]=\"30\"\n    [resizeable]=\"false\"\n    [sortable]=\"false\"\n    [draggable]=\"false\"\n    [canAutoResize]=\"false\"\n  >\n    <ng-template\n      let-row=\"row\"\n      let-expanded=\"expanded\"\n      ngx-datatable-cell-template\n    >\n      <a\n        href=\"javascript:void(0)\"\n        [class.datatable-icon-right]=\"!expanded\"\n        [class.datatable-icon-down]=\"expanded\"\n        title=\"Expand/Collapse Row\"\n        (click)=\"toggleExpandRow(row)\"\n      >\n      </a>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Date -->\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupPublishFlag && !groupSubidShowFlag\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Date\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | date }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SUBID -->\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Subid\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- PUBLISHER -->\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\" *ngIf=\"!groupDateShowFlag && !groupSubidShowFlag\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Publisher\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SEARCHES -->\n  <ngx-datatable-column name=\"searches\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Searches\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- CLICKS -->\n  <ngx-datatable-column name=\"clicks\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Clicks\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SPLIT -->\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Split\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Publisher Net -->\n  <ngx-datatable-column name=\"publisherNet\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Publisher Net\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | currency: 'USD' }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- PROFIT -->\n  <ngx-datatable-column name=\"profit\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Profit\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | currency: 'USD' }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n  \n  <!-- REVENUE -->\n  <ngx-datatable-column name=\"revenue\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Revenue\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | currency: 'USD' }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  \n</ngx-datatable>","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ViewChild,\n} from '@angular/core';\n\nimport { UsersService } from '../../../shared/service/users.service';\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\nimport { SolexBCService } from 'src/app/shared/service/admin-stats/solexbc.service';\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\n\n@Component({\n  selector: 'app-solex-bc',\n  templateUrl: './solex-bc.component.html',\n  styleUrls: ['./solex-bc.component.scss']\n})\nexport class SolexBcComponent implements AfterViewInit {\n  range = {\n    startDate: '',\n    endDate: '',\n  };\n  loadingIndicator = true;\n  rows: any[];\n  selectedCompany: any;\n  @ViewChild('expandableTable') table: any;\n  chartData: ChartDataInterface;\n\n  expanded: any = {};\n  allStats: any[];\n  summaryMetrics: any;\n  tagList: any = [];\n  groupPublishFlag = false;\n  groupDateShowFlag = false;\n  groupSubidShowFlag = false;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private userService: UsersService,\n    private solexBCService: SolexBCService,\n    private tagService: TagManagementService,\n  ) { \n    this.selectedCompany = this.getSelectedCompanyStored();\n  }\n\n  async ngAfterViewInit() {\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\n    this.rows = [];\n    this.rows = await this.getAllSolexBCStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.chartData = await this.getChartMetrics(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    \n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\n    this.refreshTable();\n  }\n  public async updateReportingFiltering(range) {\n    this.range = range;\n    this.rows = await this.getAllSolexBCStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.chartData = await this.getChartMetrics(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\n    this.groupPublishFlag = false;\n    this.refreshTable();\n  }\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyStored() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  toggleExpandRow(row) {\n    console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event) {\n    console.log('Detail Toggled', event);\n  }\n\n  refreshTable() {\n    this.cdr.markForCheck();\n  }\n\n  getAllSolexBCStats(company, startDate, endDate) {\n    return this.solexBCService.getSolexBCStats(company, startDate, endDate).toPromise().then((response) => {\n      console.log('getSolexBCStats() response:', response);\n      this.loadingIndicator = false;\n      this.allStats = response.stats;\n      this.allStats.map(function(resStat) {\n        resStat.publisher = \"No Publisher\"\n        resStat.tagname = \"No Tag\" \n      });\n      for (var tagL of this.tagList) {\n        if(tagL.tag.advertiser == \"solex-bc\") {\n          for (var tagSub of tagL.tag.subids) {\n            if(tagSub.filterTag ==\"Contains\") {\n              this.allStats.map(stat => {\n                if (stat.subid.includes(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } else if (tagSub.filterTag ==\"StartsWith\") {\n              this.allStats.map(stat => {\n                if (stat.subid.startsWith(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } else if (tagSub.filterTag ==\"EndsWith\") {\n              this.allStats.map(stat => {\n                if (stat.subid.endsWith(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              }) \n              \n            } else if (tagSub.filterTag ==\"ExactValue\") {\n              this.allStats.map(stat => {\n                if (stat.subid == tagSub.subid) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } \n          }\n        }\n      }\n      return this.allStats;\n    })\n  }\n\n  groupSubid() {\n    var helperSummary = {};\n    var groupData = this.allStats.reduce(function(r, o) {\n      var key = o.subid;\n      \n      if(!helperSummary[key]) {\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\n        helperSummary[key].counter = 1;\n        r.push(helperSummary[key]);\n      } else {\n        helperSummary[key].clicks += parseFloat(o.clicks);\n        helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\n        helperSummary[key].revenue += parseFloat(o.revenue);\n        helperSummary[key].split += parseFloat(o.split);\n        helperSummary[key].profit += parseFloat(o.profit);\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\n        helperSummary[key].counter++;\n      } \n      return r;\n    }, []);\n    for (var group of groupData) {\n      group.split = group.split / group.counter;\n\n    }\n    this.rows = groupData;\n    this.groupPublishFlag = false;\n    this.groupDateShowFlag = false;\n    this.groupSubidShowFlag = true;\n    this.cdr.markForCheck();\n  }\n\n  groupDate() {\n    var helperSummary = {};\n    var groupData = this.allStats.reduce(function(r, o) {\n      var key = o.date;\n      \n      if(!helperSummary[key]) {\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\n        helperSummary[key].counter = 1;\n        r.push(helperSummary[key]);\n      } else {\n        helperSummary[key].clicks += parseFloat(o.clicks);\n        helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\n        helperSummary[key].revenue += parseFloat(o.revenue);\n        helperSummary[key].split += parseFloat(o.split);\n        helperSummary[key].profit += parseFloat(o.profit);\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\n        helperSummary[key].counter++;\n      } \n      return r;\n    }, []);\n    for (var group of groupData) {\n      group.split = group.split / group.counter;\n\n    }\n    this.rows = groupData;\n    this.groupPublishFlag = false;\n    this.groupDateShowFlag = true;\n    this.groupSubidShowFlag = false;\n    this.cdr.markForCheck();\n  }\n\n  groupProvider() {\n    var helperSummary = {};\n    var groupData = this.allStats.reduce(function(r, o) {\n      var key = o.publisher;\n      \n      if(!helperSummary[key]) {\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\n        helperSummary[key].counter = 1;\n        r.push(helperSummary[key]);\n      } else {\n        helperSummary[key].clicks += parseFloat(o.clicks);\n        helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\n        helperSummary[key].revenue += parseFloat(o.revenue);\n        helperSummary[key].split += parseFloat(o.split);\n        helperSummary[key].profit += parseFloat(o.profit);\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\n        helperSummary[key].counter++;\n      } \n      return r;\n    }, []);\n    for (var group of groupData) {\n      group.split = group.split / group.counter;\n\n    }\n    this.rows = groupData;\n    this.groupPublishFlag = true;\n    this.groupDateShowFlag = false;\n    this.groupSubidShowFlag = false;\n    this.cdr.markForCheck();\n  }\n  backGroup() {\n    this.rows = this.allStats;\n    this.groupPublishFlag = false;\n    this.groupDateShowFlag = false;\n    this.groupSubidShowFlag = false;\n    this.cdr.markForCheck();\n  }\n  getChartMetrics(company, startDate, endDate) {\n    return this.solexBCService\n      .getChartMetrics(company, startDate, endDate)\n      .toPromise()\n      .then((response) => {\n        return response;\n      })\n      .catch((error) => {\n        return error;\n      });\n  }\n  getSummaryMetrics(company: any, startDate: string, endDate: string) {\n    return this.solexBCService.getSummaryMetrics(company, startDate, endDate).toPromise().then((response) => {\n      var allSummary = {};\n      var currentPercentPace = 0;\n      var lastPercentPace = 0;\n      var selectedPercentPace = 0;\n      if(response.summary[0].lastMonthStat[0].profitPace != 0) {\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\n      }\n      if(response.summary[0].twoLastMonthStat[0].profitPace != 0) {\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\n      }\n      if (response.summary[0].prevSelectedStat[0].profitPace != 0) {\n        selectedPercentPace = (response.summary[0].selectedStat[0].profitPace - response.summary[0].prevSelectedStat[0].profitPace) / (response.summary[0].prevSelectedStat[0].profitPace) * 100;\n      }\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\n      response.summary[0].selectedStat[0].percentPace = selectedPercentPace;\n      response.summary[0].selectedStat[0].selectedStartDate = startDate;\n      response.summary[0].selectedStat[0].selectedEndDate = endDate;\n      allSummary['summary'] = response.summary;\n      return allSummary;\n    })\n  }\n  //get Tags with selected company\n  getCompanyTags(selectedCompany) {\n    var companyId = selectedCompany.split(\"/\")[1];\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \n      return response;\n    })\n    .catch((error) => {\n      return error;\n    })\n  }\n\n}\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\r\n\r\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\">\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column [width]=\"30\" [resizeable]=\"false\" [sortable]=\"false\" [draggable]=\"false\"\r\n    [canAutoResize]=\"false\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n      <a href=\"javascript:void(0)\" [class.datatable-icon-right]=\"!expanded\" [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\" (click)=\"toggleExpandRow(row)\">\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Device -->\r\n  <ngx-datatable-column name=\"device\" [minWidth]=\"100\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Device\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PAGEVIEWS -->\r\n  <ngx-datatable-column name=\"pageviews\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      PageViews\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Impressions -->\r\n  <ngx-datatable-column name=\"impressions\" [minWidth]=\"35\" *ngIf=\"!groupPublishFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Impressions\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n</ngx-datatable>","import { Component, AfterViewInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { UsersService } from '../../../shared/service/users.service';\r\nimport { System1Service } from 'src/app/shared/service/admin-stats/system1.service';\r\n\r\n@Component({\r\n  selector: 'app-system1',\r\n  templateUrl: './system1.component.html',\r\n  styleUrls: ['./system1.component.scss']\r\n})\r\nexport class System1Component implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  rows: any[];\r\n  allStats: any[];\r\n  loadingIndicator = true;\r\n  selectedCompany: any;\r\n  groupPublishFlag = false;\r\n  @ViewChild('expandableTable') table: any;\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private system1Service: System1Service,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n   }\r\n\r\n  async ngAfterViewInit() {\r\n    this.rows = [];\r\n    this.rows = await this.getAllSystem1Stats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n  }\r\n  public async updateReportingFiltering(range) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllSystem1Stats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.groupPublishFlag = false;\r\n    this.refreshTable();\r\n  }\r\n\r\n  //get Stat all\r\n  getAllSystem1Stats(company, startDate, endDate) {\r\n    return this.system1Service.getAllSystem1Stats(company, startDate, endDate).toPromise().then((response) => {\r\n      console.log('getAllSystem1Stats() response:', response);\r\n      this.loadingIndicator = false;\r\n      this.allStats = response.stats;\r\n      return this.allStats;\r\n    });\r\n  }\r\n\r\n  getSummaryMetrics(company) {\r\n    return [];\r\n  }\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as echarts from 'echarts';\r\n\r\n@Component({\r\n  selector: 'app-third-party',\r\n  templateUrl: './third-party.component.html',\r\n  styleUrls: ['./third-party.component.scss'],\r\n})\r\nexport class ThirdPartyComponent implements OnInit {\r\n  //Chart setup variables\r\n  chartDom;\r\n  myChart;\r\n  option;\r\n\r\n  rows = [\r\n    {\r\n      name: 'Datalox',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n    {\r\n      name: 'Hopkins Branded',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n    {\r\n      name: 'Datalox 2',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    let revenueByDayArray = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (8000 - 4000) + 4000)\r\n    );\r\n    let searchesPerDay = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (100000 - 40000) + 40000)\r\n    );\r\n    this.setChartOptions(\r\n      10000,\r\n      100000,\r\n      [\r\n        'Nov 1, Nov 2, Nov 3, Nov 4',\r\n        'Nov 5',\r\n        'Nov 5',\r\n        'Nov 6',\r\n        'Nov 7',\r\n        'Nov 8',\r\n        'Nov 9',\r\n        'Nov 10',\r\n        'Nov 11',\r\n        'Nov 12',\r\n        'Nov 13',\r\n        'Nov 14',\r\n        'Nov 15',\r\n        'Nov 16',\r\n        'Nov 17',\r\n        'Nov 18',\r\n        'Nov 19',\r\n        'Nov 20',\r\n      ],\r\n      revenueByDayArray,\r\n      searchesPerDay\r\n    );\r\n  }\r\n\r\n  public updateReportingFiltering(range) {\r\n    // this.range = range;\r\n    // this.getAllPerionStats(\r\n    //   'manic_perion',\r\n    //   this.range.startDate,\r\n    //   this.range.endDate\r\n    // );\r\n    console.log('Report');\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  setChartOptions(\r\n    maxRevenue,\r\n    maxSearches,\r\n    daysArray,\r\n    revenueByDayArray,\r\n    searchesPerDay\r\n  ) {\r\n    this.chartDom = document.getElementById('main')!;\r\n    this.myChart = echarts.init(this.chartDom);\r\n\r\n    this.option = {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          crossStyle: {\r\n            color: '#999',\r\n          },\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          dataView: { show: true, readOnly: false },\r\n          magicType: { show: true, type: ['line', 'bar'] },\r\n          restore: { show: true },\r\n          saveAsImage: { show: true },\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['Revenue', 'Searches'],\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: daysArray,\r\n          axisPointer: {\r\n            type: 'shadow',\r\n          },\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          name: 'Revenue',\r\n          min: 0,\r\n          max: maxRevenue,\r\n          interval: 25000,\r\n          axisLabel: {\r\n            formatter: '${value}',\r\n          },\r\n        },\r\n        {\r\n          type: 'value',\r\n          name: 'Searches',\r\n          min: 0,\r\n          max: maxSearches,\r\n          interval: 100000,\r\n          axisLabel: {\r\n            formatter: '{value}',\r\n          },\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'Revenue',\r\n          type: 'bar',\r\n          data: revenueByDayArray,\r\n        },\r\n        {\r\n          name: 'Searches',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: searchesPerDay,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.option && this.myChart.setOption(this.option);\r\n  }\r\n}\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<div id=\"main\" style=\"width: 100%; height: 300px\"></div>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\r\n\r\n<!--Chart Data Show-->\r\n<app-reporting-revenue-chart *ngIf=\"chartData\" [chartData]=\"chartData\"></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-1\" (click)=\"groupDate()\">\r\n    Group by Date\r\n  </button>\r\n  <button class=\"btn btn-sm btn-success mx-1\" (click)=\"groupProvider()\">\r\n    Group by Publisher\r\n  </button>\r\n  <button class=\"btn btn-sm btn-info mx-1\" (click)=\"groupSubid()\">\r\n    Group by Subid\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-1\" (click)=\"backGroup()\">\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\">\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column [width]=\"30\" [resizeable]=\"false\" [sortable]=\"false\" [draggable]=\"false\"\r\n    [canAutoResize]=\"false\">\r\n    <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n      <a href=\"javascript:void(0)\" [class.datatable-icon-right]=\"!expanded\" [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\" (click)=\"toggleExpandRow(row)\">\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupPublishFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\" *ngIf=\"!groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!--Bid SEARCHES -->\r\n  <ngx-datatable-column name=\"biddedSearches\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Bid Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!--Bid SEARCHES Result -->\r\n  <ngx-datatable-column name=\"biddedResults\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Bid Searches Result\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- COVERAGE -->\r\n  <ngx-datatable-column name=\"coverage\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Coverage\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CPC -->\r\n  <ngx-datatable-column name=\"cpc\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CPC\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- RN -->\r\n  <ngx-datatable-column name=\"rn\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      RN\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TqScore -->\r\n  <ngx-datatable-column name=\"tqScore\" *ngIf=\"!groupPublishFlag && !groupDateShowFlag && !groupSubidShowFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      TqScore\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher Net -->\r\n  <ngx-datatable-column name=\"publisherNet\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher Net\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PROFIT -->\r\n  <ngx-datatable-column name=\"profit\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Profit\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { VerizonService } from 'src/app/shared/service/admin-stats/verizon.service';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-verizon-direct',\r\n  templateUrl: './verizon-direct.component.html',\r\n  styleUrls: ['./verizon-direct.component.scss']\r\n})\r\nexport class VerizonDirectComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  tagList: any = [];\r\n  //Sends chartData to ReportingRevenueChartComponent\r\n  chartData: ChartDataInterface;\r\n  //Sends summaryMetrics to SummaryMetricsComponent\r\n  summaryMetrics: any;\r\n  groupPublishFlag = false;\r\n  groupDateShowFlag = false;\r\n  groupSubidShowFlag = false;\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  allStats: any;\r\n\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor(\r\n    private verizonService: VerizonService,\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n    this.rows = [];\r\n    this.rows = await this.getAllVerizonStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\r\n    this.refreshTable();\r\n  }\r\n\r\n  //get Tags with selected company\r\n  async getCompanyTags(selectedCompany: string) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    try {\r\n      const response = await this.tagService.getCompanyTags(companyId).toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  public async updateReportingFiltering(range: { startDate: string; endDate: string; }) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllVerizonStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany, this.range.startDate, this.range.endDate);\r\n    this.refreshTable();\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  groupDate(){\r\n    var helperSummary = {};\r\n    var groupData = this.allStats.reduce(function(r, o) {\r\n      var key = o.date;\r\n      \r\n      if(!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n        helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n        helperSummary[key].rn += parseFloat(o.rn ? o.rn : 0);\r\n        helperSummary[key].coverage += parseFloat(o.coverage ? o.coverage : 0);\r\n        helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n        helperSummary[key].biddedSearches += parseFloat(o.biddedSearches ? o.biddedSearches : 0);\r\n        helperSummary[key].biddedResults += parseFloat(o.biddedResults ? o.biddedResults : 0);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].counter++;\r\n      } \r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n      group.ctr = group.ctr / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupPublishFlag = false;\r\n    this.groupDateShowFlag = true;\r\n    this.groupSubidShowFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n  groupSubid(){\r\n    var helperSummary = {};\r\n    var groupData = this.allStats.reduce(function(r, o) {\r\n      var key = o.subid;\r\n      \r\n      if(!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n        helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n        helperSummary[key].rn += parseFloat(o.rn ? o.rn : 0);\r\n        helperSummary[key].coverage += parseFloat(o.coverage ? o.coverage : 0);\r\n        helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n        helperSummary[key].biddedSearches += parseFloat(o.biddedSearches ? o.biddedSearches : 0);\r\n        helperSummary[key].biddedResults += parseFloat(o.biddedResults ? o.biddedResults : 0);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].counter++;\r\n      } \r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n      group.ctr = group.ctr / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupPublishFlag = false;\r\n    this.groupDateShowFlag = false;\r\n    this.groupSubidShowFlag = true;\r\n    this.cdr.markForCheck();\r\n  }\r\n  groupProvider(){\r\n    var helperSummary = {};\r\n    var groupData = this.allStats.reduce(function(r, o) {\r\n      var key = o.publisher;\r\n      \r\n      if(!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n        helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n        helperSummary[key].rn += parseFloat(o.rn ? o.rn : 0);\r\n        helperSummary[key].coverage += parseFloat(o.coverage ? o.coverage : 0);\r\n        helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n        helperSummary[key].biddedSearches += parseFloat(o.biddedSearches ? o.biddedSearches : 0);\r\n        helperSummary[key].biddedResults += parseFloat(o.biddedResults ? o.biddedResults : 0);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].counter++;\r\n      } \r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n      group.ctr = group.ctr / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupPublishFlag = true;\r\n    this.groupDateShowFlag = false;\r\n    this.groupSubidShowFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  backGroup() {\r\n    this.rows = this.allStats;\r\n    this.groupPublishFlag = false;\r\n    this.groupDateShowFlag = false;\r\n    this.groupSubidShowFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  toggleExpandRow(row: any) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event: any) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  async getChartMetrics(company: any, startDate: string, endDate: string) {\r\n    try {\r\n      const response = await this.verizonService\r\n        .getChartMetrics(company, startDate, endDate)\r\n        .toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  async getAllVerizonStats(company: any, startDate: string, endDate: string) {\r\n    const response = await this.verizonService.getAllVerizonStats(company, startDate, endDate).toPromise();\r\n    console.log('getAllVerizonStats() response:', response);\r\n    this.loadingIndicator = false;\r\n    this.allStats = response.stats;\r\n    this.allStats.map(function (resStat: { publisher: string; tagname: string; }) {\r\n      resStat.publisher = \"No Publisher\";\r\n      resStat.tagname = \"No Tag\";\r\n    });\r\n    for (var tagL of this.tagList) {\r\n      if (tagL.tag.advertiser == \"verizon-direct\") {\r\n        for (var tagSub of tagL.tag.subids) {\r\n          if (tagSub.filterTag == \"Contains\") {\r\n\r\n            this.allStats.map((stat: { subid: string | any[]; publisher: any; tagname: any; }) => {\r\n              if (stat.subid.includes(tagSub.subid)) {\r\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"StartsWith\") {\r\n            this.allStats.map((stat_1: { subid: string; publisher: any; tagname: any; }) => {\r\n              if (stat_1.subid.startsWith(tagSub.subid)) {\r\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_1.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"EndsWith\") {\r\n            this.allStats.map((stat_2: { subid: string; publisher: any; tagname: any; }) => {\r\n              if (stat_2.subid.endsWith(tagSub.subid)) {\r\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_2.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          } else if (tagSub.filterTag == \"ExactValue\") {\r\n            this.allStats.map((stat_3: { subid: any; publisher: any; tagname: any; }) => {\r\n              if (stat_3.subid == tagSub.subid) {\r\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\r\n                stat_3.tagname = tagL.tag.name;\r\n              }\r\n            });\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return this.allStats;\r\n  }\r\n\r\n  async getSummaryMetrics(company: any, startDate: string, endDate: string) {\r\n    const response = await this.verizonService.getSummaryMetrics(company, startDate, endDate).toPromise();\r\n    var allSummary = {};\r\n    var currentPercentPace = 0;\r\n    var lastPercentPace = 0;\r\n    var selectedPercentPace = 0;\r\n    if (response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n      currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n    }\r\n    if (response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n      lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n    }\r\n    if (response.summary[0].prevSelectedStat[0].profitPace != 0) {\r\n      selectedPercentPace = (response.summary[0].selectedStat[0].profitPace - response.summary[0].prevSelectedStat[0].profitPace) / (response.summary[0].prevSelectedStat[0].profitPace) * 100;\r\n    }\r\n    response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n    response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n    response.summary[0].selectedStat[0].percentPace = selectedPercentPace;\r\n    response.summary[0].selectedStat[0].selectedStartDate = startDate;\r\n    response.summary[0].selectedStat[0].selectedEndDate = endDate;\r\n    allSummary['summary'] = response.summary;\r\n    return allSummary;\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\nconst API_ACCOUNTING_URL = `${environment.apiUrl}/stats/admin/accounting`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class AccountingService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getRubiStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n    return this.http.get<any>(API_ACCOUNTING_URL + '/rubi', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getPerionStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n    return this.http.get<any>(API_ACCOUNTING_URL + '/perion', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getLyonStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n    return this.http.get<any>(API_ACCOUNTING_URL + '/lyons', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n  getApptitudeStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n    return this.http.get<any>(API_ACCOUNTING_URL + '/apptitude', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getSolexBCStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n    return this.http.get<any>(API_ACCOUNTING_URL + '/solex-bc', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getVerizonDirectStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n    return this.http.get<any>(API_ACCOUNTING_URL + '/verizon-direct', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getSystem1Stats(company: any, startDate: any, endDate: any): Observable<any> {\r\n    return this.http.get<any>(API_ACCOUNTING_URL + '/system1', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport * as moment from 'moment';\r\n\r\nconst API_MANUAL_UPDATE_URL = `${environment.apiUrl}/stats/admin/manual-update`;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class ManualUpdateService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    updateManualStats(updateData: any): Observable<any> {\r\n        const { company, reportType, startDate, endDate } = updateData;\r\n        var data = {\r\n            \"company\": company,\r\n            \"reportType\": reportType,\r\n            'startDate': moment(startDate).format(\"YYYY-MM-DD\"),\r\n            'endDate': moment(endDate).format(\"YYYY-MM-DD\"),\r\n        }\r\n        return this.http.put<any>(API_MANUAL_UPDATE_URL + '/stat-update', data);\r\n    }\r\n    updateManualSplit(updateData: any): Observable<any> {\r\n        const { company, reportType, tag, startDate, endDate } = updateData;\r\n        var data = {\r\n            \"company\": company,\r\n            \"reportType\": reportType,\r\n            \"tag\": tag,\r\n            'startDate': startDate,\r\n            'endDate': endDate\r\n        }\r\n        return this.http.put<any>(API_MANUAL_UPDATE_URL + '/split-update', data);\r\n    }\r\n}"]}