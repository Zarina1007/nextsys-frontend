{"version":3,"sources":["webpack:///src/app/modules/admin-reporting/accounting/accounting.component.html","webpack:///src/app/modules/admin-reporting/accounting/accounting.component.ts","webpack:///src/app/modules/admin-reporting/admin-reporting-routing.module.ts","webpack:///src/app/modules/admin-reporting/admin-reporting.module.ts","webpack:///src/app/modules/admin-reporting/all-reporting/all-reporting.component.ts","webpack:///src/app/modules/admin-reporting/all-reporting/all-reporting.component.html","webpack:///src/app/modules/admin-reporting/apptitude/apptitude.component.html","webpack:///src/app/modules/admin-reporting/apptitude/apptitude.component.ts","webpack:///src/app/modules/admin-reporting/bing-direct/bing-direct.component.ts","webpack:///src/app/modules/admin-reporting/bing-direct/bing-direct.component.html","webpack:///src/app/modules/admin-reporting/hopkins/hopkins.component.ts","webpack:///src/app/modules/admin-reporting/hopkins/hopkins.component.html","webpack:///src/app/modules/admin-reporting/imgage-advantage/imgage-advantage.component.ts","webpack:///src/app/modules/admin-reporting/imgage-advantage/imgage-advantage.component.html","webpack:///src/app/modules/admin-reporting/lyons/lyons.component.html","webpack:///src/app/modules/admin-reporting/lyons/lyons.component.ts","webpack:///src/app/modules/admin-reporting/manual-split-update/manual-split-update.component.ts","webpack:///src/app/modules/admin-reporting/manual-split-update/manual-split-update.component.html","webpack:///src/app/modules/admin-reporting/manual-update/manual-update.component.ts","webpack:///src/app/modules/admin-reporting/manual-update/manual-update.component.html","webpack:///src/app/modules/admin-reporting/media-net/media-net.component.ts","webpack:///src/app/modules/admin-reporting/media-net/media-net.component.html","webpack:///src/app/modules/admin-reporting/perion/perion.component.html","webpack:///src/app/modules/admin-reporting/perion/perion.component.ts","webpack:///src/app/modules/admin-reporting/rubi/rubi.component.html","webpack:///src/app/modules/admin-reporting/rubi/rubi.component.ts","webpack:///src/app/modules/admin-reporting/solex-bc/solex-bc.component.html","webpack:///src/app/modules/admin-reporting/solex-bc/solex-bc.component.ts","webpack:///src/app/modules/admin-reporting/system1/system1.component.html","webpack:///src/app/modules/admin-reporting/system1/system1.component.ts","webpack:///src/app/modules/admin-reporting/third-party/third-party.component.ts","webpack:///src/app/modules/admin-reporting/third-party/third-party.component.html","webpack:///src/app/modules/admin-reporting/verizon-direct/verizon-direct.component.html","webpack:///src/app/modules/admin-reporting/verizon-direct/verizon-direct.component.ts","webpack:///src/app/shared/service/admin-stats/accounting.service.ts","webpack:///src/app/shared/service/admin-stats/update.service.ts"],"names":["AccountingComponent","cdr","userService","accountingService","tagService","companyService","rows","loadingIndicator","range","startDate","endDate","allRubiStats","allLyonStats","allPerionStats","allSystem1Stats","allVerizonStats","allSolexBCStats","allApptitudeStats","tagList","tempStatData","tempUpdateStatData","reportTypeData","selectedCompany","getSelectedCompanyStored","getCompanyTags","getReportingProviderList","getPerionStats","PerionData","getLyonStats","LyonData","getRubiStats","RubiData","getApptitudeStats","ApptitudeData","getSolexBCStats","SolexBCData","getVerizonDirectStats","VerizonData","includes","concat","length","totalRevenueNet","map","rowOne","revenue","push","publisher","detectChanges","getSelectedCompanyFromLocalStorage","perionUpData","lyonsUpData","rubiUpData","apptitudeUpData","solexBCUpData","verizonUpData","getReportCompany","split","toPromise","res","providerList","reportingProviders","report","reportingProvider","company","response","stats","tagL","tag","advertiser","subids","tagSub","filterTag","stat","subid","user","fullname","reporting","stat_1","startsWith","stat_2","endsWith","stat_3","rubiStats","rubiNet","rubiOne","solexBCStats","solexbcNet","solexbcOne","verizonStats","verizonNet","verizonOne","lyonStats","lyonNet","lyonOne","perionStats","perionNet","perionOne","apptitudeStats","apptitudeNet","companyId","updateReportingFiltering","selector","templateUrl","styleUrls","routes","path","component","children","redirectTo","pathMatch","AdminReportingRoutingModule","forChild","imports","exports","AdminReportingModule","declarations","entryComponents","AllReportingComponent","ApptitudeComponent","apptitudeService","expanded","groupFlag","getAllApptitudeStats","getChartMetrics","chartData","getSummaryMetrics","summaryMetrics","markForCheck","then","console","log","allStats","resStat","row","table","rowDetail","toggleExpandRow","event","helperSummary","groupData","reduce","r","o","key","Object","assign","counter","clicks","parseFloat","cpc","ctr","impressions","searches","group","error","allSummary","currentPercentPace","lastPercentPace","summary","lastMonthStat","profitPace","twoLastMonthStat","percentPace","groupProvider","backProvider","onDetailToggle","BingDirectComponent","HopkinsComponent","name","totalSearches","monetizedSearches","columns","prop","revenueByDayArray","Array","from","Math","floor","random","searchesPerDay","setChartOptions","maxRevenue","maxSearches","daysArray","chartDom","document","getElementById","myChart","option","tooltip","trigger","axisPointer","type","crossStyle","color","toolbox","feature","dataView","show","readOnly","magicType","restore","saveAsImage","legend","data","xAxis","yAxis","min","max","interval","axisLabel","formatter","series","yAxisIndex","setOption","ImgageAdvantageComponent","followOn","LyonsComponent","lyonService","profit","filteredLyonStat","getAllLyonStats","summaryMetricsData","refreshTable","testingRoute","subscribe","err","getAllStats","allstat","tagname","biddedCtr","biddedSearches","updateAllLyonStats","currentMonthData","beforeMonthData","twoBeforeMonthData","dayInCurrentMonth","dayInBeforeMonth","dayInTwoBeforeMonth","f","resultSummary","date","parseInt","monthRevenue","monthProfit","monthRevenuePace","sumData","helperBeforeSummary","resultBeforeSummary","monthBeforeRevenue","monthBeforeProfit","monthBeforeRevenuePace","profitBeforePace","sumBeforeData","helperTwoBeforeSummary","resultTwoBeforeSummary","monthTwoBeforeRevenue","monthTwoBeforeProfit","monthTwoBeforeRevenuePace","profitTwoBeforePace","sumTwoBeforeData","summaryFinalData","revenuePace","sortResponse","slice","sort","a","b","allChart","helperChart","resultChart","revenuePerDayVal","datesOfRevenueVal","searchesPerDayVal","chartDataValue","resVal","metrics","keys","forEach","element","ManualSplitUpdateComponent","manualUpdateService","fb","authService","notification","tagData","selectedTagName","currentUser","currentUserValue","companySelected","getSelectedCompanyLocalStorage","getAllTags","manaulUpFG","required","preSelectValue","preSetDateRanges","getDateRanges","selectedRange","preSelectDates","getPreSetDateRange","updateDatePickerRange","resData","filter","value","viewValue","_id","patchValue","toDate","selection","dateFormat","utc","startOf","format","endOf","subtract","valid","addControl","updateManualSplit","checkExist","isObjectEmpty","showSuccess","showWarning","obj","onReportSubmit","handleTag","changeDatePicker","onPreSetRangeSelectChange","ManualUpdateComponent","reportUpdateTitle","reportType","getOneCompany","reportTypeValue","updateManualStats","typeName","toLowerCase","replace","letter","toUpperCase","handleReport","MediaNetComponent","PerionComponent","perionService","login","username","password","statsUpdateURL","getAllPerionStats","updateAllPerionStats","allStat","totalsearches","publisherNet","followon","allChartStat","RubiComponent","rubiService","getAllRubiStats","monetized_searches","SolexBcComponent","solexBCService","getAllSolexBCStats","System1Component","system1Service","getAllSystem1Stats","ThirdPartyComponent","VerizonDirectComponent","verizonService","getAllVerizonStats","API_ACCOUNTING_URL","apiUrl","AccountingService","http","get","params","providedIn","API_MANUAL_UPDATE_URL","ManualUpdateService","updateData","put"],"mappings":"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","file":"modules-admin-reporting-admin-reporting-module-es5.js","sourcesContent":["<app-reporting-filtering\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\n></app-reporting-filtering>\n\n<ngx-datatable\n  class=\"material fullscreen expandable\"\n  style=\"top: 30px; height: 500px\"\n  [columnMode]=\"'force'\"\n  [headerHeight]=\"50\"\n  [footerHeight]=\"0\"\n  [rowHeight]=\"50\"\n  [scrollbarV]=\"true\"\n  [rows]=\"rows\"\n  [loadingIndicator]=\"loadingIndicator\"\n>\n   <!-- PUBLISHER -->\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Publisher Name\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- STATS REPORTING -->\n  <ngx-datatable-column name=\"reporting\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Stats Reporting\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n  \n  <!-- REVENUE NET -->\n  <ngx-datatable-column name=\"revenue\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Revenue Net\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | currency: 'USD' }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  \n</ngx-datatable>","import { Component, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { UsersService } from '../../../shared/service/users.service';\nimport { AccountingService } from 'src/app/shared/service/admin-stats/accounting.service';\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\nimport { CompanyManagementService } from 'src/app/modules/company-management/company-management.service';\n\n@Component({\n  selector: 'app-accounting',\n  templateUrl: './accounting.component.html',\n  styleUrls: ['./accounting.component.scss']\n})\nexport class AccountingComponent implements AfterViewInit {\n\n  selectedCompany: any;\n  rows: any = [];\n  loadingIndicator = true;\n  range = {\n    startDate: '',\n    endDate: '',\n  };\n  allRubiStats: any = [];\n  allLyonStats: any = [];\n  allPerionStats: any = [];\n  allSystem1Stats: any = [];\n  allVerizonStats: any = [];\n  allSolexBCStats: any = [];\n  allApptitudeStats: any = [];\n  tagList: any = [];\n  LyonData: any;\n  PerionData: any;\n  RubiData: any;\n  System1Data: any;\n  VerizonData: any;\n  SolexBCData: any;\n  ApptitudeData: any;\n  tempStatData: any = [];\n  tempUpdateStatData: any = [];\n  reportTypeData: any =[];\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private userService: UsersService,\n    private accountingService: AccountingService,\n    private tagService: TagManagementService,\n    private companyService: CompanyManagementService,\n  ) {\n    this.selectedCompany = this.getSelectedCompanyStored();\n   }\n\n  async ngAfterViewInit() {\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\n    this.reportTypeData = await this.getReportingProviderList();\n    this.rows = [];\n    this.tempStatData =[];\n    this.PerionData = await this.getPerionStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.LyonData = await this.getLyonStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.RubiData = await this.getRubiStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.ApptitudeData = await this.getApptitudeStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.SolexBCData = await this.getSolexBCStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n\n    this.VerizonData = await this.getVerizonDirectStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    \n    if (this.reportTypeData.includes('perion')) {\n      this.tempStatData = this.tempStatData.concat(this.PerionData);\n    }\n    if (this.reportTypeData.includes('lyons')) {\n      this.tempStatData = this.tempStatData.concat(this.LyonData);\n    }\n    if (this.reportTypeData.includes('rubi')) {\n      this.tempStatData = this.tempStatData.concat(this.RubiData);\n    }\n    if (this.reportTypeData.includes('apptitude')) {\n      this.tempStatData = this.tempStatData.concat(this.ApptitudeData);\n    }\n\n    if (this.reportTypeData.includes('solex-bc')) {\n      this.tempStatData = this.tempStatData.concat(this.SolexBCData);\n    }\n    if (this.reportTypeData.includes('verizon-direct')) {\n      this.tempStatData = this.tempStatData.concat(this.VerizonData);\n    }\n    \n    this.rows = this.tempStatData;\n    if (this.rows.length > 0) {\n      var totalRevenueNet = 0;\n      this.rows.map((rowOne: any) => {\n        totalRevenueNet = totalRevenueNet + rowOne.revenue;\n      });\n      this.rows.push({\n        publisher: \"Total\",\n        revenue: totalRevenueNet\n      });\n    }\n    this.loadingIndicator = false;\n    this.cdr.detectChanges();\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyStored() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  public async updateReportingFiltering(range: any) {\n    this.range = range;\n    this.rows = [];\n    this.tempUpdateStatData = [];\n    var perionUpData = [];\n    var lyonsUpData = [];\n    var rubiUpData = [];\n    var apptitudeUpData = [];\n    var solexBCUpData = [];\n    var verizonUpData = [];\n    perionUpData = await this.getPerionStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    lyonsUpData = await this.getLyonStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    rubiUpData = await this.getRubiStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    apptitudeUpData = await this.getApptitudeStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    solexBCUpData = await this.getSolexBCStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    verizonUpData = await this.getVerizonDirectStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    if (this.reportTypeData.includes('perion')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(perionUpData);\n    }\n    if (this.reportTypeData.includes('lyons')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(lyonsUpData);\n    }\n    if (this.reportTypeData.includes('rubi')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(rubiUpData);\n    }\n    if (this.reportTypeData.includes('apptitude')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(apptitudeUpData);\n    }\n\n    if (this.reportTypeData.includes('solex-bc')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(solexBCUpData);\n    }\n    if (this.reportTypeData.includes('verizon-direct')) {\n      this.tempUpdateStatData = this.tempUpdateStatData.concat(verizonUpData);\n    }\n    \n    this.rows = this.tempUpdateStatData;\n    if (this.rows.length > 0) {\n      var totalRevenueNet = 0;\n      this.rows.map((rowOne: any) => {\n        totalRevenueNet = totalRevenueNet + rowOne.revenue;\n      });\n      this.rows.push({\n        publisher: \"Total\",\n        revenue: totalRevenueNet\n      });\n    }\n    this.loadingIndicator = false;\n    this.cdr.detectChanges();\n  }\n\n  //get Report Providers in Current Company\n  async getReportingProviderList() { \n    if(this.selectedCompany) {\n      try {\n        const res = await this.companyService.getReportCompany(this.selectedCompany.split('/')[1]).toPromise();\n        var providerList = [];\n        res.reportingProviders.map(report => {\n          providerList.push(report.reportingProvider);\n        });\n        return providerList;\n      } catch (error) {\n        return error;\n      };\n    } \n  }\n\n  async getRubiStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getRubiStats(company, startDate, endDate).toPromise();\n    this.allRubiStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"rubi\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allRubiStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Rubi\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allRubiStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Rubi\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allRubiStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Rubi\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allRubiStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Rubi\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var rubiStats = [];\n    var rubiNet = 0;\n    if (this.allRubiStats.length > 0) {\n      this.allRubiStats.map((rubiOne: any) => {\n        rubiNet = rubiNet + rubiOne.revenue;\n      });\n      rubiStats.push({\n        publisher: this.allRubiStats.length > 0 ? this.allRubiStats[0].publisher : \"No Publisher\",\n        reporting: this.allRubiStats.length > 0 ? this.allRubiStats[0].reporting : \"No Reporting\",\n        revenue: rubiNet\n      });\n    }\n    \n    return rubiStats;\n  }\n\n  async getSolexBCStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getSolexBCStats(company, startDate, endDate).toPromise();\n    this.allSolexBCStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"solex-bc\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allSolexBCStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Solex BC\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allSolexBCStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Solex BC\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allSolexBCStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Solex BC\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allSolexBCStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Solex BC\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var solexBCStats = [];\n    var solexbcNet = 0;\n    if (this.allSolexBCStats.length > 0) {\n      this.allSolexBCStats.map((solexbcOne: any) => {\n        solexbcNet = solexbcNet + solexbcOne.revenue;\n      });\n      solexBCStats.push({\n        publisher: this.allSolexBCStats.length > 0 ? this.allSolexBCStats[0].publisher : \"No Publisher\",\n        reporting: this.allSolexBCStats.length > 0 ? this.allSolexBCStats[0].reporting : \"No Reporting\",\n        revenue: solexbcNet\n      });\n    }\n    \n    return solexBCStats;\n  }\n\n  async getVerizonDirectStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getVerizonDirectStats(company, startDate, endDate).toPromise();\n    this.allVerizonStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"verizon-direct\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allVerizonStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Verizon Direct\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allVerizonStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Verizon Direct\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allVerizonStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Verizon Direct\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allVerizonStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Verizon Direct\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var verizonStats = [];\n    var verizonNet = 0;\n    if (this.allVerizonStats.length > 0) {\n      this.allVerizonStats.map((verizonOne: any) => {\n        verizonNet = verizonNet + verizonOne.revenue;\n      });\n      verizonStats.push({\n        publisher: this.allVerizonStats.length > 0 ? this.allVerizonStats[0].publisher : \"No Publisher\",\n        reporting: this.allVerizonStats.length > 0 ? this.allVerizonStats[0].reporting : \"No Reporting\",\n        revenue: verizonNet\n      });\n    }\n    \n    return verizonStats;\n  }\n\n  async getLyonStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getLyonStats(company, startDate, endDate).toPromise();\n    this.allLyonStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"lyons\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allLyonStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Lyons\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allLyonStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Lyons\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allLyonStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Lyons\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allLyonStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Lyons\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var lyonStats = [];\n    var lyonNet = 0;\n    if (this.allLyonStats.length > 0) {\n      this.allLyonStats.map((lyonOne: any) => {\n        lyonNet = lyonNet + lyonOne.revenue;\n      });\n      lyonStats.push({\n        publisher: this.allLyonStats.length > 0 ? this.allLyonStats[0].publisher : \"No Publisher\",\n        reporting: this.allLyonStats.length > 0 ? this.allLyonStats[0].reporting : \"No Reporting\",\n        revenue: lyonNet\n      });\n    }\n    \n    return lyonStats;\n  }\n\n  async getPerionStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getPerionStats(company, startDate, endDate).toPromise();\n    this.allPerionStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"perion\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allPerionStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Perion\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allPerionStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Perion\";\n              }\n            }); \n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allPerionStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"; \n                stat_2.reporting = \"Perion\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allPerionStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Perion\";\n              }\n            }); \n\n          }\n        }\n      }\n    }\n    var perionStats = [];\n    var perionNet = 0;\n    if (this.allPerionStats.length > 0) {\n      this.allPerionStats.map((perionOne: any) => {\n        perionNet = perionNet + perionOne.revenue;\n      });\n      perionStats.push({\n        publisher: this.allPerionStats.length > 0 ? this.allPerionStats[0].publisher : \"No Publisher\",\n        reporting: this.allPerionStats.length > 0 ? this.allPerionStats[0].reporting : \"No Reporting\",\n        revenue: perionNet\n      });\n    }\n    \n    return perionStats;\n  }\n\n  async getApptitudeStats(company: any, startDate: string, endDate: string) {\n    const response = await this.accountingService.getApptitudeStats(company, startDate, endDate).toPromise();\n    this.allApptitudeStats = response.stats;\n    for (var tagL of this.tagList) {\n      if (tagL.tag.advertiser == \"apptitude\") {\n        for (var tagSub of tagL.tag.subids) {\n          if (tagSub.filterTag == \"Contains\") {\n            this.allApptitudeStats.map(stat => {\n              if (stat.subid.includes(tagSub.subid)) {\n                stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat.reporting = \"Apptitude\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"StartsWith\") {\n            this.allApptitudeStats.map(stat_1 => {\n              if (stat_1.subid.startsWith(tagSub.subid)) {\n                stat_1.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_1.reporting = \"Apptitude\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"EndsWith\") {\n            this.allApptitudeStats.map(stat_2 => {\n              if (stat_2.subid.endsWith(tagSub.subid)) {\n                stat_2.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_2.reporting = \"Apptitude\";\n              }\n            });\n\n          } else if (tagSub.filterTag == \"ExactValue\") {\n            this.allApptitudeStats.map(stat_3 => {\n              if (stat_3.subid == tagSub.subid) {\n                stat_3.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\";\n                stat_3.reporting = \"Apptitude\";\n              }\n            });\n\n          }\n        }\n      }\n    }\n    var apptitudeStats = [];\n    var apptitudeNet = 0;\n    if (this.allApptitudeStats.length > 0) {\n      this.allApptitudeStats.map((rubiOne: any) => {\n        apptitudeNet = apptitudeNet + rubiOne.revenue;\n      });\n      apptitudeStats.push({\n        publisher: this.allApptitudeStats.length > 0 ? this.allApptitudeStats[0].publisher : \"No Publisher\",\n        reporting: this.allApptitudeStats.length > 0 ? this.allApptitudeStats[0].reporting : \"No Reporting\",\n        revenue: apptitudeNet\n      });\n    }\n    \n    return apptitudeStats;\n  }\n\n  //get Tags with selected company\n  async getCompanyTags(selectedCompany: string) {\n    var companyId = selectedCompany.split(\"/\")[1];\n    try {\n      const response = await this.tagService.getCompanyTags(companyId).toPromise();\n      return response;\n    } catch (error) {\n      return error;\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllReportingComponent } from './all-reporting/all-reporting.component';\r\nimport { ApptitudeComponent } from './apptitude/apptitude.component';\r\nimport { HopkinsComponent } from './hopkins/hopkins.component';\r\nimport { ImgageAdvantageComponent } from './imgage-advantage/imgage-advantage.component';\r\nimport { MediaNetComponent } from './media-net/media-net.component';\r\nimport { PerionComponent } from './perion/perion.component';\r\nimport { AdminReportingComponent } from './admin-reporting.component';\r\nimport { ThirdPartyComponent } from './third-party/third-party.component';\r\nimport { BingDirectComponent } from './bing-direct/bing-direct.component';\r\nimport { LyonsComponent } from './lyons/lyons.component';\r\nimport { RubiComponent } from './rubi/rubi.component';\r\nimport { VerizonDirectComponent } from './verizon-direct/verizon-direct.component';\r\nimport { System1Component } from './system1/system1.component';\r\nimport { ManualUpdateComponent } from './manual-update/manual-update.component';\r\nimport { ManualSplitUpdateComponent } from './manual-split-update/manual-split-update.component';\r\nimport { SolexBcComponent } from './solex-bc/solex-bc.component';\r\nimport { AccountingComponent } from './accounting/accounting.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminReportingComponent,\r\n    children: [\r\n      {\r\n        path: 'accounting',\r\n        component: AccountingComponent,\r\n      },\r\n      {\r\n        path: 'perion',\r\n        component: PerionComponent,\r\n      },\r\n      {\r\n        path: 'image-advantage',\r\n        component: ImgageAdvantageComponent,\r\n      },\r\n      {\r\n        path: 'hopkins',\r\n        component: HopkinsComponent,\r\n      },\r\n      {\r\n        path: 'apptitude',\r\n        component: ApptitudeComponent,\r\n      },\r\n      {\r\n        path: 'media-net',\r\n        component: MediaNetComponent,\r\n      },\r\n      {\r\n        path: 'bing-direct',\r\n        component: BingDirectComponent,\r\n      },\r\n      {\r\n        path: 'lyons',\r\n        component: LyonsComponent,\r\n      },\r\n      {\r\n        path: 'rubi',\r\n        component: RubiComponent,\r\n      },\r\n      {\r\n        path: 'system1',\r\n        component: System1Component,\r\n      },\r\n      {\r\n        path: 'verizon-direct',\r\n        component: VerizonDirectComponent,\r\n      },\r\n      {\r\n        path: 'third-party',\r\n        component: ThirdPartyComponent,\r\n      },\r\n      {\r\n        path: 'solex-bc',\r\n        component: SolexBcComponent,\r\n      },\r\n      {\r\n        path: 'manual-stat-update',\r\n        component: ManualUpdateComponent,\r\n      },\r\n      {\r\n        path: 'manual-split-update',\r\n        component: ManualSplitUpdateComponent,\r\n      },\r\n      { path: '', redirectTo: '', pathMatch: 'full' },\r\n      { path: '**', redirectTo: '', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminReportingRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminReportingRoutingModule } from './admin-reporting-routing.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PerionComponent } from './perion/perion.component';\r\nimport { ImgageAdvantageComponent } from './imgage-advantage/imgage-advantage.component';\r\nimport { HopkinsComponent } from './hopkins/hopkins.component';\r\nimport { ApptitudeComponent } from './apptitude/apptitude.component';\r\nimport { AllReportingComponent } from './all-reporting/all-reporting.component';\r\nimport { MediaNetComponent } from './media-net/media-net.component';\r\nimport { ThirdPartyComponent } from './third-party/third-party.component';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatNativeDateModule, MatOptionModule } from '@angular/material/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { BingDirectComponent } from './bing-direct/bing-direct.component';\r\nimport { LyonsComponent } from './lyons/lyons.component';\r\nimport { RubiComponent } from './rubi/rubi.component';\r\nimport { VerizonDirectComponent } from './verizon-direct/verizon-direct.component';\r\nimport { ManualUpdateComponent } from './manual-update/manual-update.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\nimport { ManualSplitUpdateComponent } from './manual-split-update/manual-split-update.component';\r\nimport { System1Component } from './system1/system1.component';\nimport { SolexBcComponent } from './solex-bc/solex-bc.component';\nimport { AccountingComponent } from './accounting/accounting.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PerionComponent,\r\n    ImgageAdvantageComponent,\r\n    HopkinsComponent,\r\n    ApptitudeComponent,\r\n    AllReportingComponent,\r\n    MediaNetComponent,\r\n    ThirdPartyComponent,\r\n    BingDirectComponent,\r\n    LyonsComponent,\r\n    RubiComponent,\r\n    VerizonDirectComponent,\r\n    ManualUpdateComponent,\r\n    ManualSplitUpdateComponent,\r\n    System1Component,\r\n    SolexBcComponent,\r\n    AccountingComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    AdminReportingRoutingModule,\r\n    NgxDatatableModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatListModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatSelectModule,\r\n    SharedModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    InlineSVGModule\r\n  ],\r\n  entryComponents: [],\r\n})\r\nexport class AdminReportingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-all-reporting',\r\n  templateUrl: './all-reporting.component.html',\r\n  styleUrls: ['./all-reporting.component.scss']\r\n})\r\nexport class AllReportingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>all-reporting works!</p>\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<!--Chart Data Show-->\r\n<app-reporting-revenue-chart *ngIf=\"chartData\"\r\n  [chartData]=\"chartData\"\r\n></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-3\"\r\n    (click)=\"groupProvider()\"\r\n  >\r\n    Group\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-3\"\r\n    (click)=\"backProvider()\"\r\n  >\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"publisher\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Impressions -->\r\n  <ngx-datatable-column name=\"impressions\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Impressions\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CPC -->\r\n  <ngx-datatable-column name=\"cpc\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CPC\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number: '1.2-2' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number: '1.2-2' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"split\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import { Component, AfterViewInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport * as echarts from 'echarts';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { ApptitudeService } from 'src/app/shared/service/admin-stats/apptitude.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { TagManagementService } from '../../tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-apptitude',\r\n  templateUrl: './apptitude.component.html',\r\n  styleUrls: ['./apptitude.component.scss'],\r\n})\r\nexport class ApptitudeComponent implements AfterViewInit {\r\n  //Chart setup variables\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  @ViewChild('expandableTable') table: any;\r\n  chartData: ChartDataInterface;\r\n\r\n  expanded: any = {};\r\n  allStats: any[];\r\n  summaryMetrics: any;\r\n  tagList: any = [];\r\n  groupFlag = false;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private apptitudeService: ApptitudeService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyStored();\r\n  }\r\n\r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n    this.rows = [];\r\n\r\n    this.rows = await this.getAllApptitudeStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n   \r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  getAllApptitudeStats(company, startDate, endDate) {\r\n    return this.apptitudeService.getApptitudeStats(company, startDate, endDate).toPromise().then((response) => {\r\n      console.log('getApptitudeStats() response:', response);\r\n      this.loadingIndicator = false;\r\n      this.allStats = response.stats;\r\n      this.allStats.map(function(resStat) {\r\n        resStat.publisher = \"No Publisher\"\r\n        // resStat.tagname = \"No Tag\" \r\n      });\r\n      for (var tagL of this.tagList) {\r\n        if(tagL.tag.advertiser == \"apptitude\") {\r\n          for (var tagSub of tagL.tag.subids) {\r\n            if(tagSub.filterTag ==\"Contains\") {\r\n              this.allStats.map(stat => {\r\n                if (stat.subid.includes(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  // stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } else if (tagSub.filterTag ==\"StartsWith\") {\r\n              this.allStats.map(stat => {\r\n                if (stat.subid.startsWith(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  // stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } else if (tagSub.filterTag ==\"EndsWith\") {\r\n              this.allStats.map(stat => {\r\n                if (stat.subid.endsWith(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  // stat.tagname = tagL.tag.name\r\n                }\r\n              }) \r\n              \r\n            } else if (tagSub.filterTag ==\"ExactValue\") {\r\n              this.allStats.map(stat => {\r\n                if (stat.subid == tagSub.subid) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  // stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } \r\n          }\r\n        }\r\n      }\r\n      return this.allStats;\r\n    });\r\n    \r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyStored() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  public async updateReportingFiltering(range) {\r\n    this.range = range;\r\n    \r\n    this.rows = await this.getAllApptitudeStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.groupFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStats.reduce(function(r, o) {\r\n        var key = o.publisher;\r\n        \r\n        if(!helperSummary[key]) {\r\n          helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n          helperSummary[key].counter = 1;\r\n          r.push(helperSummary[key]);\r\n        } else {\r\n          helperSummary[key].clicks += parseFloat(o.clicks);\r\n          helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n          helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n          helperSummary[key].impressions += parseFloat(o.impressions ? o.impressions : 0);\r\n          helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n          helperSummary[key].revenue += parseFloat(o.revenue);\r\n          helperSummary[key].split += parseFloat(o.split);\r\n          helperSummary[key].counter++;\r\n        } \r\n        return r;\r\n      }, []);\r\n      for (var group of groupData) {\r\n        group.split = group.split / group.counter;\r\n        group.cpc = group.cpc / group.counter;\r\n        group.ctr = group.ctr / group.counter;\r\n\r\n      }\r\n      this.rows = groupData;\r\n      this.groupFlag = true;\r\n    this.cdr.markForCheck();\r\n  }\r\n  backProvider() {\r\n    this.rows = this.allStats;\r\n    this.groupFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  getChartMetrics(company, startDate, endDate) {\r\n    return this.apptitudeService\r\n      .getChartMetrics(company, startDate, endDate)\r\n      .toPromise()\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  }\r\n  getSummaryMetrics(company) {\r\n    return this.apptitudeService.getSummaryMetrics(company).toPromise().then((response) => {\r\n      console.log('Got summary metrics');\r\n      var allSummary = {};\r\n      var currentPercentPace = 0;\r\n      var lastPercentPace = 0;\r\n      if(response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n      }\r\n      if(response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n      }\r\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n      allSummary['summary'] = response.summary;\r\n      return allSummary;\r\n    })\r\n  }\r\n\r\n  //get Tags with selected company\r\n  getCompanyTags(selectedCompany) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bing-direct',\r\n  templateUrl: './bing-direct.component.html',\r\n  styleUrls: ['./bing-direct.component.scss']\r\n})\r\nexport class BingDirectComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>bing-direct works!</p>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as echarts from 'echarts';\r\n\r\n@Component({\r\n  selector: 'app-hopkins',\r\n  templateUrl: './hopkins.component.html',\r\n  styleUrls: ['./hopkins.component.scss'],\r\n})\r\nexport class HopkinsComponent implements OnInit {\r\n  //Chart setup variables\r\n  chartDom;\r\n  myChart;\r\n  option;\r\n  rows = [\r\n    {\r\n      name: 'Greg',\r\n      tag: 'XML Hopkins',\r\n      totalSearches: '759123',\r\n      monetizedSearches: '431231',\r\n      revenue: '19623',\r\n      clicks: 50351,\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    let revenueByDayArray = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (8000 - 4000) + 4000)\r\n    );\r\n    let searchesPerDay = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (100000 - 40000) + 40000)\r\n    );\r\n    this.setChartOptions(\r\n      10000,\r\n      100000,\r\n      [\r\n        'Nov 1, Nov 2, Nov 3, Nov 4',\r\n        'Nov 5',\r\n        'Nov 5',\r\n        'Nov 6',\r\n        'Nov 7',\r\n        'Nov 8',\r\n        'Nov 9',\r\n        'Nov 10',\r\n        'Nov 11',\r\n        'Nov 12',\r\n        'Nov 13',\r\n        'Nov 14',\r\n        'Nov 15',\r\n        'Nov 16',\r\n        'Nov 17',\r\n        'Nov 18',\r\n        'Nov 19',\r\n        'Nov 20',\r\n      ],\r\n      revenueByDayArray,\r\n      searchesPerDay\r\n    );\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  public updateReportingFiltering(range) {\r\n    // this.range = range;\r\n    // this.getAllPerionStats(\r\n    //   'manic_perion',\r\n    //   this.range.startDate,\r\n    //   this.range.endDate\r\n    // );\r\n    console.log('Report');\r\n  }\r\n\r\n  setChartOptions(\r\n    maxRevenue,\r\n    maxSearches,\r\n    daysArray,\r\n    revenueByDayArray,\r\n    searchesPerDay\r\n  ) {\r\n    this.chartDom = document.getElementById('main')!;\r\n    this.myChart = echarts.init(this.chartDom);\r\n\r\n    this.option = {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          crossStyle: {\r\n            color: '#999',\r\n          },\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          dataView: { show: true, readOnly: false },\r\n          magicType: { show: true, type: ['line', 'bar'] },\r\n          restore: { show: true },\r\n          saveAsImage: { show: true },\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['Revenue', 'Searches'],\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: daysArray,\r\n          axisPointer: {\r\n            type: 'shadow',\r\n          },\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          name: 'Revenue',\r\n          min: 0,\r\n          max: maxRevenue,\r\n          interval: 25000,\r\n          axisLabel: {\r\n            formatter: '${value}',\r\n          },\r\n        },\r\n        {\r\n          type: 'value',\r\n          name: 'Searches',\r\n          min: 0,\r\n          max: maxSearches,\r\n          interval: 100000,\r\n          axisLabel: {\r\n            formatter: '{value}',\r\n          },\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'Revenue',\r\n          type: 'bar',\r\n          data: revenueByDayArray,\r\n        },\r\n        {\r\n          name: 'Searches',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: searchesPerDay,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.option && this.myChart.setOption(this.option);\r\n  }\r\n}\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<div id=\"main\" style=\"width: 100%; height: 300px\"></div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Month to Date Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Revenue Pace: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit Pace: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +0%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Last Month Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +11%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-imgage-advantage',\r\n  templateUrl: './imgage-advantage.component.html',\r\n  styleUrls: ['./imgage-advantage.component.scss'],\r\n})\r\nexport class ImgageAdvantageComponent implements OnInit {\r\n  rows = [\r\n    {\r\n      name: 'Greg',\r\n      tag: 'YHS Organic',\r\n      totalSearches: '536412',\r\n      monetizedSearches: '501235',\r\n      revenue: '52623',\r\n      clicks: 50351,\r\n      followOn: '13%',\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Month to Date Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $103,201.26</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Revenue Pace: $131,285.19</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $21,109.59</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit Pace: $173,121.45</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +27%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Last Month Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $113,542.23</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $14,121.39</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +11%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"followOn\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Follow On\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<app-reporting-revenue-chart *ngIf=\"chartData\"\r\n  [chartData]=\"chartData\"\r\n></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetricsData\" [summaryMetricsData]=\"summaryMetricsData\"></app-summary-metrics>\r\n\r\n<!-- <button class=\"btn btn-sm btn-dark\"\r\n  (click)=\"updateAllLyonStats(selectedCompany, range.startDate, range.endDate)\"\r\n>\r\n  updateAllLyonStats\r\n</button>\r\n\r\n<button class=\"btn btn-sm btn-primary\" (click)=\"getAllLyonStats(range.startDate, range.endDate)\">\r\n  getAllLyonStats\r\n</button>\r\n\r\n<button class=\"btn btn-sm btn-info\" (click)=\"getSummaryMetrics(selectedCompany)\">getSummaryMetrics</button> -->\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-3\"\r\n    (click)=\"groupProvider()\"\r\n  >\r\n    Group\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-3\"\r\n    (click)=\"backProvider()\"\r\n  >\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"30\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Tag -->\r\n  <!-- <ngx-datatable-column name=\"tagname\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column> -->\r\n\r\n  <!-- Publisher -->\r\n  <ngx-datatable-column name=\"publisher\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  <!-- BID SEARCHES -->\r\n  <ngx-datatable-column name=\"biddedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Bid Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  \r\n  <!-- biddedCTR -->\r\n  <ngx-datatable-column name=\"biddedCtr\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      BiddedCTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number: '2.2-2') || (0 | number: '2.2-2') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{\r\n        (value | number: '2.2-2') || (0 | number: '2.2-2')\r\n      }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Split -->\r\n  <ngx-datatable-column name=\"split\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Spilt\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n        <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PROFIT -->\r\n  <ngx-datatable-column name=\"profit\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Profit\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { LyonService } from 'src/app/shared/service/admin-stats/lyon.service';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-lyons',\r\n  templateUrl: './lyons.component.html',\r\n  styleUrls: ['./lyons.component.scss']\r\n})\r\nexport class LyonsComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  summary = {\r\n    revenue: 0,\r\n    profit: 0,\r\n  };\r\n  loadingIndicator = true;\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n\r\n  tagList: any = [];\r\n  //Sends chartData to ReportingRevenueChartComponent\r\n  chartData: ChartDataInterface;\r\n\r\n  //Sends summaryMetrics to SummaryMetricsComponent\r\n  summaryMetricsData: any;\r\n  currentMonthData: any;\r\n  beforeMonthData: any;\r\n  twoBeforeMonthData: any;\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  allstat: any;\r\n  allChart: any;\r\n  filteredLyonStat: any[] = [];\r\n  groupFlag = false\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor(\r\n    private lyonService: LyonService,\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n   }\r\n    \r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n    \r\n    this.rows = [];\r\n    this.rows = await this.getAllLyonStats(\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    \r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetricsData =await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  async routeTester() {\r\n    console.log('Testing Route');\r\n    this.lyonService.testingRoute().subscribe((response) => {\r\n      console.log(response);\r\n    }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  //get Tags with selected company\r\n  getCompanyTags(selectedCompany) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    })\r\n  }\r\n  //get Stat all\r\n  getAllLyonStats(startDate, endDate) {\r\n    return this.lyonService.getAllStats(startDate, endDate).toPromise().then((response) => {    \r\n      this.loadingIndicator = false;\r\n      this.allstat = response;\r\n      this.allstat.map(function(resStat) {\r\n        resStat.publisher = \"No Publisher\"\r\n        resStat.tagname = \"No Tag\"\r\n      });\r\n      // var allLyonStat = [];\r\n      for (var tagL of this.tagList) {\r\n        if(tagL.tag.advertiser == \"lyons\") {\r\n          for (var tagSub of tagL.tag.subids) {\r\n            if(tagSub.filterTag ==\"Contains\") {\r\n              \r\n              this.allstat.map(stat => {\r\n                if (stat.subid.includes(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } else if (tagSub.filterTag ==\"StartsWith\") {\r\n              this.allstat.map(stat => {\r\n                if (stat.subid.startsWith(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } else if (tagSub.filterTag ==\"EndsWith\") {\r\n              this.allstat.map(stat => {\r\n                if (stat.subid.endsWith(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              }) \r\n              \r\n            } else if (tagSub.filterTag ==\"ExactValue\") {\r\n              this.allstat.map(stat => {\r\n                if (stat.subid == tagSub.subid) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } \r\n          }\r\n        }\r\n        \r\n      }\r\n      \r\n      //duplicated remove\r\n      // let filtered_data = this.allstat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      // var helper = {};\r\n      // filtered_data.map(f =>{\r\n      //   f.revenue = parseFloat(f.revenue);\r\n      //   f.ctr = parseFloat(f.ctr);\r\n      //   f.biddedCtr = parseFloat(f.biddedCTR);\r\n      //   f.split = parseFloat(f.split);\r\n      //   f.searches = parseFloat(f.searches);\r\n      //   f.biddedSearches = parseFloat(f.biddedSearches);\r\n      //   f.clicks = parseFloat(f.clicks);\r\n      // });\r\n      //Calculate the sums and group data (while tracking count)\r\n      // var resultAll = filtered_data.reduce(function(prev, current) {\r\n      //   var key = (current.date).toString() + '-' + current.subid;\r\n      //   if(!helper[key]) {\r\n      //     helper[key] = Object.assign({}, current); // create a copy of o\r\n      //     helper[key].count = 1;\r\n      //     prev.push(helper[key]);\r\n      //   } else {\r\n      //     helper[key].clicks += parseInt(current.clicks);\r\n      //     helper[key].searches += parseInt(current.searches);\r\n      //     if(current.biddedCtr) {\r\n      //       helper[key].biddedCtr += current.biddedCtr;\r\n      //     }\r\n      //     if(current.ctr) {\r\n      //       helper[key].ctr += current.ctr;\r\n      //     }\r\n      //     if(current.revenue) {\r\n      //       helper[key].revenue += current.revenue;\r\n      //     }\r\n          \r\n      //     helper[key].biddedSearches += parseInt(current.biddedSearches);\r\n      //     helper[key].count += 1;\r\n      //     helper[key].split += parseInt(current.split);\r\n      //     // helper[key].split_num = 70;\r\n      //   }\r\n      //   return prev;\r\n      // }, []);\r\n      \r\n      // resultAll.map((item) => {\r\n      //   item.split = item.split/item.count\r\n      // })\r\n      // return resultAll;\r\n      return this.allstat;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    });\r\n    \r\n  }\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allstat.reduce(function(r, o) {\r\n        var key = o.publisher;\r\n        \r\n        if(!helperSummary[key]) {\r\n          helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n          helperSummary[key].counter = 1;\r\n          r.push(helperSummary[key]);\r\n        } else {\r\n          helperSummary[key].clicks += parseFloat(o.clicks);\r\n          helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n          helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n          helperSummary[key].biddedCtr += parseFloat(o.biddedCtr ? o.biddedCtr : 0);\r\n          helperSummary[key].biddedSearches += parseFloat(o.biddedSearches ? o.biddedSearches : 0);\r\n          helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n          helperSummary[key].revenue += parseFloat(o.revenue);\r\n          helperSummary[key].profit += parseFloat(o.profit);\r\n          helperSummary[key].split += parseFloat(o.split);\r\n          helperSummary[key].counter++;\r\n        } \r\n        return r;\r\n      }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n      group.biddedCtr = group.biddedCtr / group.counter;\r\n      group.ctr = group.ctr / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupFlag = true;\r\n    this.cdr.markForCheck();\r\n  }\r\n  backProvider() {\r\n    this.rows = this.allstat;\r\n    this.groupFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  updateAllLyonStats(company, startDate, endDate) {\r\n    this.lyonService\r\n      .updateAllLyonStats(company, startDate, endDate)\r\n      .subscribe((response) => {\r\n        console.log(response);\r\n      }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  public async updateReportingFiltering(range) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllLyonStats(\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetricsData = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.groupFlag = false;\r\n    this.refreshTable();\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  getSummaryMetrics(company) {\r\n    return this.lyonService.getSummaryMetrics(company).toPromise().then((response) => {    \r\n      this.currentMonthData = response[0].summaryMetrics;\r\n      this.beforeMonthData = response[0].lastMonthStat;  \r\n      this.twoBeforeMonthData = response[0].twoLastMonthStat;  \r\n      var dayInCurrentMonth = response[0].dayInCurrentMonth;\r\n      var dayInBeforeMonth = response[0].dayInBeforeMonth;\r\n      var dayInTwoBeforeMonth = response[0].dayInTwoBeforeMonth;\r\n      // var summaryCurrentStat = [];\r\n      //current data get part\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       summaryCurrentStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n            \r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid == tagSub.subid ))\r\n      //     }\r\n      //   }\r\n      // }\r\n      \r\n      // //duplicated remove\r\n      // let filter_data = summaryCurrentStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      \r\n      var helperSummary = {};\r\n      this.currentMonthData.map(f =>{\r\n        f.revenue = parseFloat(f.revenue);\r\n        // f.ctr = parseFloat(f.ctr);\r\n        // f.biddedCtr = parseFloat(f.biddedCTR);\r\n      })\r\n      \r\n      var resultSummary = this.currentMonthData.reduce(function(r, o) {\r\n        var key = o.date;\r\n        if(!helperSummary[key]) {\r\n          helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n          r.push(helperSummary[key]);\r\n        } else {\r\n          helperSummary[key].searches += parseInt(o.searches);\r\n          if(o.revenue) {\r\n            helperSummary[key].revenue += o.revenue;\r\n          }\r\n        } \r\n        return r;\r\n      }, []);\r\n      \r\n      var monthRevenue = 0;\r\n      var monthProfit = 0;\r\n      var monthRevenuePace = 0;\r\n      var profitPace = 0;\r\n      for(var sumData of resultSummary) {\r\n        monthRevenue += sumData.revenue;\r\n        monthProfit += sumData.revenue *(100 - sumData.split) * 0.01;\r\n        monthRevenuePace += (sumData.revenue/resultSummary.length) * dayInCurrentMonth;\r\n        profitPace += (sumData.revenue *(100 - sumData.split) * 0.01/resultSummary.length)*dayInCurrentMonth;\r\n      }\r\n\r\n      //before month data get part\r\n      // var summaryBeforeStat = [];\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       summaryBeforeStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n            \r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid == tagSub.subid ))\r\n      //     }\r\n      //   }\r\n      // }\r\n      \r\n      // // //duplicated remove\r\n      // let filt_data = summaryBeforeStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      \r\n      var helperBeforeSummary = {};\r\n      this.beforeMonthData.map(f =>{\r\n        f.revenue = parseFloat(f.revenue);\r\n        // f.ctr = parseFloat(f.ctr);\r\n        // f.biddedCtr = parseFloat(f.biddedCTR);\r\n      })\r\n      \r\n      var resultBeforeSummary = this.beforeMonthData.reduce(function(r, o) {\r\n        var key = o.date;\r\n        if(!helperBeforeSummary[key]) {\r\n          helperBeforeSummary[key] = Object.assign({}, o); // create a copy of o\r\n          r.push(helperBeforeSummary[key]);\r\n        } else {\r\n          helperBeforeSummary[key].searches += parseInt(o.searches);\r\n          if(o.revenue) {\r\n            helperBeforeSummary[key].revenue += o.revenue;\r\n          }\r\n        } \r\n        return r;\r\n      }, []);\r\n      var monthBeforeRevenue = 0;\r\n      var monthBeforeProfit = 0;\r\n      var monthBeforeRevenuePace = 0;\r\n      var profitBeforePace = 0;\r\n      for(var sumBeforeData of resultBeforeSummary) {\r\n        monthBeforeRevenue += sumBeforeData.revenue;\r\n        monthBeforeProfit += sumBeforeData.revenue *(100 - sumBeforeData.split) * 0.01;\r\n        monthBeforeRevenuePace += (sumBeforeData.revenue/resultBeforeSummary.length) * dayInBeforeMonth;\r\n        profitBeforePace += (sumBeforeData.revenue *(100 - sumBeforeData.split) * 0.01/resultBeforeSummary.length)*dayInBeforeMonth;\r\n      }\r\n\r\n      //tow before month data get part\r\n      // var summaryTwoBeforeStat = [];\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       summaryTwoBeforeStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n            \r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid == tagSub.subid ))\r\n      //     }\r\n      //   }\r\n      // }\r\n      \r\n      // // //duplicated remove\r\n      // let filter_two_data = summaryTwoBeforeStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      \r\n      var helperTwoBeforeSummary = {};\r\n      this.twoBeforeMonthData.map(f =>{\r\n        f.revenue = parseFloat(f.revenue);\r\n        // f.ctr = parseFloat(f.ctr);\r\n        // f.biddedCtr = parseFloat(f.biddedCTR);\r\n      })\r\n      \r\n      var resultTwoBeforeSummary = this.twoBeforeMonthData.reduce(function(r, o) {\r\n        var key = o.date;\r\n        if(!helperTwoBeforeSummary[key]) {\r\n          helperTwoBeforeSummary[key] = Object.assign({}, o); // create a copy of o\r\n          r.push(helperTwoBeforeSummary[key]);\r\n        } else {\r\n          helperTwoBeforeSummary[key].searches += parseInt(o.searches);\r\n          if(o.revenue) {\r\n            helperTwoBeforeSummary[key].revenue += o.revenue;\r\n          }\r\n        } \r\n        return r;\r\n      }, []);\r\n      var monthTwoBeforeRevenue = 0;\r\n      var monthTwoBeforeProfit = 0;\r\n      var monthTwoBeforeRevenuePace = 0;\r\n      var profitTwoBeforePace = 0;\r\n      for(var sumTwoBeforeData of resultTwoBeforeSummary) {\r\n        monthTwoBeforeRevenue += sumTwoBeforeData.revenue;\r\n        monthTwoBeforeProfit += sumTwoBeforeData.revenue *(100 - sumTwoBeforeData.split) * 0.01;\r\n        monthTwoBeforeRevenuePace += (sumTwoBeforeData.revenue/resultTwoBeforeSummary.length) * dayInTwoBeforeMonth;\r\n        profitTwoBeforePace += (sumTwoBeforeData.revenue *(100 - sumTwoBeforeData.split) * 0.01/resultTwoBeforeSummary.length)*dayInTwoBeforeMonth;\r\n      }\r\n      var currentPercentPace = 0;\r\n      var lastPercentPace = 0;\r\n      if (profitBeforePace != 0) {\r\n        currentPercentPace = ((profitPace - profitBeforePace) / profitBeforePace) * 100\r\n      }\r\n      if (profitTwoBeforePace != 0) {\r\n        lastPercentPace = ((profitBeforePace - profitTwoBeforePace) / profitTwoBeforePace) * 100\r\n      }\r\n      var summaryFinalData = [];\r\n      summaryFinalData.push({\r\n        summaryMetrics: [{\r\n          revenue: monthRevenue,\r\n          revenuePace: monthRevenuePace,\r\n          profit: monthProfit,\r\n          profitPace: profitPace,\r\n          percentPace: currentPercentPace\r\n        }],\r\n        lastMonthStat: [{\r\n          revenue: monthBeforeRevenue,\r\n          revenuePace: monthBeforeRevenuePace,\r\n          profit: monthBeforeProfit,\r\n          profitPace: profitBeforePace,\r\n          percentPace: lastPercentPace\r\n        }]\r\n      });\r\n      var allSummary = {};\r\n      allSummary['summary'] = summaryFinalData;\r\n      return allSummary;\r\n        // this.combineSummaryMetrics(response);\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      })\r\n  }\r\n\r\n  getChartMetrics(company, startDate, endDate) {\r\n    return this.lyonService.getAllStats(startDate, endDate).toPromise().then((response) => {  \r\n      var sortResponse = response.slice().sort((a, b) => a.date - b.date)  \r\n      this.allChart = sortResponse;\r\n      // var chartAllLyonStat = [];\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       chartAllLyonStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n      //       chartAllLyonStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //       chartAllLyonStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid == tagSub.subid ))\r\n      //       chartAllLyonStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     }\r\n      //   }\r\n      // }\r\n      \r\n      //duplicated remove\r\n      // let filter_data = chartAllLyonStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      var helperChart = {};\r\n      // this.allChart.map(f =>{\r\n      //   f.revenue = parseFloat(f.revenue);\r\n      //   f.ctr = parseFloat(f.ctr);\r\n      //   f.searches = parseFloat(f.searches);\r\n      //   f.biddedCtr = parseFloat(f.biddedCTR);\r\n      // })\r\n      \r\n      var resultChart = this.allChart.reduce(function(r, o) {\r\n        var key = o.date;\r\n        if(!helperChart[key]) {\r\n          helperChart[key] = Object.assign({}, o); // create a copy of o\r\n          r.push(helperChart[key]);\r\n        } else {\r\n          helperChart[key].searches += parseInt(o.searches);\r\n          if(o.revenue) {\r\n            helperChart[key].revenue += o.revenue;\r\n          }\r\n        } \r\n        return r;\r\n      }, []);\r\n      \r\n      var revenuePerDayVal = [];\r\n      var datesOfRevenueVal = [];\r\n      var searchesPerDayVal = [];\r\n      var chartDataValue = {};\r\n      for(var resVal of resultChart) {\r\n        revenuePerDayVal.push(resVal.revenue);\r\n        datesOfRevenueVal.push(resVal.date);\r\n        searchesPerDayVal.push(resVal.searches);\r\n      }\r\n      chartDataValue['revenuePerDay'] = revenuePerDayVal;\r\n      chartDataValue['datesOfRevenue'] = datesOfRevenueVal;\r\n      chartDataValue['searchesPerDay'] = searchesPerDayVal;\r\n      return chartDataValue;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    });\r\n  }\r\n\r\n  combineSummaryMetrics(metrics) {\r\n    metrics.summary.keys.forEach((element) => {\r\n      this.summary.revenue += element.revenue;\r\n      this.summary.profit += element.revenue * ((100 - element.split) * 0.01);\r\n    });\r\n  }\r\n\r\n  createChartData(stats) {}\r\n  \r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { ManualUpdateService } from 'src/app/shared/service/admin-stats/update.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\nimport { CompanyManagementService } from 'src/app/modules/company-management/company-management.service';\r\nimport * as moment from 'moment';\r\nimport { TagManagementService } from '../../tag-management/tag-management.service';\r\n\r\ninterface preSetDateRanges {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\ninterface PreSetDateRange {\r\n  startDate: string;\r\n  endDate: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-manual-split-update',\r\n  templateUrl: './manual-split-update.component.html',\r\n  styleUrls: ['./manual-split-update.component.scss']\r\n})\r\nexport class ManualSplitUpdateComponent implements OnInit {\r\n  manaulUpFG: FormGroup;\r\n  tagData: any =[];\r\n\r\n  preSetDateRanges: preSetDateRanges[];\r\n  range: FormGroup;\r\n  selectedRange: PreSetDateRange;\r\n\r\n  preSelectValue: String;\r\n\r\n  preSelectDates: any;\r\n  companySelected: any;\r\n  currentUser: any;\r\n  selectedTagName = '';\r\n\r\n  constructor(\r\n    private manualUpdateService: ManualUpdateService,\r\n    private fb: FormBuilder, \r\n    private companyService: CompanyManagementService,\r\n    private authService: AuthService,\r\n    private userService: UsersService,\r\n    private notification: NotificationService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.currentUser = this.authService.currentUserValue;\r\n    this.companySelected = this.getSelectedCompanyLocalStorage();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllTags();\r\n    this.manaulUpFG = this.fb.group({\r\n      tag: new FormControl('', Validators.required),\r\n      preSelectValue: new FormControl('', Validators.required),\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required),\r\n    })\r\n    //Get the all PRESELECT ranges\r\n    this.preSetDateRanges = this.getDateRanges();\r\n    this.range = new FormGroup({\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required)\r\n    });\r\n\r\n    //Selected range of date picker\r\n    this.selectedRange = {\r\n      startDate: '',\r\n      endDate: '',\r\n    };\r\n\r\n    //Starting value of mat select\r\n    this.preSelectValue = 'last7days';\r\n\r\n    //Gets the true start and end date values in date format\r\n    this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\r\n\r\n    //Manually updates the mat date picker with new start and end dates\r\n    this.updateDatePickerRange(\r\n      this.preSelectDates.startDate,\r\n      this.preSelectDates.endDate\r\n    );\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  //get All tags List\r\n  getAllTags() {\r\n    this.tagService.getAllTags().subscribe((response) => {\r\n      var resData = [];\r\n      if(this.companySelected) {\r\n        resData = response.filter(res => res.company[0]['_id'] == this.companySelected);\r\n      }\r\n      if (resData.length > 0) {\r\n        this.tagData = [{value: 'all tag', viewValue: 'All Tag'}];\r\n      }\r\n      resData.map(res => {\r\n        this.tagData.push({\r\n          value: res._id,\r\n          viewValue: res.name\r\n        })\r\n      })\r\n    });\r\n    // if(this.companySelected) {\r\n    //   this.companyService.getOneCompany(this.companySelected.split('/')[1]).subscribe(res => {\r\n    //     res.reportingProviders.map(report=> {\r\n    //       this.tagData.push({\r\n    //         value: report.reportingProvider,\r\n    //         viewValue: report.reportingProvider\r\n    //       })\r\n    //     });\r\n    //   });\r\n    // } \r\n  }\r\n  //Updates the date picker range manually\r\n  //Params startDate and endDate\r\n  updateDatePickerRange(startDate: moment.MomentInput, endDate: moment.MomentInput) {\r\n    this.manaulUpFG.patchValue({\r\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\r\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\r\n    });\r\n    this.range.patchValue({\r\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\r\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\r\n    });\r\n  }\r\n  //Grabbing the mat selector options\r\n  private getDateRanges() {\r\n    return [\r\n      { value: 'today', viewValue: 'Today' },\r\n      { value: 'yesterday', viewValue: 'Yesterday' },\r\n      { value: 'last7days', viewValue: 'Last 7 Days' },\r\n      { value: 'last30days', viewValue: 'Last 30 Days' },\r\n      { value: 'monthToDate', viewValue: 'Month to Date' },\r\n      { value: 'lastMonth', viewValue: 'Last Month' },\r\n      { value: 'custom', viewValue: 'Custom' },\r\n    ];\r\n  }\r\n  //Monitors mat selector, if changed (and not custom). updates the actual date picker\r\n  onPreSetRangeSelectChange(selection: any) {\r\n    if (selection.value !== 'custom') {\r\n      this.preSelectValue = selection.value;\r\n      this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\r\n\r\n      //Updates the date picker range manually\r\n      this.updateDatePickerRange(\r\n        this.preSelectDates.startDate,\r\n        this.preSelectDates.endDate\r\n      );\r\n    }\r\n  }\r\n  //Convert mat selector options and return actual dates\r\n  private getPreSetDateRange(selection: any) {\r\n    let dateFormat = 'MM-DD-YYYY';\r\n    switch (selection) {\r\n      case 'today':\r\n        return {\r\n          startDate: moment().utc().startOf('day').format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'yesterday':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(1, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment()\r\n            .subtract(1, 'days')\r\n            .utc()\r\n            .endOf('day')\r\n            .format(dateFormat),\r\n        };\r\n      case 'last7days':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(7, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'last30days':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(30, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'monthToDate':\r\n        return {\r\n          startDate: moment()\r\n            .startOf('month')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'lastMonth':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(1, 'months')\r\n            .startOf('month')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment()\r\n            .utc()\r\n            .subtract(1, 'months')\r\n            .endOf('month')\r\n            .format(dateFormat),\r\n        };\r\n    }\r\n  }\r\n  handleTag(event) {\r\n    this.selectedTagName = this.tagData.filter(tag => tag.value == event.value)[0].viewValue;\r\n  }\r\n\r\n  onReportSubmit() {\r\n    if (this.manaulUpFG.valid) {\r\n      this.manaulUpFG.addControl('company',new FormControl('', Validators.required));\r\n      this.manaulUpFG.patchValue({\r\n        company: this.companySelected,\r\n      });\r\n      this.manualUpdateService.updateManualSplit(this.manaulUpFG.value).subscribe((response) => {\r\n        var checkExist = this.isObjectEmpty(response);\r\n        if(!checkExist) {\r\n          this.notification.showSuccess(`${this.selectedTagName} data splits  successfully updated!`, \"\")\r\n        } else {\r\n          this.notification.showWarning(`${this.selectedTagName} data not existed!`, \"\")\r\n        }\r\n      })\r\n    }\r\n  }\r\n  isObjectEmpty(obj: {}) {\r\n    return Object.keys(obj).length === 0;\r\n  }\r\n  //Detects when datepicker change is updated\r\n  public changeDatePicker(): void {\r\n    if (this.range.valid) {\r\n      \r\n      this.selectedRange.startDate = this.range.value.startDate;\r\n      this.selectedRange.endDate = this.range.value.endDate;\r\n\r\n      this.manaulUpFG.patchValue({\r\n        startDate: moment(this.range.value.startDate, 'MM-DD-YYYY').toDate(),\r\n        endDate: moment(this.range.value.endDate, 'MM-DD-YYYY').toDate(),\r\n      });\r\n\r\n      this.preSelectValue = 'custom';\r\n    }\r\n  }\r\n}\r\n","<form class=\"example-container\" id=\"manaulUpForm\" [formGroup]=\"manaulUpFG\" (ngSubmit)=\"onReportSubmit()\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xl-6\">\r\n            <div class=\"card card-custom example example-compact gutter-b\">\r\n                <div class=\"card-header\">\r\n                    <div class=\"card-title\">\r\n                        <h3 class=\"card-label\">Report Split Update</h3>\r\n                    </div>\r\n                </div>  \r\n                \r\n                <div class=\"card-body\">\r\n                    <mat-form-field>\r\n                        <mat-label>Tag</mat-label>\r\n                        <mat-select matNativeControl placeholder=\"Select Report\" formControlName=\"tag\" (selectionChange)=\"handleTag($event)\">\r\n                          <mat-option\r\n                            *ngFor=\"let tagItem of tagData\"\r\n                            [value]=\"tagItem.value\"\r\n                          >\r\n                            {{ tagItem.viewValue }}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <mat-label>Enter a custom date range</mat-label>\r\n                        <mat-date-range-input\r\n                          [rangePicker]=\"picker\"\r\n                          [formGroup]=\"range\"\r\n                          (dateChange)=\"changeDatePicker()\"\r\n                        >\r\n                          <input\r\n                            matStartDate\r\n                            formControlName=\"startDate\"\r\n                            placeholder=\"Start date\"\r\n                            required\r\n                          />\r\n                          <input\r\n                            matEndDate\r\n                            formControlName=\"endDate\"\r\n                            placeholder=\"End date\"\r\n                            required\r\n                            (dateChange)=\"changeDatePicker()\"\r\n                          />\r\n                        </mat-date-range-input>\r\n                        <mat-datepicker-toggle\r\n                          matSuffix\r\n                          [for]=\"picker\"\r\n                        ></mat-datepicker-toggle>\r\n                        <mat-date-range-picker #picker></mat-date-range-picker>\r\n              \r\n                        <mat-error\r\n                          *ngIf=\"manaulUpFG.controls.startDate.hasError('matStartDateInvalid')\"\r\n                          >Invalid start date</mat-error\r\n                        >\r\n                        <mat-error\r\n                          *ngIf=\"manaulUpFG.controls.endDate.hasError('matEndDateInvalid')\"\r\n                          >Invalid end date</mat-error\r\n                        >\r\n                        <!-- Required Date Messages -->\r\n                        <mat-error *ngIf=\"manaulUpFG.controls.startDate.errors?.required\">Start Date Required</mat-error>\r\n                        <mat-error *ngIf=\"manaulUpFG.controls.endDate.errors?.required\">End Date Required</mat-error>\r\n                    </mat-form-field>\r\n            \r\n                    <mat-form-field>\r\n                    <mat-label>Preset Date Range</mat-label>\r\n                    <mat-select\r\n                        [(ngModel)]=\"preSelectValue\"\r\n                        (selectionChange)=\"onPreSetRangeSelectChange($event)\"\r\n                        formControlName=\"preSelectValue\"\r\n                    >\r\n                        <mat-option\r\n                        *ngFor=\"let dateRange of preSetDateRanges\"\r\n                        [value]=\"dateRange.value\"\r\n                        >\r\n                        {{ dateRange.viewValue }}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    </mat-form-field>\r\n                    <!-- update report -->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xl-6\">\r\n                            <button mat-raised-button color=\"primary\" type=\"submit\">Update Splits</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { CompanyManagementService } from 'src/app/modules/company-management/company-management.service';\r\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { ManualUpdateService } from 'src/app/shared/service/admin-stats/update.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\n\r\ninterface preSetDateRanges {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\ninterface PreSetDateRange {\r\n  startDate: string;\r\n  endDate: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-manual-update',\r\n  templateUrl: './manual-update.component.html',\r\n  styleUrls: ['./manual-update.component.scss']\r\n})\r\nexport class ManualUpdateComponent implements OnInit {\r\n  reportUpdateTitle = 'Report Stat Update'\r\n  manaulUpFG: FormGroup;\r\n  reportTypeData: any =[];\r\n\r\n  preSetDateRanges: preSetDateRanges[];\r\n  range: FormGroup;\r\n  selectedRange: PreSetDateRange;\r\n\r\n  preSelectValue: String;\r\n\r\n  preSelectDates: any;\r\n  companySelected: any;\r\n\r\n  currentUser: any;\r\n  constructor(\r\n    private manualUpdateService: ManualUpdateService,\r\n    private fb: FormBuilder, \r\n    private companyService: CompanyManagementService,\r\n    private authService: AuthService,\r\n    private userService: UsersService,\r\n    private notification: NotificationService,\r\n  ) { \r\n    this.currentUser = this.authService.currentUserValue;\r\n    this.companySelected = this.getSelectedCompanyLocalStorage();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getReportingProviderList();\r\n    this.manaulUpFG = this.fb.group({\r\n      reportType: new FormControl('', Validators.required),\r\n      preSelectValue: new FormControl('', Validators.required),\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required),\r\n    })\r\n    //Get the all PRESELECT ranges\r\n    this.preSetDateRanges = this.getDateRanges();\r\n    this.range = new FormGroup({\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required)\r\n    });\r\n\r\n    //Selected range of date picker\r\n    this.selectedRange = {\r\n      startDate: '',\r\n      endDate: '',\r\n    };\r\n\r\n    //Starting value of mat select\r\n    this.preSelectValue = 'last7days';\r\n\r\n    //Gets the true start and end date values in date format\r\n    this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\r\n\r\n    //Manually updates the mat date picker with new start and end dates\r\n    this.updateDatePickerRange(\r\n      this.preSelectDates.startDate,\r\n      this.preSelectDates.endDate\r\n    );\r\n  }\r\n\r\n  //get Report Providers in Current Company\r\n  getReportingProviderList() {\r\n    if(this.companySelected) {\r\n      this.companyService.getOneCompany(this.companySelected.split('/')[1]).subscribe(res => {\r\n        res.reportingProviders.map(report=> {\r\n          this.reportTypeData.push({\r\n            value: report.reportingProvider,\r\n            viewValue: report.reportingProvider\r\n          })\r\n        });\r\n      });\r\n    } \r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  onReportSubmit() {\r\n    if (this.manaulUpFG.valid) {\r\n      this.manaulUpFG.addControl('company',new FormControl('', Validators.required));\r\n      this.manaulUpFG.patchValue({\r\n        company: this.companySelected,\r\n      });\r\n      var reportTypeValue = this.manaulUpFG.value['reportType'];\r\n      this.manualUpdateService.updateManualStats(this.manaulUpFG.value).subscribe((response) => {\r\n        var checkExist = this.isObjectEmpty(response);\r\n        if(!checkExist) {\r\n          this.notification.showSuccess(`${reportTypeValue} data stats successfully updated!`, \"\")\r\n        } else {\r\n          this.notification.showWarning(`${reportTypeValue} data not existed!`, \"\")\r\n        }\r\n      })\r\n    }\r\n  }\r\n  isObjectEmpty(obj: {}) {\r\n    return Object.keys(obj).length === 0;\r\n  }\r\n  //Grabbing the mat selector options\r\n  private getDateRanges() {\r\n    return [\r\n      { value: 'today', viewValue: 'Today' },\r\n      { value: 'yesterday', viewValue: 'Yesterday' },\r\n      { value: 'last7days', viewValue: 'Last 7 Days' },\r\n      { value: 'last30days', viewValue: 'Last 30 Days' },\r\n      { value: 'monthToDate', viewValue: 'Month to Date' },\r\n      { value: 'lastMonth', viewValue: 'Last Month' },\r\n      { value: 'custom', viewValue: 'Custom' },\r\n    ];\r\n  }\r\n  //Detects when datepicker change is updated\r\n  public changeDatePicker(): void {\r\n    if (this.range.valid) {\r\n      \r\n      this.selectedRange.startDate = this.range.value.startDate;\r\n      this.selectedRange.endDate = this.range.value.endDate;\r\n      this.manaulUpFG.patchValue({\r\n        startDate: moment(this.range.value.startDate, 'MM-DD-YYYY').toDate(),\r\n        endDate: moment(this.range.value.endDate, 'MM-DD-YYYY').toDate(),\r\n      });\r\n\r\n      this.preSelectValue = 'custom';\r\n    }\r\n  }\r\n\r\n  //Monitors mat selector, if changed (and not custom). updates the actual date picker\r\n  onPreSetRangeSelectChange(selection: any) {\r\n    if (selection.value !== 'custom') {\r\n      this.preSelectValue = selection.value;\r\n      this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\r\n\r\n      //Updates the date picker range manually\r\n      this.updateDatePickerRange(\r\n        this.preSelectDates.startDate,\r\n        this.preSelectDates.endDate\r\n      );\r\n    }\r\n  }\r\n\r\n //Updates the date picker range manually\r\n  //Params startDate and endDate\r\n  updateDatePickerRange(startDate: moment.MomentInput, endDate: moment.MomentInput) {\r\n    this.manaulUpFG.patchValue({\r\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\r\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\r\n    });\r\n    this.range.patchValue({\r\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\r\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\r\n    });\r\n  }\r\n\r\n  //Convert mat selector options and return actual dates\r\n  private getPreSetDateRange(selection: any) {\r\n    let dateFormat = 'MM-DD-YYYY';\r\n    switch (selection) {\r\n      case 'today':\r\n        return {\r\n          startDate: moment().utc().startOf('day').format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'yesterday':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(1, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment()\r\n            .subtract(1, 'days')\r\n            .utc()\r\n            .endOf('day')\r\n            .format(dateFormat),\r\n        };\r\n      case 'last7days':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(7, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'last30days':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(30, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'monthToDate':\r\n        return {\r\n          startDate: moment()\r\n            .startOf('month')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'lastMonth':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(1, 'months')\r\n            .startOf('month')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment()\r\n            .utc()\r\n            .subtract(1, 'months')\r\n            .endOf('month')\r\n            .format(dateFormat),\r\n        };\r\n    }\r\n  }\r\n  handleReport(event) {\r\n    if (event.value.length > 0) {\r\n      var typeName = event.value.toLowerCase().replace(/\\b[a-z]/g, function(letter) {\r\n        return letter.toUpperCase();\r\n      });\r\n      this.reportUpdateTitle = `${typeName} Stat Update`\r\n    }\r\n  }\r\n}\r\n","<form class=\"example-container\" id=\"manaulUpForm\" [formGroup]=\"manaulUpFG\" (ngSubmit)=\"onReportSubmit()\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xl-6\">\r\n            <div class=\"card card-custom example example-compact gutter-b\">\r\n                <div class=\"card-header\">\r\n                    <div class=\"card-title\">\r\n                        <h3 class=\"card-label\">{{reportUpdateTitle}}</h3>\r\n                    </div>\r\n                </div>  \r\n                \r\n                <div class=\"card-body\">\r\n                    <mat-form-field>\r\n                        <mat-label>Report Type</mat-label>\r\n                        <mat-select matNativeControl placeholder=\"Select Report\" formControlName=\"reportType\" (selectionChange)=\"handleReport($event)\">\r\n                          <mat-option\r\n                            *ngFor=\"let reportItem of reportTypeData\"\r\n                            [value]=\"reportItem.value\"\r\n                          >\r\n                            {{ reportItem.viewValue }}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <mat-label>Enter a custom date range</mat-label>\r\n                        <mat-date-range-input\r\n                          [rangePicker]=\"picker\"\r\n                          [formGroup]=\"range\"\r\n                          (dateChange)=\"changeDatePicker()\"\r\n                        >\r\n                          <input\r\n                            matStartDate\r\n                            formControlName=\"startDate\"\r\n                            placeholder=\"Start date\"\r\n                            required\r\n                          />\r\n                          <input\r\n                            matEndDate\r\n                            formControlName=\"endDate\"\r\n                            placeholder=\"End date\"\r\n                            required\r\n                            (dateChange)=\"changeDatePicker()\"\r\n                          />\r\n                        </mat-date-range-input>\r\n                        <mat-datepicker-toggle\r\n                          matSuffix\r\n                          [for]=\"picker\"\r\n                        ></mat-datepicker-toggle>\r\n                        <mat-date-range-picker #picker></mat-date-range-picker>\r\n              \r\n                        <mat-error\r\n                          *ngIf=\"manaulUpFG.controls.startDate.hasError('matStartDateInvalid')\"\r\n                          >Invalid start date</mat-error\r\n                        >\r\n                        <mat-error\r\n                          *ngIf=\"manaulUpFG.controls.endDate.hasError('matEndDateInvalid')\"\r\n                          >Invalid end date</mat-error\r\n                        >\r\n                        <!-- Required Date Messages -->\r\n                        <mat-error *ngIf=\"manaulUpFG.controls.startDate.errors?.required\">Start Date Required</mat-error>\r\n                        <mat-error *ngIf=\"manaulUpFG.controls.endDate.errors?.required\">End Date Required</mat-error>\r\n                    </mat-form-field>\r\n            \r\n                    <mat-form-field>\r\n                    <mat-label>Preset Date Range</mat-label>\r\n                    <mat-select\r\n                        [(ngModel)]=\"preSelectValue\"\r\n                        (selectionChange)=\"onPreSetRangeSelectChange($event)\"\r\n                        formControlName=\"preSelectValue\"\r\n                    >\r\n                        <mat-option\r\n                        *ngFor=\"let dateRange of preSetDateRanges\"\r\n                        [value]=\"dateRange.value\"\r\n                        >\r\n                        {{ dateRange.viewValue }}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    </mat-form-field>\r\n                    <!-- update report -->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xl-6\">\r\n                            <button mat-raised-button color=\"primary\" type=\"submit\">Update Stats</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-media-net',\r\n  templateUrl: './media-net.component.html',\r\n  styleUrls: ['./media-net.component.scss']\r\n})\r\nexport class MediaNetComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>media-net works!</p>\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<!-- <div class=\"row\">\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Enter a date range</mat-label>\r\n    <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n      <input\r\n        matStartDate\r\n        formControlName=\"startDate\"\r\n        placeholder=\"Start date\"\r\n      />\r\n      <input matEndDate formControlName=\"endDate\" placeholder=\"End date\" />\r\n    </mat-date-range-input>\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n    <mat-error *ngIf=\"range.controls.startDate.hasError('matStartDateInvalid')\"\r\n      >Invalid start date</mat-error\r\n    >\r\n    <mat-error *ngIf=\"range.controls.endDate.hasError('matEndDateInvalid')\"\r\n      >Invalid end date</mat-error\r\n    >\r\n  </mat-form-field>\r\n\r\n  <p>Selected range: {{ range.value | json }}</p>\r\n</div> -->\r\n\r\n<app-reporting-revenue-chart *ngIf=\"chartData\"\r\n  [chartData]=\"chartData\"\r\n></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<!-- <button class=\"btn btn-sm btn-dark\"\r\n  (click)=\"updateAllPerionStats(selectedCompany, range.startDate, range.endDate)\"\r\n>\r\n  updateAllPerionStats\r\n</button>\r\n\r\n<button class=\"btn btn-sm btn-primary\" (click)=\"getAllPerionStats(selectedCompany, range.startDate, range.endDate)\">\r\n  getAllPerionStats\r\n</button>\r\n\r\n<button class=\"btn btn-sm btn-info\" (click)=\"getSummaryMetrics(selectedCompany)\">getSummaryMetrics</button> -->\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-3\"\r\n    (click)=\"groupProvider()\"\r\n  >\r\n    Group\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-3\"\r\n    (click)=\"backProvider()\"\r\n  >\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"30\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"totalsearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CPC -->\r\n  <ngx-datatable-column name=\"cpc\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CPC\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | currency: 'USD') || (0 | currency: 'USD') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{\r\n        (value | percent: '2.2-2') || (0 | percent: '2.2-2')\r\n      }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher Net -->\r\n  <ngx-datatable-column name=\"publisherNet\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher Net\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Profit -->\r\n  <ngx-datatable-column name=\"profit\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Profit\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { PerionService } from 'src/app/shared/service/admin-stats/perion.service';\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-perion',\r\n  templateUrl: './perion.component.html',\r\n  styleUrls: ['./perion.component.scss'],\r\n})\r\nexport class PerionComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  company = {\r\n    name: 'Manic Traffic',\r\n    login: {\r\n      username: 'kevin@manictraffic.com',\r\n      password: 'kauf2552',\r\n    },\r\n    statsUpdateURL:\r\n      'https://services.hub.codefuel.com/analytics/reports?channelQueryType=all_channels&columnQueryData=%7B%22ids%22:%5B%22date%22,%22product%22,%22channel%22,%22country%22,%22searches%22,%22ad_clicks%22,%22publisher_cpc%22,%22monetized_ctr%22,%22revenue%22,%22searches_monetized%22%5D%7D&columnQueryType=specific_columns&endDate=1600991999000&geoQueryType=all&limit=10000&productQueryType=all_product&startDate=1600905600000&walletQueryType=all_wallets',\r\n  };\r\n\r\n  summary = {\r\n    revenue: 0,\r\n    profit: 0,\r\n  };\r\n  groupFlag = false;\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  allStat: any[];\r\n  allChartStat: any[];\r\n  //Sends chartData to ReportingRevenueChartComponent\r\n  chartData: ChartDataInterface;\r\n\r\n  //Sends summaryMetrics to SummaryMetricsComponent\r\n  summaryMetrics: any;\r\n  tagList: any = [];\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  summaryMetricsData: any;\r\n  currentMonthData: any;\r\n  beforeMonthData: any;\r\n  twoBeforeMonthData: any;\r\n\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor(\r\n    private perionService: PerionService,\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  async ngAfterViewInit() {   \r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n\r\n    this.rows = [];\r\n    this.rows = await this.getAllPerionStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  async routeTester() {\r\n    console.log('Testing Route');\r\n    this.perionService.testingRoute().subscribe((response) => {\r\n      console.log(response);\r\n    }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  updateAllPerionStats(company, startDate, endDate) {\r\n    this.perionService\r\n      .updateAllPerionStats(company, startDate, endDate)\r\n      .subscribe((response) => {\r\n        console.log(response);\r\n      }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  public async updateReportingFiltering(range) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllPerionStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.groupFlag = false;\r\n    this.refreshTable();\r\n  }\r\n\r\n  getAllPerionStats(company, startDate, endDate) {\r\n    return this.perionService\r\n      .getAllPerionStats(company, startDate, endDate)\r\n      .toPromise()\r\n      .then((response) => {\r\n        console.log('response:', response);\r\n        this.loadingIndicator = false;\r\n        // console.log(response.stats);\r\n        this.allStat = response.stats;\r\n        this.allStat.map(function(resStat) {\r\n          resStat.publisher = \"No Publisher\"\r\n          resStat.tagname = \"No Tag\" \r\n        });\r\n        \r\n        for (var tagL of this.tagList) {\r\n          if(tagL.tag.advertiser == \"perion\") {\r\n            for (var tagSub of tagL.tag.subids) {\r\n              if(tagSub.filterTag ==\"Contains\") {\r\n              \r\n                this.allStat.map(stat => {\r\n                  if (stat.subid.includes(tagSub.subid)) {\r\n                    stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                    stat.tagname = tagL.tag.name\r\n                  }\r\n                })\r\n                \r\n              } else if (tagSub.filterTag ==\"StartsWith\") {\r\n                this.allStat.map(stat => {\r\n                  if (stat.subid.startsWith(tagSub.subid)) {\r\n                    stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                    stat.tagname = tagL.tag.name\r\n                  }\r\n                })\r\n                \r\n              } else if (tagSub.filterTag ==\"EndsWith\") {\r\n                this.allStat.map(stat => {\r\n                  if (stat.subid.endsWith(tagSub.subid)) {\r\n                    stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                    stat.tagname = tagL.tag.name\r\n                  }\r\n                }) \r\n                \r\n              } else if (tagSub.filterTag ==\"ExactValue\") {\r\n                this.allStat.map(stat => {\r\n                  if (stat.subid == tagSub.subid) {\r\n                    stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                    stat.tagname = tagL.tag.name\r\n                  }\r\n                })\r\n                \r\n              } \r\n            }\r\n          }\r\n        }\r\n        // var helper = new Set();\r\n        \r\n        // //duplicated remove\r\n        // let filtered_data = this.allStat.filter((perionStat) => {\r\n        //   const key = JSON.stringify([perionStat.date, perionStat.subid]);\r\n        //   return !helper.has(key) && helper.add(key);\r\n        // });\r\n        // console.log(\"=========\", filtered_data.length)\r\n        //return filtered_data.slice().sort((a, b) => b.date - a.date);\r\n        \r\n        \r\n        return this.allStat;\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  }\r\n\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStat.reduce(function(r, o) {\r\n      var key = o.publisher;\r\n      \r\n      if(!helperSummary[key]) {\r\n        helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n        helperSummary[key].counter = 1;\r\n        r.push(helperSummary[key]);\r\n      } else {\r\n        helperSummary[key].clicks += parseFloat(o.clicks);\r\n        helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n        helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n        helperSummary[key].impressions += parseFloat(o.impressions ? o.impressions : 0);\r\n        helperSummary[key].totalsearches += parseFloat(o.totalsearches ? o.totalsearches : 0);\r\n        helperSummary[key].profit += parseFloat(o.profit);\r\n        helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n        helperSummary[key].revenue += parseFloat(o.revenue);\r\n        helperSummary[key].split += parseFloat(o.split);\r\n        helperSummary[key].counter++;\r\n      } \r\n      return r;\r\n    }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n      group.followon = group.followon / group.counter;\r\n      group.ctr = group.ctr / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupFlag = true;\r\n    this.cdr.markForCheck();\r\n  }\r\n  backProvider() {\r\n    this.rows = this.allStat;\r\n    this.groupFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  getSummaryMetrics(company) {\r\n    return this.perionService.getSummaryMetrics(company).toPromise().then((response) => {\r\n      console.log('Got summary metrics');\r\n      // console.log(\"===============\", response)\r\n      // this.currentMonthData = response.summary[0].summaryMetrics;\r\n      // this.beforeMonthData = response.summary[0].lastMonthStat;  \r\n      // this.twoBeforeMonthData = response.summary[0].twoLastMonthStat;  \r\n      // var dayInCurrentMonth = response.summary[0].dayInCurrentMonth;\r\n      // var dayInBeforeMonth = response.summary[0].dayInBeforeMonth;\r\n      // var dayInTwoBeforeMonth = response.summary[0].dayInTwoBeforeMonth;\r\n      // var summaryCurrentStat = [];\r\n      //current data get part\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       summaryCurrentStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n      //       summaryCurrentStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n            \r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //       summaryCurrentStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid == tagSub.subid ))\r\n      //       summaryCurrentStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     }\r\n      //   }\r\n      // }\r\n      // // //duplicated remove\r\n      // let filter_data = summaryCurrentStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      \r\n      // var helperSummary = {};\r\n      // filter_data.map(f =>{\r\n      //   f.revenue = parseFloat(f.revenue);\r\n      //   f.ctr = parseFloat(f.ctr);\r\n      //   f.biddedCtr = parseFloat(f.biddedCTR);\r\n      // })\r\n      \r\n      // var resultSummary = filter_data.reduce(function(r, o) {\r\n      //   var key = o.rptDate;\r\n      //   if(!helperSummary[key]) {\r\n      //     helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n      //     r.push(helperSummary[key]);\r\n      //   } else {\r\n      //     helperSummary[key].searches += parseInt(o.searches);\r\n      //     if(o.revenue) {\r\n      //       helperSummary[key].revenue += o.revenue;\r\n      //     }\r\n      //   } \r\n      //   return r;\r\n      // }, []);\r\n      // var monthRevenue = 0;\r\n      // var monthProfit = 0;\r\n      // var monthRevenuePace = 0;\r\n      // var profitPace = 0;\r\n      // for(var sumData of resultSummary) {\r\n      //   monthRevenue += sumData.revenue;\r\n      //   monthProfit += sumData.revenue *(100 - sumData.split) * 0.01;\r\n      //   monthRevenuePace += (monthRevenue/resultSummary.length) * dayInCurrentMonth;\r\n      //   profitPace += (monthProfit/resultSummary.length)*dayInCurrentMonth;\r\n      // }\r\n\r\n      // //before month data get part\r\n      // var summaryBeforeStat = [];\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       summaryBeforeStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n            \r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid == tagSub.subid ))\r\n      //     }\r\n      //   }\r\n      // }\r\n      \r\n      // // //duplicated remove\r\n      // let filt_data = summaryBeforeStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      \r\n      // var helperBeforeSummary = {};\r\n      // filt_data.map(f =>{\r\n      //   f.revenue = parseFloat(f.revenue);\r\n      //   f.ctr = parseFloat(f.ctr);\r\n      //   f.biddedCtr = parseFloat(f.biddedCTR);\r\n      // })\r\n      \r\n      // var resultBeforeSummary = filt_data.reduce(function(r, o) {\r\n      //   var key = o.rptDate;\r\n      //   if(!helperBeforeSummary[key]) {\r\n      //     helperBeforeSummary[key] = Object.assign({}, o); // create a copy of o\r\n      //     r.push(helperBeforeSummary[key]);\r\n      //   } else {\r\n      //     helperBeforeSummary[key].searches += parseInt(o.searches);\r\n      //     if(o.revenue) {\r\n      //       helperBeforeSummary[key].revenue += o.revenue;\r\n      //     }\r\n      //   } \r\n      //   return r;\r\n      // }, []);\r\n      // var monthBeforeRevenue = 0;\r\n      // var monthBeforeProfit = 0;\r\n      // var monthBeforeRevenuePace = 0;\r\n      // var profitBeforePace = 0;\r\n      // for(var sumBeforeData of resultBeforeSummary) {\r\n      //   monthBeforeRevenue += sumBeforeData.revenue;\r\n      //   monthBeforeProfit += sumBeforeData.revenue *(100 - sumBeforeData.split) * 0.01;\r\n      //   monthBeforeRevenuePace += (monthBeforeRevenue/resultBeforeSummary.length) * dayInBeforeMonth;\r\n      //   profitBeforePace += (monthBeforeProfit/resultBeforeSummary.length)*dayInBeforeMonth;\r\n      // }\r\n\r\n      // //tow before month data get part\r\n      // var summaryTwoBeforeStat = [];\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       summaryTwoBeforeStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n            \r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid == tagSub.subid ))\r\n      //     }\r\n      //   }\r\n      // }\r\n      \r\n      // // //duplicated remove\r\n      // let filter_two_data = summaryTwoBeforeStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      \r\n      // var helperTwoBeforeSummary = {};\r\n      // filter_two_data.map(f =>{\r\n      //   f.revenue = parseFloat(f.revenue);\r\n      //   f.ctr = parseFloat(f.ctr);\r\n      //   f.biddedCtr = parseFloat(f.biddedCTR);\r\n      // })\r\n      \r\n      // var resultTwoBeforeSummary = filter_two_data.reduce(function(r, o) {\r\n      //   var key = o.rptDate;\r\n      //   if(!helperTwoBeforeSummary[key]) {\r\n      //     helperTwoBeforeSummary[key] = Object.assign({}, o); // create a copy of o\r\n      //     r.push(helperTwoBeforeSummary[key]);\r\n      //   } else {\r\n      //     helperTwoBeforeSummary[key].searches += parseInt(o.searches);\r\n      //     if(o.revenue) {\r\n      //       helperTwoBeforeSummary[key].revenue += o.revenue;\r\n      //     }\r\n      //   } \r\n      //   return r;\r\n      // }, []);\r\n      // var monthTwoBeforeRevenue = 0;\r\n      // var monthTwoBeforeProfit = 0;\r\n      // var monthTwoBeforeRevenuePace = 0;\r\n      // var profitTwoBeforePace = 0;\r\n      // for(var sumTwoBeforeData of resultTwoBeforeSummary) {\r\n      //   monthTwoBeforeRevenue += sumTwoBeforeData.revenue;\r\n      //   monthTwoBeforeProfit += sumTwoBeforeData.revenue *(100 - sumTwoBeforeData.split) * 0.01;\r\n      //   monthTwoBeforeRevenuePace += (monthTwoBeforeRevenue/resultTwoBeforeSummary.length) * dayInTwoBeforeMonth;\r\n      //   profitTwoBeforePace += (monthTwoBeforeProfit/resultTwoBeforeSummary.length)*dayInTwoBeforeMonth;\r\n      // }\r\n      // var currentPercentPace = 0;\r\n      // var lastPercentPace = 0;\r\n      // if (profitBeforePace != 0) {\r\n      //   currentPercentPace = ((profitPace - profitBeforePace) / profitBeforePace) * 100\r\n      // }\r\n      // if (profitTwoBeforePace != 0) {\r\n      //   lastPercentPace = ((profitBeforePace - profitTwoBeforePace) / profitTwoBeforePace) * 100\r\n      // }\r\n      // var summaryFinalData = [];\r\n      // summaryFinalData.push({\r\n      //   summaryMetrics: [{\r\n      //     revenue: monthRevenue,\r\n      //     revenuePace: monthRevenuePace,\r\n      //     profit: monthProfit,\r\n      //     profitPace: profitPace,\r\n      //     percentPace: currentPercentPace\r\n      //   }],\r\n      //   lastMonthStat: [{\r\n      //     revenue: monthBeforeRevenue,\r\n      //     revenuePace: monthBeforeRevenuePace,\r\n      //     profit: monthBeforeProfit,\r\n      //     profitPace: profitBeforePace,\r\n      //     percentPace: lastPercentPace\r\n      //   }]\r\n      // });\r\n      var allSummary = {};\r\n      var currentPercentPace = 0;\r\n      var lastPercentPace = 0;\r\n      if(response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n      }\r\n      if(response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n      }\r\n      \r\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n      allSummary['summary'] = response.summary;\r\n      return allSummary;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    })\r\n  }\r\n\r\n  getChartMetrics(company, startDate, endDate) {\r\n    return this.perionService\r\n      .getAllPerionStats(company, startDate, endDate)\r\n      .toPromise()\r\n      .then((response) => {\r\n        // console.log('getAllPerionStats() response:');\r\n        this.allChartStat = response.stats;\r\n        // var allChartPerionStat = [];\r\n        \r\n        // for (var tagL of this.tagList) {\r\n        //   if(tagL.tag.advertiser == \"perion\") {\r\n        //     for (var tagSub of tagL.tag.subids) {\r\n        //       if(tagSub.filterTag ==\"Contains\") {\r\n              \r\n        //         allChartPerionStat = allChartPerionStat.concat(this.allChartStat.filter(stat => stat.subid.includes(tagSub.subid)))\r\n        //         allChartPerionStat.map(stat => {\r\n        //           stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n        //           stat.tagname = tagL.tag.name\r\n        //         })\r\n        //       } else if (tagSub.filterTag ==\"StartsWith\") {\r\n        //         allChartPerionStat = allChartPerionStat.concat(this.allChartStat.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n        //         allChartPerionStat.map(stat => {\r\n        //           stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n        //           stat.tagname = tagL.tag.name\r\n        //         })\r\n        //       } else if (tagSub.filterTag ==\"EndsWith\") {\r\n        //         allChartPerionStat = allChartPerionStat.concat(this.allChartStat.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n        //         allChartPerionStat.map(stat => {\r\n        //           stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n        //           stat.tagname = tagL.tag.name\r\n        //         })\r\n        //       } else if (tagSub.filterTag ==\"ExactValue\") {\r\n        //         allChartPerionStat = allChartPerionStat.concat(this.allChartStat.filter(stat => stat.subid == tagSub.subid ))\r\n        //         allChartPerionStat.map(stat => {\r\n        //           stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n        //           stat.tagname = tagL.tag.name\r\n        //         })\r\n        //       }\r\n        //     }\r\n        //   }\r\n        // }\r\n        // var helper = new Set();\r\n        //duplicated remove\r\n        // let filtered_data = this.allChartStat.filter((perionStat) => {\r\n        //   const key = JSON.stringify([perionStat.date, perionStat.subid]);\r\n        //   return !helper.has(key) && helper.add(key);\r\n        // });\r\n        this.allChartStat = this.allChartStat.slice().sort((a, b) => a.date - b.date);\r\n        var helperChart = {};\r\n        var resultChart = this.allChartStat.reduce(function(r, o) {\r\n          var key = o.date;\r\n          if(!helperChart[key]) {\r\n            helperChart[key] = Object.assign({}, o); // create a copy of o\r\n            r.push(helperChart[key]);\r\n          } else {\r\n            helperChart[key].totalsearches += parseInt(o.totalsearches);\r\n            if(o.revenue) {\r\n              helperChart[key].revenue += o.revenue;\r\n            }\r\n          } \r\n          return r;\r\n        }, []);\r\n        var revenuePerDayVal = [];\r\n        var datesOfRevenueVal = [];\r\n        var searchesPerDayVal = [];\r\n        var chartDataValue = {};\r\n        for(var resVal of resultChart) {\r\n          revenuePerDayVal.push(resVal.revenue);\r\n          datesOfRevenueVal.push(resVal.date);\r\n          searchesPerDayVal.push(resVal.totalsearches);\r\n        }\r\n        chartDataValue['revenuePerDay'] = revenuePerDayVal;\r\n        chartDataValue['datesOfRevenue'] = datesOfRevenueVal;\r\n        chartDataValue['searchesPerDay'] = searchesPerDayVal;\r\n        return chartDataValue;\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  }\r\n\r\n  combineSummaryMetrics(metrics) {\r\n    metrics.summary.keys.forEach((element) => {\r\n      console.log(element.revenue);\r\n      this.summary.revenue += element.revenue;\r\n      this.summary.profit += element.revenue * ((100 - element.split) * 0.01);\r\n    });\r\n  }\r\n\r\n  //get Tags with selected company\r\n  getCompanyTags(selectedCompany) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    })\r\n  }\r\n\r\n  createChartData(stats) {}\r\n}\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<!--Chart Data Show-->\r\n<app-reporting-revenue-chart *ngIf=\"chartData\"\r\n  [chartData]=\"chartData\"\r\n></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-3\"\r\n    (click)=\"groupProvider()\"\r\n  >\r\n    Group\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-3\"\r\n    (click)=\"backProvider()\"\r\n  >\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"30\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER -->\r\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  \r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  \r\n</ngx-datatable>","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewChild,\r\n} from '@angular/core';\r\n\r\nimport { UsersService } from '../../../shared/service/users.service';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { RubiService } from 'src/app/shared/service/admin-stats/rubi.service';\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-rubi',\r\n  templateUrl: './rubi.component.html',\r\n  styleUrls: ['./rubi.component.scss']\r\n})\r\nexport class RubiComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  @ViewChild('expandableTable') table: any;\r\n  chartData: ChartDataInterface;\r\n  groupFlag = false;\r\n  expanded: any = {};\r\n  allStats: any[];\r\n  summaryMetrics: any;\r\n  tagList: any = [];\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private rubiService: RubiService,\r\n    private tagService: TagManagementService,\r\n  ) { \r\n    this.selectedCompany = this.getSelectedCompanyStored();\r\n  }\r\n\r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n    this.rows = [];\r\n    this.rows = await this.getAllRubiStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    \r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n  public async updateReportingFiltering(range: { startDate: string; endDate: string; }) {\r\n    this.range = range;\r\n    this.rows = await this.getAllRubiStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.groupFlag = false;\r\n    this.refreshTable();\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyStored() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  toggleExpandRow(row: any) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event: any) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n  getAllRubiStats(company: any, startDate: string, endDate: string) {\r\n    return this.rubiService.getRubiStats(company, startDate, endDate).toPromise().then((response) => {\r\n      console.log('getRubiStats() response:', response);\r\n      this.loadingIndicator = false;\r\n      this.allStats = response.stats;\r\n      this.allStats.map(function(resStat) {\r\n        resStat.publisher = \"No Publisher\"\r\n        resStat.tagname = \"No Tag\" \r\n      });\r\n      for (var tagL of this.tagList) {\r\n        if(tagL.tag.advertiser == \"rubi\") {\r\n          for (var tagSub of tagL.tag.subids) {\r\n            if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n              this.allStats.map(stat => {\r\n                if (stat.subid.includes(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } else if (tagSub.filterTag ==\"StartsWith\") {\r\n              this.allStats.map(stat => {\r\n                if (stat.subid.startsWith(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } else if (tagSub.filterTag ==\"EndsWith\") {\r\n              this.allStats.map(stat => {\r\n                if (stat.subid.endsWith(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              }) \r\n              \r\n            } else if (tagSub.filterTag ==\"ExactValue\") {\r\n              this.allStats.map(stat => {\r\n                if (stat.subid == tagSub.subid) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } \r\n          }\r\n        }\r\n      }\r\n      return this.allStats;\r\n    })\r\n  }\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStats.reduce(function(r, o) {\r\n        var key = o.publisher;\r\n        \r\n        if(!helperSummary[key]) {\r\n          helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n          helperSummary[key].counter = 1;\r\n          r.push(helperSummary[key]);\r\n        } else {\r\n          helperSummary[key].clicks += parseFloat(o.clicks);\r\n          helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n          helperSummary[key].monetized_searches += parseFloat(o.monetized_searches ? o.monetized_searches : 0);\r\n          helperSummary[key].revenue += parseFloat(o.revenue);\r\n          helperSummary[key].split += parseFloat(o.split);\r\n          helperSummary[key].counter++;\r\n        } \r\n        return r;\r\n      }, []);\r\n    for (var group of groupData) {\r\n      group.split = group.split / group.counter;\r\n\r\n    }\r\n    this.rows = groupData;\r\n    this.groupFlag = true;\r\n    this.cdr.markForCheck();\r\n  }\r\n  backProvider() {\r\n    this.rows = this.allStats;\r\n    this.groupFlag = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n  getChartMetrics(company: any, startDate: string, endDate: string) {\r\n    return this.rubiService\r\n      .getChartMetrics(company, startDate, endDate)\r\n      .toPromise()\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  }\r\n  getSummaryMetrics(company: any) {\r\n    return this.rubiService.getSummaryMetrics(company).toPromise().then((response) => {\r\n      console.log('Got summary metrics');\r\n      var allSummary = {};\r\n      var currentPercentPace = 0;\r\n      var lastPercentPace = 0;\r\n      if(response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n      }\r\n      if(response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n      }\r\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n      allSummary['summary'] = response.summary;\r\n      return allSummary;\r\n    })\r\n  }\r\n  //get Tags with selected company\r\n  getCompanyTags(selectedCompany: string) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    })\r\n  }\r\n}\r\n","<app-reporting-filtering\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\n></app-reporting-filtering>\n\n<!--Chart Data Show-->\n<app-reporting-revenue-chart *ngIf=\"chartData\"\n  [chartData]=\"chartData\"\n></app-reporting-revenue-chart>\n\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\n\n<div class=\"row px-6\">\n  <button class=\"btn btn-sm btn-primary mx-3\"\n    (click)=\"groupProvider()\"\n  >\n    Group\n  </button>\n  <button class=\"btn btn-sm btn-dark mx-3\"\n    (click)=\"backProvider()\"\n  >\n    Back\n  </button>\n</div>\n\n<ngx-datatable\n  #expandableTable\n  class=\"material fullscreen expandable\"\n  style=\"top: 30px; height: 500px\"\n  [columnMode]=\"'force'\"\n  [headerHeight]=\"50\"\n  [footerHeight]=\"0\"\n  [rowHeight]=\"50\"\n  [scrollbarV]=\"true\"\n  [rows]=\"rows\"\n  [loadingIndicator]=\"loadingIndicator\"\n>\n  <!-- Row Detail Template -->\n  <ngx-datatable-row-detail\n    [rowHeight]=\"100\"\n    #myDetailRow\n    (toggle)=\"onDetailToggle($event)\"\n  >\n    <ng-template\n      let-row=\"row\"\n      let-expanded=\"expanded\"\n      ngx-datatable-row-detail-template\n    >\n      <div style=\"padding-left: 35px\">\n        <div><strong>Address</strong></div>\n        <div>Test</div>\n      </div>\n    </ng-template>\n  </ngx-datatable-row-detail>\n\n  <!-- Column Templates -->\n  <ngx-datatable-column\n    [width]=\"30\"\n    [resizeable]=\"false\"\n    [sortable]=\"false\"\n    [draggable]=\"false\"\n    [canAutoResize]=\"false\"\n  >\n    <ng-template\n      let-row=\"row\"\n      let-expanded=\"expanded\"\n      ngx-datatable-cell-template\n    >\n      <a\n        href=\"javascript:void(0)\"\n        [class.datatable-icon-right]=\"!expanded\"\n        [class.datatable-icon-down]=\"expanded\"\n        title=\"Expand/Collapse Row\"\n        (click)=\"toggleExpandRow(row)\"\n      >\n      </a>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Date -->\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupFlag\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Date\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | date }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SUBID -->\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupFlag\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Subid\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SUBID -->\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Publisher\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SEARCHES -->\n  <ngx-datatable-column name=\"searches\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Searches\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- CLICKS -->\n  <ngx-datatable-column name=\"clicks\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Clicks\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SPLIT -->\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Split\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n  \n  <!-- REVENUE -->\n  <ngx-datatable-column name=\"revenue\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Revenue\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | currency: 'USD' }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  \n</ngx-datatable>","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ViewChild,\n} from '@angular/core';\n\nimport { UsersService } from '../../../shared/service/users.service';\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\nimport { SolexBCService } from 'src/app/shared/service/admin-stats/solexbc.service';\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\n\n@Component({\n  selector: 'app-solex-bc',\n  templateUrl: './solex-bc.component.html',\n  styleUrls: ['./solex-bc.component.scss']\n})\nexport class SolexBcComponent implements AfterViewInit {\n  range = {\n    startDate: '',\n    endDate: '',\n  };\n  loadingIndicator = true;\n  rows: any[];\n  selectedCompany: any;\n  @ViewChild('expandableTable') table: any;\n  chartData: ChartDataInterface;\n\n  expanded: any = {};\n  allStats: any[];\n  summaryMetrics: any;\n  tagList: any = [];\n  groupFlag = false;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private userService: UsersService,\n    private solexBCService: SolexBCService,\n    private tagService: TagManagementService,\n  ) { \n    this.selectedCompany = this.getSelectedCompanyStored();\n  }\n\n  async ngAfterViewInit() {\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\n    this.rows = [];\n    this.rows = await this.getAllSolexBCStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.chartData = await this.getChartMetrics(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    \n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\n    this.refreshTable();\n  }\n  public async updateReportingFiltering(range) {\n    this.range = range;\n    this.rows = await this.getAllSolexBCStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.chartData = await this.getChartMetrics(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\n    this.groupFlag = false;\n    this.refreshTable();\n  }\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyStored() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  toggleExpandRow(row) {\n    console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event) {\n    console.log('Detail Toggled', event);\n  }\n\n  refreshTable() {\n    this.cdr.markForCheck();\n  }\n\n  getAllSolexBCStats(company, startDate, endDate) {\n    return this.solexBCService.getSolexBCStats(company, startDate, endDate).toPromise().then((response) => {\n      console.log('getSolexBCStats() response:', response);\n      this.loadingIndicator = false;\n      this.allStats = response.stats;\n      this.allStats.map(function(resStat) {\n        resStat.publisher = \"No Publisher\"\n        resStat.tagname = \"No Tag\" \n      });\n      for (var tagL of this.tagList) {\n        if(tagL.tag.advertiser == \"solex-bc\") {\n          for (var tagSub of tagL.tag.subids) {\n            if(tagSub.filterTag ==\"Contains\") {\n              this.allStats.map(stat => {\n                if (stat.subid.includes(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } else if (tagSub.filterTag ==\"StartsWith\") {\n              this.allStats.map(stat => {\n                if (stat.subid.startsWith(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } else if (tagSub.filterTag ==\"EndsWith\") {\n              this.allStats.map(stat => {\n                if (stat.subid.endsWith(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              }) \n              \n            } else if (tagSub.filterTag ==\"ExactValue\") {\n              this.allStats.map(stat => {\n                if (stat.subid == tagSub.subid) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } \n          }\n        }\n      }\n      return this.allStats;\n    })\n  }\n  groupProvider() {\n    var helperSummary = {};\n    var groupData = this.allStats.reduce(function(r, o) {\n        var key = o.publisher;\n        \n        if(!helperSummary[key]) {\n          helperSummary[key] = Object.assign({}, o); // create a copy of o\n          helperSummary[key].counter = 1;\n          r.push(helperSummary[key]);\n        } else {\n          helperSummary[key].clicks += parseFloat(o.clicks);\n          helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\n          helperSummary[key].revenue += parseFloat(o.revenue);\n          helperSummary[key].split += parseFloat(o.split);\n          helperSummary[key].counter++;\n        } \n        return r;\n      }, []);\n      for (var group of groupData) {\n        group.split = group.split / group.counter;\n\n      }\n      this.rows = groupData;\n      this.groupFlag = true;\n    this.cdr.markForCheck();\n  }\n  backProvider() {\n    this.rows = this.allStats;\n    this.groupFlag = false;\n    this.cdr.markForCheck();\n  }\n  getChartMetrics(company, startDate, endDate) {\n    return this.solexBCService\n      .getChartMetrics(company, startDate, endDate)\n      .toPromise()\n      .then((response) => {\n        return response;\n      })\n      .catch((error) => {\n        return error;\n      });\n  }\n  getSummaryMetrics(company) {\n    return this.solexBCService.getSummaryMetrics(company).toPromise().then((response) => {\n      console.log('Got summary metrics');\n      var allSummary = {};\n      var currentPercentPace = 0;\n      var lastPercentPace = 0;\n      if(response.summary[0].lastMonthStat[0].profitPace != 0) {\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\n      }\n      if(response.summary[0].twoLastMonthStat[0].profitPace != 0) {\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\n      }\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\n      allSummary['summary'] = response.summary;\n      return allSummary;\n    })\n  }\n  //get Tags with selected company\n  getCompanyTags(selectedCompany) {\n    var companyId = selectedCompany.split(\"/\")[1];\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \n      return response;\n    })\n    .catch((error) => {\n      return error;\n    })\n  }\n\n}\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"30\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\" *ngIf=\"!groupFlag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n        Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Device -->\r\n  <ngx-datatable-column name=\"device\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Device\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PAGEVIEWS -->\r\n  <ngx-datatable-column name=\"pageviews\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n        PageViews\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Impressions -->\r\n  <ngx-datatable-column name=\"impressions\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n        Impressions\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  \r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n        Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  \r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n</ngx-datatable>","import { Component, AfterViewInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { UsersService } from '../../../shared/service/users.service';\r\nimport { System1Service } from 'src/app/shared/service/admin-stats/system1.service';\r\n\r\n@Component({\r\n  selector: 'app-system1',\r\n  templateUrl: './system1.component.html',\r\n  styleUrls: ['./system1.component.scss']\r\n})\r\nexport class System1Component implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  rows: any[];\r\n  allStats: any[];\r\n  loadingIndicator = true;\r\n  selectedCompany: any;\r\n  groupFlag = false;\r\n  @ViewChild('expandableTable') table: any;\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private system1Service: System1Service,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n   }\r\n\r\n  async ngAfterViewInit() {\r\n    this.rows = [];\r\n    this.rows = await this.getAllSystem1Stats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n  }\r\n  public async updateReportingFiltering(range) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllSystem1Stats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.groupFlag = false;\r\n    this.refreshTable();\r\n  }\r\n\r\n  //get Stat all\r\n  getAllSystem1Stats(company, startDate, endDate) {\r\n    return this.system1Service.getAllSystem1Stats(company, startDate, endDate).toPromise().then((response) => {\r\n      console.log('getAllSystem1Stats() response:', response);\r\n      this.loadingIndicator = false;\r\n      this.allStats = response.stats;\r\n      return this.allStats;\r\n    });\r\n  }\r\n\r\n  getSummaryMetrics(company) {\r\n    return [];\r\n  }\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as echarts from 'echarts';\r\n\r\n@Component({\r\n  selector: 'app-third-party',\r\n  templateUrl: './third-party.component.html',\r\n  styleUrls: ['./third-party.component.scss'],\r\n})\r\nexport class ThirdPartyComponent implements OnInit {\r\n  //Chart setup variables\r\n  chartDom;\r\n  myChart;\r\n  option;\r\n\r\n  rows = [\r\n    {\r\n      name: 'Datalox',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n    {\r\n      name: 'Hopkins Branded',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n    {\r\n      name: 'Datalox 2',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    let revenueByDayArray = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (8000 - 4000) + 4000)\r\n    );\r\n    let searchesPerDay = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (100000 - 40000) + 40000)\r\n    );\r\n    this.setChartOptions(\r\n      10000,\r\n      100000,\r\n      [\r\n        'Nov 1, Nov 2, Nov 3, Nov 4',\r\n        'Nov 5',\r\n        'Nov 5',\r\n        'Nov 6',\r\n        'Nov 7',\r\n        'Nov 8',\r\n        'Nov 9',\r\n        'Nov 10',\r\n        'Nov 11',\r\n        'Nov 12',\r\n        'Nov 13',\r\n        'Nov 14',\r\n        'Nov 15',\r\n        'Nov 16',\r\n        'Nov 17',\r\n        'Nov 18',\r\n        'Nov 19',\r\n        'Nov 20',\r\n      ],\r\n      revenueByDayArray,\r\n      searchesPerDay\r\n    );\r\n  }\r\n\r\n  public updateReportingFiltering(range) {\r\n    // this.range = range;\r\n    // this.getAllPerionStats(\r\n    //   'manic_perion',\r\n    //   this.range.startDate,\r\n    //   this.range.endDate\r\n    // );\r\n    console.log('Report');\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  setChartOptions(\r\n    maxRevenue,\r\n    maxSearches,\r\n    daysArray,\r\n    revenueByDayArray,\r\n    searchesPerDay\r\n  ) {\r\n    this.chartDom = document.getElementById('main')!;\r\n    this.myChart = echarts.init(this.chartDom);\r\n\r\n    this.option = {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          crossStyle: {\r\n            color: '#999',\r\n          },\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          dataView: { show: true, readOnly: false },\r\n          magicType: { show: true, type: ['line', 'bar'] },\r\n          restore: { show: true },\r\n          saveAsImage: { show: true },\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['Revenue', 'Searches'],\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: daysArray,\r\n          axisPointer: {\r\n            type: 'shadow',\r\n          },\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          name: 'Revenue',\r\n          min: 0,\r\n          max: maxRevenue,\r\n          interval: 25000,\r\n          axisLabel: {\r\n            formatter: '${value}',\r\n          },\r\n        },\r\n        {\r\n          type: 'value',\r\n          name: 'Searches',\r\n          min: 0,\r\n          max: maxSearches,\r\n          interval: 100000,\r\n          axisLabel: {\r\n            formatter: '{value}',\r\n          },\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'Revenue',\r\n          type: 'bar',\r\n          data: revenueByDayArray,\r\n        },\r\n        {\r\n          name: 'Searches',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: searchesPerDay,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.option && this.myChart.setOption(this.option);\r\n  }\r\n}\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<div id=\"main\" style=\"width: 100%; height: 300px\"></div>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<!--Chart Data Show-->\r\n<app-reporting-revenue-chart *ngIf=\"chartData\"\r\n  [chartData]=\"chartData\"\r\n></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"30\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!--Bid SEARCHES -->\r\n  <ngx-datatable-column name=\"biddedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Bid Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!--Bid SEARCHES Result -->\r\n  <ngx-datatable-column name=\"biddedResults\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Bid Searches Result\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- COVERAGE -->\r\n  <ngx-datatable-column name=\"coverage\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Coverage\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CPC -->\r\n  <ngx-datatable-column name=\"cpc\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CPC\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- RN -->\r\n  <ngx-datatable-column name=\"rn\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      RN\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TqScore -->\r\n  <ngx-datatable-column name=\"tqScore\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      TqScore\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { VerizonService } from 'src/app/shared/service/admin-stats/verizon.service';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-verizon-direct',\r\n  templateUrl: './verizon-direct.component.html',\r\n  styleUrls: ['./verizon-direct.component.scss']\r\n})\r\nexport class VerizonDirectComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  tagList: any = [];\r\n  //Sends chartData to ReportingRevenueChartComponent\r\n  chartData: ChartDataInterface;\r\n  //Sends summaryMetrics to SummaryMetricsComponent\r\n  summaryMetrics: any;\r\n\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  allStats: any;\r\n\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor(\r\n    private verizonService: VerizonService,\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n   }\r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n    this.rows = [];\r\n    this.rows = await this.getAllVerizonStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n  \r\n  //get Tags with selected company\r\n  getCompanyTags(selectedCompany) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    })\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  public async updateReportingFiltering(range) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllVerizonStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  getChartMetrics(company, startDate, endDate) {\r\n    return this.verizonService\r\n      .getChartMetrics(company, startDate, endDate)\r\n      .toPromise()\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  }\r\n\r\n  getAllVerizonStats(company, startDate, endDate) {\r\n    return this.verizonService.getAllVerizonStats(company, startDate, endDate).toPromise().then((response) => {\r\n      console.log('getAllVerizonStats() response:', response);\r\n      this.loadingIndicator = false;\r\n      this.allStats = response.stats;\r\n      this.allStats.map(function(resStat) {\r\n        resStat.publisher = \"No Publisher\"\r\n        resStat.tagname = \"No Tag\" \r\n      });\r\n      for (var tagL of this.tagList) {\r\n        if(tagL.tag.advertiser == \"verizon-direct\") {\r\n          for (var tagSub of tagL.tag.subids) {\r\n            if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n              this.allStats.map(stat => {\r\n                if (stat.subid.includes(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } else if (tagSub.filterTag ==\"StartsWith\") {\r\n              this.allStats.map(stat => {\r\n                if (stat.subid.startsWith(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } else if (tagSub.filterTag ==\"EndsWith\") {\r\n              this.allStats.map(stat => {\r\n                if (stat.subid.endsWith(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              }) \r\n              \r\n            } else if (tagSub.filterTag ==\"ExactValue\") {\r\n              this.allStats.map(stat => {\r\n                if (stat.subid == tagSub.subid) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } \r\n          }\r\n        }\r\n      }\r\n      return this.allStats;\r\n    })\r\n  }\r\n\r\n  getSummaryMetrics(company) {\r\n    return this.verizonService.getSummaryMetrics(company).toPromise().then((response) => {\r\n      console.log('Got summary metrics');\r\n      var allSummary = {};\r\n      var currentPercentPace = 0;\r\n      var lastPercentPace = 0;\r\n      if(response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n      }\r\n      if(response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n      }\r\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n      allSummary['summary'] = response.summary;\r\n      return allSummary;\r\n    })\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\nconst API_ACCOUNTING_URL = `${environment.apiUrl}/stats/admin/accounting`;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class AccountingService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    getRubiStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n        return this.http.get<any>(API_ACCOUNTING_URL + '/rubi', {\r\n          params: { company: company, startDate: startDate, endDate: endDate },\r\n        });\r\n    }\r\n\r\n    getPerionStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n        return this.http.get<any>(API_ACCOUNTING_URL + '/perion', {\r\n          params: { company: company, startDate: startDate, endDate: endDate },\r\n        });\r\n    }\r\n\r\n    getLyonStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n        return this.http.get<any>(API_ACCOUNTING_URL + '/lyons', {\r\n          params: { company: company, startDate: startDate, endDate: endDate },\r\n        });\r\n    }\r\n    getApptitudeStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n        return this.http.get<any>(API_ACCOUNTING_URL + '/apptitude', {\r\n          params: { company: company, startDate: startDate, endDate: endDate },\r\n        });\r\n    }\r\n\r\n    getSolexBCStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n        return this.http.get<any>(API_ACCOUNTING_URL + '/solex-bc', {\r\n          params: { company: company, startDate: startDate, endDate: endDate },\r\n        });\r\n    }\r\n\r\n    getVerizonDirectStats(company: any, startDate: any, endDate: any): Observable<any> {\r\n        return this.http.get<any>(API_ACCOUNTING_URL + '/verizon-direct', {\r\n          params: { company: company, startDate: startDate, endDate: endDate },\r\n        });\r\n    }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport * as moment from 'moment';\r\n\r\nconst API_MANUAL_UPDATE_URL = `${environment.apiUrl}/stats/admin/manual-update`;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class ManualUpdateService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    updateManualStats(updateData: any): Observable<any> {\r\n        const { company , reportType, startDate, endDate } = updateData;\r\n        var data = {\r\n            \"company\": company,\r\n            \"reportType\": reportType,\r\n            'startDate': moment(startDate).format(\"YYYY-MM-DD\"),\r\n            'endDate': moment(endDate).format(\"YYYY-MM-DD\")\r\n        }\r\n        return this.http.put<any>(API_MANUAL_UPDATE_URL + '/stat-update', data);\r\n      }\r\n    updateManualSplit(updateData: any): Observable<any> {\r\n        const { company , tag, startDate, endDate } = updateData;\r\n        var data = {\r\n            \"company\": company,\r\n            \"tag\": tag,\r\n            'startDate': startDate,\r\n            'endDate': endDate\r\n        }\r\n        return this.http.put<any>(API_MANUAL_UPDATE_URL + '/split-update', data);\r\n      }\r\n}"]}