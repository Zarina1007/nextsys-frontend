{"version":3,"sources":["webpack:///src/app/modules/admin-reporting/admin-reporting-routing.module.ts","webpack:///src/app/modules/admin-reporting/admin-reporting.module.ts","webpack:///src/app/modules/admin-reporting/all-reporting/all-reporting.component.ts","webpack:///src/app/modules/admin-reporting/all-reporting/all-reporting.component.html","webpack:///src/app/modules/admin-reporting/apptitude/apptitude.component.ts","webpack:///src/app/modules/admin-reporting/apptitude/apptitude.component.html","webpack:///src/app/modules/admin-reporting/bing-direct/bing-direct.component.ts","webpack:///src/app/modules/admin-reporting/bing-direct/bing-direct.component.html","webpack:///src/app/modules/admin-reporting/hopkins/hopkins.component.ts","webpack:///src/app/modules/admin-reporting/hopkins/hopkins.component.html","webpack:///src/app/modules/admin-reporting/imgage-advantage/imgage-advantage.component.ts","webpack:///src/app/modules/admin-reporting/imgage-advantage/imgage-advantage.component.html","webpack:///src/app/modules/admin-reporting/lyons/lyons.component.html","webpack:///src/app/modules/admin-reporting/lyons/lyons.component.ts","webpack:///src/app/modules/admin-reporting/manual-update/manual-update.component.ts","webpack:///src/app/modules/admin-reporting/manual-update/manual-update.component.html","webpack:///src/app/modules/admin-reporting/media-net/media-net.component.ts","webpack:///src/app/modules/admin-reporting/media-net/media-net.component.html","webpack:///src/app/modules/admin-reporting/perion/perion.component.html","webpack:///src/app/modules/admin-reporting/perion/perion.component.ts","webpack:///src/app/modules/admin-reporting/rubi/rubi.component.html","webpack:///src/app/modules/admin-reporting/rubi/rubi.component.ts","webpack:///src/app/modules/admin-reporting/third-party/third-party.component.ts","webpack:///src/app/modules/admin-reporting/third-party/third-party.component.html","webpack:///src/app/modules/admin-reporting/verizon-direct/verizon-direct.component.ts","webpack:///src/app/modules/admin-reporting/verizon-direct/verizon-direct.component.html","webpack:///src/app/shared/service/admin-stats/rubi.service.ts","webpack:///src/app/shared/service/admin-stats/update.service.ts"],"names":["routes","path","component","children","redirectTo","pathMatch","AdminReportingRoutingModule","forChild","imports","exports","AdminReportingModule","declarations","entryComponents","AllReportingComponent","selector","templateUrl","styleUrls","ApptitudeComponent","rows","name","tag","totalSearches","monetizedSearches","revenue","clicks","columns","prop","expanded","revenueByDayArray","Array","from","length","Math","floor","random","searchesPerDay","setChartOptions","row","console","log","table","rowDetail","toggleExpandRow","event","range","maxRevenue","maxSearches","daysArray","chartDom","document","getElementById","myChart","option","tooltip","trigger","axisPointer","type","crossStyle","color","toolbox","feature","dataView","show","readOnly","magicType","restore","saveAsImage","legend","data","xAxis","yAxis","min","max","interval","axisLabel","formatter","series","yAxisIndex","setOption","updateReportingFiltering","onDetailToggle","BingDirectComponent","HopkinsComponent","ImgageAdvantageComponent","followOn","LyonsComponent","lyonService","cdr","userService","tagService","startDate","endDate","summary","profit","tagList","filteredLyonStat","selectedCompany","getSelectedCompanyFromLocalStorage","getCompanyTags","getAllLyonStats","getChartMetrics","chartData","getSummaryMetrics","summaryMetricsData","refreshTable","testingRoute","subscribe","response","err","companyId","split","toPromise","then","error","getAllStats","allstat","allLyonStat","tagL","advertiser","subids","tagSub","filterTag","concat","filter","stat","subid","includes","map","publisher","user","fullname","tagname","startsWith","endsWith","filtered_data","obj","pos","arr","mapObj","_id","indexOf","helper","f","parseFloat","ctr","biddedCtr","biddedCTR","resultAll","reduce","prev","current","key","rptDate","toString","Object","assign","push","parseInt","searches","biddedSearches","slice","sort","a","b","company","updateAllLyonStats","markForCheck","currentMonthData","summaryMetrics","beforeMonthData","lastMonthStat","twoBeforeMonthData","twoLastMonthStat","dayInCurrentMonth","dayInBeforeMonth","dayInTwoBeforeMonth","summaryCurrentStat","filter_data","helperSummary","resultSummary","r","o","monthRevenue","monthProfit","monthRevenuePace","profitPace","sumData","summaryBeforeStat","filt_data","helperBeforeSummary","resultBeforeSummary","monthBeforeRevenue","monthBeforeProfit","monthBeforeRevenuePace","profitBeforePace","sumBeforeData","summaryTwoBeforeStat","filter_two_data","helperTwoBeforeSummary","resultTwoBeforeSummary","monthTwoBeforeRevenue","monthTwoBeforeProfit","monthTwoBeforeRevenuePace","profitTwoBeforePace","sumTwoBeforeData","currentPercentPace","lastPercentPace","summaryFinalData","revenuePace","percentPace","allSummary","allChart","chartAllLyonStat","helperChart","resultChart","revenuePerDayVal","datesOfRevenueVal","searchesPerDayVal","chartDataValue","resVal","metrics","keys","forEach","element","stats","ManualUpdateComponent","manualUpdateService","fb","companyService","authService","notification","reportTypeData","fromDate","required","toDate","currentUser","currentUserValue","companySelected","getSelectedCompanyLocalStorage","getReportingProviderList","manaulUpFG","group","reportType","preSelectValue","preSetDateRanges","getDateRanges","selectedRange","preSelectDates","getPreSetDateRange","updateDatePickerRange","getOneCompany","res","reportingProviders","report","value","reportingProvider","viewValue","valid","addControl","patchValue","reportTypeValue","updateManualStats","checkExist","isObjectEmpty","showSuccess","showWarning","selection","dateFormat","utc","startOf","format","endOf","subtract","onReportSubmit","changeDatePicker","onPreSetRangeSelectChange","MediaNetComponent","PerionComponent","perionService","login","username","password","statsUpdateURL","getAllPerionStats","updateAllPerionStats","allStat","allPerionStat","Set","perionStat","JSON","stringify","date","has","add","allChartStat","allChartPerionStat","impressions","RubiComponent","rubiService","getSelectedCompanyStored","ThirdPartyComponent","VerizonDirectComponent","API_RUBI_URL","apiUrl","RubiService","http","get","params","put","providedIn","API_MANUAL_UPDATE_URL","ManualUpdateService","updateData"],"mappings":"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","file":"modules-admin-reporting-admin-reporting-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllReportingComponent } from './all-reporting/all-reporting.component';\r\nimport { ApptitudeComponent } from './apptitude/apptitude.component';\r\nimport { HopkinsComponent } from './hopkins/hopkins.component';\r\nimport { ImgageAdvantageComponent } from './imgage-advantage/imgage-advantage.component';\r\nimport { MediaNetComponent } from './media-net/media-net.component';\r\nimport { PerionComponent } from './perion/perion.component';\r\nimport { AdminReportingComponent } from './admin-reporting.component';\r\nimport { ThirdPartyComponent } from './third-party/third-party.component';\r\nimport { BingDirectComponent } from './bing-direct/bing-direct.component';\r\nimport { LyonsComponent } from './lyons/lyons.component';\r\nimport { RubiComponent } from './rubi/rubi.component';\r\nimport { VerizonDirectComponent } from './verizon-direct/verizon-direct.component';\r\nimport { ManualUpdateComponent } from './manual-update/manual-update.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminReportingComponent,\r\n    children: [\r\n      {\r\n        path: 'perion',\r\n        component: PerionComponent,\r\n      },\r\n      {\r\n        path: 'image-advantage',\r\n        component: ImgageAdvantageComponent,\r\n      },\r\n      {\r\n        path: 'hopkins',\r\n        component: HopkinsComponent,\r\n      },\r\n      {\r\n        path: 'apptitude',\r\n        component: ApptitudeComponent,\r\n      },\r\n      {\r\n        path: 'media-net',\r\n        component: MediaNetComponent,\r\n      },\r\n      {\r\n        path: 'bing-direct',\r\n        component: BingDirectComponent,\r\n      },\r\n      {\r\n        path: 'lyons',\r\n        component: LyonsComponent,\r\n      },\r\n      {\r\n        path: 'rubi',\r\n        component: RubiComponent,\r\n      },\r\n      {\r\n        path: 'verizon-direct',\r\n        component: VerizonDirectComponent,\r\n      },\r\n      {\r\n        path: 'third-party',\r\n        component: ThirdPartyComponent,\r\n      },\r\n      {\r\n        path: 'manual-update',\r\n        component: ManualUpdateComponent,\r\n      },\r\n      { path: '', redirectTo: '', pathMatch: 'full' },\r\n      { path: '**', redirectTo: '', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminReportingRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminReportingRoutingModule } from './admin-reporting-routing.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PerionComponent } from './perion/perion.component';\r\nimport { ImgageAdvantageComponent } from './imgage-advantage/imgage-advantage.component';\r\nimport { HopkinsComponent } from './hopkins/hopkins.component';\r\nimport { ApptitudeComponent } from './apptitude/apptitude.component';\r\nimport { AllReportingComponent } from './all-reporting/all-reporting.component';\r\nimport { MediaNetComponent } from './media-net/media-net.component';\r\nimport { ThirdPartyComponent } from './third-party/third-party.component';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatNativeDateModule, MatOptionModule } from '@angular/material/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { BingDirectComponent } from './bing-direct/bing-direct.component';\r\nimport { LyonsComponent } from './lyons/lyons.component';\r\nimport { RubiComponent } from './rubi/rubi.component';\r\nimport { VerizonDirectComponent } from './verizon-direct/verizon-direct.component';\r\nimport { ManualUpdateComponent } from './manual-update/manual-update.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PerionComponent,\r\n    ImgageAdvantageComponent,\r\n    HopkinsComponent,\r\n    ApptitudeComponent,\r\n    AllReportingComponent,\r\n    MediaNetComponent,\r\n    ThirdPartyComponent,\r\n    BingDirectComponent,\r\n    LyonsComponent,\r\n    RubiComponent,\r\n    VerizonDirectComponent,\r\n    ManualUpdateComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    AdminReportingRoutingModule,\r\n    NgxDatatableModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatListModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatSelectModule,\r\n    SharedModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    InlineSVGModule\r\n  ],\r\n  entryComponents: [],\r\n})\r\nexport class AdminReportingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-all-reporting',\r\n  templateUrl: './all-reporting.component.html',\r\n  styleUrls: ['./all-reporting.component.scss']\r\n})\r\nexport class AllReportingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>all-reporting works!</p>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as echarts from 'echarts';\r\n\r\n@Component({\r\n  selector: 'app-apptitude',\r\n  templateUrl: './apptitude.component.html',\r\n  styleUrls: ['./apptitude.component.scss'],\r\n})\r\nexport class ApptitudeComponent implements OnInit {\r\n  //Chart setup variables\r\n  chartDom;\r\n  myChart;\r\n  option;\r\n\r\n  rows = [\r\n    {\r\n      name: 'MNA',\r\n      tag: 'BHS',\r\n      totalSearches: '152311',\r\n      monetizedSearches: '102316',\r\n      revenue: '8623',\r\n      clicks: 15684,\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    let revenueByDayArray = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (8000 - 4000) + 4000)\r\n    );\r\n    let searchesPerDay = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (100000 - 40000) + 40000)\r\n    );\r\n    this.setChartOptions(\r\n      10000,\r\n      100000,\r\n      [\r\n        'Nov 1, Nov 2, Nov 3, Nov 4',\r\n        'Nov 5',\r\n        'Nov 5',\r\n        'Nov 6',\r\n        'Nov 7',\r\n        'Nov 8',\r\n        'Nov 9',\r\n        'Nov 10',\r\n        'Nov 11',\r\n        'Nov 12',\r\n        'Nov 13',\r\n        'Nov 14',\r\n        'Nov 15',\r\n        'Nov 16',\r\n        'Nov 17',\r\n        'Nov 18',\r\n        'Nov 19',\r\n        'Nov 20',\r\n      ],\r\n      revenueByDayArray,\r\n      searchesPerDay\r\n    );\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  public updateReportingFiltering(range) {\r\n    // this.range = range;\r\n    // this.getAllPerionStats(\r\n    //   'manic_perion',\r\n    //   this.range.startDate,\r\n    //   this.range.endDate\r\n    // );\r\n    console.log('Report');\r\n  }\r\n\r\n  setChartOptions(\r\n    maxRevenue,\r\n    maxSearches,\r\n    daysArray,\r\n    revenueByDayArray,\r\n    searchesPerDay\r\n  ) {\r\n    this.chartDom = document.getElementById('main')!;\r\n    this.myChart = echarts.init(this.chartDom);\r\n\r\n    this.option = {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          crossStyle: {\r\n            color: '#999',\r\n          },\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          dataView: { show: true, readOnly: false },\r\n          magicType: { show: true, type: ['line', 'bar'] },\r\n          restore: { show: true },\r\n          saveAsImage: { show: true },\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['Revenue', 'Searches'],\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: daysArray,\r\n          axisPointer: {\r\n            type: 'shadow',\r\n          },\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          name: 'Revenue',\r\n          min: 0,\r\n          max: maxRevenue,\r\n          interval: 25000,\r\n          axisLabel: {\r\n            formatter: '${value}',\r\n          },\r\n        },\r\n        {\r\n          type: 'value',\r\n          name: 'Searches',\r\n          min: 0,\r\n          max: maxSearches,\r\n          interval: 100000,\r\n          axisLabel: {\r\n            formatter: '{value}',\r\n          },\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'Revenue',\r\n          type: 'bar',\r\n          data: revenueByDayArray,\r\n        },\r\n        {\r\n          name: 'Searches',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: searchesPerDay,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.option && this.myChart.setOption(this.option);\r\n  }\r\n}\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<div id=\"main\" style=\"width: 100%; height: 300px\"></div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Month to Date Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $202,121.26</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Revenue Pace: $231,285.19</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $29,109.59</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit Pace: $173,121.45</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +21%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Last Month Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $167,542.23</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $22,954.45</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +0%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px; margin-bottom: 10px;\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bing-direct',\n  templateUrl: './bing-direct.component.html',\n  styleUrls: ['./bing-direct.component.scss']\n})\nexport class BingDirectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>bing-direct works!</p>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as echarts from 'echarts';\r\n\r\n@Component({\r\n  selector: 'app-hopkins',\r\n  templateUrl: './hopkins.component.html',\r\n  styleUrls: ['./hopkins.component.scss'],\r\n})\r\nexport class HopkinsComponent implements OnInit {\r\n  //Chart setup variables\r\n  chartDom;\r\n  myChart;\r\n  option;\r\n  rows = [\r\n    {\r\n      name: 'Greg',\r\n      tag: 'XML Hopkins',\r\n      totalSearches: '759123',\r\n      monetizedSearches: '431231',\r\n      revenue: '19623',\r\n      clicks: 50351,\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    let revenueByDayArray = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (8000 - 4000) + 4000)\r\n    );\r\n    let searchesPerDay = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (100000 - 40000) + 40000)\r\n    );\r\n    this.setChartOptions(\r\n      10000,\r\n      100000,\r\n      [\r\n        'Nov 1, Nov 2, Nov 3, Nov 4',\r\n        'Nov 5',\r\n        'Nov 5',\r\n        'Nov 6',\r\n        'Nov 7',\r\n        'Nov 8',\r\n        'Nov 9',\r\n        'Nov 10',\r\n        'Nov 11',\r\n        'Nov 12',\r\n        'Nov 13',\r\n        'Nov 14',\r\n        'Nov 15',\r\n        'Nov 16',\r\n        'Nov 17',\r\n        'Nov 18',\r\n        'Nov 19',\r\n        'Nov 20',\r\n      ],\r\n      revenueByDayArray,\r\n      searchesPerDay\r\n    );\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  public updateReportingFiltering(range) {\r\n    // this.range = range;\r\n    // this.getAllPerionStats(\r\n    //   'manic_perion',\r\n    //   this.range.startDate,\r\n    //   this.range.endDate\r\n    // );\r\n    console.log('Report');\r\n  }\r\n\r\n  setChartOptions(\r\n    maxRevenue,\r\n    maxSearches,\r\n    daysArray,\r\n    revenueByDayArray,\r\n    searchesPerDay\r\n  ) {\r\n    this.chartDom = document.getElementById('main')!;\r\n    this.myChart = echarts.init(this.chartDom);\r\n\r\n    this.option = {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          crossStyle: {\r\n            color: '#999',\r\n          },\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          dataView: { show: true, readOnly: false },\r\n          magicType: { show: true, type: ['line', 'bar'] },\r\n          restore: { show: true },\r\n          saveAsImage: { show: true },\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['Revenue', 'Searches'],\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: daysArray,\r\n          axisPointer: {\r\n            type: 'shadow',\r\n          },\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          name: 'Revenue',\r\n          min: 0,\r\n          max: maxRevenue,\r\n          interval: 25000,\r\n          axisLabel: {\r\n            formatter: '${value}',\r\n          },\r\n        },\r\n        {\r\n          type: 'value',\r\n          name: 'Searches',\r\n          min: 0,\r\n          max: maxSearches,\r\n          interval: 100000,\r\n          axisLabel: {\r\n            formatter: '{value}',\r\n          },\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'Revenue',\r\n          type: 'bar',\r\n          data: revenueByDayArray,\r\n        },\r\n        {\r\n          name: 'Searches',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: searchesPerDay,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.option && this.myChart.setOption(this.option);\r\n  }\r\n}\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<div id=\"main\" style=\"width: 100%; height: 300px\"></div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Month to Date Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Revenue Pace: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit Pace: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +0%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Last Month Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +11%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-imgage-advantage',\r\n  templateUrl: './imgage-advantage.component.html',\r\n  styleUrls: ['./imgage-advantage.component.scss'],\r\n})\r\nexport class ImgageAdvantageComponent implements OnInit {\r\n  rows = [\r\n    {\r\n      name: 'Greg',\r\n      tag: 'YHS Organic',\r\n      totalSearches: '536412',\r\n      monetizedSearches: '501235',\r\n      revenue: '52623',\r\n      clicks: 50351,\r\n      followOn: '13%',\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Month to Date Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $103,201.26</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Revenue Pace: $131,285.19</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $21,109.59</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit Pace: $173,121.45</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +27%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Last Month Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $113,542.23</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $14,121.39</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +11%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"followOn\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Follow On\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","<app-reporting-filtering\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\n></app-reporting-filtering>\n\n<app-reporting-revenue-chart *ngIf=\"chartData\"\n  [chartData]=\"chartData\"\n></app-reporting-revenue-chart>\n\n<app-summary-metrics *ngIf=\"summaryMetricsData\" [summaryMetricsData]=\"summaryMetricsData\"></app-summary-metrics>\n\n<!-- <button class=\"btn btn-sm btn-dark\"\n  (click)=\"updateAllLyonStats(selectedCompany, range.startDate, range.endDate)\"\n>\n  updateAllLyonStats\n</button>\n\n<button class=\"btn btn-sm btn-primary\" (click)=\"getAllLyonStats(range.startDate, range.endDate)\">\n  getAllLyonStats\n</button>\n\n<button class=\"btn btn-sm btn-info\" (click)=\"getSummaryMetrics(selectedCompany)\">getSummaryMetrics</button> -->\n\n<ngx-datatable\n  #expandableTable\n  class=\"material fullscreen expandable\"\n  style=\"top: 30px; height: 500px\"\n  [columnMode]=\"'force'\"\n  [headerHeight]=\"50\"\n  [footerHeight]=\"0\"\n  [rowHeight]=\"50\"\n  [scrollbarV]=\"true\"\n  [scrollbarH]=\"true\"\n  [rows]=\"rows\"\n>\n  <!-- Row Detail Template -->\n  <ngx-datatable-row-detail\n    [rowHeight]=\"100\"\n    #myDetailRow\n    (toggle)=\"onDetailToggle($event)\"\n  >\n    <ng-template\n      let-row=\"row\"\n      let-expanded=\"expanded\"\n      ngx-datatable-row-detail-template\n    >\n      <div style=\"padding-left: 35px\">\n        <div><strong>Address</strong></div>\n        <div>Test</div>\n      </div>\n    </ng-template>\n  </ngx-datatable-row-detail>\n\n  <!-- Column Templates -->\n  <ngx-datatable-column\n    [width]=\"50\"\n    [resizeable]=\"false\"\n    [sortable]=\"false\"\n    [draggable]=\"false\"\n    [canAutoResize]=\"false\"\n  >\n    <ng-template\n      let-row=\"row\"\n      let-expanded=\"expanded\"\n      ngx-datatable-cell-template\n    >\n      <a\n        href=\"javascript:void(0)\"\n        [class.datatable-icon-right]=\"!expanded\"\n        [class.datatable-icon-down]=\"expanded\"\n        title=\"Expand/Collapse Row\"\n        (click)=\"toggleExpandRow(row)\"\n      >\n      </a>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Date -->\n  <ngx-datatable-column name=\"rptDate\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Date\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | date }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SUBID -->\n  <ngx-datatable-column name=\"subid\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Subid\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Tag -->\n  <ngx-datatable-column name=\"tagname\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Tag\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Publisher -->\n  <ngx-datatable-column name=\"publisher\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Publisher\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SEARCHES -->\n  <ngx-datatable-column name=\"searches\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Searches\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n  <!-- BID SEARCHES -->\n  <ngx-datatable-column name=\"biddedSearches\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Bid Searches\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n  <!-- CLICKS -->\n  <ngx-datatable-column name=\"clicks\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Clicks\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n  \n  <!-- biddedCTR -->\n  <ngx-datatable-column name=\"biddedCtr\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      BiddedCTR\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ (value | number: '2.2-2') || (0 | number: '2.2-2') }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- CTR -->\n  <ngx-datatable-column name=\"ctr\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      CTR\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{\n        (value | number: '2.2-2') || (0 | number: '2.2-2')\n      }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Split -->\n  <ngx-datatable-column name=\"spilt\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Spilt\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n        <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- REVENUE -->\n  <ngx-datatable-column name=\"revenue\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Revenue\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | currency: 'USD' }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n</ngx-datatable>\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\nimport { LyonService } from 'src/app/shared/service/admin-stats/lyon.service';\nimport { UsersService } from '../../../shared/service/users.service'\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\n\n@Component({\n  selector: 'app-lyons',\n  templateUrl: './lyons.component.html',\n  styleUrls: ['./lyons.component.scss']\n})\nexport class LyonsComponent implements AfterViewInit {\n  range = {\n    startDate: '',\n    endDate: '',\n  };\n  summary = {\n    revenue: 0,\n    profit: 0,\n  };\n\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\n  expanded: any = {};\n\n  tagList: any = [];\n  //Sends chartData to ReportingRevenueChartComponent\n  chartData: ChartDataInterface;\n\n  //Sends summaryMetrics to SummaryMetricsComponent\n  summaryMetricsData: any;\n  currentMonthData: any;\n  beforeMonthData: any;\n  twoBeforeMonthData: any;\n  rows: any[];\n  selectedCompany: any;\n  allstat: any;\n  allChart: any;\n  filteredLyonStat: any[] = [];\n  @ViewChild('expandableTable') table: any;\n\n  constructor(\n    private lyonService: LyonService,\n    private cdr: ChangeDetectorRef,\n    private userService: UsersService,\n    private tagService: TagManagementService,\n  ) {\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\n   }\n    \n  async ngAfterViewInit() {\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\n    \n    this.rows = [];\n    this.rows = await this.getAllLyonStats(\n      this.range.startDate,\n      this.range.endDate\n    );\n    \n    this.chartData = await this.getChartMetrics(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.summaryMetricsData =await this.getSummaryMetrics(this.selectedCompany);\n    this.refreshTable();\n  }\n\n  toggleExpandRow(row) {\n    console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event) {\n    console.log('Detail Toggled', event);\n  }\n\n  async routeTester() {\n    console.log('Testing Route');\n    this.lyonService.testingRoute().subscribe((response) => {\n      console.log(response);\n    }),\n      (err) => {\n        console.log(err);\n      };\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n  //get Tags with selected company\n  getCompanyTags(selectedCompany) {\n    var companyId = selectedCompany.split(\"/\")[1];\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \n      return response;\n    })\n    .catch((error) => {\n      return error;\n    })\n  }\n  //get Stat all\n  getAllLyonStats(startDate, endDate) {\n    return this.lyonService.getAllStats(startDate, endDate).toPromise().then((response) => {    \n      this.allstat = response;\n      var allLyonStat = [];\n      for (var tagL of this.tagList) {\n        if(tagL.tag.advertiser == \"lyons\") {\n          for (var tagSub of tagL.tag.subids) {\n            if(tagSub.filterTag ==\"Contains\") {\n              \n              allLyonStat = allLyonStat.concat(this.allstat.filter(stat => stat.subid.includes(tagSub.subid)))\n              allLyonStat.map(stat => {\n                stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n                stat.tagname = tagL.tag.name\n              })\n            } else if (tagSub.filterTag ==\"StartsWith\") {\n              allLyonStat = allLyonStat.concat(this.allstat.filter(stat => stat.subid.startsWith(tagSub.subid)))\n              allLyonStat.map(stat => {\n                stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n                stat.tagname = tagL.tag.name\n              })\n            } else if (tagSub.filterTag ==\"EndsWith\") {\n              allLyonStat = allLyonStat.concat(this.allstat.filter(stat => stat.subid.endsWith(tagSub.subid)))\n              allLyonStat.map(stat => {\n                stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n                stat.tagname = tagL.tag.name\n              })\n            } else if (tagSub.filterTag ==\"ExactValue\") {\n              allLyonStat = allLyonStat.concat(this.allstat.filter(stat => stat.subid == tagSub.subid ))\n              allLyonStat.map(stat => {\n                stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n                stat.tagname = tagL.tag.name\n              })\n            }\n          }\n        }\n        \n      }\n      \n      //duplicated remove\n      let filtered_data = allLyonStat.filter((obj, pos, arr) => {\n        return arr\n          .map(mapObj => mapObj._id)\n          .indexOf(obj._id) == pos;\n      });\n      var helper = {};\n      filtered_data.map(f =>{\n        f.revenue = parseFloat(f.revenue);\n        f.ctr = parseFloat(f.ctr);\n        f.biddedCtr = parseFloat(f.biddedCTR);\n      })\n      \n      var resultAll = filtered_data.reduce(function(prev, current) {\n        var key = (current.rptDate).toString() + '-' + current.subid;\n        if(!helper[key]) {\n          helper[key] = Object.assign({}, current); // create a copy of o\n          prev.push(helper[key]);\n        } else {\n          helper[key].clicks += parseInt(current.clicks);\n          helper[key].searches += parseInt(current.searches);\n          if(current.biddedCtr) {\n            helper[key].biddedCtr += current.biddedCtr;\n          }\n          if(current.ctr) {\n            helper[key].ctr += current.ctr;\n          }\n          if(current.revenue) {\n            helper[key].revenue += current.revenue;\n          }\n          \n          helper[key].biddedSearches += parseInt(current.biddedSearches);\n          helper[key].split += parseInt(current.split);\n        }\n  \n        return prev;\n      }, []);\n      \n      return resultAll.slice().sort((a, b) => b.rptDate - a.rptDate);\n    })\n    .catch((error) => {\n      return error;\n    });\n    \n  }\n\n  updateAllLyonStats(company, startDate, endDate) {\n    this.lyonService\n      .updateAllLyonStats(company, startDate, endDate)\n      .subscribe((response) => {\n        console.log(response);\n      }),\n      (err) => {\n        console.log(err);\n      };\n  }\n\n  public async updateReportingFiltering(range) {\n    // console.log('Update report filtering....');\n    this.range = range;\n    this.rows = await this.getAllLyonStats(\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.chartData = await this.getChartMetrics(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.summaryMetricsData = await this.getSummaryMetrics(this.selectedCompany);\n    this.refreshTable();\n  }\n\n  refreshTable() {\n    this.cdr.markForCheck();\n  }\n\n  getSummaryMetrics(company) {\n    return this.lyonService.getSummaryMetrics(company).toPromise().then((response) => {    \n      this.currentMonthData = response[0].summaryMetrics;\n      this.beforeMonthData = response[0].lastMonthStat;  \n      this.twoBeforeMonthData = response[0].twoLastMonthStat;  \n      var dayInCurrentMonth = response[0].dayInCurrentMonth;\n      var dayInBeforeMonth = response[0].dayInBeforeMonth;\n      var dayInTwoBeforeMonth = response[0].dayInTwoBeforeMonth;\n      var summaryCurrentStat = [];\n      //current data get part\n      for (var tagL of this.tagList) {\n        for (var tagSub of tagL.tag.subids) {\n          if(tagSub.filterTag ==\"Contains\") {\n            \n            summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\n            summaryCurrentStat.map(stat => {\n              stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n              stat.tagname = tagL.tag.name\n            })\n          } else if (tagSub.filterTag ==\"StartsWith\") {\n            summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\n            \n          } else if (tagSub.filterTag ==\"EndsWith\") {\n            summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\n          } else if (tagSub.filterTag ==\"ExactValue\") {\n            summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid == tagSub.subid ))\n          }\n        }\n      }\n      \n      // //duplicated remove\n      let filter_data = summaryCurrentStat.filter((obj, pos, arr) => {\n        return arr\n          .map(mapObj => mapObj._id)\n          .indexOf(obj._id) == pos;\n      });\n      \n      var helperSummary = {};\n      filter_data.map(f =>{\n        f.revenue = parseFloat(f.revenue);\n        f.ctr = parseFloat(f.ctr);\n        f.biddedCtr = parseFloat(f.biddedCTR);\n      })\n      \n      var resultSummary = filter_data.reduce(function(r, o) {\n        var key = o.rptDate;\n        if(!helperSummary[key]) {\n          helperSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperSummary[key]);\n        } else {\n          helperSummary[key].searches += parseInt(o.searches);\n          if(o.revenue) {\n            helperSummary[key].revenue += o.revenue;\n          }\n        } \n        return r;\n      }, []);\n      var monthRevenue = 0;\n      var monthProfit = 0;\n      var monthRevenuePace = 0;\n      var profitPace = 0;\n      for(var sumData of resultSummary) {\n        monthRevenue += sumData.revenue;\n        monthProfit += sumData.revenue *(100 - sumData.split) * 0.01;\n        monthRevenuePace += (monthRevenue/resultSummary.length) * dayInCurrentMonth;\n        profitPace += (monthProfit/resultSummary.length)*dayInCurrentMonth;\n      }\n\n      //before month data get part\n      var summaryBeforeStat = [];\n      for (var tagL of this.tagList) {\n        for (var tagSub of tagL.tag.subids) {\n          if(tagSub.filterTag ==\"Contains\") {\n            \n            summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\n            summaryBeforeStat.map(stat => {\n              stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n              stat.tagname = tagL.tag.name\n            })\n          } else if (tagSub.filterTag ==\"StartsWith\") {\n            summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\n            \n          } else if (tagSub.filterTag ==\"EndsWith\") {\n            summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\n          } else if (tagSub.filterTag ==\"ExactValue\") {\n            summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid == tagSub.subid ))\n          }\n        }\n      }\n      \n      // //duplicated remove\n      let filt_data = summaryBeforeStat.filter((obj, pos, arr) => {\n        return arr\n          .map(mapObj => mapObj._id)\n          .indexOf(obj._id) == pos;\n      });\n      \n      var helperBeforeSummary = {};\n      filt_data.map(f =>{\n        f.revenue = parseFloat(f.revenue);\n        f.ctr = parseFloat(f.ctr);\n        f.biddedCtr = parseFloat(f.biddedCTR);\n      })\n      \n      var resultBeforeSummary = filt_data.reduce(function(r, o) {\n        var key = o.rptDate;\n        if(!helperBeforeSummary[key]) {\n          helperBeforeSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperBeforeSummary[key]);\n        } else {\n          helperBeforeSummary[key].searches += parseInt(o.searches);\n          if(o.revenue) {\n            helperBeforeSummary[key].revenue += o.revenue;\n          }\n        } \n        return r;\n      }, []);\n      var monthBeforeRevenue = 0;\n      var monthBeforeProfit = 0;\n      var monthBeforeRevenuePace = 0;\n      var profitBeforePace = 0;\n      for(var sumBeforeData of resultBeforeSummary) {\n        monthBeforeRevenue += sumBeforeData.revenue;\n        monthBeforeProfit += sumBeforeData.revenue *(100 - sumBeforeData.split) * 0.01;\n        monthBeforeRevenuePace += (monthBeforeRevenue/resultBeforeSummary.length) * dayInBeforeMonth;\n        profitBeforePace += (monthBeforeProfit/resultBeforeSummary.length)*dayInBeforeMonth;\n      }\n\n      //tow before month data get part\n      var summaryTwoBeforeStat = [];\n      for (var tagL of this.tagList) {\n        for (var tagSub of tagL.tag.subids) {\n          if(tagSub.filterTag ==\"Contains\") {\n            \n            summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\n            summaryTwoBeforeStat.map(stat => {\n              stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n              stat.tagname = tagL.tag.name\n            })\n          } else if (tagSub.filterTag ==\"StartsWith\") {\n            summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\n            \n          } else if (tagSub.filterTag ==\"EndsWith\") {\n            summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\n          } else if (tagSub.filterTag ==\"ExactValue\") {\n            summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid == tagSub.subid ))\n          }\n        }\n      }\n      \n      // //duplicated remove\n      let filter_two_data = summaryTwoBeforeStat.filter((obj, pos, arr) => {\n        return arr\n          .map(mapObj => mapObj._id)\n          .indexOf(obj._id) == pos;\n      });\n      \n      var helperTwoBeforeSummary = {};\n      filter_two_data.map(f =>{\n        f.revenue = parseFloat(f.revenue);\n        f.ctr = parseFloat(f.ctr);\n        f.biddedCtr = parseFloat(f.biddedCTR);\n      })\n      \n      var resultTwoBeforeSummary = filter_two_data.reduce(function(r, o) {\n        var key = o.rptDate;\n        if(!helperTwoBeforeSummary[key]) {\n          helperTwoBeforeSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperTwoBeforeSummary[key]);\n        } else {\n          helperTwoBeforeSummary[key].searches += parseInt(o.searches);\n          if(o.revenue) {\n            helperTwoBeforeSummary[key].revenue += o.revenue;\n          }\n        } \n        return r;\n      }, []);\n      var monthTwoBeforeRevenue = 0;\n      var monthTwoBeforeProfit = 0;\n      var monthTwoBeforeRevenuePace = 0;\n      var profitTwoBeforePace = 0;\n      for(var sumTwoBeforeData of resultTwoBeforeSummary) {\n        monthTwoBeforeRevenue += sumTwoBeforeData.revenue;\n        monthTwoBeforeProfit += sumTwoBeforeData.revenue *(100 - sumTwoBeforeData.split) * 0.01;\n        monthTwoBeforeRevenuePace += (monthTwoBeforeRevenue/resultTwoBeforeSummary.length) * dayInTwoBeforeMonth;\n        profitTwoBeforePace += (monthTwoBeforeProfit/resultTwoBeforeSummary.length)*dayInTwoBeforeMonth;\n      }\n      var currentPercentPace = 0;\n      var lastPercentPace = 0;\n      if (profitBeforePace != 0) {\n        currentPercentPace = ((profitPace - profitBeforePace) / profitBeforePace) * 100\n      }\n      if (profitTwoBeforePace != 0) {\n        lastPercentPace = ((profitBeforePace - profitTwoBeforePace) / profitTwoBeforePace) * 100\n      }\n      var summaryFinalData = [];\n      summaryFinalData.push({\n        summaryMetrics: [{\n          revenue: monthRevenue,\n          revenuePace: monthRevenuePace,\n          profit: monthProfit,\n          profitPace: profitPace,\n          percentPace: currentPercentPace\n        }],\n        lastMonthStat: [{\n          revenue: monthBeforeRevenue,\n          revenuePace: monthBeforeRevenuePace,\n          profit: monthBeforeProfit,\n          profitPace: profitBeforePace,\n          percentPace: lastPercentPace\n        }]\n      });\n      var allSummary = {};\n      allSummary['summary'] = summaryFinalData;\n      return allSummary;\n        // this.combineSummaryMetrics(response);\n      })\n      .catch((error) => {\n        return error;\n      })\n  }\n\n  getChartMetrics(company, startDate, endDate) {\n    return this.lyonService.getAllStats(startDate, endDate).toPromise().then((response) => {    \n      this.allChart = response;\n      \n      var chartAllLyonStat = [];\n      for (var tagL of this.tagList) {\n        for (var tagSub of tagL.tag.subids) {\n          if(tagSub.filterTag ==\"Contains\") {\n            \n            chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.includes(tagSub.subid)))\n            chartAllLyonStat.map(stat => {\n              stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n              stat.tagname = tagL.tag.name\n            })\n          } else if (tagSub.filterTag ==\"StartsWith\") {\n            chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.startsWith(tagSub.subid)))\n            chartAllLyonStat.map(stat => {\n              stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n              stat.tagname = tagL.tag.name\n            })\n          } else if (tagSub.filterTag ==\"EndsWith\") {\n            chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.endsWith(tagSub.subid)))\n            chartAllLyonStat.map(stat => {\n              stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n              stat.tagname = tagL.tag.name\n            })\n          } else if (tagSub.filterTag ==\"ExactValue\") {\n            chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid == tagSub.subid ))\n            chartAllLyonStat.map(stat => {\n              stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n              stat.tagname = tagL.tag.name\n            })\n          }\n        }\n      }\n      \n      //duplicated remove\n      let filter_data = chartAllLyonStat.filter((obj, pos, arr) => {\n        return arr\n          .map(mapObj => mapObj._id)\n          .indexOf(obj._id) == pos;\n      });\n      \n      var helperChart = {};\n      filter_data.map(f =>{\n        f.revenue = parseFloat(f.revenue);\n        f.ctr = parseFloat(f.ctr);\n        f.biddedCtr = parseFloat(f.biddedCTR);\n      })\n\n      var resultChart = filter_data.reduce(function(r, o) {\n        var key = o.rptDate;\n        if(!helperChart[key]) {\n          helperChart[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperChart[key]);\n        } else {\n          helperChart[key].searches += parseInt(o.searches);\n          if(o.revenue) {\n            helperChart[key].revenue += o.revenue;\n          }\n        } \n        return r;\n      }, []);\n      var revenuePerDayVal = [];\n      var datesOfRevenueVal = [];\n      var searchesPerDayVal = [];\n      var chartDataValue = {};\n      for(var resVal of resultChart) {\n        revenuePerDayVal.push(resVal.revenue);\n        datesOfRevenueVal.push(resVal.rptDate);\n        searchesPerDayVal.push(resVal.searches);\n      }\n      chartDataValue['revenuePerDay'] = revenuePerDayVal;\n      chartDataValue['datesOfRevenue'] = datesOfRevenueVal;\n      chartDataValue['searchesPerDay'] = searchesPerDayVal;\n      return chartDataValue;\n    })\n    .catch((error) => {\n      return error;\n    });\n  }\n\n  combineSummaryMetrics(metrics) {\n    metrics.summary.keys.forEach((element) => {\n      this.summary.revenue += element.revenue;\n      this.summary.profit += element.revenue * ((100 - element.split) * 0.01);\n    });\n  }\n\n  createChartData(stats) {}\n  \n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport * as moment from 'moment';\nimport { CompanyManagementService } from 'src/app/modules/company-management/company-management.service';\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\nimport { UsersService } from 'src/app/shared/service/users.service';\nimport { ManualUpdateService } from 'src/app/shared/service/admin-stats/update.service';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\n\ninterface preSetDateRanges {\n  value: string;\n  viewValue: string;\n}\n\ninterface PreSetDateRange {\n  startDate: string;\n  endDate: string;\n}\n\n@Component({\n  selector: 'app-manual-update',\n  templateUrl: './manual-update.component.html',\n  styleUrls: ['./manual-update.component.scss']\n})\nexport class ManualUpdateComponent implements OnInit {\n\n  manaulUpFG: FormGroup;\n  reportTypeData: any =[];\n\n  range = new FormGroup({\n    fromDate: new FormControl('', Validators.required),\n    toDate: new FormControl('', Validators.required)\n  });\n\n  preSetDateRanges: preSetDateRanges[];\n\n  selectedRange: PreSetDateRange;\n\n  preSelectValue: String;\n\n  preSelectDates: any;\n  companySelected: any;\n\n  currentUser: any;\n  constructor(\n    private manualUpdateService: ManualUpdateService,\n    private fb: FormBuilder, \n    private companyService: CompanyManagementService,\n    private authService: AuthService,\n    private userService: UsersService,\n    private notification: NotificationService,\n  ) { \n    this.currentUser = this.authService.currentUserValue;\n    this.companySelected = this.getSelectedCompanyLocalStorage();\n  }\n\n  ngOnInit(): void {\n    this.getReportingProviderList();\n    this.manaulUpFG = this.fb.group({\n      reportType: new FormControl('', Validators.required),\n      preSelectValue: new FormControl('', Validators.required),\n      startDate: new FormControl('', Validators.required),\n      endDate: new FormControl('', Validators.required),\n    })\n    //Get the all PRESELECT ranges\n    this.preSetDateRanges = this.getDateRanges();\n\n    //Selected range of date picker\n    this.selectedRange = {\n      startDate: '',\n      endDate: '',\n    };\n\n    //Starting value of mat select\n    this.preSelectValue = 'last7days';\n\n    //Gets the true start and end date values in date format\n    this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\n\n    //Manually updates the mat date picker with new start and end dates\n    this.updateDatePickerRange(\n      this.preSelectDates.startDate,\n      this.preSelectDates.endDate\n    );\n  }\n\n  //get Report Providers in Current Company\n  getReportingProviderList() {\n    if(this.companySelected) {\n      this.companyService.getOneCompany(this.companySelected.split('/')[1]).subscribe(res => {\n        res.reportingProviders.map(report=> {\n          this.reportTypeData.push({\n            value: report.reportingProvider,\n            viewValue: report.reportingProvider\n          })\n        });\n      });\n    } \n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n  onReportSubmit() {\n    if (this.manaulUpFG.valid) {\n      this.manaulUpFG.addControl('company',new FormControl('', Validators.required));\n      this.manaulUpFG.patchValue({\n        company: this.companySelected,\n      });\n      var reportTypeValue = this.manaulUpFG.value['reportType'];\n      this.manualUpdateService.updateManualStats(this.manaulUpFG.value).subscribe((response) => {\n        var checkExist = this.isObjectEmpty(response);\n        if(!checkExist) {\n          this.notification.showSuccess(`${reportTypeValue} data successfully updated!`, \"\")\n        } else {\n          this.notification.showWarning(`${reportTypeValue} data not existed!`, \"\")\n        }\n      })\n    }\n  }\n  isObjectEmpty(obj: {}) {\n    return Object.keys(obj).length === 0;\n  }\n  //Grabbing the mat selector options\n  private getDateRanges() {\n    return [\n      { value: 'today', viewValue: 'Today' },\n      { value: 'yesterday', viewValue: 'Yesterday' },\n      { value: 'last7days', viewValue: 'Last 7 Days' },\n      { value: 'last30days', viewValue: 'Last 30 Days' },\n      { value: 'monthToDate', viewValue: 'Month to Date' },\n      { value: 'lastMonth', viewValue: 'Last Month' },\n      { value: 'custom', viewValue: 'Custom' },\n    ];\n  }\n  //Detects when datepicker change is updated\n  public changeDatePicker(): void {\n    if (this.range.valid) {\n      this.selectedRange.startDate = this.range.value.startDate;\n      this.selectedRange.endDate = this.range.value.endDate;\n\n      this.preSelectValue = 'custom';\n    }\n  }\n\n  //Monitors mat selector, if changed (and not custom). updates the actual date picker\n  onPreSetRangeSelectChange(selection: any) {\n    if (selection.value !== 'custom') {\n      this.preSelectValue = selection.value;\n      this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\n\n      //Updates the date picker range manually\n      this.updateDatePickerRange(\n        this.preSelectDates.startDate,\n        this.preSelectDates.endDate\n      );\n    }\n  }\n\n //Updates the date picker range manually\n  //Params startDate and endDate\n  updateDatePickerRange(startDate: moment.MomentInput, endDate: moment.MomentInput) {\n    this.manaulUpFG.patchValue({\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\n    });\n  }\n\n  //Convert mat selector options and return actual dates\n  private getPreSetDateRange(selection: any) {\n    let dateFormat = 'MM-DD-YYYY';\n    switch (selection) {\n      case 'today':\n        return {\n          startDate: moment().utc().startOf('day').format(dateFormat),\n          endDate: moment().utc().endOf('day').format(dateFormat),\n        };\n      case 'yesterday':\n        return {\n          startDate: moment()\n            .subtract(1, 'days')\n            .utc()\n            .startOf('day')\n            .format(dateFormat),\n          endDate: moment()\n            .subtract(1, 'days')\n            .utc()\n            .endOf('day')\n            .format(dateFormat),\n        };\n      case 'last7days':\n        return {\n          startDate: moment()\n            .subtract(7, 'days')\n            .utc()\n            .startOf('day')\n            .format(dateFormat),\n          endDate: moment().utc().endOf('day').format(dateFormat),\n        };\n      case 'last30days':\n        return {\n          startDate: moment()\n            .subtract(30, 'days')\n            .utc()\n            .startOf('day')\n            .format(dateFormat),\n          endDate: moment().utc().endOf('day').format(dateFormat),\n        };\n      case 'monthToDate':\n        return {\n          startDate: moment()\n            .startOf('month')\n            .utc()\n            .startOf('day')\n            .format(dateFormat),\n          endDate: moment().utc().endOf('day').format(dateFormat),\n        };\n      case 'lastMonth':\n        return {\n          startDate: moment()\n            .subtract(1, 'months')\n            .startOf('month')\n            .utc()\n            .startOf('day')\n            .format(dateFormat),\n          endDate: moment()\n            .utc()\n            .subtract(1, 'months')\n            .endOf('month')\n            .format(dateFormat),\n        };\n    }\n  }\n}\n","<form class=\"example-container\" id=\"manaulUpForm\" [formGroup]=\"manaulUpFG\" (ngSubmit)=\"onReportSubmit()\">\n    <div class=\"row\">\n        <div class=\"col-xl-6\">\n            <div class=\"card card-custom example example-compact gutter-b\">\n                <div class=\"card-header\">\n                    <div class=\"card-title\">\n                        <h3 class=\"card-label\">Report Update</h3>\n                    </div>\n                </div> \n                <div class=\"card-body\">\n                    <mat-form-field>\n                        <mat-label>Report Type</mat-label>\n                        <mat-select matNativeControl placeholder=\"Select Report\" formControlName=\"reportType\">\n                          <mat-option\n                            *ngFor=\"let reportItem of reportTypeData\"\n                            [value]=\"reportItem.value\"\n                          >\n                            {{ reportItem.viewValue }}\n                          </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field>\n                        <mat-label>Enter a custom date range</mat-label>\n                        <mat-date-range-input\n                          [rangePicker]=\"picker\"\n                          (dateChange)=\"changeDatePicker()\"\n                        >\n                          <input\n                            matStartDate\n                            formControlName=\"startDate\"\n                            placeholder=\"Start date\"\n                            required\n                          />\n                          <input\n                            matEndDate\n                            formControlName=\"endDate\"\n                            placeholder=\"End date\"\n                            required\n                            (dateChange)=\"changeDatePicker()\"\n                          />\n                        </mat-date-range-input>\n                        <mat-datepicker-toggle\n                          matSuffix\n                          [for]=\"picker\"\n                        ></mat-datepicker-toggle>\n                        <mat-date-range-picker #picker></mat-date-range-picker>\n              \n                        <mat-error\n                          *ngIf=\"manaulUpFG.controls.startDate.hasError('matStartDateInvalid')\"\n                          >Invalid start date</mat-error\n                        >\n                        <mat-error\n                          *ngIf=\"manaulUpFG.controls.endDate.hasError('matEndDateInvalid')\"\n                          >Invalid end date</mat-error\n                        >\n                        <!-- Required Date Messages -->\n                        <mat-error *ngIf=\"manaulUpFG.controls.startDate.errors?.required\">Start Date Required</mat-error>\n                        <mat-error *ngIf=\"manaulUpFG.controls.endDate.errors?.required\">End Date Required</mat-error>\n                    </mat-form-field>\n            \n                    <mat-form-field>\n                    <mat-label>Preset Date Range</mat-label>\n                    <mat-select\n                        [(ngModel)]=\"preSelectValue\"\n                        (selectionChange)=\"onPreSetRangeSelectChange($event)\"\n                        formControlName=\"preSelectValue\"\n                    >\n                        <mat-option\n                        *ngFor=\"let dateRange of preSetDateRanges\"\n                        [value]=\"dateRange.value\"\n                        >\n                        {{ dateRange.viewValue }}\n                        </mat-option>\n                    </mat-select>\n                    </mat-form-field>\n                    <!-- update report -->\n                    <div class=\"row\">\n                        <div class=\"col-xl-6\">\n                            <button mat-raised-button color=\"primary\" type=\"submit\">Update Report</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-media-net',\r\n  templateUrl: './media-net.component.html',\r\n  styleUrls: ['./media-net.component.scss']\r\n})\r\nexport class MediaNetComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>media-net works!</p>\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<!-- <div class=\"row\">\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Enter a date range</mat-label>\r\n    <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n      <input\r\n        matStartDate\r\n        formControlName=\"startDate\"\r\n        placeholder=\"Start date\"\r\n      />\r\n      <input matEndDate formControlName=\"endDate\" placeholder=\"End date\" />\r\n    </mat-date-range-input>\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n    <mat-error *ngIf=\"range.controls.startDate.hasError('matStartDateInvalid')\"\r\n      >Invalid start date</mat-error\r\n    >\r\n    <mat-error *ngIf=\"range.controls.endDate.hasError('matEndDateInvalid')\"\r\n      >Invalid end date</mat-error\r\n    >\r\n  </mat-form-field>\r\n\r\n  <p>Selected range: {{ range.value | json }}</p>\r\n</div> -->\r\n\r\n<app-reporting-revenue-chart *ngIf=\"chartData\"\r\n  [chartData]=\"chartData\"\r\n></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<button class=\"btn btn-sm btn-dark\"\r\n  (click)=\"updateAllPerionStats(selectedCompany, range.startDate, range.endDate)\"\r\n>\r\n  updateAllPerionStats\r\n</button>\r\n\r\n<button class=\"btn btn-sm btn-primary\" (click)=\"getAllPerionStats(selectedCompany, range.startDate, range.endDate)\">\r\n  getAllPerionStats\r\n</button>\r\n\r\n<button class=\"btn btn-sm btn-info\" (click)=\"getSummaryMetrics(selectedCompany)\">getSummaryMetrics</button>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"publisher\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"impressions\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CPC -->\r\n  <ngx-datatable-column name=\"cpc\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CPC\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | currency: 'USD') || (0 | currency: 'USD') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{\r\n        (value | percent: '2.2-2') || (0 | percent: '2.2-2')\r\n      }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- FOLLOW ON -->\r\n  <ngx-datatable-column name=\"followon\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Follow On\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{\r\n        (value | percent: '2.2-2') || (0 | percent: '2.2-2')\r\n      }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { PerionService } from 'src/app/shared/service/admin-stats/perion.service';\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-perion',\r\n  templateUrl: './perion.component.html',\r\n  styleUrls: ['./perion.component.scss'],\r\n})\r\nexport class PerionComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n\r\n  company = {\r\n    name: 'Manic Traffic',\r\n    login: {\r\n      username: 'kevin@manictraffic.com',\r\n      password: 'kauf2552',\r\n    },\r\n    statsUpdateURL:\r\n      'https://services.hub.codefuel.com/analytics/reports?channelQueryType=all_channels&columnQueryData=%7B%22ids%22:%5B%22date%22,%22product%22,%22channel%22,%22country%22,%22searches%22,%22ad_clicks%22,%22publisher_cpc%22,%22monetized_ctr%22,%22revenue%22,%22searches_monetized%22%5D%7D&columnQueryType=specific_columns&endDate=1600991999000&geoQueryType=all&limit=10000&productQueryType=all_product&startDate=1600905600000&walletQueryType=all_wallets',\r\n  };\r\n\r\n  summary = {\r\n    revenue: 0,\r\n    profit: 0,\r\n  };\r\n\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  allStat: any[];\r\n  allChartStat: any[];\r\n  //Sends chartData to ReportingRevenueChartComponent\r\n  chartData: ChartDataInterface;\r\n\r\n  //Sends summaryMetrics to SummaryMetricsComponent\r\n  summaryMetrics: any;\r\n  tagList: any = [];\r\n  rows: any[];\r\n  selectedCompany: any;\r\n\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor(\r\n    private perionService: PerionService,\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  async ngAfterViewInit() {   \r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n\r\n    this.rows = [];\r\n    this.rows = await this.getAllPerionStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  async routeTester() {\r\n    console.log('Testing Route');\r\n    this.perionService.testingRoute().subscribe((response) => {\r\n      console.log(response);\r\n    }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  updateAllPerionStats(company, startDate, endDate) {\r\n    this.perionService\r\n      .updateAllPerionStats(company, startDate, endDate)\r\n      .subscribe((response) => {\r\n        console.log(response);\r\n      }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  public async updateReportingFiltering(range) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllPerionStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n\r\n  getAllPerionStats(company, startDate, endDate) {\r\n    return this.perionService\r\n      .getAllPerionStats(company, startDate, endDate)\r\n      .toPromise()\r\n      .then((response) => {\r\n        console.log('getAllPerionStats() response:');\r\n        //console.log(response.stats);\r\n        this.allStat = response.stats;\r\n        var allPerionStat = [];\r\n        \r\n        for (var tagL of this.tagList) {\r\n          if(tagL.tag.advertiser == \"perion\") {\r\n            for (var tagSub of tagL.tag.subids) {\r\n              if(tagSub.filterTag ==\"Contains\") {\r\n              \r\n                allPerionStat = allPerionStat.concat(this.allStat.filter(stat => stat.subid.includes(tagSub.subid)))\r\n                allPerionStat.map(stat => {\r\n                  stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n                  stat.tagname = tagL.tag.name\r\n                })\r\n              } else if (tagSub.filterTag ==\"StartsWith\") {\r\n                allPerionStat = allPerionStat.concat(this.allStat.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n                allPerionStat.map(stat => {\r\n                  stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n                  stat.tagname = tagL.tag.name\r\n                })\r\n              } else if (tagSub.filterTag ==\"EndsWith\") {\r\n                allPerionStat = allPerionStat.concat(this.allStat.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n                allPerionStat.map(stat => {\r\n                  stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n                  stat.tagname = tagL.tag.name\r\n                })\r\n              } else if (tagSub.filterTag ==\"ExactValue\") {\r\n                allPerionStat = allPerionStat.concat(this.allStat.filter(stat => stat.subid == tagSub.subid ))\r\n                allPerionStat.map(stat => {\r\n                  stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n                  stat.tagname = tagL.tag.name\r\n                })\r\n              }\r\n            }\r\n          }\r\n        }\r\n        var helper = new Set();\r\n        //duplicated remove\r\n        let filtered_data = allPerionStat.filter((perionStat) => {\r\n          const key = JSON.stringify([perionStat.date, perionStat.subid]);\r\n          return !helper.has(key) && helper.add(key);\r\n        });\r\n        \r\n        return filtered_data.slice().sort((a, b) => b.date - a.date);\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  getSummaryMetrics(company) {\r\n    return this.perionService.getSummaryMetrics(company).toPromise().then((response) => {\r\n      console.log('Got summary metrics');\r\n      //console.log(response);\r\n      return response\r\n      // this.summaryMetrics = response;\r\n      // console.log(this.summaryMetrics);\r\n      // this.combineSummaryMetrics(response);\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    })\r\n  }\r\n\r\n  getChartMetrics(company, startDate, endDate) {\r\n    return this.perionService\r\n      .getAllPerionStats(company, startDate, endDate)\r\n      .toPromise()\r\n      .then((response) => {\r\n        console.log('getAllPerionStats() response:');\r\n        this.allChartStat = response.stats;\r\n        var allChartPerionStat = [];\r\n        \r\n        for (var tagL of this.tagList) {\r\n          if(tagL.tag.advertiser == \"perion\") {\r\n            for (var tagSub of tagL.tag.subids) {\r\n              if(tagSub.filterTag ==\"Contains\") {\r\n              \r\n                allChartPerionStat = allChartPerionStat.concat(this.allChartStat.filter(stat => stat.subid.includes(tagSub.subid)))\r\n                allChartPerionStat.map(stat => {\r\n                  stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n                  stat.tagname = tagL.tag.name\r\n                })\r\n              } else if (tagSub.filterTag ==\"StartsWith\") {\r\n                allChartPerionStat = allChartPerionStat.concat(this.allChartStat.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n                allChartPerionStat.map(stat => {\r\n                  stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n                  stat.tagname = tagL.tag.name\r\n                })\r\n              } else if (tagSub.filterTag ==\"EndsWith\") {\r\n                allChartPerionStat = allChartPerionStat.concat(this.allChartStat.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n                allChartPerionStat.map(stat => {\r\n                  stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n                  stat.tagname = tagL.tag.name\r\n                })\r\n              } else if (tagSub.filterTag ==\"ExactValue\") {\r\n                allChartPerionStat = allChartPerionStat.concat(this.allChartStat.filter(stat => stat.subid == tagSub.subid ))\r\n                allChartPerionStat.map(stat => {\r\n                  stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n                  stat.tagname = tagL.tag.name\r\n                })\r\n              }\r\n            }\r\n          }\r\n        }\r\n        var helper = new Set();\r\n        //duplicated remove\r\n        let filtered_data = allChartPerionStat.filter((perionStat) => {\r\n          const key = JSON.stringify([perionStat.date, perionStat.subid]);\r\n          return !helper.has(key) && helper.add(key);\r\n        });\r\n        filtered_data = filtered_data.slice().sort((a, b) => a.date - b.date);\r\n        var helperChart = {};\r\n        var resultChart = filtered_data.reduce(function(r, o) {\r\n          var key = o.date;\r\n          if(!helperChart[key]) {\r\n            helperChart[key] = Object.assign({}, o); // create a copy of o\r\n            r.push(helperChart[key]);\r\n          } else {\r\n            helperChart[key].impressions += parseInt(o.impressions);\r\n            if(o.revenue) {\r\n              helperChart[key].revenue += o.revenue;\r\n            }\r\n          } \r\n          return r;\r\n        }, []);\r\n        var revenuePerDayVal = [];\r\n        var datesOfRevenueVal = [];\r\n        var searchesPerDayVal = [];\r\n        var chartDataValue = {};\r\n        for(var resVal of resultChart) {\r\n          revenuePerDayVal.push(resVal.revenue);\r\n          datesOfRevenueVal.push(resVal.date);\r\n          searchesPerDayVal.push(resVal.impressions);\r\n        }\r\n        chartDataValue['revenuePerDay'] = revenuePerDayVal;\r\n        chartDataValue['datesOfRevenue'] = datesOfRevenueVal;\r\n        chartDataValue['searchesPerDay'] = searchesPerDayVal;\r\n        return chartDataValue;\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  }\r\n\r\n  combineSummaryMetrics(metrics) {\r\n    metrics.summary.keys.forEach((element) => {\r\n      console.log(element.revenue);\r\n      this.summary.revenue += element.revenue;\r\n      this.summary.profit += element.revenue * ((100 - element.split) * 0.01);\r\n    });\r\n  }\r\n\r\n  //get Tags with selected company\r\n  getCompanyTags(selectedCompany) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    })\r\n  }\r\n\r\n  createChartData(stats) {}\r\n}\r\n","<app-reporting-filtering\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\n></app-reporting-filtering>\n\n<!--Chart Data Show-->\n<app-reporting-revenue-chart *ngIf=\"chartData\"\n  [chartData]=\"chartData\"\n></app-reporting-revenue-chart>","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\n\nimport { UsersService } from '../../../shared/service/users.service';\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\nimport { RubiService } from 'src/app/shared/service/admin-stats/rubi.service';\n\n@Component({\n  selector: 'app-rubi',\n  templateUrl: './rubi.component.html',\n  styleUrls: ['./rubi.component.scss']\n})\nexport class RubiComponent implements AfterViewInit {\n  range = {\n    startDate: '',\n    endDate: '',\n  };\n  rows: any[];\n  selectedCompany: any;\n  @ViewChild('expandableTable') table: any;\n  chartData: ChartDataInterface;\n  summary = {\n    revenue: 0,\n    profit: 0,\n  };\n\n  expanded: any = {};\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private userService: UsersService,\n    private rubiService: RubiService,\n  ) { \n    this.selectedCompany = this.getSelectedCompanyStored();\n  }\n\n  async ngAfterViewInit() {\n    this.rows = [];\n  }\n  public async updateReportingFiltering(range) {\n    this.range = range;\n\n    this.chartData = await this.getChartMetrics(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n\n    this.refreshTable();\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyStored() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  toggleExpandRow(row) {\n    console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event) {\n    console.log('Detail Toggled', event);\n  }\n\n  refreshTable() {\n    this.cdr.markForCheck();\n  }\n\n  getChartMetrics(company, startDate, endDate) {\n    return this.rubiService\n      .getChartMetrics(company, startDate, endDate)\n      .toPromise()\n      .then((response) => {\n        return response;\n      })\n      .catch((error) => {\n        return error;\n      });\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as echarts from 'echarts';\r\n\r\n@Component({\r\n  selector: 'app-third-party',\r\n  templateUrl: './third-party.component.html',\r\n  styleUrls: ['./third-party.component.scss'],\r\n})\r\nexport class ThirdPartyComponent implements OnInit {\r\n  //Chart setup variables\r\n  chartDom;\r\n  myChart;\r\n  option;\r\n\r\n  rows = [\r\n    {\r\n      name: 'Datalox',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n    {\r\n      name: 'Hopkins Branded',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n    {\r\n      name: 'Datalox 2',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    let revenueByDayArray = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (8000 - 4000) + 4000)\r\n    );\r\n    let searchesPerDay = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (100000 - 40000) + 40000)\r\n    );\r\n    this.setChartOptions(\r\n      10000,\r\n      100000,\r\n      [\r\n        'Nov 1, Nov 2, Nov 3, Nov 4',\r\n        'Nov 5',\r\n        'Nov 5',\r\n        'Nov 6',\r\n        'Nov 7',\r\n        'Nov 8',\r\n        'Nov 9',\r\n        'Nov 10',\r\n        'Nov 11',\r\n        'Nov 12',\r\n        'Nov 13',\r\n        'Nov 14',\r\n        'Nov 15',\r\n        'Nov 16',\r\n        'Nov 17',\r\n        'Nov 18',\r\n        'Nov 19',\r\n        'Nov 20',\r\n      ],\r\n      revenueByDayArray,\r\n      searchesPerDay\r\n    );\r\n  }\r\n\r\n  public updateReportingFiltering(range) {\r\n    // this.range = range;\r\n    // this.getAllPerionStats(\r\n    //   'manic_perion',\r\n    //   this.range.startDate,\r\n    //   this.range.endDate\r\n    // );\r\n    console.log('Report');\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  setChartOptions(\r\n    maxRevenue,\r\n    maxSearches,\r\n    daysArray,\r\n    revenueByDayArray,\r\n    searchesPerDay\r\n  ) {\r\n    this.chartDom = document.getElementById('main')!;\r\n    this.myChart = echarts.init(this.chartDom);\r\n\r\n    this.option = {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          crossStyle: {\r\n            color: '#999',\r\n          },\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          dataView: { show: true, readOnly: false },\r\n          magicType: { show: true, type: ['line', 'bar'] },\r\n          restore: { show: true },\r\n          saveAsImage: { show: true },\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['Revenue', 'Searches'],\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: daysArray,\r\n          axisPointer: {\r\n            type: 'shadow',\r\n          },\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          name: 'Revenue',\r\n          min: 0,\r\n          max: maxRevenue,\r\n          interval: 25000,\r\n          axisLabel: {\r\n            formatter: '${value}',\r\n          },\r\n        },\r\n        {\r\n          type: 'value',\r\n          name: 'Searches',\r\n          min: 0,\r\n          max: maxSearches,\r\n          interval: 100000,\r\n          axisLabel: {\r\n            formatter: '{value}',\r\n          },\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'Revenue',\r\n          type: 'bar',\r\n          data: revenueByDayArray,\r\n        },\r\n        {\r\n          name: 'Searches',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: searchesPerDay,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.option && this.myChart.setOption(this.option);\r\n  }\r\n}\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<div id=\"main\" style=\"width: 100%; height: 300px\"></div>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-verizon-direct',\n  templateUrl: './verizon-direct.component.html',\n  styleUrls: ['./verizon-direct.component.scss']\n})\nexport class VerizonDirectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>verizon-direct works!</p>\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ChartDataInterface } from '../../models/chartData.interface';\r\n\r\nconst API_RUBI_URL = `${environment.apiUrl}/stats/admin/perion`;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class RubiService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    testingRoute() {\r\n        console.log('being tested');\r\n        console.log(API_RUBI_URL);\r\n        return this.http.get<any>(`${environment.apiUrl}/stats/admin/rubi/test`);\r\n    }\r\n\r\n    getChartMetrics(company, startDate, endDate): Observable<ChartDataInterface> {\r\n        return this.http.get<any>(API_RUBI_URL + '/chart_metrics', {\r\n          params: { company: company, startDate: startDate, endDate: endDate },\r\n        });\r\n    }\r\n    getAllRubiStats(company, startDate, endDate): Observable<any> {\r\n        return this.http.get<any>(API_RUBI_URL + '/', {\r\n          params: { company: company, startDate: startDate, endDate: endDate },\r\n        });\r\n    }\r\n\r\n    getSummaryMetrics(company) {\r\n        return this.http.get<any>(API_RUBI_URL + '/summary_metrics', {\r\n          params: { company: company },\r\n        });\r\n    }\r\n    updateAllPerionStats(company, startDate, endDate): Observable<any> {\r\n        var data = {\r\n          \"company\": company,\r\n          'startDate': startDate,\r\n          'endDate': endDate\r\n        }\r\n        return this.http.put<any>(API_RUBI_URL + '/', data);\r\n    }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\nconst API_MANUAL_UPDATE_URL = `${environment.apiUrl}/stats/admin/manual-update`;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class ManualUpdateService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    updateManualStats(updateData: any): Observable<any> {\r\n        const { company , reportType, startDate, endDate } = updateData;\r\n        var data = {\r\n            \"company\": company,\r\n            \"reportType\": reportType,\r\n            'startDate': startDate,\r\n            'endDate': endDate\r\n        }\r\n        return this.http.put<any>(API_MANUAL_UPDATE_URL + '/', data);\r\n      }\r\n}"]}