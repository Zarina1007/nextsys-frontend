{"version":3,"sources":["webpack:///src/app/modules/admin-reporting/admin-reporting-routing.module.ts","webpack:///src/app/modules/admin-reporting/admin-reporting.module.ts","webpack:///src/app/modules/admin-reporting/all-reporting/all-reporting.component.ts","webpack:///src/app/modules/admin-reporting/all-reporting/all-reporting.component.html","webpack:///src/app/modules/admin-reporting/apptitude/apptitude.component.ts","webpack:///src/app/modules/admin-reporting/apptitude/apptitude.component.html","webpack:///src/app/modules/admin-reporting/bing-direct/bing-direct.component.ts","webpack:///src/app/modules/admin-reporting/bing-direct/bing-direct.component.html","webpack:///src/app/modules/admin-reporting/hopkins/hopkins.component.ts","webpack:///src/app/modules/admin-reporting/hopkins/hopkins.component.html","webpack:///src/app/modules/admin-reporting/imgage-advantage/imgage-advantage.component.ts","webpack:///src/app/modules/admin-reporting/imgage-advantage/imgage-advantage.component.html","webpack:///src/app/modules/admin-reporting/lyons/lyons.component.html","webpack:///src/app/modules/admin-reporting/lyons/lyons.component.ts","webpack:///src/app/modules/admin-reporting/manual-split-update/manual-split-update.component.ts","webpack:///src/app/modules/admin-reporting/manual-split-update/manual-split-update.component.html","webpack:///src/app/modules/admin-reporting/manual-update/manual-update.component.ts","webpack:///src/app/modules/admin-reporting/manual-update/manual-update.component.html","webpack:///src/app/modules/admin-reporting/media-net/media-net.component.ts","webpack:///src/app/modules/admin-reporting/media-net/media-net.component.html","webpack:///src/app/modules/admin-reporting/perion/perion.component.html","webpack:///src/app/modules/admin-reporting/perion/perion.component.ts","webpack:///src/app/modules/admin-reporting/rubi/rubi.component.html","webpack:///src/app/modules/admin-reporting/rubi/rubi.component.ts","webpack:///src/app/modules/admin-reporting/solex-bc/solex-bc.component.html","webpack:///src/app/modules/admin-reporting/solex-bc/solex-bc.component.ts","webpack:///src/app/modules/admin-reporting/system1/system1.component.html","webpack:///src/app/modules/admin-reporting/system1/system1.component.ts","webpack:///src/app/modules/admin-reporting/third-party/third-party.component.ts","webpack:///src/app/modules/admin-reporting/third-party/third-party.component.html","webpack:///src/app/modules/admin-reporting/verizon-direct/verizon-direct.component.html","webpack:///src/app/modules/admin-reporting/verizon-direct/verizon-direct.component.ts","webpack:///src/app/shared/service/admin-stats/update.service.ts"],"names":["routes","path","component","children","redirectTo","pathMatch","AdminReportingRoutingModule","forChild","imports","exports","AdminReportingModule","declarations","entryComponents","AllReportingComponent","selector","templateUrl","styleUrls","ApptitudeComponent","rows","name","tag","totalSearches","monetizedSearches","revenue","clicks","columns","prop","expanded","revenueByDayArray","Array","from","length","Math","floor","random","searchesPerDay","setChartOptions","row","console","log","table","rowDetail","toggleExpandRow","event","range","maxRevenue","maxSearches","daysArray","chartDom","document","getElementById","myChart","option","tooltip","trigger","axisPointer","type","crossStyle","color","toolbox","feature","dataView","show","readOnly","magicType","restore","saveAsImage","legend","data","xAxis","yAxis","min","max","interval","axisLabel","formatter","series","yAxisIndex","setOption","updateReportingFiltering","onDetailToggle","BingDirectComponent","HopkinsComponent","ImgageAdvantageComponent","followOn","LyonsComponent","lyonService","cdr","userService","tagService","startDate","endDate","summary","profit","loadingIndicator","tagList","filteredLyonStat","selectedCompany","getSelectedCompanyFromLocalStorage","getCompanyTags","getAllLyonStats","getChartMetrics","chartData","getSummaryMetrics","summaryMetricsData","refreshTable","testingRoute","subscribe","response","err","companyId","split","toPromise","then","error","getAllStats","allstat","map","resStat","publisher","tagname","tagL","advertiser","subids","tagSub","filterTag","stat","subid","includes","user","fullname","startsWith","endsWith","helperSummary","groupData","reduce","r","o","key","Object","assign","counter","push","parseFloat","cpc","ctr","biddedCtr","biddedSearches","searches","group","company","updateAllLyonStats","markForCheck","currentMonthData","summaryMetrics","beforeMonthData","lastMonthStat","twoBeforeMonthData","twoLastMonthStat","dayInCurrentMonth","dayInBeforeMonth","dayInTwoBeforeMonth","f","resultSummary","rptDate","parseInt","monthRevenue","monthProfit","monthRevenuePace","profitPace","sumData","helperBeforeSummary","resultBeforeSummary","monthBeforeRevenue","monthBeforeProfit","monthBeforeRevenuePace","profitBeforePace","sumBeforeData","helperTwoBeforeSummary","resultTwoBeforeSummary","monthTwoBeforeRevenue","monthTwoBeforeProfit","monthTwoBeforeRevenuePace","profitTwoBeforePace","sumTwoBeforeData","currentPercentPace","lastPercentPace","summaryFinalData","revenuePace","percentPace","allSummary","sortResponse","slice","sort","a","b","date","allChart","helperChart","resultChart","revenuePerDayVal","datesOfRevenueVal","searchesPerDayVal","chartDataValue","resVal","metrics","keys","forEach","element","stats","groupProvider","backProvider","ManualSplitUpdateComponent","manualUpdateService","fb","companyService","authService","notification","tagData","selectedTagName","currentUser","currentUserValue","companySelected","getSelectedCompanyLocalStorage","getAllTags","manaulUpFG","required","preSelectValue","preSetDateRanges","getDateRanges","selectedRange","preSelectDates","getPreSetDateRange","updateDatePickerRange","resData","filter","res","value","viewValue","_id","patchValue","toDate","selection","dateFormat","utc","startOf","format","endOf","subtract","valid","addControl","updateManualSplit","checkExist","isObjectEmpty","showSuccess","showWarning","obj","onReportSubmit","handleTag","changeDatePicker","onPreSetRangeSelectChange","ManualUpdateComponent","reportUpdateTitle","reportTypeData","getReportingProviderList","reportType","getOneCompany","reportingProviders","report","reportingProvider","reportTypeValue","updateManualStats","typeName","toLowerCase","replace","letter","toUpperCase","handleReport","MediaNetComponent","PerionComponent","perionService","login","username","password","statsUpdateURL","getAllPerionStats","updateAllPerionStats","allStat","followon","impressions","monetized_impressions","publisherNet","allChartStat","RubiComponent","rubiService","getSelectedCompanyStored","getAllRubiStats","getRubiStats","allStats","monetized_searches","SolexBcComponent","solexBCService","getAllSolexBCStats","getSolexBCStats","clicksPaid","System1Component","system1Service","getAllSystem1Stats","ThirdPartyComponent","VerizonDirectComponent","verizonService","getAllVerizonStats","API_MANUAL_UPDATE_URL","apiUrl","ManualUpdateService","http","updateData","put","providedIn"],"mappings":"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","file":"modules-admin-reporting-admin-reporting-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllReportingComponent } from './all-reporting/all-reporting.component';\r\nimport { ApptitudeComponent } from './apptitude/apptitude.component';\r\nimport { HopkinsComponent } from './hopkins/hopkins.component';\r\nimport { ImgageAdvantageComponent } from './imgage-advantage/imgage-advantage.component';\r\nimport { MediaNetComponent } from './media-net/media-net.component';\r\nimport { PerionComponent } from './perion/perion.component';\r\nimport { AdminReportingComponent } from './admin-reporting.component';\r\nimport { ThirdPartyComponent } from './third-party/third-party.component';\r\nimport { BingDirectComponent } from './bing-direct/bing-direct.component';\r\nimport { LyonsComponent } from './lyons/lyons.component';\r\nimport { RubiComponent } from './rubi/rubi.component';\r\nimport { VerizonDirectComponent } from './verizon-direct/verizon-direct.component';\r\nimport { System1Component } from './system1/system1.component';\r\nimport { ManualUpdateComponent } from './manual-update/manual-update.component';\r\nimport { ManualSplitUpdateComponent } from './manual-split-update/manual-split-update.component';\r\nimport { SolexBcComponent } from './solex-bc/solex-bc.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminReportingComponent,\r\n    children: [\r\n      {\r\n        path: 'perion',\r\n        component: PerionComponent,\r\n      },\r\n      {\r\n        path: 'image-advantage',\r\n        component: ImgageAdvantageComponent,\r\n      },\r\n      {\r\n        path: 'hopkins',\r\n        component: HopkinsComponent,\r\n      },\r\n      {\r\n        path: 'apptitude',\r\n        component: ApptitudeComponent,\r\n      },\r\n      {\r\n        path: 'media-net',\r\n        component: MediaNetComponent,\r\n      },\r\n      {\r\n        path: 'bing-direct',\r\n        component: BingDirectComponent,\r\n      },\r\n      {\r\n        path: 'lyons',\r\n        component: LyonsComponent,\r\n      },\r\n      {\r\n        path: 'rubi',\r\n        component: RubiComponent,\r\n      },\r\n      {\r\n        path: 'system1',\r\n        component: System1Component,\r\n      },\r\n      {\r\n        path: 'verizon-direct',\r\n        component: VerizonDirectComponent,\r\n      },\r\n      {\r\n        path: 'third-party',\r\n        component: ThirdPartyComponent,\r\n      },\r\n      {\r\n        path: 'solex-bc',\r\n        component: SolexBcComponent,\r\n      },\r\n      {\r\n        path: 'manual-stat-update',\r\n        component: ManualUpdateComponent,\r\n      },\r\n      {\r\n        path: 'manual-split-update',\r\n        component: ManualSplitUpdateComponent,\r\n      },\r\n      { path: '', redirectTo: '', pathMatch: 'full' },\r\n      { path: '**', redirectTo: '', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminReportingRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminReportingRoutingModule } from './admin-reporting-routing.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PerionComponent } from './perion/perion.component';\r\nimport { ImgageAdvantageComponent } from './imgage-advantage/imgage-advantage.component';\r\nimport { HopkinsComponent } from './hopkins/hopkins.component';\r\nimport { ApptitudeComponent } from './apptitude/apptitude.component';\r\nimport { AllReportingComponent } from './all-reporting/all-reporting.component';\r\nimport { MediaNetComponent } from './media-net/media-net.component';\r\nimport { ThirdPartyComponent } from './third-party/third-party.component';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatNativeDateModule, MatOptionModule } from '@angular/material/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { BingDirectComponent } from './bing-direct/bing-direct.component';\r\nimport { LyonsComponent } from './lyons/lyons.component';\r\nimport { RubiComponent } from './rubi/rubi.component';\r\nimport { VerizonDirectComponent } from './verizon-direct/verizon-direct.component';\r\nimport { ManualUpdateComponent } from './manual-update/manual-update.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\nimport { ManualSplitUpdateComponent } from './manual-split-update/manual-split-update.component';\r\nimport { System1Component } from './system1/system1.component';\nimport { SolexBcComponent } from './solex-bc/solex-bc.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PerionComponent,\r\n    ImgageAdvantageComponent,\r\n    HopkinsComponent,\r\n    ApptitudeComponent,\r\n    AllReportingComponent,\r\n    MediaNetComponent,\r\n    ThirdPartyComponent,\r\n    BingDirectComponent,\r\n    LyonsComponent,\r\n    RubiComponent,\r\n    VerizonDirectComponent,\r\n    ManualUpdateComponent,\r\n    ManualSplitUpdateComponent,\r\n    System1Component,\r\n    SolexBcComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    AdminReportingRoutingModule,\r\n    NgxDatatableModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatListModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatSelectModule,\r\n    SharedModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    InlineSVGModule\r\n  ],\r\n  entryComponents: [],\r\n})\r\nexport class AdminReportingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-all-reporting',\r\n  templateUrl: './all-reporting.component.html',\r\n  styleUrls: ['./all-reporting.component.scss']\r\n})\r\nexport class AllReportingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>all-reporting works!</p>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as echarts from 'echarts';\r\n\r\n@Component({\r\n  selector: 'app-apptitude',\r\n  templateUrl: './apptitude.component.html',\r\n  styleUrls: ['./apptitude.component.scss'],\r\n})\r\nexport class ApptitudeComponent implements OnInit {\r\n  //Chart setup variables\r\n  chartDom;\r\n  myChart;\r\n  option;\r\n\r\n  rows = [\r\n    {\r\n      name: 'MNA',\r\n      tag: 'BHS',\r\n      totalSearches: '152311',\r\n      monetizedSearches: '102316',\r\n      revenue: '8623',\r\n      clicks: 15684,\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    let revenueByDayArray = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (8000 - 4000) + 4000)\r\n    );\r\n    let searchesPerDay = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (100000 - 40000) + 40000)\r\n    );\r\n    this.setChartOptions(\r\n      10000,\r\n      100000,\r\n      [\r\n        'Nov 1, Nov 2, Nov 3, Nov 4',\r\n        'Nov 5',\r\n        'Nov 5',\r\n        'Nov 6',\r\n        'Nov 7',\r\n        'Nov 8',\r\n        'Nov 9',\r\n        'Nov 10',\r\n        'Nov 11',\r\n        'Nov 12',\r\n        'Nov 13',\r\n        'Nov 14',\r\n        'Nov 15',\r\n        'Nov 16',\r\n        'Nov 17',\r\n        'Nov 18',\r\n        'Nov 19',\r\n        'Nov 20',\r\n      ],\r\n      revenueByDayArray,\r\n      searchesPerDay\r\n    );\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  public updateReportingFiltering(range) {\r\n    // this.range = range;\r\n    // this.getAllPerionStats(\r\n    //   'manic_perion',\r\n    //   this.range.startDate,\r\n    //   this.range.endDate\r\n    // );\r\n    console.log('Report');\r\n  }\r\n\r\n  setChartOptions(\r\n    maxRevenue,\r\n    maxSearches,\r\n    daysArray,\r\n    revenueByDayArray,\r\n    searchesPerDay\r\n  ) {\r\n    this.chartDom = document.getElementById('main')!;\r\n    this.myChart = echarts.init(this.chartDom);\r\n\r\n    this.option = {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          crossStyle: {\r\n            color: '#999',\r\n          },\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          dataView: { show: true, readOnly: false },\r\n          magicType: { show: true, type: ['line', 'bar'] },\r\n          restore: { show: true },\r\n          saveAsImage: { show: true },\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['Revenue', 'Searches'],\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: daysArray,\r\n          axisPointer: {\r\n            type: 'shadow',\r\n          },\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          name: 'Revenue',\r\n          min: 0,\r\n          max: maxRevenue,\r\n          interval: 25000,\r\n          axisLabel: {\r\n            formatter: '${value}',\r\n          },\r\n        },\r\n        {\r\n          type: 'value',\r\n          name: 'Searches',\r\n          min: 0,\r\n          max: maxSearches,\r\n          interval: 100000,\r\n          axisLabel: {\r\n            formatter: '{value}',\r\n          },\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'Revenue',\r\n          type: 'bar',\r\n          data: revenueByDayArray,\r\n        },\r\n        {\r\n          name: 'Searches',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: searchesPerDay,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.option && this.myChart.setOption(this.option);\r\n  }\r\n}\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<div id=\"main\" style=\"width: 100%; height: 300px\"></div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Month to Date Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $202,121.26</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Revenue Pace: $231,285.19</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $29,109.59</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit Pace: $173,121.45</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +21%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Last Month Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $167,542.23</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $22,954.45</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +0%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px; margin-bottom: 10px;\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bing-direct',\r\n  templateUrl: './bing-direct.component.html',\r\n  styleUrls: ['./bing-direct.component.scss']\r\n})\r\nexport class BingDirectComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>bing-direct works!</p>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as echarts from 'echarts';\r\n\r\n@Component({\r\n  selector: 'app-hopkins',\r\n  templateUrl: './hopkins.component.html',\r\n  styleUrls: ['./hopkins.component.scss'],\r\n})\r\nexport class HopkinsComponent implements OnInit {\r\n  //Chart setup variables\r\n  chartDom;\r\n  myChart;\r\n  option;\r\n  rows = [\r\n    {\r\n      name: 'Greg',\r\n      tag: 'XML Hopkins',\r\n      totalSearches: '759123',\r\n      monetizedSearches: '431231',\r\n      revenue: '19623',\r\n      clicks: 50351,\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    let revenueByDayArray = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (8000 - 4000) + 4000)\r\n    );\r\n    let searchesPerDay = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (100000 - 40000) + 40000)\r\n    );\r\n    this.setChartOptions(\r\n      10000,\r\n      100000,\r\n      [\r\n        'Nov 1, Nov 2, Nov 3, Nov 4',\r\n        'Nov 5',\r\n        'Nov 5',\r\n        'Nov 6',\r\n        'Nov 7',\r\n        'Nov 8',\r\n        'Nov 9',\r\n        'Nov 10',\r\n        'Nov 11',\r\n        'Nov 12',\r\n        'Nov 13',\r\n        'Nov 14',\r\n        'Nov 15',\r\n        'Nov 16',\r\n        'Nov 17',\r\n        'Nov 18',\r\n        'Nov 19',\r\n        'Nov 20',\r\n      ],\r\n      revenueByDayArray,\r\n      searchesPerDay\r\n    );\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  public updateReportingFiltering(range) {\r\n    // this.range = range;\r\n    // this.getAllPerionStats(\r\n    //   'manic_perion',\r\n    //   this.range.startDate,\r\n    //   this.range.endDate\r\n    // );\r\n    console.log('Report');\r\n  }\r\n\r\n  setChartOptions(\r\n    maxRevenue,\r\n    maxSearches,\r\n    daysArray,\r\n    revenueByDayArray,\r\n    searchesPerDay\r\n  ) {\r\n    this.chartDom = document.getElementById('main')!;\r\n    this.myChart = echarts.init(this.chartDom);\r\n\r\n    this.option = {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          crossStyle: {\r\n            color: '#999',\r\n          },\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          dataView: { show: true, readOnly: false },\r\n          magicType: { show: true, type: ['line', 'bar'] },\r\n          restore: { show: true },\r\n          saveAsImage: { show: true },\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['Revenue', 'Searches'],\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: daysArray,\r\n          axisPointer: {\r\n            type: 'shadow',\r\n          },\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          name: 'Revenue',\r\n          min: 0,\r\n          max: maxRevenue,\r\n          interval: 25000,\r\n          axisLabel: {\r\n            formatter: '${value}',\r\n          },\r\n        },\r\n        {\r\n          type: 'value',\r\n          name: 'Searches',\r\n          min: 0,\r\n          max: maxSearches,\r\n          interval: 100000,\r\n          axisLabel: {\r\n            formatter: '{value}',\r\n          },\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'Revenue',\r\n          type: 'bar',\r\n          data: revenueByDayArray,\r\n        },\r\n        {\r\n          name: 'Searches',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: searchesPerDay,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.option && this.myChart.setOption(this.option);\r\n  }\r\n}\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<div id=\"main\" style=\"width: 100%; height: 300px\"></div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Month to Date Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Revenue Pace: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit Pace: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +0%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Last Month Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +11%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-imgage-advantage',\r\n  templateUrl: './imgage-advantage.component.html',\r\n  styleUrls: ['./imgage-advantage.component.scss'],\r\n})\r\nexport class ImgageAdvantageComponent implements OnInit {\r\n  rows = [\r\n    {\r\n      name: 'Greg',\r\n      tag: 'YHS Organic',\r\n      totalSearches: '536412',\r\n      monetizedSearches: '501235',\r\n      revenue: '52623',\r\n      clicks: 50351,\r\n      followOn: '13%',\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Month to Date Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $103,201.26</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Revenue Pace: $131,285.19</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $21,109.59</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit Pace: $173,121.45</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +27%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Last Month Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $113,542.23</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $14,121.39</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +11%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"followOn\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Follow On\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<app-reporting-revenue-chart *ngIf=\"chartData\"\r\n  [chartData]=\"chartData\"\r\n></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetricsData\" [summaryMetricsData]=\"summaryMetricsData\"></app-summary-metrics>\r\n\r\n<!-- <button class=\"btn btn-sm btn-dark\"\r\n  (click)=\"updateAllLyonStats(selectedCompany, range.startDate, range.endDate)\"\r\n>\r\n  updateAllLyonStats\r\n</button>\r\n\r\n<button class=\"btn btn-sm btn-primary\" (click)=\"getAllLyonStats(range.startDate, range.endDate)\">\r\n  getAllLyonStats\r\n</button>\r\n\r\n<button class=\"btn btn-sm btn-info\" (click)=\"getSummaryMetrics(selectedCompany)\">getSummaryMetrics</button> -->\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-3\"\r\n    (click)=\"groupProvider()\"\r\n  >\r\n    Group\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-3\"\r\n    (click)=\"backProvider()\"\r\n  >\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"30\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Tag -->\r\n  <!-- <ngx-datatable-column name=\"tagname\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column> -->\r\n\r\n  <!-- Publisher -->\r\n  <ngx-datatable-column name=\"publisher\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  <!-- BID SEARCHES -->\r\n  <ngx-datatable-column name=\"biddedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Bid Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  \r\n  <!-- biddedCTR -->\r\n  <ngx-datatable-column name=\"biddedCtr\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      BiddedCTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number: '2.2-2') || (0 | number: '2.2-2') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{\r\n        (value | number: '2.2-2') || (0 | number: '2.2-2')\r\n      }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Split -->\r\n  <ngx-datatable-column name=\"split\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Spilt\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n        <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { LyonService } from 'src/app/shared/service/admin-stats/lyon.service';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-lyons',\r\n  templateUrl: './lyons.component.html',\r\n  styleUrls: ['./lyons.component.scss']\r\n})\r\nexport class LyonsComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  summary = {\r\n    revenue: 0,\r\n    profit: 0,\r\n  };\r\n  loadingIndicator = true;\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n\r\n  tagList: any = [];\r\n  //Sends chartData to ReportingRevenueChartComponent\r\n  chartData: ChartDataInterface;\r\n\r\n  //Sends summaryMetrics to SummaryMetricsComponent\r\n  summaryMetricsData: any;\r\n  currentMonthData: any;\r\n  beforeMonthData: any;\r\n  twoBeforeMonthData: any;\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  allstat: any;\r\n  allChart: any;\r\n  filteredLyonStat: any[] = [];\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor(\r\n    private lyonService: LyonService,\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n   }\r\n    \r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n    \r\n    this.rows = [];\r\n    this.rows = await this.getAllLyonStats(\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    \r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetricsData =await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  async routeTester() {\r\n    console.log('Testing Route');\r\n    this.lyonService.testingRoute().subscribe((response) => {\r\n      console.log(response);\r\n    }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  //get Tags with selected company\r\n  getCompanyTags(selectedCompany) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    })\r\n  }\r\n  //get Stat all\r\n  getAllLyonStats(startDate, endDate) {\r\n    return this.lyonService.getAllStats(startDate, endDate).toPromise().then((response) => {    \r\n      this.loadingIndicator = false;\r\n      this.allstat = response;\r\n      this.allstat.map(function(resStat) {\r\n        resStat.publisher = \"No Publisher\"\r\n        resStat.tagname = \"No Tag\"\r\n      });\r\n      // var allLyonStat = [];\r\n      for (var tagL of this.tagList) {\r\n        if(tagL.tag.advertiser == \"lyons\") {\r\n          for (var tagSub of tagL.tag.subids) {\r\n            if(tagSub.filterTag ==\"Contains\") {\r\n              \r\n              this.allstat.map(stat => {\r\n                if (stat.subid.includes(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } else if (tagSub.filterTag ==\"StartsWith\") {\r\n              this.allstat.map(stat => {\r\n                if (stat.subid.startsWith(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } else if (tagSub.filterTag ==\"EndsWith\") {\r\n              this.allstat.map(stat => {\r\n                if (stat.subid.endsWith(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              }) \r\n              \r\n            } else if (tagSub.filterTag ==\"ExactValue\") {\r\n              this.allstat.map(stat => {\r\n                if (stat.subid == tagSub.subid) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } \r\n          }\r\n        }\r\n        \r\n      }\r\n      \r\n      //duplicated remove\r\n      // let filtered_data = this.allstat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      // var helper = {};\r\n      // filtered_data.map(f =>{\r\n      //   f.revenue = parseFloat(f.revenue);\r\n      //   f.ctr = parseFloat(f.ctr);\r\n      //   f.biddedCtr = parseFloat(f.biddedCTR);\r\n      //   f.split = parseFloat(f.split);\r\n      //   f.searches = parseFloat(f.searches);\r\n      //   f.biddedSearches = parseFloat(f.biddedSearches);\r\n      //   f.clicks = parseFloat(f.clicks);\r\n      // });\r\n      //Calculate the sums and group data (while tracking count)\r\n      // var resultAll = filtered_data.reduce(function(prev, current) {\r\n      //   var key = (current.rptDate).toString() + '-' + current.subid;\r\n      //   if(!helper[key]) {\r\n      //     helper[key] = Object.assign({}, current); // create a copy of o\r\n      //     helper[key].count = 1;\r\n      //     prev.push(helper[key]);\r\n      //   } else {\r\n      //     helper[key].clicks += parseInt(current.clicks);\r\n      //     helper[key].searches += parseInt(current.searches);\r\n      //     if(current.biddedCtr) {\r\n      //       helper[key].biddedCtr += current.biddedCtr;\r\n      //     }\r\n      //     if(current.ctr) {\r\n      //       helper[key].ctr += current.ctr;\r\n      //     }\r\n      //     if(current.revenue) {\r\n      //       helper[key].revenue += current.revenue;\r\n      //     }\r\n          \r\n      //     helper[key].biddedSearches += parseInt(current.biddedSearches);\r\n      //     helper[key].count += 1;\r\n      //     helper[key].split += parseInt(current.split);\r\n      //     // helper[key].split_num = 70;\r\n      //   }\r\n      //   return prev;\r\n      // }, []);\r\n      \r\n      // resultAll.map((item) => {\r\n      //   item.split = item.split/item.count\r\n      // })\r\n      // return resultAll;\r\n      return this.allstat;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    });\r\n    \r\n  }\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allstat.reduce(function(r, o) {\r\n        var key = o.publisher;\r\n        \r\n        if(!helperSummary[key]) {\r\n          helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n          helperSummary[key].counter = 1;\r\n          r.push(helperSummary[key]);\r\n        } else {\r\n          helperSummary[key].clicks += parseFloat(o.clicks);\r\n          helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n          helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n          helperSummary[key].biddedCtr += parseFloat(o.biddedCtr ? o.biddedCtr : 0);\r\n          helperSummary[key].biddedSearches += parseFloat(o.biddedSearches ? o.biddedSearches : 0);\r\n          helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n          helperSummary[key].revenue += parseFloat(o.revenue);\r\n          helperSummary[key].split += parseFloat(o.split);\r\n          helperSummary[key].counter++;\r\n        } \r\n        return r;\r\n      }, []);\r\n      for (var group of groupData) {\r\n        group.split = group.split / group.counter;\r\n        group.biddedCtr = group.biddedCtr / group.counter;\r\n        group.ctr = group.ctr / group.counter;\r\n\r\n      }\r\n      this.rows = groupData;\r\n  }\r\n  backProvider() {\r\n    this.rows = this.allstat;\r\n  }\r\n\r\n  updateAllLyonStats(company, startDate, endDate) {\r\n    this.lyonService\r\n      .updateAllLyonStats(company, startDate, endDate)\r\n      .subscribe((response) => {\r\n        console.log(response);\r\n      }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  public async updateReportingFiltering(range) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllLyonStats(\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetricsData = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  getSummaryMetrics(company) {\r\n    return this.lyonService.getSummaryMetrics(company).toPromise().then((response) => {    \r\n      this.currentMonthData = response[0].summaryMetrics;\r\n      this.beforeMonthData = response[0].lastMonthStat;  \r\n      this.twoBeforeMonthData = response[0].twoLastMonthStat;  \r\n      var dayInCurrentMonth = response[0].dayInCurrentMonth;\r\n      var dayInBeforeMonth = response[0].dayInBeforeMonth;\r\n      var dayInTwoBeforeMonth = response[0].dayInTwoBeforeMonth;\r\n      // var summaryCurrentStat = [];\r\n      //current data get part\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       summaryCurrentStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n            \r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid == tagSub.subid ))\r\n      //     }\r\n      //   }\r\n      // }\r\n      \r\n      // //duplicated remove\r\n      // let filter_data = summaryCurrentStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      \r\n      var helperSummary = {};\r\n      this.currentMonthData.map(f =>{\r\n        f.revenue = parseFloat(f.revenue);\r\n        // f.ctr = parseFloat(f.ctr);\r\n        // f.biddedCtr = parseFloat(f.biddedCTR);\r\n      })\r\n      \r\n      var resultSummary = this.currentMonthData.reduce(function(r, o) {\r\n        var key = o.rptDate;\r\n        if(!helperSummary[key]) {\r\n          helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n          r.push(helperSummary[key]);\r\n        } else {\r\n          helperSummary[key].searches += parseInt(o.searches);\r\n          if(o.revenue) {\r\n            helperSummary[key].revenue += o.revenue;\r\n          }\r\n        } \r\n        return r;\r\n      }, []);\r\n      \r\n      var monthRevenue = 0;\r\n      var monthProfit = 0;\r\n      var monthRevenuePace = 0;\r\n      var profitPace = 0;\r\n      for(var sumData of resultSummary) {\r\n        monthRevenue += sumData.revenue;\r\n        monthProfit += sumData.revenue *(100 - sumData.split) * 0.01;\r\n        monthRevenuePace += (sumData.revenue/resultSummary.length) * dayInCurrentMonth;\r\n        profitPace += (sumData.revenue *(100 - sumData.split) * 0.01/resultSummary.length)*dayInCurrentMonth;\r\n      }\r\n\r\n      //before month data get part\r\n      // var summaryBeforeStat = [];\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       summaryBeforeStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n            \r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid == tagSub.subid ))\r\n      //     }\r\n      //   }\r\n      // }\r\n      \r\n      // // //duplicated remove\r\n      // let filt_data = summaryBeforeStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      \r\n      var helperBeforeSummary = {};\r\n      this.beforeMonthData.map(f =>{\r\n        f.revenue = parseFloat(f.revenue);\r\n        // f.ctr = parseFloat(f.ctr);\r\n        // f.biddedCtr = parseFloat(f.biddedCTR);\r\n      })\r\n      \r\n      var resultBeforeSummary = this.beforeMonthData.reduce(function(r, o) {\r\n        var key = o.rptDate;\r\n        if(!helperBeforeSummary[key]) {\r\n          helperBeforeSummary[key] = Object.assign({}, o); // create a copy of o\r\n          r.push(helperBeforeSummary[key]);\r\n        } else {\r\n          helperBeforeSummary[key].searches += parseInt(o.searches);\r\n          if(o.revenue) {\r\n            helperBeforeSummary[key].revenue += o.revenue;\r\n          }\r\n        } \r\n        return r;\r\n      }, []);\r\n      var monthBeforeRevenue = 0;\r\n      var monthBeforeProfit = 0;\r\n      var monthBeforeRevenuePace = 0;\r\n      var profitBeforePace = 0;\r\n      for(var sumBeforeData of resultBeforeSummary) {\r\n        monthBeforeRevenue += sumBeforeData.revenue;\r\n        monthBeforeProfit += sumBeforeData.revenue *(100 - sumBeforeData.split) * 0.01;\r\n        monthBeforeRevenuePace += (sumBeforeData.revenue/resultBeforeSummary.length) * dayInBeforeMonth;\r\n        profitBeforePace += (sumBeforeData.revenue *(100 - sumBeforeData.split) * 0.01/resultBeforeSummary.length)*dayInBeforeMonth;\r\n      }\r\n\r\n      //tow before month data get part\r\n      // var summaryTwoBeforeStat = [];\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       summaryTwoBeforeStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n            \r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid == tagSub.subid ))\r\n      //     }\r\n      //   }\r\n      // }\r\n      \r\n      // // //duplicated remove\r\n      // let filter_two_data = summaryTwoBeforeStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      \r\n      var helperTwoBeforeSummary = {};\r\n      this.twoBeforeMonthData.map(f =>{\r\n        f.revenue = parseFloat(f.revenue);\r\n        // f.ctr = parseFloat(f.ctr);\r\n        // f.biddedCtr = parseFloat(f.biddedCTR);\r\n      })\r\n      \r\n      var resultTwoBeforeSummary = this.twoBeforeMonthData.reduce(function(r, o) {\r\n        var key = o.rptDate;\r\n        if(!helperTwoBeforeSummary[key]) {\r\n          helperTwoBeforeSummary[key] = Object.assign({}, o); // create a copy of o\r\n          r.push(helperTwoBeforeSummary[key]);\r\n        } else {\r\n          helperTwoBeforeSummary[key].searches += parseInt(o.searches);\r\n          if(o.revenue) {\r\n            helperTwoBeforeSummary[key].revenue += o.revenue;\r\n          }\r\n        } \r\n        return r;\r\n      }, []);\r\n      var monthTwoBeforeRevenue = 0;\r\n      var monthTwoBeforeProfit = 0;\r\n      var monthTwoBeforeRevenuePace = 0;\r\n      var profitTwoBeforePace = 0;\r\n      for(var sumTwoBeforeData of resultTwoBeforeSummary) {\r\n        monthTwoBeforeRevenue += sumTwoBeforeData.revenue;\r\n        monthTwoBeforeProfit += sumTwoBeforeData.revenue *(100 - sumTwoBeforeData.split) * 0.01;\r\n        monthTwoBeforeRevenuePace += (sumTwoBeforeData.revenue/resultTwoBeforeSummary.length) * dayInTwoBeforeMonth;\r\n        profitTwoBeforePace += (sumTwoBeforeData.revenue *(100 - sumTwoBeforeData.split) * 0.01/resultTwoBeforeSummary.length)*dayInTwoBeforeMonth;\r\n      }\r\n      var currentPercentPace = 0;\r\n      var lastPercentPace = 0;\r\n      if (profitBeforePace != 0) {\r\n        currentPercentPace = ((profitPace - profitBeforePace) / profitBeforePace) * 100\r\n      }\r\n      if (profitTwoBeforePace != 0) {\r\n        lastPercentPace = ((profitBeforePace - profitTwoBeforePace) / profitTwoBeforePace) * 100\r\n      }\r\n      var summaryFinalData = [];\r\n      summaryFinalData.push({\r\n        summaryMetrics: [{\r\n          revenue: monthRevenue,\r\n          revenuePace: monthRevenuePace,\r\n          profit: monthProfit,\r\n          profitPace: profitPace,\r\n          percentPace: currentPercentPace\r\n        }],\r\n        lastMonthStat: [{\r\n          revenue: monthBeforeRevenue,\r\n          revenuePace: monthBeforeRevenuePace,\r\n          profit: monthBeforeProfit,\r\n          profitPace: profitBeforePace,\r\n          percentPace: lastPercentPace\r\n        }]\r\n      });\r\n      var allSummary = {};\r\n      allSummary['summary'] = summaryFinalData;\r\n      return allSummary;\r\n        // this.combineSummaryMetrics(response);\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      })\r\n  }\r\n\r\n  getChartMetrics(company, startDate, endDate) {\r\n    return this.lyonService.getAllStats(startDate, endDate).toPromise().then((response) => {  \r\n      var sortResponse = response.slice().sort((a, b) => a.date - b.date)  \r\n      this.allChart = sortResponse;\r\n      // var chartAllLyonStat = [];\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       chartAllLyonStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n      //       chartAllLyonStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //       chartAllLyonStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid == tagSub.subid ))\r\n      //       chartAllLyonStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     }\r\n      //   }\r\n      // }\r\n      \r\n      //duplicated remove\r\n      // let filter_data = chartAllLyonStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      var helperChart = {};\r\n      // this.allChart.map(f =>{\r\n      //   f.revenue = parseFloat(f.revenue);\r\n      //   f.ctr = parseFloat(f.ctr);\r\n      //   f.searches = parseFloat(f.searches);\r\n      //   f.biddedCtr = parseFloat(f.biddedCTR);\r\n      // })\r\n      \r\n      var resultChart = this.allChart.reduce(function(r, o) {\r\n        var key = o.date;\r\n        if(!helperChart[key]) {\r\n          helperChart[key] = Object.assign({}, o); // create a copy of o\r\n          r.push(helperChart[key]);\r\n        } else {\r\n          helperChart[key].searches += parseInt(o.searches);\r\n          if(o.revenue) {\r\n            helperChart[key].revenue += o.revenue;\r\n          }\r\n        } \r\n        return r;\r\n      }, []);\r\n      \r\n      var revenuePerDayVal = [];\r\n      var datesOfRevenueVal = [];\r\n      var searchesPerDayVal = [];\r\n      var chartDataValue = {};\r\n      for(var resVal of resultChart) {\r\n        revenuePerDayVal.push(resVal.revenue);\r\n        datesOfRevenueVal.push(resVal.date);\r\n        searchesPerDayVal.push(resVal.searches);\r\n      }\r\n      chartDataValue['revenuePerDay'] = revenuePerDayVal;\r\n      chartDataValue['datesOfRevenue'] = datesOfRevenueVal;\r\n      chartDataValue['searchesPerDay'] = searchesPerDayVal;\r\n      return chartDataValue;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    });\r\n  }\r\n\r\n  combineSummaryMetrics(metrics) {\r\n    metrics.summary.keys.forEach((element) => {\r\n      this.summary.revenue += element.revenue;\r\n      this.summary.profit += element.revenue * ((100 - element.split) * 0.01);\r\n    });\r\n  }\r\n\r\n  createChartData(stats) {}\r\n  \r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { ManualUpdateService } from 'src/app/shared/service/admin-stats/update.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\nimport { CompanyManagementService } from 'src/app/modules/company-management/company-management.service';\r\nimport * as moment from 'moment';\r\nimport { TagManagementService } from '../../tag-management/tag-management.service';\r\n\r\ninterface preSetDateRanges {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\ninterface PreSetDateRange {\r\n  startDate: string;\r\n  endDate: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-manual-split-update',\r\n  templateUrl: './manual-split-update.component.html',\r\n  styleUrls: ['./manual-split-update.component.scss']\r\n})\r\nexport class ManualSplitUpdateComponent implements OnInit {\r\n  manaulUpFG: FormGroup;\r\n  tagData: any =[];\r\n\r\n  preSetDateRanges: preSetDateRanges[];\r\n  range: FormGroup;\r\n  selectedRange: PreSetDateRange;\r\n\r\n  preSelectValue: String;\r\n\r\n  preSelectDates: any;\r\n  companySelected: any;\r\n  currentUser: any;\r\n  selectedTagName = '';\r\n\r\n  constructor(\r\n    private manualUpdateService: ManualUpdateService,\r\n    private fb: FormBuilder, \r\n    private companyService: CompanyManagementService,\r\n    private authService: AuthService,\r\n    private userService: UsersService,\r\n    private notification: NotificationService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.currentUser = this.authService.currentUserValue;\r\n    this.companySelected = this.getSelectedCompanyLocalStorage();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllTags();\r\n    this.manaulUpFG = this.fb.group({\r\n      tag: new FormControl('', Validators.required),\r\n      preSelectValue: new FormControl('', Validators.required),\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required),\r\n    })\r\n    //Get the all PRESELECT ranges\r\n    this.preSetDateRanges = this.getDateRanges();\r\n    this.range = new FormGroup({\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required)\r\n    });\r\n\r\n    //Selected range of date picker\r\n    this.selectedRange = {\r\n      startDate: '',\r\n      endDate: '',\r\n    };\r\n\r\n    //Starting value of mat select\r\n    this.preSelectValue = 'last7days';\r\n\r\n    //Gets the true start and end date values in date format\r\n    this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\r\n\r\n    //Manually updates the mat date picker with new start and end dates\r\n    this.updateDatePickerRange(\r\n      this.preSelectDates.startDate,\r\n      this.preSelectDates.endDate\r\n    );\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  //get All tags List\r\n  getAllTags() {\r\n    this.tagService.getAllTags().subscribe((response) => {\r\n      var resData = [];\r\n      if(this.companySelected) {\r\n        resData = response.filter(res => res.company[0]['_id'] == this.companySelected);\r\n      }\r\n      if (resData.length > 0) {\r\n        this.tagData = [{value: 'all tag', viewValue: 'All Tag'}];\r\n      }\r\n      resData.map(res => {\r\n        this.tagData.push({\r\n          value: res._id,\r\n          viewValue: res.name\r\n        })\r\n      })\r\n    });\r\n    // if(this.companySelected) {\r\n    //   this.companyService.getOneCompany(this.companySelected.split('/')[1]).subscribe(res => {\r\n    //     res.reportingProviders.map(report=> {\r\n    //       this.tagData.push({\r\n    //         value: report.reportingProvider,\r\n    //         viewValue: report.reportingProvider\r\n    //       })\r\n    //     });\r\n    //   });\r\n    // } \r\n  }\r\n  //Updates the date picker range manually\r\n  //Params startDate and endDate\r\n  updateDatePickerRange(startDate: moment.MomentInput, endDate: moment.MomentInput) {\r\n    this.manaulUpFG.patchValue({\r\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\r\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\r\n    });\r\n    this.range.patchValue({\r\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\r\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\r\n    });\r\n  }\r\n  //Grabbing the mat selector options\r\n  private getDateRanges() {\r\n    return [\r\n      { value: 'today', viewValue: 'Today' },\r\n      { value: 'yesterday', viewValue: 'Yesterday' },\r\n      { value: 'last7days', viewValue: 'Last 7 Days' },\r\n      { value: 'last30days', viewValue: 'Last 30 Days' },\r\n      { value: 'monthToDate', viewValue: 'Month to Date' },\r\n      { value: 'lastMonth', viewValue: 'Last Month' },\r\n      { value: 'custom', viewValue: 'Custom' },\r\n    ];\r\n  }\r\n  //Monitors mat selector, if changed (and not custom). updates the actual date picker\r\n  onPreSetRangeSelectChange(selection: any) {\r\n    if (selection.value !== 'custom') {\r\n      this.preSelectValue = selection.value;\r\n      this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\r\n\r\n      //Updates the date picker range manually\r\n      this.updateDatePickerRange(\r\n        this.preSelectDates.startDate,\r\n        this.preSelectDates.endDate\r\n      );\r\n    }\r\n  }\r\n  //Convert mat selector options and return actual dates\r\n  private getPreSetDateRange(selection: any) {\r\n    let dateFormat = 'MM-DD-YYYY';\r\n    switch (selection) {\r\n      case 'today':\r\n        return {\r\n          startDate: moment().utc().startOf('day').format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'yesterday':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(1, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment()\r\n            .subtract(1, 'days')\r\n            .utc()\r\n            .endOf('day')\r\n            .format(dateFormat),\r\n        };\r\n      case 'last7days':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(7, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'last30days':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(30, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'monthToDate':\r\n        return {\r\n          startDate: moment()\r\n            .startOf('month')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'lastMonth':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(1, 'months')\r\n            .startOf('month')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment()\r\n            .utc()\r\n            .subtract(1, 'months')\r\n            .endOf('month')\r\n            .format(dateFormat),\r\n        };\r\n    }\r\n  }\r\n  handleTag(event) {\r\n    this.selectedTagName = this.tagData.filter(tag => tag.value == event.value)[0].viewValue;\r\n  }\r\n\r\n  onReportSubmit() {\r\n    if (this.manaulUpFG.valid) {\r\n      this.manaulUpFG.addControl('company',new FormControl('', Validators.required));\r\n      this.manaulUpFG.patchValue({\r\n        company: this.companySelected,\r\n      });\r\n      this.manualUpdateService.updateManualSplit(this.manaulUpFG.value).subscribe((response) => {\r\n        var checkExist = this.isObjectEmpty(response);\r\n        if(!checkExist) {\r\n          this.notification.showSuccess(`${this.selectedTagName} data splits  successfully updated!`, \"\")\r\n        } else {\r\n          this.notification.showWarning(`${this.selectedTagName} data not existed!`, \"\")\r\n        }\r\n      })\r\n    }\r\n  }\r\n  isObjectEmpty(obj: {}) {\r\n    return Object.keys(obj).length === 0;\r\n  }\r\n  //Detects when datepicker change is updated\r\n  public changeDatePicker(): void {\r\n    if (this.range.valid) {\r\n      \r\n      this.selectedRange.startDate = this.range.value.startDate;\r\n      this.selectedRange.endDate = this.range.value.endDate;\r\n\r\n      this.manaulUpFG.patchValue({\r\n        startDate: moment(this.range.value.startDate, 'MM-DD-YYYY').toDate(),\r\n        endDate: moment(this.range.value.endDate, 'MM-DD-YYYY').toDate(),\r\n      });\r\n\r\n      this.preSelectValue = 'custom';\r\n    }\r\n  }\r\n}\r\n","<form class=\"example-container\" id=\"manaulUpForm\" [formGroup]=\"manaulUpFG\" (ngSubmit)=\"onReportSubmit()\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xl-6\">\r\n            <div class=\"card card-custom example example-compact gutter-b\">\r\n                <div class=\"card-header\">\r\n                    <div class=\"card-title\">\r\n                        <h3 class=\"card-label\">Report Split Update</h3>\r\n                    </div>\r\n                </div>  \r\n                \r\n                <div class=\"card-body\">\r\n                    <mat-form-field>\r\n                        <mat-label>Tag</mat-label>\r\n                        <mat-select matNativeControl placeholder=\"Select Report\" formControlName=\"tag\" (selectionChange)=\"handleTag($event)\">\r\n                          <mat-option\r\n                            *ngFor=\"let tagItem of tagData\"\r\n                            [value]=\"tagItem.value\"\r\n                          >\r\n                            {{ tagItem.viewValue }}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <mat-label>Enter a custom date range</mat-label>\r\n                        <mat-date-range-input\r\n                          [rangePicker]=\"picker\"\r\n                          [formGroup]=\"range\"\r\n                          (dateChange)=\"changeDatePicker()\"\r\n                        >\r\n                          <input\r\n                            matStartDate\r\n                            formControlName=\"startDate\"\r\n                            placeholder=\"Start date\"\r\n                            required\r\n                          />\r\n                          <input\r\n                            matEndDate\r\n                            formControlName=\"endDate\"\r\n                            placeholder=\"End date\"\r\n                            required\r\n                            (dateChange)=\"changeDatePicker()\"\r\n                          />\r\n                        </mat-date-range-input>\r\n                        <mat-datepicker-toggle\r\n                          matSuffix\r\n                          [for]=\"picker\"\r\n                        ></mat-datepicker-toggle>\r\n                        <mat-date-range-picker #picker></mat-date-range-picker>\r\n              \r\n                        <mat-error\r\n                          *ngIf=\"manaulUpFG.controls.startDate.hasError('matStartDateInvalid')\"\r\n                          >Invalid start date</mat-error\r\n                        >\r\n                        <mat-error\r\n                          *ngIf=\"manaulUpFG.controls.endDate.hasError('matEndDateInvalid')\"\r\n                          >Invalid end date</mat-error\r\n                        >\r\n                        <!-- Required Date Messages -->\r\n                        <mat-error *ngIf=\"manaulUpFG.controls.startDate.errors?.required\">Start Date Required</mat-error>\r\n                        <mat-error *ngIf=\"manaulUpFG.controls.endDate.errors?.required\">End Date Required</mat-error>\r\n                    </mat-form-field>\r\n            \r\n                    <mat-form-field>\r\n                    <mat-label>Preset Date Range</mat-label>\r\n                    <mat-select\r\n                        [(ngModel)]=\"preSelectValue\"\r\n                        (selectionChange)=\"onPreSetRangeSelectChange($event)\"\r\n                        formControlName=\"preSelectValue\"\r\n                    >\r\n                        <mat-option\r\n                        *ngFor=\"let dateRange of preSetDateRanges\"\r\n                        [value]=\"dateRange.value\"\r\n                        >\r\n                        {{ dateRange.viewValue }}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    </mat-form-field>\r\n                    <!-- update report -->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xl-6\">\r\n                            <button mat-raised-button color=\"primary\" type=\"submit\">Update Splits</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { CompanyManagementService } from 'src/app/modules/company-management/company-management.service';\r\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { ManualUpdateService } from 'src/app/shared/service/admin-stats/update.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\n\r\ninterface preSetDateRanges {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\ninterface PreSetDateRange {\r\n  startDate: string;\r\n  endDate: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-manual-update',\r\n  templateUrl: './manual-update.component.html',\r\n  styleUrls: ['./manual-update.component.scss']\r\n})\r\nexport class ManualUpdateComponent implements OnInit {\r\n  reportUpdateTitle = 'Report Stat Update'\r\n  manaulUpFG: FormGroup;\r\n  reportTypeData: any =[];\r\n\r\n  preSetDateRanges: preSetDateRanges[];\r\n  range: FormGroup;\r\n  selectedRange: PreSetDateRange;\r\n\r\n  preSelectValue: String;\r\n\r\n  preSelectDates: any;\r\n  companySelected: any;\r\n\r\n  currentUser: any;\r\n  constructor(\r\n    private manualUpdateService: ManualUpdateService,\r\n    private fb: FormBuilder, \r\n    private companyService: CompanyManagementService,\r\n    private authService: AuthService,\r\n    private userService: UsersService,\r\n    private notification: NotificationService,\r\n  ) { \r\n    this.currentUser = this.authService.currentUserValue;\r\n    this.companySelected = this.getSelectedCompanyLocalStorage();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getReportingProviderList();\r\n    this.manaulUpFG = this.fb.group({\r\n      reportType: new FormControl('', Validators.required),\r\n      preSelectValue: new FormControl('', Validators.required),\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required),\r\n    })\r\n    //Get the all PRESELECT ranges\r\n    this.preSetDateRanges = this.getDateRanges();\r\n    this.range = new FormGroup({\r\n      startDate: new FormControl('', Validators.required),\r\n      endDate: new FormControl('', Validators.required)\r\n    });\r\n\r\n    //Selected range of date picker\r\n    this.selectedRange = {\r\n      startDate: '',\r\n      endDate: '',\r\n    };\r\n\r\n    //Starting value of mat select\r\n    this.preSelectValue = 'last7days';\r\n\r\n    //Gets the true start and end date values in date format\r\n    this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\r\n\r\n    //Manually updates the mat date picker with new start and end dates\r\n    this.updateDatePickerRange(\r\n      this.preSelectDates.startDate,\r\n      this.preSelectDates.endDate\r\n    );\r\n  }\r\n\r\n  //get Report Providers in Current Company\r\n  getReportingProviderList() {\r\n    if(this.companySelected) {\r\n      this.companyService.getOneCompany(this.companySelected.split('/')[1]).subscribe(res => {\r\n        res.reportingProviders.map(report=> {\r\n          this.reportTypeData.push({\r\n            value: report.reportingProvider,\r\n            viewValue: report.reportingProvider\r\n          })\r\n        });\r\n      });\r\n    } \r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  onReportSubmit() {\r\n    if (this.manaulUpFG.valid) {\r\n      this.manaulUpFG.addControl('company',new FormControl('', Validators.required));\r\n      this.manaulUpFG.patchValue({\r\n        company: this.companySelected,\r\n      });\r\n      var reportTypeValue = this.manaulUpFG.value['reportType'];\r\n      this.manualUpdateService.updateManualStats(this.manaulUpFG.value).subscribe((response) => {\r\n        var checkExist = this.isObjectEmpty(response);\r\n        if(!checkExist) {\r\n          this.notification.showSuccess(`${reportTypeValue} data stats successfully updated!`, \"\")\r\n        } else {\r\n          this.notification.showWarning(`${reportTypeValue} data not existed!`, \"\")\r\n        }\r\n      })\r\n    }\r\n  }\r\n  isObjectEmpty(obj: {}) {\r\n    return Object.keys(obj).length === 0;\r\n  }\r\n  //Grabbing the mat selector options\r\n  private getDateRanges() {\r\n    return [\r\n      { value: 'today', viewValue: 'Today' },\r\n      { value: 'yesterday', viewValue: 'Yesterday' },\r\n      { value: 'last7days', viewValue: 'Last 7 Days' },\r\n      { value: 'last30days', viewValue: 'Last 30 Days' },\r\n      { value: 'monthToDate', viewValue: 'Month to Date' },\r\n      { value: 'lastMonth', viewValue: 'Last Month' },\r\n      { value: 'custom', viewValue: 'Custom' },\r\n    ];\r\n  }\r\n  //Detects when datepicker change is updated\r\n  public changeDatePicker(): void {\r\n    if (this.range.valid) {\r\n      \r\n      this.selectedRange.startDate = this.range.value.startDate;\r\n      this.selectedRange.endDate = this.range.value.endDate;\r\n      this.manaulUpFG.patchValue({\r\n        startDate: moment(this.range.value.startDate, 'MM-DD-YYYY').toDate(),\r\n        endDate: moment(this.range.value.endDate, 'MM-DD-YYYY').toDate(),\r\n      });\r\n\r\n      this.preSelectValue = 'custom';\r\n    }\r\n  }\r\n\r\n  //Monitors mat selector, if changed (and not custom). updates the actual date picker\r\n  onPreSetRangeSelectChange(selection: any) {\r\n    if (selection.value !== 'custom') {\r\n      this.preSelectValue = selection.value;\r\n      this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\r\n\r\n      //Updates the date picker range manually\r\n      this.updateDatePickerRange(\r\n        this.preSelectDates.startDate,\r\n        this.preSelectDates.endDate\r\n      );\r\n    }\r\n  }\r\n\r\n //Updates the date picker range manually\r\n  //Params startDate and endDate\r\n  updateDatePickerRange(startDate: moment.MomentInput, endDate: moment.MomentInput) {\r\n    this.manaulUpFG.patchValue({\r\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\r\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\r\n    });\r\n    this.range.patchValue({\r\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\r\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\r\n    });\r\n  }\r\n\r\n  //Convert mat selector options and return actual dates\r\n  private getPreSetDateRange(selection: any) {\r\n    let dateFormat = 'MM-DD-YYYY';\r\n    switch (selection) {\r\n      case 'today':\r\n        return {\r\n          startDate: moment().utc().startOf('day').format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'yesterday':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(1, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment()\r\n            .subtract(1, 'days')\r\n            .utc()\r\n            .endOf('day')\r\n            .format(dateFormat),\r\n        };\r\n      case 'last7days':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(7, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'last30days':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(30, 'days')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'monthToDate':\r\n        return {\r\n          startDate: moment()\r\n            .startOf('month')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment().utc().endOf('day').format(dateFormat),\r\n        };\r\n      case 'lastMonth':\r\n        return {\r\n          startDate: moment()\r\n            .subtract(1, 'months')\r\n            .startOf('month')\r\n            .utc()\r\n            .startOf('day')\r\n            .format(dateFormat),\r\n          endDate: moment()\r\n            .utc()\r\n            .subtract(1, 'months')\r\n            .endOf('month')\r\n            .format(dateFormat),\r\n        };\r\n    }\r\n  }\r\n  handleReport(event) {\r\n    if (event.value.length > 0) {\r\n      var typeName = event.value.toLowerCase().replace(/\\b[a-z]/g, function(letter) {\r\n        return letter.toUpperCase();\r\n      });\r\n      this.reportUpdateTitle = `${typeName} Stat Update`\r\n    }\r\n  }\r\n}\r\n","<form class=\"example-container\" id=\"manaulUpForm\" [formGroup]=\"manaulUpFG\" (ngSubmit)=\"onReportSubmit()\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xl-6\">\r\n            <div class=\"card card-custom example example-compact gutter-b\">\r\n                <div class=\"card-header\">\r\n                    <div class=\"card-title\">\r\n                        <h3 class=\"card-label\">{{reportUpdateTitle}}</h3>\r\n                    </div>\r\n                </div>  \r\n                \r\n                <div class=\"card-body\">\r\n                    <mat-form-field>\r\n                        <mat-label>Report Type</mat-label>\r\n                        <mat-select matNativeControl placeholder=\"Select Report\" formControlName=\"reportType\" (selectionChange)=\"handleReport($event)\">\r\n                          <mat-option\r\n                            *ngFor=\"let reportItem of reportTypeData\"\r\n                            [value]=\"reportItem.value\"\r\n                          >\r\n                            {{ reportItem.viewValue }}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <mat-label>Enter a custom date range</mat-label>\r\n                        <mat-date-range-input\r\n                          [rangePicker]=\"picker\"\r\n                          [formGroup]=\"range\"\r\n                          (dateChange)=\"changeDatePicker()\"\r\n                        >\r\n                          <input\r\n                            matStartDate\r\n                            formControlName=\"startDate\"\r\n                            placeholder=\"Start date\"\r\n                            required\r\n                          />\r\n                          <input\r\n                            matEndDate\r\n                            formControlName=\"endDate\"\r\n                            placeholder=\"End date\"\r\n                            required\r\n                            (dateChange)=\"changeDatePicker()\"\r\n                          />\r\n                        </mat-date-range-input>\r\n                        <mat-datepicker-toggle\r\n                          matSuffix\r\n                          [for]=\"picker\"\r\n                        ></mat-datepicker-toggle>\r\n                        <mat-date-range-picker #picker></mat-date-range-picker>\r\n              \r\n                        <mat-error\r\n                          *ngIf=\"manaulUpFG.controls.startDate.hasError('matStartDateInvalid')\"\r\n                          >Invalid start date</mat-error\r\n                        >\r\n                        <mat-error\r\n                          *ngIf=\"manaulUpFG.controls.endDate.hasError('matEndDateInvalid')\"\r\n                          >Invalid end date</mat-error\r\n                        >\r\n                        <!-- Required Date Messages -->\r\n                        <mat-error *ngIf=\"manaulUpFG.controls.startDate.errors?.required\">Start Date Required</mat-error>\r\n                        <mat-error *ngIf=\"manaulUpFG.controls.endDate.errors?.required\">End Date Required</mat-error>\r\n                    </mat-form-field>\r\n            \r\n                    <mat-form-field>\r\n                    <mat-label>Preset Date Range</mat-label>\r\n                    <mat-select\r\n                        [(ngModel)]=\"preSelectValue\"\r\n                        (selectionChange)=\"onPreSetRangeSelectChange($event)\"\r\n                        formControlName=\"preSelectValue\"\r\n                    >\r\n                        <mat-option\r\n                        *ngFor=\"let dateRange of preSetDateRanges\"\r\n                        [value]=\"dateRange.value\"\r\n                        >\r\n                        {{ dateRange.viewValue }}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    </mat-form-field>\r\n                    <!-- update report -->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xl-6\">\r\n                            <button mat-raised-button color=\"primary\" type=\"submit\">Update Stats</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-media-net',\r\n  templateUrl: './media-net.component.html',\r\n  styleUrls: ['./media-net.component.scss']\r\n})\r\nexport class MediaNetComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>media-net works!</p>\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<!-- <div class=\"row\">\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Enter a date range</mat-label>\r\n    <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n      <input\r\n        matStartDate\r\n        formControlName=\"startDate\"\r\n        placeholder=\"Start date\"\r\n      />\r\n      <input matEndDate formControlName=\"endDate\" placeholder=\"End date\" />\r\n    </mat-date-range-input>\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n    <mat-error *ngIf=\"range.controls.startDate.hasError('matStartDateInvalid')\"\r\n      >Invalid start date</mat-error\r\n    >\r\n    <mat-error *ngIf=\"range.controls.endDate.hasError('matEndDateInvalid')\"\r\n      >Invalid end date</mat-error\r\n    >\r\n  </mat-form-field>\r\n\r\n  <p>Selected range: {{ range.value | json }}</p>\r\n</div> -->\r\n\r\n<app-reporting-revenue-chart *ngIf=\"chartData\"\r\n  [chartData]=\"chartData\"\r\n></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<!-- <button class=\"btn btn-sm btn-dark\"\r\n  (click)=\"updateAllPerionStats(selectedCompany, range.startDate, range.endDate)\"\r\n>\r\n  updateAllPerionStats\r\n</button>\r\n\r\n<button class=\"btn btn-sm btn-primary\" (click)=\"getAllPerionStats(selectedCompany, range.startDate, range.endDate)\">\r\n  getAllPerionStats\r\n</button>\r\n\r\n<button class=\"btn btn-sm btn-info\" (click)=\"getSummaryMetrics(selectedCompany)\">getSummaryMetrics</button> -->\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-3\"\r\n    (click)=\"groupProvider()\"\r\n  >\r\n    Group\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-3\"\r\n    (click)=\"backProvider()\"\r\n  >\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"30\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"impressions\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CPC -->\r\n  <ngx-datatable-column name=\"cpc\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CPC\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | currency: 'USD') || (0 | currency: 'USD') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{\r\n        (value | percent: '2.2-2') || (0 | percent: '2.2-2')\r\n      }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- FOLLOW ON -->\r\n  <ngx-datatable-column name=\"followon\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Follow On\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{\r\n        (value | percent: '2.2-2') || (0 | percent: '2.2-2')\r\n      }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher Net -->\r\n  <ngx-datatable-column name=\"publisherNet\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher Net\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Profit -->\r\n  <ngx-datatable-column name=\"profit\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Profit\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { PerionService } from 'src/app/shared/service/admin-stats/perion.service';\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-perion',\r\n  templateUrl: './perion.component.html',\r\n  styleUrls: ['./perion.component.scss'],\r\n})\r\nexport class PerionComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  company = {\r\n    name: 'Manic Traffic',\r\n    login: {\r\n      username: 'kevin@manictraffic.com',\r\n      password: 'kauf2552',\r\n    },\r\n    statsUpdateURL:\r\n      'https://services.hub.codefuel.com/analytics/reports?channelQueryType=all_channels&columnQueryData=%7B%22ids%22:%5B%22date%22,%22product%22,%22channel%22,%22country%22,%22searches%22,%22ad_clicks%22,%22publisher_cpc%22,%22monetized_ctr%22,%22revenue%22,%22searches_monetized%22%5D%7D&columnQueryType=specific_columns&endDate=1600991999000&geoQueryType=all&limit=10000&productQueryType=all_product&startDate=1600905600000&walletQueryType=all_wallets',\r\n  };\r\n\r\n  summary = {\r\n    revenue: 0,\r\n    profit: 0,\r\n  };\r\n\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  allStat: any[];\r\n  allChartStat: any[];\r\n  //Sends chartData to ReportingRevenueChartComponent\r\n  chartData: ChartDataInterface;\r\n\r\n  //Sends summaryMetrics to SummaryMetricsComponent\r\n  summaryMetrics: any;\r\n  tagList: any = [];\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  summaryMetricsData: any;\r\n  currentMonthData: any;\r\n  beforeMonthData: any;\r\n  twoBeforeMonthData: any;\r\n\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor(\r\n    private perionService: PerionService,\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  async ngAfterViewInit() {   \r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n\r\n    this.rows = [];\r\n    this.rows = await this.getAllPerionStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  async routeTester() {\r\n    console.log('Testing Route');\r\n    this.perionService.testingRoute().subscribe((response) => {\r\n      console.log(response);\r\n    }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  updateAllPerionStats(company, startDate, endDate) {\r\n    this.perionService\r\n      .updateAllPerionStats(company, startDate, endDate)\r\n      .subscribe((response) => {\r\n        console.log(response);\r\n      }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  public async updateReportingFiltering(range) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllPerionStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n\r\n  getAllPerionStats(company, startDate, endDate) {\r\n    return this.perionService\r\n      .getAllPerionStats(company, startDate, endDate)\r\n      .toPromise()\r\n      .then((response) => {\r\n        console.log('response:');\r\n        this.loadingIndicator = false;\r\n        // console.log(response.stats);\r\n        this.allStat = response.stats;\r\n        this.allStat.map(function(resStat) {\r\n          resStat.publisher = \"No Publisher\"\r\n          resStat.tagname = \"No Tag\" \r\n        });\r\n        \r\n        for (var tagL of this.tagList) {\r\n          if(tagL.tag.advertiser == \"perion\") {\r\n            for (var tagSub of tagL.tag.subids) {\r\n              if(tagSub.filterTag ==\"Contains\") {\r\n              \r\n                this.allStat.map(stat => {\r\n                  if (stat.subid.includes(tagSub.subid)) {\r\n                    stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                    stat.tagname = tagL.tag.name\r\n                  }\r\n                })\r\n                \r\n              } else if (tagSub.filterTag ==\"StartsWith\") {\r\n                this.allStat.map(stat => {\r\n                  if (stat.subid.startsWith(tagSub.subid)) {\r\n                    stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                    stat.tagname = tagL.tag.name\r\n                  }\r\n                })\r\n                \r\n              } else if (tagSub.filterTag ==\"EndsWith\") {\r\n                this.allStat.map(stat => {\r\n                  if (stat.subid.endsWith(tagSub.subid)) {\r\n                    stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                    stat.tagname = tagL.tag.name\r\n                  }\r\n                }) \r\n                \r\n              } else if (tagSub.filterTag ==\"ExactValue\") {\r\n                this.allStat.map(stat => {\r\n                  if (stat.subid == tagSub.subid) {\r\n                    stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                    stat.tagname = tagL.tag.name\r\n                  }\r\n                })\r\n                \r\n              } \r\n            }\r\n          }\r\n        }\r\n        // var helper = new Set();\r\n        \r\n        // //duplicated remove\r\n        // let filtered_data = this.allStat.filter((perionStat) => {\r\n        //   const key = JSON.stringify([perionStat.date, perionStat.subid]);\r\n        //   return !helper.has(key) && helper.add(key);\r\n        // });\r\n        // console.log(\"=========\", filtered_data.length)\r\n        //return filtered_data.slice().sort((a, b) => b.date - a.date);\r\n        \r\n        \r\n        return this.allStat;\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  }\r\n\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStat.reduce(function(r, o) {\r\n        var key = o.publisher;\r\n        \r\n        if(!helperSummary[key]) {\r\n          helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n          helperSummary[key].counter = 1;\r\n          r.push(helperSummary[key]);\r\n        } else {\r\n          helperSummary[key].clicks += parseFloat(o.clicks);\r\n          helperSummary[key].cpc += parseFloat(o.cpc ? o.cpc : 0);\r\n          helperSummary[key].ctr += parseFloat(o.ctr ? o.ctr : 0);\r\n          helperSummary[key].followon += parseFloat(o.followon ? o.followon : 0);\r\n          helperSummary[key].impressions += parseFloat(o.impressions ? o.impressions : 0);\r\n          helperSummary[key].monetized_impressions += parseFloat(o.monetized_impressions ? o.monetized_impressions : 0);\r\n          helperSummary[key].profit += parseFloat(o.profit);\r\n          helperSummary[key].publisherNet += parseFloat(o.publisherNet);\r\n          helperSummary[key].revenue += parseFloat(o.revenue);\r\n          helperSummary[key].split += parseFloat(o.split);\r\n          helperSummary[key].counter++;\r\n        } \r\n        return r;\r\n      }, []);\r\n      for (var group of groupData) {\r\n        group.split = group.split / group.counter;\r\n        group.followon = group.followon / group.counter;\r\n        group.ctr = group.ctr / group.counter;\r\n\r\n      }\r\n      this.rows = groupData;\r\n  }\r\n  backProvider() {\r\n    this.rows = this.allStat;\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  getSummaryMetrics(company) {\r\n    return this.perionService.getSummaryMetrics(company).toPromise().then((response) => {\r\n      console.log('Got summary metrics');\r\n      // console.log(\"===============\", response)\r\n      // this.currentMonthData = response.summary[0].summaryMetrics;\r\n      // this.beforeMonthData = response.summary[0].lastMonthStat;  \r\n      // this.twoBeforeMonthData = response.summary[0].twoLastMonthStat;  \r\n      // var dayInCurrentMonth = response.summary[0].dayInCurrentMonth;\r\n      // var dayInBeforeMonth = response.summary[0].dayInBeforeMonth;\r\n      // var dayInTwoBeforeMonth = response.summary[0].dayInTwoBeforeMonth;\r\n      // var summaryCurrentStat = [];\r\n      //current data get part\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       summaryCurrentStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n      //       summaryCurrentStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n            \r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //       summaryCurrentStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid == tagSub.subid ))\r\n      //       summaryCurrentStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     }\r\n      //   }\r\n      // }\r\n      // // //duplicated remove\r\n      // let filter_data = summaryCurrentStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      \r\n      // var helperSummary = {};\r\n      // filter_data.map(f =>{\r\n      //   f.revenue = parseFloat(f.revenue);\r\n      //   f.ctr = parseFloat(f.ctr);\r\n      //   f.biddedCtr = parseFloat(f.biddedCTR);\r\n      // })\r\n      \r\n      // var resultSummary = filter_data.reduce(function(r, o) {\r\n      //   var key = o.rptDate;\r\n      //   if(!helperSummary[key]) {\r\n      //     helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n      //     r.push(helperSummary[key]);\r\n      //   } else {\r\n      //     helperSummary[key].searches += parseInt(o.searches);\r\n      //     if(o.revenue) {\r\n      //       helperSummary[key].revenue += o.revenue;\r\n      //     }\r\n      //   } \r\n      //   return r;\r\n      // }, []);\r\n      // var monthRevenue = 0;\r\n      // var monthProfit = 0;\r\n      // var monthRevenuePace = 0;\r\n      // var profitPace = 0;\r\n      // for(var sumData of resultSummary) {\r\n      //   monthRevenue += sumData.revenue;\r\n      //   monthProfit += sumData.revenue *(100 - sumData.split) * 0.01;\r\n      //   monthRevenuePace += (monthRevenue/resultSummary.length) * dayInCurrentMonth;\r\n      //   profitPace += (monthProfit/resultSummary.length)*dayInCurrentMonth;\r\n      // }\r\n\r\n      // //before month data get part\r\n      // var summaryBeforeStat = [];\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       summaryBeforeStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n            \r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid == tagSub.subid ))\r\n      //     }\r\n      //   }\r\n      // }\r\n      \r\n      // // //duplicated remove\r\n      // let filt_data = summaryBeforeStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      \r\n      // var helperBeforeSummary = {};\r\n      // filt_data.map(f =>{\r\n      //   f.revenue = parseFloat(f.revenue);\r\n      //   f.ctr = parseFloat(f.ctr);\r\n      //   f.biddedCtr = parseFloat(f.biddedCTR);\r\n      // })\r\n      \r\n      // var resultBeforeSummary = filt_data.reduce(function(r, o) {\r\n      //   var key = o.rptDate;\r\n      //   if(!helperBeforeSummary[key]) {\r\n      //     helperBeforeSummary[key] = Object.assign({}, o); // create a copy of o\r\n      //     r.push(helperBeforeSummary[key]);\r\n      //   } else {\r\n      //     helperBeforeSummary[key].searches += parseInt(o.searches);\r\n      //     if(o.revenue) {\r\n      //       helperBeforeSummary[key].revenue += o.revenue;\r\n      //     }\r\n      //   } \r\n      //   return r;\r\n      // }, []);\r\n      // var monthBeforeRevenue = 0;\r\n      // var monthBeforeProfit = 0;\r\n      // var monthBeforeRevenuePace = 0;\r\n      // var profitBeforePace = 0;\r\n      // for(var sumBeforeData of resultBeforeSummary) {\r\n      //   monthBeforeRevenue += sumBeforeData.revenue;\r\n      //   monthBeforeProfit += sumBeforeData.revenue *(100 - sumBeforeData.split) * 0.01;\r\n      //   monthBeforeRevenuePace += (monthBeforeRevenue/resultBeforeSummary.length) * dayInBeforeMonth;\r\n      //   profitBeforePace += (monthBeforeProfit/resultBeforeSummary.length)*dayInBeforeMonth;\r\n      // }\r\n\r\n      // //tow before month data get part\r\n      // var summaryTwoBeforeStat = [];\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       summaryTwoBeforeStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n            \r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid == tagSub.subid ))\r\n      //     }\r\n      //   }\r\n      // }\r\n      \r\n      // // //duplicated remove\r\n      // let filter_two_data = summaryTwoBeforeStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      \r\n      // var helperTwoBeforeSummary = {};\r\n      // filter_two_data.map(f =>{\r\n      //   f.revenue = parseFloat(f.revenue);\r\n      //   f.ctr = parseFloat(f.ctr);\r\n      //   f.biddedCtr = parseFloat(f.biddedCTR);\r\n      // })\r\n      \r\n      // var resultTwoBeforeSummary = filter_two_data.reduce(function(r, o) {\r\n      //   var key = o.rptDate;\r\n      //   if(!helperTwoBeforeSummary[key]) {\r\n      //     helperTwoBeforeSummary[key] = Object.assign({}, o); // create a copy of o\r\n      //     r.push(helperTwoBeforeSummary[key]);\r\n      //   } else {\r\n      //     helperTwoBeforeSummary[key].searches += parseInt(o.searches);\r\n      //     if(o.revenue) {\r\n      //       helperTwoBeforeSummary[key].revenue += o.revenue;\r\n      //     }\r\n      //   } \r\n      //   return r;\r\n      // }, []);\r\n      // var monthTwoBeforeRevenue = 0;\r\n      // var monthTwoBeforeProfit = 0;\r\n      // var monthTwoBeforeRevenuePace = 0;\r\n      // var profitTwoBeforePace = 0;\r\n      // for(var sumTwoBeforeData of resultTwoBeforeSummary) {\r\n      //   monthTwoBeforeRevenue += sumTwoBeforeData.revenue;\r\n      //   monthTwoBeforeProfit += sumTwoBeforeData.revenue *(100 - sumTwoBeforeData.split) * 0.01;\r\n      //   monthTwoBeforeRevenuePace += (monthTwoBeforeRevenue/resultTwoBeforeSummary.length) * dayInTwoBeforeMonth;\r\n      //   profitTwoBeforePace += (monthTwoBeforeProfit/resultTwoBeforeSummary.length)*dayInTwoBeforeMonth;\r\n      // }\r\n      // var currentPercentPace = 0;\r\n      // var lastPercentPace = 0;\r\n      // if (profitBeforePace != 0) {\r\n      //   currentPercentPace = ((profitPace - profitBeforePace) / profitBeforePace) * 100\r\n      // }\r\n      // if (profitTwoBeforePace != 0) {\r\n      //   lastPercentPace = ((profitBeforePace - profitTwoBeforePace) / profitTwoBeforePace) * 100\r\n      // }\r\n      // var summaryFinalData = [];\r\n      // summaryFinalData.push({\r\n      //   summaryMetrics: [{\r\n      //     revenue: monthRevenue,\r\n      //     revenuePace: monthRevenuePace,\r\n      //     profit: monthProfit,\r\n      //     profitPace: profitPace,\r\n      //     percentPace: currentPercentPace\r\n      //   }],\r\n      //   lastMonthStat: [{\r\n      //     revenue: monthBeforeRevenue,\r\n      //     revenuePace: monthBeforeRevenuePace,\r\n      //     profit: monthBeforeProfit,\r\n      //     profitPace: profitBeforePace,\r\n      //     percentPace: lastPercentPace\r\n      //   }]\r\n      // });\r\n      var allSummary = {};\r\n      var currentPercentPace = 0;\r\n      var lastPercentPace = 0;\r\n      if(response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n      }\r\n      if(response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n      }\r\n      \r\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n      allSummary['summary'] = response.summary;\r\n      return allSummary;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    })\r\n  }\r\n\r\n  getChartMetrics(company, startDate, endDate) {\r\n    return this.perionService\r\n      .getAllPerionStats(company, startDate, endDate)\r\n      .toPromise()\r\n      .then((response) => {\r\n        // console.log('getAllPerionStats() response:');\r\n        this.allChartStat = response.stats;\r\n        // var allChartPerionStat = [];\r\n        \r\n        // for (var tagL of this.tagList) {\r\n        //   if(tagL.tag.advertiser == \"perion\") {\r\n        //     for (var tagSub of tagL.tag.subids) {\r\n        //       if(tagSub.filterTag ==\"Contains\") {\r\n              \r\n        //         allChartPerionStat = allChartPerionStat.concat(this.allChartStat.filter(stat => stat.subid.includes(tagSub.subid)))\r\n        //         allChartPerionStat.map(stat => {\r\n        //           stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n        //           stat.tagname = tagL.tag.name\r\n        //         })\r\n        //       } else if (tagSub.filterTag ==\"StartsWith\") {\r\n        //         allChartPerionStat = allChartPerionStat.concat(this.allChartStat.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n        //         allChartPerionStat.map(stat => {\r\n        //           stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n        //           stat.tagname = tagL.tag.name\r\n        //         })\r\n        //       } else if (tagSub.filterTag ==\"EndsWith\") {\r\n        //         allChartPerionStat = allChartPerionStat.concat(this.allChartStat.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n        //         allChartPerionStat.map(stat => {\r\n        //           stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n        //           stat.tagname = tagL.tag.name\r\n        //         })\r\n        //       } else if (tagSub.filterTag ==\"ExactValue\") {\r\n        //         allChartPerionStat = allChartPerionStat.concat(this.allChartStat.filter(stat => stat.subid == tagSub.subid ))\r\n        //         allChartPerionStat.map(stat => {\r\n        //           stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n        //           stat.tagname = tagL.tag.name\r\n        //         })\r\n        //       }\r\n        //     }\r\n        //   }\r\n        // }\r\n        // var helper = new Set();\r\n        //duplicated remove\r\n        // let filtered_data = this.allChartStat.filter((perionStat) => {\r\n        //   const key = JSON.stringify([perionStat.date, perionStat.subid]);\r\n        //   return !helper.has(key) && helper.add(key);\r\n        // });\r\n        this.allChartStat = this.allChartStat.slice().sort((a, b) => a.date - b.date);\r\n        var helperChart = {};\r\n        var resultChart = this.allChartStat.reduce(function(r, o) {\r\n          var key = o.date;\r\n          if(!helperChart[key]) {\r\n            helperChart[key] = Object.assign({}, o); // create a copy of o\r\n            r.push(helperChart[key]);\r\n          } else {\r\n            helperChart[key].impressions += parseInt(o.impressions);\r\n            if(o.revenue) {\r\n              helperChart[key].revenue += o.revenue;\r\n            }\r\n          } \r\n          return r;\r\n        }, []);\r\n        var revenuePerDayVal = [];\r\n        var datesOfRevenueVal = [];\r\n        var searchesPerDayVal = [];\r\n        var chartDataValue = {};\r\n        for(var resVal of resultChart) {\r\n          revenuePerDayVal.push(resVal.revenue);\r\n          datesOfRevenueVal.push(resVal.date);\r\n          searchesPerDayVal.push(resVal.impressions);\r\n        }\r\n        chartDataValue['revenuePerDay'] = revenuePerDayVal;\r\n        chartDataValue['datesOfRevenue'] = datesOfRevenueVal;\r\n        chartDataValue['searchesPerDay'] = searchesPerDayVal;\r\n        return chartDataValue;\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  }\r\n\r\n  combineSummaryMetrics(metrics) {\r\n    metrics.summary.keys.forEach((element) => {\r\n      console.log(element.revenue);\r\n      this.summary.revenue += element.revenue;\r\n      this.summary.profit += element.revenue * ((100 - element.split) * 0.01);\r\n    });\r\n  }\r\n\r\n  //get Tags with selected company\r\n  getCompanyTags(selectedCompany) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    })\r\n  }\r\n\r\n  createChartData(stats) {}\r\n}\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<!--Chart Data Show-->\r\n<app-reporting-revenue-chart *ngIf=\"chartData\"\r\n  [chartData]=\"chartData\"\r\n></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<div class=\"row px-6\">\r\n  <button class=\"btn btn-sm btn-primary mx-3\"\r\n    (click)=\"groupProvider()\"\r\n  >\r\n    Group\r\n  </button>\r\n  <button class=\"btn btn-sm btn-dark mx-3\"\r\n    (click)=\"backProvider()\"\r\n  >\r\n    Back\r\n  </button>\r\n</div>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"30\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  \r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  \r\n</ngx-datatable>","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewChild,\r\n} from '@angular/core';\r\n\r\nimport { UsersService } from '../../../shared/service/users.service';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { RubiService } from 'src/app/shared/service/admin-stats/rubi.service';\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-rubi',\r\n  templateUrl: './rubi.component.html',\r\n  styleUrls: ['./rubi.component.scss']\r\n})\r\nexport class RubiComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  @ViewChild('expandableTable') table: any;\r\n  chartData: ChartDataInterface;\r\n\r\n  expanded: any = {};\r\n  allStats: any[];\r\n  summaryMetrics: any;\r\n  tagList: any = [];\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private rubiService: RubiService,\r\n    private tagService: TagManagementService,\r\n  ) { \r\n    this.selectedCompany = this.getSelectedCompanyStored();\r\n  }\r\n\r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n    this.rows = [];\r\n    this.rows = await this.getAllRubiStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    \r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n  public async updateReportingFiltering(range) {\r\n    this.range = range;\r\n    this.rows = await this.getAllRubiStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyStored() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n  getAllRubiStats(company, startDate, endDate) {\r\n    return this.rubiService.getRubiStats(company, startDate, endDate).toPromise().then((response) => {\r\n      console.log('getRubiStats() response:', response);\r\n      this.loadingIndicator = false;\r\n      this.allStats = response.stats;\r\n      this.allStats.map(function(resStat) {\r\n        resStat.publisher = \"No Publisher\"\r\n        resStat.tagname = \"No Tag\" \r\n      });\r\n      for (var tagL of this.tagList) {\r\n        if(tagL.tag.advertiser == \"rubi\") {\r\n          for (var tagSub of tagL.tag.subids) {\r\n            if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n              this.allStats.map(stat => {\r\n                if (stat.subid.includes(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } else if (tagSub.filterTag ==\"StartsWith\") {\r\n              this.allStats.map(stat => {\r\n                if (stat.subid.startsWith(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } else if (tagSub.filterTag ==\"EndsWith\") {\r\n              this.allStats.map(stat => {\r\n                if (stat.subid.endsWith(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              }) \r\n              \r\n            } else if (tagSub.filterTag ==\"ExactValue\") {\r\n              this.allStats.map(stat => {\r\n                if (stat.subid == tagSub.subid) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } \r\n          }\r\n        }\r\n      }\r\n      return this.allStats;\r\n    })\r\n  }\r\n  groupProvider() {\r\n    var helperSummary = {};\r\n    var groupData = this.allStats.reduce(function(r, o) {\r\n        var key = o.publisher;\r\n        \r\n        if(!helperSummary[key]) {\r\n          helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n          helperSummary[key].counter = 1;\r\n          r.push(helperSummary[key]);\r\n        } else {\r\n          helperSummary[key].clicks += parseFloat(o.clicks);\r\n          helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\r\n          helperSummary[key].monetized_searches += parseFloat(o.monetized_searches ? o.monetized_searches : 0);\r\n          helperSummary[key].revenue += parseFloat(o.revenue);\r\n          helperSummary[key].split += parseFloat(o.split);\r\n          helperSummary[key].counter++;\r\n        } \r\n        return r;\r\n      }, []);\r\n      for (var group of groupData) {\r\n        group.split = group.split / group.counter;\r\n\r\n      }\r\n      this.rows = groupData;\r\n  }\r\n  backProvider() {\r\n    this.rows = this.allStats;\r\n  }\r\n  getChartMetrics(company, startDate, endDate) {\r\n    return this.rubiService\r\n      .getChartMetrics(company, startDate, endDate)\r\n      .toPromise()\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  }\r\n  getSummaryMetrics(company) {\r\n    return this.rubiService.getSummaryMetrics(company).toPromise().then((response) => {\r\n      console.log('Got summary metrics');\r\n      var allSummary = {};\r\n      var currentPercentPace = 0;\r\n      var lastPercentPace = 0;\r\n      if(response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n      }\r\n      if(response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n      }\r\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n      allSummary['summary'] = response.summary;\r\n      return allSummary;\r\n    })\r\n  }\r\n  //get Tags with selected company\r\n  getCompanyTags(selectedCompany) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    })\r\n  }\r\n}\r\n","<app-reporting-filtering\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\n></app-reporting-filtering>\n\n<!--Chart Data Show-->\n<app-reporting-revenue-chart *ngIf=\"chartData\"\n  [chartData]=\"chartData\"\n></app-reporting-revenue-chart>\n\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\n\n<div class=\"row px-6\">\n  <button class=\"btn btn-sm btn-primary mx-3\"\n    (click)=\"groupProvider()\"\n  >\n    Group\n  </button>\n  <button class=\"btn btn-sm btn-dark mx-3\"\n    (click)=\"backProvider()\"\n  >\n    Back\n  </button>\n</div>\n\n<ngx-datatable\n  #expandableTable\n  class=\"material fullscreen expandable\"\n  style=\"top: 30px; height: 500px\"\n  [columnMode]=\"'force'\"\n  [headerHeight]=\"50\"\n  [footerHeight]=\"0\"\n  [rowHeight]=\"50\"\n  [scrollbarV]=\"true\"\n  [rows]=\"rows\"\n  [loadingIndicator]=\"loadingIndicator\"\n>\n  <!-- Row Detail Template -->\n  <ngx-datatable-row-detail\n    [rowHeight]=\"100\"\n    #myDetailRow\n    (toggle)=\"onDetailToggle($event)\"\n  >\n    <ng-template\n      let-row=\"row\"\n      let-expanded=\"expanded\"\n      ngx-datatable-row-detail-template\n    >\n      <div style=\"padding-left: 35px\">\n        <div><strong>Address</strong></div>\n        <div>Test</div>\n      </div>\n    </ng-template>\n  </ngx-datatable-row-detail>\n\n  <!-- Column Templates -->\n  <ngx-datatable-column\n    [width]=\"30\"\n    [resizeable]=\"false\"\n    [sortable]=\"false\"\n    [draggable]=\"false\"\n    [canAutoResize]=\"false\"\n  >\n    <ng-template\n      let-row=\"row\"\n      let-expanded=\"expanded\"\n      ngx-datatable-cell-template\n    >\n      <a\n        href=\"javascript:void(0)\"\n        [class.datatable-icon-right]=\"!expanded\"\n        [class.datatable-icon-down]=\"expanded\"\n        title=\"Expand/Collapse Row\"\n        (click)=\"toggleExpandRow(row)\"\n      >\n      </a>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Date -->\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Date\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | date }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SUBID -->\n  <ngx-datatable-column name=\"subid\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Subid\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SUBID -->\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Publisher\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SEARCHES -->\n  <ngx-datatable-column name=\"searches\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Searches\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- CLICKS -->\n  <ngx-datatable-column name=\"clicks\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Clicks\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- clicksPaid -->\n  <ngx-datatable-column name=\"clicksPaid\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Clicks Paid\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SPLIT -->\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Split\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n  \n  <!-- REVENUE -->\n  <ngx-datatable-column name=\"revenue\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Revenue\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | currency: 'USD' }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  \n</ngx-datatable>","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ViewChild,\n} from '@angular/core';\n\nimport { UsersService } from '../../../shared/service/users.service';\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\nimport { SolexBCService } from 'src/app/shared/service/admin-stats/solexbc.service';\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\n\n@Component({\n  selector: 'app-solex-bc',\n  templateUrl: './solex-bc.component.html',\n  styleUrls: ['./solex-bc.component.scss']\n})\nexport class SolexBcComponent implements AfterViewInit {\n  range = {\n    startDate: '',\n    endDate: '',\n  };\n  loadingIndicator = true;\n  rows: any[];\n  selectedCompany: any;\n  @ViewChild('expandableTable') table: any;\n  chartData: ChartDataInterface;\n\n  expanded: any = {};\n  allStats: any[];\n  summaryMetrics: any;\n  tagList: any = [];\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private userService: UsersService,\n    private solexBCService: SolexBCService,\n    private tagService: TagManagementService,\n  ) { \n    this.selectedCompany = this.getSelectedCompanyStored();\n  }\n\n  async ngAfterViewInit() {\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\n    this.rows = [];\n    this.rows = await this.getAllSolexBCStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.chartData = await this.getChartMetrics(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    \n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\n    this.refreshTable();\n  }\n  public async updateReportingFiltering(range) {\n    this.range = range;\n    this.rows = await this.getAllSolexBCStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.chartData = await this.getChartMetrics(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\n    this.refreshTable();\n  }\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyStored() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  toggleExpandRow(row) {\n    console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event) {\n    console.log('Detail Toggled', event);\n  }\n\n  refreshTable() {\n    this.cdr.markForCheck();\n  }\n\n  getAllSolexBCStats(company, startDate, endDate) {\n    return this.solexBCService.getSolexBCStats(company, startDate, endDate).toPromise().then((response) => {\n      console.log('getSolexBCStats() response:', response);\n      this.loadingIndicator = false;\n      this.allStats = response.stats;\n      this.allStats.map(function(resStat) {\n        resStat.publisher = \"No Publisher\"\n        resStat.tagname = \"No Tag\" \n      });\n      for (var tagL of this.tagList) {\n        if(tagL.tag.advertiser == \"solex-bc\") {\n          for (var tagSub of tagL.tag.subids) {\n            if(tagSub.filterTag ==\"Contains\") {\n              this.allStats.map(stat => {\n                if (stat.subid.includes(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } else if (tagSub.filterTag ==\"StartsWith\") {\n              this.allStats.map(stat => {\n                if (stat.subid.startsWith(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } else if (tagSub.filterTag ==\"EndsWith\") {\n              this.allStats.map(stat => {\n                if (stat.subid.endsWith(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              }) \n              \n            } else if (tagSub.filterTag ==\"ExactValue\") {\n              this.allStats.map(stat => {\n                if (stat.subid == tagSub.subid) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } \n          }\n        }\n      }\n      console.log(this.allStats, \"dddd\")\n      return this.allStats;\n    })\n  }\n  groupProvider() {\n    var helperSummary = {};\n    var groupData = this.allStats.reduce(function(r, o) {\n        var key = o.publisher;\n        \n        if(!helperSummary[key]) {\n          helperSummary[key] = Object.assign({}, o); // create a copy of o\n          helperSummary[key].counter = 1;\n          r.push(helperSummary[key]);\n        } else {\n          helperSummary[key].clicks += parseFloat(o.clicks);\n          helperSummary[key].clicksPaid += parseFloat(o.clicksPaid ? o.clicksPaid : 0);\n          helperSummary[key].searches += parseFloat(o.searches ? o.searches : 0);\n          helperSummary[key].revenue += parseFloat(o.revenue);\n          helperSummary[key].split += parseFloat(o.split);\n          helperSummary[key].counter++;\n        } \n        return r;\n      }, []);\n      for (var group of groupData) {\n        group.split = group.split / group.counter;\n\n      }\n      this.rows = groupData;\n  }\n  backProvider() {\n    this.rows = this.allStats;\n  }\n  getChartMetrics(company, startDate, endDate) {\n    return this.solexBCService\n      .getChartMetrics(company, startDate, endDate)\n      .toPromise()\n      .then((response) => {\n        return response;\n      })\n      .catch((error) => {\n        return error;\n      });\n  }\n  getSummaryMetrics(company) {\n    return this.solexBCService.getSummaryMetrics(company).toPromise().then((response) => {\n      console.log('Got summary metrics');\n      var allSummary = {};\n      var currentPercentPace = 0;\n      var lastPercentPace = 0;\n      if(response.summary[0].lastMonthStat[0].profitPace != 0) {\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\n      }\n      if(response.summary[0].twoLastMonthStat[0].profitPace != 0) {\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\n      }\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\n      allSummary['summary'] = response.summary;\n      return allSummary;\n    })\n  }\n  //get Tags with selected company\n  getCompanyTags(selectedCompany) {\n    var companyId = selectedCompany.split(\"/\")[1];\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \n      return response;\n    })\n    .catch((error) => {\n      return error;\n    })\n  }\n\n}\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"30\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n        Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Device -->\r\n  <ngx-datatable-column name=\"device\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Device\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PAGEVIEWS -->\r\n  <ngx-datatable-column name=\"pageviews\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n        PageViews\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Impressions -->\r\n  <ngx-datatable-column name=\"impressions\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n        Impressions\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  \r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n        Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n  \r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n</ngx-datatable>","import { Component, AfterViewInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { UsersService } from '../../../shared/service/users.service';\r\nimport { System1Service } from 'src/app/shared/service/admin-stats/system1.service';\r\n\r\n@Component({\r\n  selector: 'app-system1',\r\n  templateUrl: './system1.component.html',\r\n  styleUrls: ['./system1.component.scss']\r\n})\r\nexport class System1Component implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  rows: any[];\r\n  allStats: any[];\r\n  loadingIndicator = true;\r\n  selectedCompany: any;\r\n  @ViewChild('expandableTable') table: any;\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private system1Service: System1Service,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n   }\r\n\r\n  async ngAfterViewInit() {\r\n    this.rows = [];\r\n    this.rows = await this.getAllSystem1Stats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n  }\r\n  public async updateReportingFiltering(range) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllSystem1Stats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    \r\n    this.refreshTable();\r\n  }\r\n\r\n  //get Stat all\r\n  getAllSystem1Stats(company, startDate, endDate) {\r\n    return this.system1Service.getAllSystem1Stats(company, startDate, endDate).toPromise().then((response) => {\r\n      console.log('getAllSystem1Stats() response:', response);\r\n      this.loadingIndicator = false;\r\n      this.allStats = response.stats;\r\n      return this.allStats;\r\n    });\r\n  }\r\n\r\n  getSummaryMetrics(company) {\r\n    return [];\r\n  }\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as echarts from 'echarts';\r\n\r\n@Component({\r\n  selector: 'app-third-party',\r\n  templateUrl: './third-party.component.html',\r\n  styleUrls: ['./third-party.component.scss'],\r\n})\r\nexport class ThirdPartyComponent implements OnInit {\r\n  //Chart setup variables\r\n  chartDom;\r\n  myChart;\r\n  option;\r\n\r\n  rows = [\r\n    {\r\n      name: 'Datalox',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n    {\r\n      name: 'Hopkins Branded',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n    {\r\n      name: 'Datalox 2',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    let revenueByDayArray = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (8000 - 4000) + 4000)\r\n    );\r\n    let searchesPerDay = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (100000 - 40000) + 40000)\r\n    );\r\n    this.setChartOptions(\r\n      10000,\r\n      100000,\r\n      [\r\n        'Nov 1, Nov 2, Nov 3, Nov 4',\r\n        'Nov 5',\r\n        'Nov 5',\r\n        'Nov 6',\r\n        'Nov 7',\r\n        'Nov 8',\r\n        'Nov 9',\r\n        'Nov 10',\r\n        'Nov 11',\r\n        'Nov 12',\r\n        'Nov 13',\r\n        'Nov 14',\r\n        'Nov 15',\r\n        'Nov 16',\r\n        'Nov 17',\r\n        'Nov 18',\r\n        'Nov 19',\r\n        'Nov 20',\r\n      ],\r\n      revenueByDayArray,\r\n      searchesPerDay\r\n    );\r\n  }\r\n\r\n  public updateReportingFiltering(range) {\r\n    // this.range = range;\r\n    // this.getAllPerionStats(\r\n    //   'manic_perion',\r\n    //   this.range.startDate,\r\n    //   this.range.endDate\r\n    // );\r\n    console.log('Report');\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  setChartOptions(\r\n    maxRevenue,\r\n    maxSearches,\r\n    daysArray,\r\n    revenueByDayArray,\r\n    searchesPerDay\r\n  ) {\r\n    this.chartDom = document.getElementById('main')!;\r\n    this.myChart = echarts.init(this.chartDom);\r\n\r\n    this.option = {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          crossStyle: {\r\n            color: '#999',\r\n          },\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          dataView: { show: true, readOnly: false },\r\n          magicType: { show: true, type: ['line', 'bar'] },\r\n          restore: { show: true },\r\n          saveAsImage: { show: true },\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['Revenue', 'Searches'],\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: daysArray,\r\n          axisPointer: {\r\n            type: 'shadow',\r\n          },\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          name: 'Revenue',\r\n          min: 0,\r\n          max: maxRevenue,\r\n          interval: 25000,\r\n          axisLabel: {\r\n            formatter: '${value}',\r\n          },\r\n        },\r\n        {\r\n          type: 'value',\r\n          name: 'Searches',\r\n          min: 0,\r\n          max: maxSearches,\r\n          interval: 100000,\r\n          axisLabel: {\r\n            formatter: '{value}',\r\n          },\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'Revenue',\r\n          type: 'bar',\r\n          data: revenueByDayArray,\r\n        },\r\n        {\r\n          name: 'Searches',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: searchesPerDay,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.option && this.myChart.setOption(this.option);\r\n  }\r\n}\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<div id=\"main\" style=\"width: 100%; height: 300px\"></div>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<!--Chart Data Show-->\r\n<app-reporting-revenue-chart *ngIf=\"chartData\"\r\n  [chartData]=\"chartData\"\r\n></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"30\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"searches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!--Bid SEARCHES -->\r\n  <ngx-datatable-column name=\"biddedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Bid Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!--Bid SEARCHES Result -->\r\n  <ngx-datatable-column name=\"biddedResults\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Bid Searches Result\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- COVERAGE -->\r\n  <ngx-datatable-column name=\"coverage\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Coverage\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CPC -->\r\n  <ngx-datatable-column name=\"cpc\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CPC\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- RN -->\r\n  <ngx-datatable-column name=\"rn\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      RN\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TqScore -->\r\n  <ngx-datatable-column name=\"tqScore\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      TqScore\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { VerizonService } from 'src/app/shared/service/admin-stats/verizon.service';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-verizon-direct',\r\n  templateUrl: './verizon-direct.component.html',\r\n  styleUrls: ['./verizon-direct.component.scss']\r\n})\r\nexport class VerizonDirectComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  tagList: any = [];\r\n  //Sends chartData to ReportingRevenueChartComponent\r\n  chartData: ChartDataInterface;\r\n  //Sends summaryMetrics to SummaryMetricsComponent\r\n  summaryMetrics: any;\r\n\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  allStats: any;\r\n\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor(\r\n    private verizonService: VerizonService,\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n   }\r\n  async ngAfterViewInit() {\r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n    this.rows = [];\r\n    this.rows = await this.getAllVerizonStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n  \r\n  //get Tags with selected company\r\n  getCompanyTags(selectedCompany) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    })\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  public async updateReportingFiltering(range) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllVerizonStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  getChartMetrics(company, startDate, endDate) {\r\n    return this.verizonService\r\n      .getChartMetrics(company, startDate, endDate)\r\n      .toPromise()\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  }\r\n\r\n  getAllVerizonStats(company, startDate, endDate) {\r\n    return this.verizonService.getAllVerizonStats(company, startDate, endDate).toPromise().then((response) => {\r\n      console.log('getAllVerizonStats() response:', response);\r\n      this.loadingIndicator = false;\r\n      this.allStats = response.stats;\r\n      this.allStats.map(function(resStat) {\r\n        resStat.publisher = \"No Publisher\"\r\n        resStat.tagname = \"No Tag\" \r\n      });\r\n      for (var tagL of this.tagList) {\r\n        if(tagL.tag.advertiser == \"verizon-direct\") {\r\n          for (var tagSub of tagL.tag.subids) {\r\n            if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n              this.allStats.map(stat => {\r\n                if (stat.subid.includes(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } else if (tagSub.filterTag ==\"StartsWith\") {\r\n              this.allStats.map(stat => {\r\n                if (stat.subid.startsWith(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } else if (tagSub.filterTag ==\"EndsWith\") {\r\n              this.allStats.map(stat => {\r\n                if (stat.subid.endsWith(tagSub.subid)) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              }) \r\n              \r\n            } else if (tagSub.filterTag ==\"ExactValue\") {\r\n              this.allStats.map(stat => {\r\n                if (stat.subid == tagSub.subid) {\r\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                  stat.tagname = tagL.tag.name\r\n                }\r\n              })\r\n              \r\n            } \r\n          }\r\n        }\r\n      }\r\n      return this.allStats;\r\n    })\r\n  }\r\n\r\n  getSummaryMetrics(company) {\r\n    return this.verizonService.getSummaryMetrics(company).toPromise().then((response) => {\r\n      console.log('Got summary metrics');\r\n      var allSummary = {};\r\n      var currentPercentPace = 0;\r\n      var lastPercentPace = 0;\r\n      if(response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n      }\r\n      if(response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n      }\r\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n      allSummary['summary'] = response.summary;\r\n      return allSummary;\r\n    })\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport * as moment from 'moment';\r\n\r\nconst API_MANUAL_UPDATE_URL = `${environment.apiUrl}/stats/admin/manual-update`;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class ManualUpdateService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    updateManualStats(updateData: any): Observable<any> {\r\n        const { company , reportType, startDate, endDate } = updateData;\r\n        var data = {\r\n            \"company\": company,\r\n            \"reportType\": reportType,\r\n            'startDate': moment(startDate).format(\"YYYY-MM-DD\"),\r\n            'endDate': moment(endDate).format(\"YYYY-MM-DD\")\r\n        }\r\n        return this.http.put<any>(API_MANUAL_UPDATE_URL + '/stat-update', data);\r\n      }\r\n    updateManualSplit(updateData: any): Observable<any> {\r\n        const { company , tag, startDate, endDate } = updateData;\r\n        var data = {\r\n            \"company\": company,\r\n            \"tag\": tag,\r\n            'startDate': startDate,\r\n            'endDate': endDate\r\n        }\r\n        return this.http.put<any>(API_MANUAL_UPDATE_URL + '/split-update', data);\r\n      }\r\n}"]}