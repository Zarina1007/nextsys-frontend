{"version":3,"sources":["webpack:///src/app/modules/admin-reporting/admin-reporting-routing.module.ts","webpack:///src/app/modules/admin-reporting/admin-reporting.module.ts","webpack:///src/app/modules/admin-reporting/all-reporting/all-reporting.component.ts","webpack:///src/app/modules/admin-reporting/all-reporting/all-reporting.component.html","webpack:///src/app/modules/admin-reporting/apptitude/apptitude.component.ts","webpack:///src/app/modules/admin-reporting/apptitude/apptitude.component.html","webpack:///src/app/modules/admin-reporting/bing-direct/bing-direct.component.ts","webpack:///src/app/modules/admin-reporting/bing-direct/bing-direct.component.html","webpack:///src/app/modules/admin-reporting/hopkins/hopkins.component.ts","webpack:///src/app/modules/admin-reporting/hopkins/hopkins.component.html","webpack:///src/app/modules/admin-reporting/imgage-advantage/imgage-advantage.component.ts","webpack:///src/app/modules/admin-reporting/imgage-advantage/imgage-advantage.component.html","webpack:///src/app/modules/admin-reporting/lyons/lyons.component.html","webpack:///src/app/modules/admin-reporting/lyons/lyons.component.ts","webpack:///src/app/modules/admin-reporting/manual-split-update/manual-split-update.component.ts","webpack:///src/app/modules/admin-reporting/manual-split-update/manual-split-update.component.html","webpack:///src/app/modules/admin-reporting/manual-update/manual-update.component.ts","webpack:///src/app/modules/admin-reporting/manual-update/manual-update.component.html","webpack:///src/app/modules/admin-reporting/media-net/media-net.component.ts","webpack:///src/app/modules/admin-reporting/media-net/media-net.component.html","webpack:///src/app/modules/admin-reporting/perion/perion.component.html","webpack:///src/app/modules/admin-reporting/perion/perion.component.ts","webpack:///src/app/modules/admin-reporting/rubi/rubi.component.html","webpack:///src/app/modules/admin-reporting/rubi/rubi.component.ts","webpack:///src/app/modules/admin-reporting/third-party/third-party.component.ts","webpack:///src/app/modules/admin-reporting/third-party/third-party.component.html","webpack:///src/app/modules/admin-reporting/verizon-direct/verizon-direct.component.ts","webpack:///src/app/modules/admin-reporting/verizon-direct/verizon-direct.component.html","webpack:///src/app/shared/service/admin-stats/update.service.ts"],"names":["routes","path","component","children","redirectTo","pathMatch","AdminReportingRoutingModule","forChild","imports","exports","AdminReportingModule","declarations","entryComponents","AllReportingComponent","selector","templateUrl","styleUrls","ApptitudeComponent","rows","name","tag","totalSearches","monetizedSearches","revenue","clicks","columns","prop","expanded","revenueByDayArray","Array","from","length","Math","floor","random","searchesPerDay","setChartOptions","row","console","log","table","rowDetail","toggleExpandRow","event","range","maxRevenue","maxSearches","daysArray","chartDom","document","getElementById","myChart","option","tooltip","trigger","axisPointer","type","crossStyle","color","toolbox","feature","dataView","show","readOnly","magicType","restore","saveAsImage","legend","data","xAxis","yAxis","min","max","interval","axisLabel","formatter","series","yAxisIndex","setOption","updateReportingFiltering","onDetailToggle","BingDirectComponent","HopkinsComponent","ImgageAdvantageComponent","followOn","LyonsComponent","lyonService","cdr","userService","tagService","startDate","endDate","summary","profit","tagList","filteredLyonStat","selectedCompany","getSelectedCompanyFromLocalStorage","getCompanyTags","getAllLyonStats","getChartMetrics","chartData","getSummaryMetrics","summaryMetricsData","refreshTable","testingRoute","subscribe","response","err","companyId","split","toPromise","then","error","getAllStats","allstat","map","resStat","publisher","tagname","tagL","advertiser","subids","tagSub","filterTag","stat","subid","includes","user","fullname","startsWith","endsWith","filtered_data","filter","obj","pos","arr","mapObj","_id","indexOf","helper","f","parseFloat","ctr","biddedCtr","biddedCTR","resultAll","reduce","prev","current","key","rptDate","toString","Object","assign","count","push","parseInt","searches","biddedSearches","item","company","updateAllLyonStats","markForCheck","currentMonthData","summaryMetrics","beforeMonthData","lastMonthStat","twoBeforeMonthData","twoLastMonthStat","dayInCurrentMonth","dayInBeforeMonth","dayInTwoBeforeMonth","helperSummary","resultSummary","r","o","monthRevenue","monthProfit","monthRevenuePace","profitPace","sumData","helperBeforeSummary","resultBeforeSummary","monthBeforeRevenue","monthBeforeProfit","monthBeforeRevenuePace","profitBeforePace","sumBeforeData","helperTwoBeforeSummary","resultTwoBeforeSummary","monthTwoBeforeRevenue","monthTwoBeforeProfit","monthTwoBeforeRevenuePace","profitTwoBeforePace","sumTwoBeforeData","currentPercentPace","lastPercentPace","summaryFinalData","revenuePace","percentPace","allSummary","sortResponse","slice","sort","a","b","allChart","helperChart","resultChart","revenuePerDayVal","datesOfRevenueVal","searchesPerDayVal","chartDataValue","resVal","metrics","keys","forEach","element","stats","ManualSplitUpdateComponent","manualUpdateService","fb","companyService","authService","notification","tagData","selectedTagName","currentUser","currentUserValue","companySelected","getSelectedCompanyLocalStorage","getAllTags","value","viewValue","manaulUpFG","group","required","preSelectValue","preSetDateRanges","getDateRanges","selectedRange","preSelectDates","getPreSetDateRange","updateDatePickerRange","res","patchValue","toDate","selection","dateFormat","utc","startOf","format","endOf","subtract","valid","addControl","updateManualSplit","checkExist","isObjectEmpty","showSuccess","showWarning","onReportSubmit","handleTag","changeDatePicker","onPreSetRangeSelectChange","ManualUpdateComponent","reportUpdateTitle","reportTypeData","getReportingProviderList","reportType","getOneCompany","reportingProviders","report","reportingProvider","reportTypeValue","updateManualStats","typeName","toLowerCase","replace","letter","toUpperCase","handleReport","MediaNetComponent","PerionComponent","perionService","loadingIndicator","login","username","password","statsUpdateURL","getAllPerionStats","updateAllPerionStats","allStat","allChartStat","date","impressions","RubiComponent","rubiService","getSelectedCompanyStored","getAllRubiStats","allStats","ThirdPartyComponent","VerizonDirectComponent","API_MANUAL_UPDATE_URL","apiUrl","ManualUpdateService","http","updateData","put","providedIn"],"mappings":"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","file":"modules-admin-reporting-admin-reporting-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllReportingComponent } from './all-reporting/all-reporting.component';\r\nimport { ApptitudeComponent } from './apptitude/apptitude.component';\r\nimport { HopkinsComponent } from './hopkins/hopkins.component';\r\nimport { ImgageAdvantageComponent } from './imgage-advantage/imgage-advantage.component';\r\nimport { MediaNetComponent } from './media-net/media-net.component';\r\nimport { PerionComponent } from './perion/perion.component';\r\nimport { AdminReportingComponent } from './admin-reporting.component';\r\nimport { ThirdPartyComponent } from './third-party/third-party.component';\r\nimport { BingDirectComponent } from './bing-direct/bing-direct.component';\r\nimport { LyonsComponent } from './lyons/lyons.component';\r\nimport { RubiComponent } from './rubi/rubi.component';\r\nimport { VerizonDirectComponent } from './verizon-direct/verizon-direct.component';\r\nimport { ManualUpdateComponent } from './manual-update/manual-update.component';\r\nimport { ManualSplitUpdateComponent } from './manual-split-update/manual-split-update.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminReportingComponent,\r\n    children: [\r\n      {\r\n        path: 'perion',\r\n        component: PerionComponent,\r\n      },\r\n      {\r\n        path: 'image-advantage',\r\n        component: ImgageAdvantageComponent,\r\n      },\r\n      {\r\n        path: 'hopkins',\r\n        component: HopkinsComponent,\r\n      },\r\n      {\r\n        path: 'apptitude',\r\n        component: ApptitudeComponent,\r\n      },\r\n      {\r\n        path: 'media-net',\r\n        component: MediaNetComponent,\r\n      },\r\n      {\r\n        path: 'bing-direct',\r\n        component: BingDirectComponent,\r\n      },\r\n      {\r\n        path: 'lyons',\r\n        component: LyonsComponent,\r\n      },\r\n      {\r\n        path: 'rubi',\r\n        component: RubiComponent,\r\n      },\r\n      {\r\n        path: 'verizon-direct',\r\n        component: VerizonDirectComponent,\r\n      },\r\n      {\r\n        path: 'third-party',\r\n        component: ThirdPartyComponent,\r\n      },\r\n      {\r\n        path: 'manual-stat-update',\r\n        component: ManualUpdateComponent,\r\n      },\r\n      {\r\n        path: 'manual-split-update',\r\n        component: ManualSplitUpdateComponent,\r\n      },\r\n      { path: '', redirectTo: '', pathMatch: 'full' },\r\n      { path: '**', redirectTo: '', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminReportingRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminReportingRoutingModule } from './admin-reporting-routing.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PerionComponent } from './perion/perion.component';\r\nimport { ImgageAdvantageComponent } from './imgage-advantage/imgage-advantage.component';\r\nimport { HopkinsComponent } from './hopkins/hopkins.component';\r\nimport { ApptitudeComponent } from './apptitude/apptitude.component';\r\nimport { AllReportingComponent } from './all-reporting/all-reporting.component';\r\nimport { MediaNetComponent } from './media-net/media-net.component';\r\nimport { ThirdPartyComponent } from './third-party/third-party.component';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatNativeDateModule, MatOptionModule } from '@angular/material/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { BingDirectComponent } from './bing-direct/bing-direct.component';\r\nimport { LyonsComponent } from './lyons/lyons.component';\r\nimport { RubiComponent } from './rubi/rubi.component';\r\nimport { VerizonDirectComponent } from './verizon-direct/verizon-direct.component';\r\nimport { ManualUpdateComponent } from './manual-update/manual-update.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { ManualSplitUpdateComponent } from './manual-split-update/manual-split-update.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PerionComponent,\r\n    ImgageAdvantageComponent,\r\n    HopkinsComponent,\r\n    ApptitudeComponent,\r\n    AllReportingComponent,\r\n    MediaNetComponent,\r\n    ThirdPartyComponent,\r\n    BingDirectComponent,\r\n    LyonsComponent,\r\n    RubiComponent,\r\n    VerizonDirectComponent,\r\n    ManualUpdateComponent,\r\n    ManualSplitUpdateComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    AdminReportingRoutingModule,\r\n    NgxDatatableModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatListModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatSelectModule,\r\n    SharedModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    InlineSVGModule\r\n  ],\r\n  entryComponents: [],\r\n})\r\nexport class AdminReportingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-all-reporting',\r\n  templateUrl: './all-reporting.component.html',\r\n  styleUrls: ['./all-reporting.component.scss']\r\n})\r\nexport class AllReportingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>all-reporting works!</p>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as echarts from 'echarts';\r\n\r\n@Component({\r\n  selector: 'app-apptitude',\r\n  templateUrl: './apptitude.component.html',\r\n  styleUrls: ['./apptitude.component.scss'],\r\n})\r\nexport class ApptitudeComponent implements OnInit {\r\n  //Chart setup variables\r\n  chartDom;\r\n  myChart;\r\n  option;\r\n\r\n  rows = [\r\n    {\r\n      name: 'MNA',\r\n      tag: 'BHS',\r\n      totalSearches: '152311',\r\n      monetizedSearches: '102316',\r\n      revenue: '8623',\r\n      clicks: 15684,\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    let revenueByDayArray = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (8000 - 4000) + 4000)\r\n    );\r\n    let searchesPerDay = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (100000 - 40000) + 40000)\r\n    );\r\n    this.setChartOptions(\r\n      10000,\r\n      100000,\r\n      [\r\n        'Nov 1, Nov 2, Nov 3, Nov 4',\r\n        'Nov 5',\r\n        'Nov 5',\r\n        'Nov 6',\r\n        'Nov 7',\r\n        'Nov 8',\r\n        'Nov 9',\r\n        'Nov 10',\r\n        'Nov 11',\r\n        'Nov 12',\r\n        'Nov 13',\r\n        'Nov 14',\r\n        'Nov 15',\r\n        'Nov 16',\r\n        'Nov 17',\r\n        'Nov 18',\r\n        'Nov 19',\r\n        'Nov 20',\r\n      ],\r\n      revenueByDayArray,\r\n      searchesPerDay\r\n    );\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  public updateReportingFiltering(range) {\r\n    // this.range = range;\r\n    // this.getAllPerionStats(\r\n    //   'manic_perion',\r\n    //   this.range.startDate,\r\n    //   this.range.endDate\r\n    // );\r\n    console.log('Report');\r\n  }\r\n\r\n  setChartOptions(\r\n    maxRevenue,\r\n    maxSearches,\r\n    daysArray,\r\n    revenueByDayArray,\r\n    searchesPerDay\r\n  ) {\r\n    this.chartDom = document.getElementById('main')!;\r\n    this.myChart = echarts.init(this.chartDom);\r\n\r\n    this.option = {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          crossStyle: {\r\n            color: '#999',\r\n          },\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          dataView: { show: true, readOnly: false },\r\n          magicType: { show: true, type: ['line', 'bar'] },\r\n          restore: { show: true },\r\n          saveAsImage: { show: true },\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['Revenue', 'Searches'],\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: daysArray,\r\n          axisPointer: {\r\n            type: 'shadow',\r\n          },\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          name: 'Revenue',\r\n          min: 0,\r\n          max: maxRevenue,\r\n          interval: 25000,\r\n          axisLabel: {\r\n            formatter: '${value}',\r\n          },\r\n        },\r\n        {\r\n          type: 'value',\r\n          name: 'Searches',\r\n          min: 0,\r\n          max: maxSearches,\r\n          interval: 100000,\r\n          axisLabel: {\r\n            formatter: '{value}',\r\n          },\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'Revenue',\r\n          type: 'bar',\r\n          data: revenueByDayArray,\r\n        },\r\n        {\r\n          name: 'Searches',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: searchesPerDay,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.option && this.myChart.setOption(this.option);\r\n  }\r\n}\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<div id=\"main\" style=\"width: 100%; height: 300px\"></div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Month to Date Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $202,121.26</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Revenue Pace: $231,285.19</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $29,109.59</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit Pace: $173,121.45</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +21%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Last Month Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $167,542.23</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $22,954.45</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +0%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px; margin-bottom: 10px;\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bing-direct',\n  templateUrl: './bing-direct.component.html',\n  styleUrls: ['./bing-direct.component.scss']\n})\nexport class BingDirectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>bing-direct works!</p>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as echarts from 'echarts';\r\n\r\n@Component({\r\n  selector: 'app-hopkins',\r\n  templateUrl: './hopkins.component.html',\r\n  styleUrls: ['./hopkins.component.scss'],\r\n})\r\nexport class HopkinsComponent implements OnInit {\r\n  //Chart setup variables\r\n  chartDom;\r\n  myChart;\r\n  option;\r\n  rows = [\r\n    {\r\n      name: 'Greg',\r\n      tag: 'XML Hopkins',\r\n      totalSearches: '759123',\r\n      monetizedSearches: '431231',\r\n      revenue: '19623',\r\n      clicks: 50351,\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    let revenueByDayArray = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (8000 - 4000) + 4000)\r\n    );\r\n    let searchesPerDay = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (100000 - 40000) + 40000)\r\n    );\r\n    this.setChartOptions(\r\n      10000,\r\n      100000,\r\n      [\r\n        'Nov 1, Nov 2, Nov 3, Nov 4',\r\n        'Nov 5',\r\n        'Nov 5',\r\n        'Nov 6',\r\n        'Nov 7',\r\n        'Nov 8',\r\n        'Nov 9',\r\n        'Nov 10',\r\n        'Nov 11',\r\n        'Nov 12',\r\n        'Nov 13',\r\n        'Nov 14',\r\n        'Nov 15',\r\n        'Nov 16',\r\n        'Nov 17',\r\n        'Nov 18',\r\n        'Nov 19',\r\n        'Nov 20',\r\n      ],\r\n      revenueByDayArray,\r\n      searchesPerDay\r\n    );\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  public updateReportingFiltering(range) {\r\n    // this.range = range;\r\n    // this.getAllPerionStats(\r\n    //   'manic_perion',\r\n    //   this.range.startDate,\r\n    //   this.range.endDate\r\n    // );\r\n    console.log('Report');\r\n  }\r\n\r\n  setChartOptions(\r\n    maxRevenue,\r\n    maxSearches,\r\n    daysArray,\r\n    revenueByDayArray,\r\n    searchesPerDay\r\n  ) {\r\n    this.chartDom = document.getElementById('main')!;\r\n    this.myChart = echarts.init(this.chartDom);\r\n\r\n    this.option = {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          crossStyle: {\r\n            color: '#999',\r\n          },\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          dataView: { show: true, readOnly: false },\r\n          magicType: { show: true, type: ['line', 'bar'] },\r\n          restore: { show: true },\r\n          saveAsImage: { show: true },\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['Revenue', 'Searches'],\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: daysArray,\r\n          axisPointer: {\r\n            type: 'shadow',\r\n          },\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          name: 'Revenue',\r\n          min: 0,\r\n          max: maxRevenue,\r\n          interval: 25000,\r\n          axisLabel: {\r\n            formatter: '${value}',\r\n          },\r\n        },\r\n        {\r\n          type: 'value',\r\n          name: 'Searches',\r\n          min: 0,\r\n          max: maxSearches,\r\n          interval: 100000,\r\n          axisLabel: {\r\n            formatter: '{value}',\r\n          },\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'Revenue',\r\n          type: 'bar',\r\n          data: revenueByDayArray,\r\n        },\r\n        {\r\n          name: 'Searches',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: searchesPerDay,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.option && this.myChart.setOption(this.option);\r\n  }\r\n}\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<div id=\"main\" style=\"width: 100%; height: 300px\"></div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Month to Date Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Revenue Pace: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit Pace: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +0%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Last Month Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $0</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +11%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-imgage-advantage',\r\n  templateUrl: './imgage-advantage.component.html',\r\n  styleUrls: ['./imgage-advantage.component.scss'],\r\n})\r\nexport class ImgageAdvantageComponent implements OnInit {\r\n  rows = [\r\n    {\r\n      name: 'Greg',\r\n      tag: 'YHS Organic',\r\n      totalSearches: '536412',\r\n      monetizedSearches: '501235',\r\n      revenue: '52623',\r\n      clicks: 50351,\r\n      followOn: '13%',\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Month to Date Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $103,201.26</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Revenue Pace: $131,285.19</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $21,109.59</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit Pace: $173,121.45</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +27%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h2 class=\"card-label\">Last Month Stats</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <mat-list>\r\n          <mat-list-item>Revenue: $113,542.23</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Profit: $14,121.39</mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item>Percentage Change: +11%</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"followOn\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Follow On\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","<app-reporting-filtering\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\n></app-reporting-filtering>\n\n<app-reporting-revenue-chart *ngIf=\"chartData\"\n  [chartData]=\"chartData\"\n></app-reporting-revenue-chart>\n\n<app-summary-metrics *ngIf=\"summaryMetricsData\" [summaryMetricsData]=\"summaryMetricsData\"></app-summary-metrics>\n\n<!-- <button class=\"btn btn-sm btn-dark\"\n  (click)=\"updateAllLyonStats(selectedCompany, range.startDate, range.endDate)\"\n>\n  updateAllLyonStats\n</button>\n\n<button class=\"btn btn-sm btn-primary\" (click)=\"getAllLyonStats(range.startDate, range.endDate)\">\n  getAllLyonStats\n</button>\n\n<button class=\"btn btn-sm btn-info\" (click)=\"getSummaryMetrics(selectedCompany)\">getSummaryMetrics</button> -->\n\n<ngx-datatable\n  #expandableTable\n  class=\"material fullscreen expandable\"\n  style=\"top: 30px; height: 500px\"\n  [columnMode]=\"'force'\"\n  [headerHeight]=\"50\"\n  [footerHeight]=\"0\"\n  [rowHeight]=\"50\"\n  [scrollbarV]=\"true\"\n  [rows]=\"rows\"\n>\n  <!-- Row Detail Template -->\n  <ngx-datatable-row-detail\n    [rowHeight]=\"100\"\n    #myDetailRow\n    (toggle)=\"onDetailToggle($event)\"\n  >\n    <ng-template\n      let-row=\"row\"\n      let-expanded=\"expanded\"\n      ngx-datatable-row-detail-template\n    >\n      <div style=\"padding-left: 35px\">\n        <div><strong>Address</strong></div>\n        <div>Test</div>\n      </div>\n    </ng-template>\n  </ngx-datatable-row-detail>\n\n  <!-- Column Templates -->\n  <ngx-datatable-column\n    [width]=\"30\"\n    [resizeable]=\"false\"\n    [sortable]=\"false\"\n    [draggable]=\"false\"\n    [canAutoResize]=\"false\"\n  >\n    <ng-template\n      let-row=\"row\"\n      let-expanded=\"expanded\"\n      ngx-datatable-cell-template\n    >\n      <a\n        href=\"javascript:void(0)\"\n        [class.datatable-icon-right]=\"!expanded\"\n        [class.datatable-icon-down]=\"expanded\"\n        title=\"Expand/Collapse Row\"\n        (click)=\"toggleExpandRow(row)\"\n      >\n      </a>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Date -->\n  <ngx-datatable-column name=\"rptDate\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Date\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | date }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SUBID -->\n  <ngx-datatable-column name=\"subid\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Subid\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Tag -->\n  <ngx-datatable-column name=\"tagname\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Tag\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Publisher -->\n  <ngx-datatable-column name=\"publisher\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Publisher\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SEARCHES -->\n  <ngx-datatable-column name=\"searches\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Searches\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n  <!-- BID SEARCHES -->\n  <ngx-datatable-column name=\"biddedSearches\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Bid Searches\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n  <!-- CLICKS -->\n  <ngx-datatable-column name=\"clicks\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Clicks\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n  \n  <!-- biddedCTR -->\n  <ngx-datatable-column name=\"biddedCtr\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      BiddedCTR\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ (value | number: '2.2-2') || (0 | number: '2.2-2') }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- CTR -->\n  <ngx-datatable-column name=\"ctr\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      CTR\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{\n        (value | number: '2.2-2') || (0 | number: '2.2-2')\n      }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Split -->\n  <ngx-datatable-column name=\"split\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Spilt\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n        <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- REVENUE -->\n  <ngx-datatable-column name=\"revenue\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Revenue\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | currency: 'USD' }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n</ngx-datatable>\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\nimport { LyonService } from 'src/app/shared/service/admin-stats/lyon.service';\nimport { UsersService } from '../../../shared/service/users.service'\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\n\n@Component({\n  selector: 'app-lyons',\n  templateUrl: './lyons.component.html',\n  styleUrls: ['./lyons.component.scss']\n})\nexport class LyonsComponent implements AfterViewInit {\n  range = {\n    startDate: '',\n    endDate: '',\n  };\n  summary = {\n    revenue: 0,\n    profit: 0,\n  };\n\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\n  expanded: any = {};\n\n  tagList: any = [];\n  //Sends chartData to ReportingRevenueChartComponent\n  chartData: ChartDataInterface;\n\n  //Sends summaryMetrics to SummaryMetricsComponent\n  summaryMetricsData: any;\n  currentMonthData: any;\n  beforeMonthData: any;\n  twoBeforeMonthData: any;\n  rows: any[];\n  selectedCompany: any;\n  allstat: any;\n  allChart: any;\n  filteredLyonStat: any[] = [];\n  @ViewChild('expandableTable') table: any;\n\n  constructor(\n    private lyonService: LyonService,\n    private cdr: ChangeDetectorRef,\n    private userService: UsersService,\n    private tagService: TagManagementService,\n  ) {\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\n   }\n    \n  async ngAfterViewInit() {\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\n    \n    this.rows = [];\n    this.rows = await this.getAllLyonStats(\n      this.range.startDate,\n      this.range.endDate\n    );\n    \n    this.chartData = await this.getChartMetrics(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.summaryMetricsData =await this.getSummaryMetrics(this.selectedCompany);\n    this.refreshTable();\n  }\n\n  toggleExpandRow(row) {\n    console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event) {\n    console.log('Detail Toggled', event);\n  }\n\n  async routeTester() {\n    console.log('Testing Route');\n    this.lyonService.testingRoute().subscribe((response) => {\n      console.log(response);\n    }),\n      (err) => {\n        console.log(err);\n      };\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n  //get Tags with selected company\n  getCompanyTags(selectedCompany) {\n    var companyId = selectedCompany.split(\"/\")[1];\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \n      return response;\n    })\n    .catch((error) => {\n      return error;\n    })\n  }\n  //get Stat all\n  getAllLyonStats(startDate, endDate) {\n    return this.lyonService.getAllStats(startDate, endDate).toPromise().then((response) => {    \n      this.allstat = response;\n      this.allstat.map(function(resStat) {\n        resStat.publisher = \"No Publisher\"\n        resStat.tagname = \"No Tag\"\n      });\n      // var allLyonStat = [];\n      for (var tagL of this.tagList) {\n        if(tagL.tag.advertiser == \"lyons\") {\n          for (var tagSub of tagL.tag.subids) {\n            if(tagSub.filterTag ==\"Contains\") {\n              \n              this.allstat.map(stat => {\n                if (stat.subid.includes(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } else if (tagSub.filterTag ==\"StartsWith\") {\n              this.allstat.map(stat => {\n                if (stat.subid.startsWith(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } else if (tagSub.filterTag ==\"EndsWith\") {\n              this.allstat.map(stat => {\n                if (stat.subid.endsWith(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              }) \n              \n            } else if (tagSub.filterTag ==\"ExactValue\") {\n              this.allstat.map(stat => {\n                if (stat.subid == tagSub.subid) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } \n          }\n        }\n        \n      }\n      \n      //duplicated remove\n      let filtered_data = this.allstat.filter((obj, pos, arr) => {\n        return arr\n          .map(mapObj => mapObj._id)\n          .indexOf(obj._id) == pos;\n      });\n      var helper = {};\n      filtered_data.map(f =>{\n        f.revenue = parseFloat(f.revenue);\n        f.ctr = parseFloat(f.ctr);\n        f.biddedCtr = parseFloat(f.biddedCTR);\n        f.split = parseFloat(f.split);\n      });\n      //Calculate the sums and group data (while tracking count)\n      var resultAll = filtered_data.reduce(function(prev, current) {\n        var key = (current.rptDate).toString() + '-' + current.subid;\n        if(!helper[key]) {\n          helper[key] = Object.assign({}, current); // create a copy of o\n          helper[key].count = 1;\n          prev.push(helper[key]);\n        } else {\n          helper[key].clicks += parseInt(current.clicks);\n          helper[key].searches += parseInt(current.searches);\n          if(current.biddedCtr) {\n            helper[key].biddedCtr += current.biddedCtr;\n          }\n          if(current.ctr) {\n            helper[key].ctr += current.ctr;\n          }\n          if(current.revenue) {\n            helper[key].revenue += current.revenue;\n          }\n          \n          helper[key].biddedSearches += parseInt(current.biddedSearches);\n          helper[key].count += 1;\n          helper[key].split += parseInt(current.split);\n          // helper[key].split_num = 70;\n        }\n        return prev;\n      }, []);\n      \n      resultAll.map((item) => {\n        item.split = item.split/item.count\n      })\n      return resultAll;\n    })\n    .catch((error) => {\n      return error;\n    });\n    \n  }\n\n  updateAllLyonStats(company, startDate, endDate) {\n    this.lyonService\n      .updateAllLyonStats(company, startDate, endDate)\n      .subscribe((response) => {\n        console.log(response);\n      }),\n      (err) => {\n        console.log(err);\n      };\n  }\n\n  public async updateReportingFiltering(range) {\n    // console.log('Update report filtering....');\n    this.range = range;\n    this.rows = await this.getAllLyonStats(\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.chartData = await this.getChartMetrics(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.summaryMetricsData = await this.getSummaryMetrics(this.selectedCompany);\n    this.refreshTable();\n  }\n\n  refreshTable() {\n    this.cdr.markForCheck();\n  }\n\n  getSummaryMetrics(company) {\n    return this.lyonService.getSummaryMetrics(company).toPromise().then((response) => {    \n      this.currentMonthData = response[0].summaryMetrics;\n      this.beforeMonthData = response[0].lastMonthStat;  \n      this.twoBeforeMonthData = response[0].twoLastMonthStat;  \n      var dayInCurrentMonth = response[0].dayInCurrentMonth;\n      var dayInBeforeMonth = response[0].dayInBeforeMonth;\n      var dayInTwoBeforeMonth = response[0].dayInTwoBeforeMonth;\n      // var summaryCurrentStat = [];\n      //current data get part\n      // for (var tagL of this.tagList) {\n      //   for (var tagSub of tagL.tag.subids) {\n      //     if(tagSub.filterTag ==\"Contains\") {\n            \n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\n      //       summaryCurrentStat.map(stat => {\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n      //         stat.tagname = tagL.tag.name\n      //       })\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\n            \n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid == tagSub.subid ))\n      //     }\n      //   }\n      // }\n      \n      // //duplicated remove\n      // let filter_data = summaryCurrentStat.filter((obj, pos, arr) => {\n      //   return arr\n      //     .map(mapObj => mapObj._id)\n      //     .indexOf(obj._id) == pos;\n      // });\n      \n      var helperSummary = {};\n      this.currentMonthData.map(f =>{\n        f.revenue = parseFloat(f.revenue);\n        // f.ctr = parseFloat(f.ctr);\n        // f.biddedCtr = parseFloat(f.biddedCTR);\n      })\n      \n      var resultSummary = this.currentMonthData.reduce(function(r, o) {\n        var key = o.rptDate;\n        if(!helperSummary[key]) {\n          helperSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperSummary[key]);\n        } else {\n          helperSummary[key].searches += parseInt(o.searches);\n          if(o.revenue) {\n            helperSummary[key].revenue += o.revenue;\n          }\n        } \n        return r;\n      }, []);\n      \n      var monthRevenue = 0;\n      var monthProfit = 0;\n      var monthRevenuePace = 0;\n      var profitPace = 0;\n      for(var sumData of resultSummary) {\n        monthRevenue += sumData.revenue;\n        monthProfit += sumData.revenue *(100 - sumData.split) * 0.01;\n        monthRevenuePace += (sumData.revenue/resultSummary.length) * dayInCurrentMonth;\n        profitPace += (sumData.revenue *(100 - sumData.split) * 0.01/resultSummary.length)*dayInCurrentMonth;\n      }\n\n      //before month data get part\n      // var summaryBeforeStat = [];\n      // for (var tagL of this.tagList) {\n      //   for (var tagSub of tagL.tag.subids) {\n      //     if(tagSub.filterTag ==\"Contains\") {\n            \n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\n      //       summaryBeforeStat.map(stat => {\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n      //         stat.tagname = tagL.tag.name\n      //       })\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\n            \n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid == tagSub.subid ))\n      //     }\n      //   }\n      // }\n      \n      // // //duplicated remove\n      // let filt_data = summaryBeforeStat.filter((obj, pos, arr) => {\n      //   return arr\n      //     .map(mapObj => mapObj._id)\n      //     .indexOf(obj._id) == pos;\n      // });\n      \n      var helperBeforeSummary = {};\n      this.beforeMonthData.map(f =>{\n        f.revenue = parseFloat(f.revenue);\n        // f.ctr = parseFloat(f.ctr);\n        // f.biddedCtr = parseFloat(f.biddedCTR);\n      })\n      \n      var resultBeforeSummary = this.beforeMonthData.reduce(function(r, o) {\n        var key = o.rptDate;\n        if(!helperBeforeSummary[key]) {\n          helperBeforeSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperBeforeSummary[key]);\n        } else {\n          helperBeforeSummary[key].searches += parseInt(o.searches);\n          if(o.revenue) {\n            helperBeforeSummary[key].revenue += o.revenue;\n          }\n        } \n        return r;\n      }, []);\n      var monthBeforeRevenue = 0;\n      var monthBeforeProfit = 0;\n      var monthBeforeRevenuePace = 0;\n      var profitBeforePace = 0;\n      for(var sumBeforeData of resultBeforeSummary) {\n        monthBeforeRevenue += sumBeforeData.revenue;\n        monthBeforeProfit += sumBeforeData.revenue *(100 - sumBeforeData.split) * 0.01;\n        monthBeforeRevenuePace += (sumBeforeData.revenue/resultBeforeSummary.length) * dayInBeforeMonth;\n        profitBeforePace += (sumBeforeData.revenue *(100 - sumBeforeData.split) * 0.01/resultBeforeSummary.length)*dayInBeforeMonth;\n      }\n\n      //tow before month data get part\n      // var summaryTwoBeforeStat = [];\n      // for (var tagL of this.tagList) {\n      //   for (var tagSub of tagL.tag.subids) {\n      //     if(tagSub.filterTag ==\"Contains\") {\n            \n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\n      //       summaryTwoBeforeStat.map(stat => {\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n      //         stat.tagname = tagL.tag.name\n      //       })\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\n            \n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid == tagSub.subid ))\n      //     }\n      //   }\n      // }\n      \n      // // //duplicated remove\n      // let filter_two_data = summaryTwoBeforeStat.filter((obj, pos, arr) => {\n      //   return arr\n      //     .map(mapObj => mapObj._id)\n      //     .indexOf(obj._id) == pos;\n      // });\n      \n      var helperTwoBeforeSummary = {};\n      this.twoBeforeMonthData.map(f =>{\n        f.revenue = parseFloat(f.revenue);\n        // f.ctr = parseFloat(f.ctr);\n        // f.biddedCtr = parseFloat(f.biddedCTR);\n      })\n      \n      var resultTwoBeforeSummary = this.twoBeforeMonthData.reduce(function(r, o) {\n        var key = o.rptDate;\n        if(!helperTwoBeforeSummary[key]) {\n          helperTwoBeforeSummary[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperTwoBeforeSummary[key]);\n        } else {\n          helperTwoBeforeSummary[key].searches += parseInt(o.searches);\n          if(o.revenue) {\n            helperTwoBeforeSummary[key].revenue += o.revenue;\n          }\n        } \n        return r;\n      }, []);\n      var monthTwoBeforeRevenue = 0;\n      var monthTwoBeforeProfit = 0;\n      var monthTwoBeforeRevenuePace = 0;\n      var profitTwoBeforePace = 0;\n      for(var sumTwoBeforeData of resultTwoBeforeSummary) {\n        monthTwoBeforeRevenue += sumTwoBeforeData.revenue;\n        monthTwoBeforeProfit += sumTwoBeforeData.revenue *(100 - sumTwoBeforeData.split) * 0.01;\n        monthTwoBeforeRevenuePace += (sumTwoBeforeData.revenue/resultTwoBeforeSummary.length) * dayInTwoBeforeMonth;\n        profitTwoBeforePace += (sumTwoBeforeData.revenue *(100 - sumTwoBeforeData.split) * 0.01/resultTwoBeforeSummary.length)*dayInTwoBeforeMonth;\n      }\n      var currentPercentPace = 0;\n      var lastPercentPace = 0;\n      if (profitBeforePace != 0) {\n        currentPercentPace = ((profitPace - profitBeforePace) / profitBeforePace) * 100\n      }\n      if (profitTwoBeforePace != 0) {\n        lastPercentPace = ((profitBeforePace - profitTwoBeforePace) / profitTwoBeforePace) * 100\n      }\n      var summaryFinalData = [];\n      summaryFinalData.push({\n        summaryMetrics: [{\n          revenue: monthRevenue,\n          revenuePace: monthRevenuePace,\n          profit: monthProfit,\n          profitPace: profitPace,\n          percentPace: currentPercentPace\n        }],\n        lastMonthStat: [{\n          revenue: monthBeforeRevenue,\n          revenuePace: monthBeforeRevenuePace,\n          profit: monthBeforeProfit,\n          profitPace: profitBeforePace,\n          percentPace: lastPercentPace\n        }]\n      });\n      var allSummary = {};\n      allSummary['summary'] = summaryFinalData;\n      return allSummary;\n        // this.combineSummaryMetrics(response);\n      })\n      .catch((error) => {\n        return error;\n      })\n  }\n\n  getChartMetrics(company, startDate, endDate) {\n    return this.lyonService.getAllStats(startDate, endDate).toPromise().then((response) => {  \n      var sortResponse = response.slice().sort((a, b) => a.rptDate - b.rptDate)  \n      this.allChart = sortResponse;\n      \n      // var chartAllLyonStat = [];\n      // for (var tagL of this.tagList) {\n      //   for (var tagSub of tagL.tag.subids) {\n      //     if(tagSub.filterTag ==\"Contains\") {\n            \n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.includes(tagSub.subid)))\n      //       chartAllLyonStat.map(stat => {\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n      //         stat.tagname = tagL.tag.name\n      //       })\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.startsWith(tagSub.subid)))\n      //       chartAllLyonStat.map(stat => {\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n      //         stat.tagname = tagL.tag.name\n      //       })\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid.endsWith(tagSub.subid)))\n      //       chartAllLyonStat.map(stat => {\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n      //         stat.tagname = tagL.tag.name\n      //       })\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\n      //       chartAllLyonStat = chartAllLyonStat.concat(this.allChart.filter(stat => stat.subid == tagSub.subid ))\n      //       chartAllLyonStat.map(stat => {\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\n      //         stat.tagname = tagL.tag.name\n      //       })\n      //     }\n      //   }\n      // }\n      \n      //duplicated remove\n      // let filter_data = chartAllLyonStat.filter((obj, pos, arr) => {\n      //   return arr\n      //     .map(mapObj => mapObj._id)\n      //     .indexOf(obj._id) == pos;\n      // });\n      var helperChart = {};\n      this.allChart.map(f =>{\n        f.revenue = parseFloat(f.revenue);\n        f.ctr = parseFloat(f.ctr);\n        f.biddedCtr = parseFloat(f.biddedCTR);\n      })\n      \n      var resultChart = this.allChart.reduce(function(r, o) {\n        var key = (o.rptDate).toString();\n        if(!helperChart[key]) {\n          helperChart[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperChart[key]);\n        } else {\n          helperChart[key].searches += parseInt(o.searches);\n          if(o.revenue) {\n            helperChart[key].revenue += o.revenue;\n          }\n        } \n        return r;\n      }, []);\n      \n      var revenuePerDayVal = [];\n      var datesOfRevenueVal = [];\n      var searchesPerDayVal = [];\n      var chartDataValue = {};\n      for(var resVal of resultChart) {\n        revenuePerDayVal.push(resVal.revenue);\n        datesOfRevenueVal.push(resVal.rptDate);\n        searchesPerDayVal.push(resVal.searches);\n      }\n      chartDataValue['revenuePerDay'] = revenuePerDayVal;\n      chartDataValue['datesOfRevenue'] = datesOfRevenueVal;\n      chartDataValue['searchesPerDay'] = searchesPerDayVal;\n      return chartDataValue;\n    })\n    .catch((error) => {\n      return error;\n    });\n  }\n\n  combineSummaryMetrics(metrics) {\n    metrics.summary.keys.forEach((element) => {\n      this.summary.revenue += element.revenue;\n      this.summary.profit += element.revenue * ((100 - element.split) * 0.01);\n    });\n  }\n\n  createChartData(stats) {}\n  \n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\nimport { UsersService } from 'src/app/shared/service/users.service';\nimport { ManualUpdateService } from 'src/app/shared/service/admin-stats/update.service';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\nimport { CompanyManagementService } from 'src/app/modules/company-management/company-management.service';\nimport * as moment from 'moment';\nimport { TagManagementService } from '../../tag-management/tag-management.service';\n\ninterface preSetDateRanges {\n  value: string;\n  viewValue: string;\n}\n\ninterface PreSetDateRange {\n  startDate: string;\n  endDate: string;\n}\n\n@Component({\n  selector: 'app-manual-split-update',\n  templateUrl: './manual-split-update.component.html',\n  styleUrls: ['./manual-split-update.component.scss']\n})\nexport class ManualSplitUpdateComponent implements OnInit {\n  manaulUpFG: FormGroup;\n  tagData: any =[];\n\n  preSetDateRanges: preSetDateRanges[];\n  range: FormGroup;\n  selectedRange: PreSetDateRange;\n\n  preSelectValue: String;\n\n  preSelectDates: any;\n  companySelected: any;\n  currentUser: any;\n  selectedTagName = '';\n\n  constructor(\n    private manualUpdateService: ManualUpdateService,\n    private fb: FormBuilder, \n    private companyService: CompanyManagementService,\n    private authService: AuthService,\n    private userService: UsersService,\n    private notification: NotificationService,\n    private tagService: TagManagementService,\n  ) {\n    this.currentUser = this.authService.currentUserValue;\n    this.companySelected = this.getSelectedCompanyLocalStorage();\n   }\n\n  ngOnInit(): void {\n    this.getAllTags();\n    this.tagData = [{value: 'all tag', viewValue: 'All Tag'}]\n    this.manaulUpFG = this.fb.group({\n      tag: new FormControl('', Validators.required),\n      preSelectValue: new FormControl('', Validators.required),\n      startDate: new FormControl('', Validators.required),\n      endDate: new FormControl('', Validators.required),\n    })\n    //Get the all PRESELECT ranges\n    this.preSetDateRanges = this.getDateRanges();\n    this.range = new FormGroup({\n      startDate: new FormControl('', Validators.required),\n      endDate: new FormControl('', Validators.required)\n    });\n\n    //Selected range of date picker\n    this.selectedRange = {\n      startDate: '',\n      endDate: '',\n    };\n\n    //Starting value of mat select\n    this.preSelectValue = 'last7days';\n\n    //Gets the true start and end date values in date format\n    this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\n\n    //Manually updates the mat date picker with new start and end dates\n    this.updateDatePickerRange(\n      this.preSelectDates.startDate,\n      this.preSelectDates.endDate\n    );\n  }\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n  //get All tags List\n  getAllTags() {\n    this.tagService.getAllTags().subscribe((response) => {\n      // console.log(response);\n      response.map(res => {\n        this.tagData.push({\n          value: res._id,\n          viewValue: res.name\n        })\n      })\n    });\n    // if(this.companySelected) {\n    //   this.companyService.getOneCompany(this.companySelected.split('/')[1]).subscribe(res => {\n    //     res.reportingProviders.map(report=> {\n    //       this.tagData.push({\n    //         value: report.reportingProvider,\n    //         viewValue: report.reportingProvider\n    //       })\n    //     });\n    //   });\n    // } \n  }\n  //Updates the date picker range manually\n  //Params startDate and endDate\n  updateDatePickerRange(startDate: moment.MomentInput, endDate: moment.MomentInput) {\n    this.manaulUpFG.patchValue({\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\n    });\n    this.range.patchValue({\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\n    });\n  }\n  //Grabbing the mat selector options\n  private getDateRanges() {\n    return [\n      { value: 'today', viewValue: 'Today' },\n      { value: 'yesterday', viewValue: 'Yesterday' },\n      { value: 'last7days', viewValue: 'Last 7 Days' },\n      { value: 'last30days', viewValue: 'Last 30 Days' },\n      { value: 'monthToDate', viewValue: 'Month to Date' },\n      { value: 'lastMonth', viewValue: 'Last Month' },\n      { value: 'custom', viewValue: 'Custom' },\n    ];\n  }\n  //Monitors mat selector, if changed (and not custom). updates the actual date picker\n  onPreSetRangeSelectChange(selection: any) {\n    if (selection.value !== 'custom') {\n      this.preSelectValue = selection.value;\n      this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\n\n      //Updates the date picker range manually\n      this.updateDatePickerRange(\n        this.preSelectDates.startDate,\n        this.preSelectDates.endDate\n      );\n    }\n  }\n  //Convert mat selector options and return actual dates\n  private getPreSetDateRange(selection: any) {\n    let dateFormat = 'MM-DD-YYYY';\n    switch (selection) {\n      case 'today':\n        return {\n          startDate: moment().utc().startOf('day').format(dateFormat),\n          endDate: moment().utc().endOf('day').format(dateFormat),\n        };\n      case 'yesterday':\n        return {\n          startDate: moment()\n            .subtract(1, 'days')\n            .utc()\n            .startOf('day')\n            .format(dateFormat),\n          endDate: moment()\n            .subtract(1, 'days')\n            .utc()\n            .endOf('day')\n            .format(dateFormat),\n        };\n      case 'last7days':\n        return {\n          startDate: moment()\n            .subtract(7, 'days')\n            .utc()\n            .startOf('day')\n            .format(dateFormat),\n          endDate: moment().utc().endOf('day').format(dateFormat),\n        };\n      case 'last30days':\n        return {\n          startDate: moment()\n            .subtract(30, 'days')\n            .utc()\n            .startOf('day')\n            .format(dateFormat),\n          endDate: moment().utc().endOf('day').format(dateFormat),\n        };\n      case 'monthToDate':\n        return {\n          startDate: moment()\n            .startOf('month')\n            .utc()\n            .startOf('day')\n            .format(dateFormat),\n          endDate: moment().utc().endOf('day').format(dateFormat),\n        };\n      case 'lastMonth':\n        return {\n          startDate: moment()\n            .subtract(1, 'months')\n            .startOf('month')\n            .utc()\n            .startOf('day')\n            .format(dateFormat),\n          endDate: moment()\n            .utc()\n            .subtract(1, 'months')\n            .endOf('month')\n            .format(dateFormat),\n        };\n    }\n  }\n  handleTag(event) {\n    this.selectedTagName = this.tagData.filter(tag => tag.value == event.value)[0].viewValue;\n  }\n\n  onReportSubmit() {\n    if (this.manaulUpFG.valid) {\n      this.manaulUpFG.addControl('company',new FormControl('', Validators.required));\n      this.manaulUpFG.patchValue({\n        company: this.companySelected,\n      });\n      this.manualUpdateService.updateManualSplit(this.manaulUpFG.value).subscribe((response) => {\n        var checkExist = this.isObjectEmpty(response);\n        if(!checkExist) {\n          this.notification.showSuccess(`${this.selectedTagName} data splits  successfully updated!`, \"\")\n        } else {\n          this.notification.showWarning(`${this.selectedTagName} data not existed!`, \"\")\n        }\n      })\n    }\n  }\n  isObjectEmpty(obj: {}) {\n    return Object.keys(obj).length === 0;\n  }\n  //Detects when datepicker change is updated\n  public changeDatePicker(): void {\n    if (this.range.valid) {\n      \n      this.selectedRange.startDate = this.range.value.startDate;\n      this.selectedRange.endDate = this.range.value.endDate;\n\n      this.manaulUpFG.patchValue({\n        startDate: moment(this.range.value.startDate, 'MM-DD-YYYY').toDate(),\n        endDate: moment(this.range.value.endDate, 'MM-DD-YYYY').toDate(),\n      });\n\n      this.preSelectValue = 'custom';\n    }\n  }\n}\n","<form class=\"example-container\" id=\"manaulUpForm\" [formGroup]=\"manaulUpFG\" (ngSubmit)=\"onReportSubmit()\">\n    <div class=\"row\">\n        <div class=\"col-xl-6\">\n            <div class=\"card card-custom example example-compact gutter-b\">\n                <div class=\"card-header\">\n                    <div class=\"card-title\">\n                        <h3 class=\"card-label\">Report Split Update</h3>\n                    </div>\n                </div>  \n                \n                <div class=\"card-body\">\n                    <mat-form-field>\n                        <mat-label>Tag</mat-label>\n                        <mat-select matNativeControl placeholder=\"Select Report\" formControlName=\"tag\" (selectionChange)=\"handleTag($event)\">\n                          <mat-option\n                            *ngFor=\"let tagItem of tagData\"\n                            [value]=\"tagItem.value\"\n                          >\n                            {{ tagItem.viewValue }}\n                          </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field>\n                        <mat-label>Enter a custom date range</mat-label>\n                        <mat-date-range-input\n                          [rangePicker]=\"picker\"\n                          [formGroup]=\"range\"\n                          (dateChange)=\"changeDatePicker()\"\n                        >\n                          <input\n                            matStartDate\n                            formControlName=\"startDate\"\n                            placeholder=\"Start date\"\n                            required\n                          />\n                          <input\n                            matEndDate\n                            formControlName=\"endDate\"\n                            placeholder=\"End date\"\n                            required\n                            (dateChange)=\"changeDatePicker()\"\n                          />\n                        </mat-date-range-input>\n                        <mat-datepicker-toggle\n                          matSuffix\n                          [for]=\"picker\"\n                        ></mat-datepicker-toggle>\n                        <mat-date-range-picker #picker></mat-date-range-picker>\n              \n                        <mat-error\n                          *ngIf=\"manaulUpFG.controls.startDate.hasError('matStartDateInvalid')\"\n                          >Invalid start date</mat-error\n                        >\n                        <mat-error\n                          *ngIf=\"manaulUpFG.controls.endDate.hasError('matEndDateInvalid')\"\n                          >Invalid end date</mat-error\n                        >\n                        <!-- Required Date Messages -->\n                        <mat-error *ngIf=\"manaulUpFG.controls.startDate.errors?.required\">Start Date Required</mat-error>\n                        <mat-error *ngIf=\"manaulUpFG.controls.endDate.errors?.required\">End Date Required</mat-error>\n                    </mat-form-field>\n            \n                    <mat-form-field>\n                    <mat-label>Preset Date Range</mat-label>\n                    <mat-select\n                        [(ngModel)]=\"preSelectValue\"\n                        (selectionChange)=\"onPreSetRangeSelectChange($event)\"\n                        formControlName=\"preSelectValue\"\n                    >\n                        <mat-option\n                        *ngFor=\"let dateRange of preSetDateRanges\"\n                        [value]=\"dateRange.value\"\n                        >\n                        {{ dateRange.viewValue }}\n                        </mat-option>\n                    </mat-select>\n                    </mat-form-field>\n                    <!-- update report -->\n                    <div class=\"row\">\n                        <div class=\"col-xl-6\">\n                            <button mat-raised-button color=\"primary\" type=\"submit\">Update Splits</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport * as moment from 'moment';\nimport { CompanyManagementService } from 'src/app/modules/company-management/company-management.service';\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\nimport { UsersService } from 'src/app/shared/service/users.service';\nimport { ManualUpdateService } from 'src/app/shared/service/admin-stats/update.service';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\n\ninterface preSetDateRanges {\n  value: string;\n  viewValue: string;\n}\n\ninterface PreSetDateRange {\n  startDate: string;\n  endDate: string;\n}\n\n@Component({\n  selector: 'app-manual-update',\n  templateUrl: './manual-update.component.html',\n  styleUrls: ['./manual-update.component.scss']\n})\nexport class ManualUpdateComponent implements OnInit {\n  reportUpdateTitle = 'Report Stat Update'\n  manaulUpFG: FormGroup;\n  reportTypeData: any =[];\n\n  preSetDateRanges: preSetDateRanges[];\n  range: FormGroup;\n  selectedRange: PreSetDateRange;\n\n  preSelectValue: String;\n\n  preSelectDates: any;\n  companySelected: any;\n\n  currentUser: any;\n  constructor(\n    private manualUpdateService: ManualUpdateService,\n    private fb: FormBuilder, \n    private companyService: CompanyManagementService,\n    private authService: AuthService,\n    private userService: UsersService,\n    private notification: NotificationService,\n  ) { \n    this.currentUser = this.authService.currentUserValue;\n    this.companySelected = this.getSelectedCompanyLocalStorage();\n  }\n\n  ngOnInit(): void {\n    this.getReportingProviderList();\n    this.manaulUpFG = this.fb.group({\n      reportType: new FormControl('', Validators.required),\n      preSelectValue: new FormControl('', Validators.required),\n      startDate: new FormControl('', Validators.required),\n      endDate: new FormControl('', Validators.required),\n    })\n    //Get the all PRESELECT ranges\n    this.preSetDateRanges = this.getDateRanges();\n    this.range = new FormGroup({\n      startDate: new FormControl('', Validators.required),\n      endDate: new FormControl('', Validators.required)\n    });\n\n    //Selected range of date picker\n    this.selectedRange = {\n      startDate: '',\n      endDate: '',\n    };\n\n    //Starting value of mat select\n    this.preSelectValue = 'last7days';\n\n    //Gets the true start and end date values in date format\n    this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\n\n    //Manually updates the mat date picker with new start and end dates\n    this.updateDatePickerRange(\n      this.preSelectDates.startDate,\n      this.preSelectDates.endDate\n    );\n  }\n\n  //get Report Providers in Current Company\n  getReportingProviderList() {\n    if(this.companySelected) {\n      this.companyService.getOneCompany(this.companySelected.split('/')[1]).subscribe(res => {\n        res.reportingProviders.map(report=> {\n          this.reportTypeData.push({\n            value: report.reportingProvider,\n            viewValue: report.reportingProvider\n          })\n        });\n      });\n    } \n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n  onReportSubmit() {\n    if (this.manaulUpFG.valid) {\n      this.manaulUpFG.addControl('company',new FormControl('', Validators.required));\n      this.manaulUpFG.patchValue({\n        company: this.companySelected,\n      });\n      var reportTypeValue = this.manaulUpFG.value['reportType'];\n      this.manualUpdateService.updateManualStats(this.manaulUpFG.value).subscribe((response) => {\n        var checkExist = this.isObjectEmpty(response);\n        if(!checkExist) {\n          this.notification.showSuccess(`${reportTypeValue} data stats successfully updated!`, \"\")\n        } else {\n          this.notification.showWarning(`${reportTypeValue} data not existed!`, \"\")\n        }\n      })\n    }\n  }\n  isObjectEmpty(obj: {}) {\n    return Object.keys(obj).length === 0;\n  }\n  //Grabbing the mat selector options\n  private getDateRanges() {\n    return [\n      { value: 'today', viewValue: 'Today' },\n      { value: 'yesterday', viewValue: 'Yesterday' },\n      { value: 'last7days', viewValue: 'Last 7 Days' },\n      { value: 'last30days', viewValue: 'Last 30 Days' },\n      { value: 'monthToDate', viewValue: 'Month to Date' },\n      { value: 'lastMonth', viewValue: 'Last Month' },\n      { value: 'custom', viewValue: 'Custom' },\n    ];\n  }\n  //Detects when datepicker change is updated\n  public changeDatePicker(): void {\n    if (this.range.valid) {\n      \n      this.selectedRange.startDate = this.range.value.startDate;\n      this.selectedRange.endDate = this.range.value.endDate;\n\n      this.manaulUpFG.patchValue({\n        startDate: moment(this.range.value.startDate, 'MM-DD-YYYY').toDate(),\n        endDate: moment(this.range.value.endDate, 'MM-DD-YYYY').toDate(),\n      });\n\n      this.preSelectValue = 'custom';\n    }\n  }\n\n  //Monitors mat selector, if changed (and not custom). updates the actual date picker\n  onPreSetRangeSelectChange(selection: any) {\n    if (selection.value !== 'custom') {\n      this.preSelectValue = selection.value;\n      this.preSelectDates = this.getPreSetDateRange(this.preSelectValue);\n\n      //Updates the date picker range manually\n      this.updateDatePickerRange(\n        this.preSelectDates.startDate,\n        this.preSelectDates.endDate\n      );\n    }\n  }\n\n //Updates the date picker range manually\n  //Params startDate and endDate\n  updateDatePickerRange(startDate: moment.MomentInput, endDate: moment.MomentInput) {\n    this.manaulUpFG.patchValue({\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\n    });\n    this.range.patchValue({\n      startDate: moment(startDate, 'MM-DD-YYYY').toDate(),\n      endDate: moment(endDate, 'MM-DD-YYYY').toDate(),\n    });\n  }\n\n  //Convert mat selector options and return actual dates\n  private getPreSetDateRange(selection: any) {\n    let dateFormat = 'MM-DD-YYYY';\n    switch (selection) {\n      case 'today':\n        return {\n          startDate: moment().utc().startOf('day').format(dateFormat),\n          endDate: moment().utc().endOf('day').format(dateFormat),\n        };\n      case 'yesterday':\n        return {\n          startDate: moment()\n            .subtract(1, 'days')\n            .utc()\n            .startOf('day')\n            .format(dateFormat),\n          endDate: moment()\n            .subtract(1, 'days')\n            .utc()\n            .endOf('day')\n            .format(dateFormat),\n        };\n      case 'last7days':\n        return {\n          startDate: moment()\n            .subtract(7, 'days')\n            .utc()\n            .startOf('day')\n            .format(dateFormat),\n          endDate: moment().utc().endOf('day').format(dateFormat),\n        };\n      case 'last30days':\n        return {\n          startDate: moment()\n            .subtract(30, 'days')\n            .utc()\n            .startOf('day')\n            .format(dateFormat),\n          endDate: moment().utc().endOf('day').format(dateFormat),\n        };\n      case 'monthToDate':\n        return {\n          startDate: moment()\n            .startOf('month')\n            .utc()\n            .startOf('day')\n            .format(dateFormat),\n          endDate: moment().utc().endOf('day').format(dateFormat),\n        };\n      case 'lastMonth':\n        return {\n          startDate: moment()\n            .subtract(1, 'months')\n            .startOf('month')\n            .utc()\n            .startOf('day')\n            .format(dateFormat),\n          endDate: moment()\n            .utc()\n            .subtract(1, 'months')\n            .endOf('month')\n            .format(dateFormat),\n        };\n    }\n  }\n  handleReport(event) {\n    if (event.value.length > 0) {\n      var typeName = event.value.toLowerCase().replace(/\\b[a-z]/g, function(letter) {\n        return letter.toUpperCase();\n      });\n      this.reportUpdateTitle = `${typeName} Stat Update`\n    }\n  }\n}\n","<form class=\"example-container\" id=\"manaulUpForm\" [formGroup]=\"manaulUpFG\" (ngSubmit)=\"onReportSubmit()\">\n    <div class=\"row\">\n        <div class=\"col-xl-6\">\n            <div class=\"card card-custom example example-compact gutter-b\">\n                <div class=\"card-header\">\n                    <div class=\"card-title\">\n                        <h3 class=\"card-label\">{{reportUpdateTitle}}</h3>\n                    </div>\n                </div>  \n                \n                <div class=\"card-body\">\n                    <mat-form-field>\n                        <mat-label>Report Type</mat-label>\n                        <mat-select matNativeControl placeholder=\"Select Report\" formControlName=\"reportType\" (selectionChange)=\"handleReport($event)\">\n                          <mat-option\n                            *ngFor=\"let reportItem of reportTypeData\"\n                            [value]=\"reportItem.value\"\n                          >\n                            {{ reportItem.viewValue }}\n                          </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field>\n                        <mat-label>Enter a custom date range</mat-label>\n                        <mat-date-range-input\n                          [rangePicker]=\"picker\"\n                          [formGroup]=\"range\"\n                          (dateChange)=\"changeDatePicker()\"\n                        >\n                          <input\n                            matStartDate\n                            formControlName=\"startDate\"\n                            placeholder=\"Start date\"\n                            required\n                          />\n                          <input\n                            matEndDate\n                            formControlName=\"endDate\"\n                            placeholder=\"End date\"\n                            required\n                            (dateChange)=\"changeDatePicker()\"\n                          />\n                        </mat-date-range-input>\n                        <mat-datepicker-toggle\n                          matSuffix\n                          [for]=\"picker\"\n                        ></mat-datepicker-toggle>\n                        <mat-date-range-picker #picker></mat-date-range-picker>\n              \n                        <mat-error\n                          *ngIf=\"manaulUpFG.controls.startDate.hasError('matStartDateInvalid')\"\n                          >Invalid start date</mat-error\n                        >\n                        <mat-error\n                          *ngIf=\"manaulUpFG.controls.endDate.hasError('matEndDateInvalid')\"\n                          >Invalid end date</mat-error\n                        >\n                        <!-- Required Date Messages -->\n                        <mat-error *ngIf=\"manaulUpFG.controls.startDate.errors?.required\">Start Date Required</mat-error>\n                        <mat-error *ngIf=\"manaulUpFG.controls.endDate.errors?.required\">End Date Required</mat-error>\n                    </mat-form-field>\n            \n                    <mat-form-field>\n                    <mat-label>Preset Date Range</mat-label>\n                    <mat-select\n                        [(ngModel)]=\"preSelectValue\"\n                        (selectionChange)=\"onPreSetRangeSelectChange($event)\"\n                        formControlName=\"preSelectValue\"\n                    >\n                        <mat-option\n                        *ngFor=\"let dateRange of preSetDateRanges\"\n                        [value]=\"dateRange.value\"\n                        >\n                        {{ dateRange.viewValue }}\n                        </mat-option>\n                    </mat-select>\n                    </mat-form-field>\n                    <!-- update report -->\n                    <div class=\"row\">\n                        <div class=\"col-xl-6\">\n                            <button mat-raised-button color=\"primary\" type=\"submit\">Update Stats</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-media-net',\r\n  templateUrl: './media-net.component.html',\r\n  styleUrls: ['./media-net.component.scss']\r\n})\r\nexport class MediaNetComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>media-net works!</p>\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<!-- <div class=\"row\">\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Enter a date range</mat-label>\r\n    <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n      <input\r\n        matStartDate\r\n        formControlName=\"startDate\"\r\n        placeholder=\"Start date\"\r\n      />\r\n      <input matEndDate formControlName=\"endDate\" placeholder=\"End date\" />\r\n    </mat-date-range-input>\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n    <mat-error *ngIf=\"range.controls.startDate.hasError('matStartDateInvalid')\"\r\n      >Invalid start date</mat-error\r\n    >\r\n    <mat-error *ngIf=\"range.controls.endDate.hasError('matEndDateInvalid')\"\r\n      >Invalid end date</mat-error\r\n    >\r\n  </mat-form-field>\r\n\r\n  <p>Selected range: {{ range.value | json }}</p>\r\n</div> -->\r\n\r\n<app-reporting-revenue-chart *ngIf=\"chartData\"\r\n  [chartData]=\"chartData\"\r\n></app-reporting-revenue-chart>\r\n\r\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\r\n\r\n<button class=\"btn btn-sm btn-dark\"\r\n  (click)=\"updateAllPerionStats(selectedCompany, range.startDate, range.endDate)\"\r\n>\r\n  updateAllPerionStats\r\n</button>\r\n\r\n<button class=\"btn btn-sm btn-primary\" (click)=\"getAllPerionStats(selectedCompany, range.startDate, range.endDate)\">\r\n  getAllPerionStats\r\n</button>\r\n\r\n<button class=\"btn btn-sm btn-info\" (click)=\"getSummaryMetrics(selectedCompany)\">getSummaryMetrics</button>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 30px; height: 500px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [rows]=\"rows\"\r\n  [loadingIndicator]=\"loadingIndicator\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"30\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Date -->\r\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Date\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | date }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"subid\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Subid\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SUBID -->\r\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SEARCHES -->\r\n  <ngx-datatable-column name=\"impressions\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CPC -->\r\n  <ngx-datatable-column name=\"cpc\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CPC\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | currency: 'USD') || (0 | currency: 'USD') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"ctr\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      CTR\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{\r\n        (value | percent: '2.2-2') || (0 | percent: '2.2-2')\r\n      }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- FOLLOW ON -->\r\n  <ngx-datatable-column name=\"followon\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Follow On\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{\r\n        (value | percent: '2.2-2') || (0 | percent: '2.2-2')\r\n      }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Publisher Net -->\r\n  <ngx-datatable-column name=\"publisherNet\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher Net\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- Profit -->\r\n  <ngx-datatable-column name=\"profit\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Profit\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- SPLIT -->\r\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Split\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\r\nimport { PerionService } from 'src/app/shared/service/admin-stats/perion.service';\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-perion',\r\n  templateUrl: './perion.component.html',\r\n  styleUrls: ['./perion.component.scss'],\r\n})\r\nexport class PerionComponent implements AfterViewInit {\r\n  range = {\r\n    startDate: '',\r\n    endDate: '',\r\n  };\r\n  loadingIndicator = true;\r\n  company = {\r\n    name: 'Manic Traffic',\r\n    login: {\r\n      username: 'kevin@manictraffic.com',\r\n      password: 'kauf2552',\r\n    },\r\n    statsUpdateURL:\r\n      'https://services.hub.codefuel.com/analytics/reports?channelQueryType=all_channels&columnQueryData=%7B%22ids%22:%5B%22date%22,%22product%22,%22channel%22,%22country%22,%22searches%22,%22ad_clicks%22,%22publisher_cpc%22,%22monetized_ctr%22,%22revenue%22,%22searches_monetized%22%5D%7D&columnQueryType=specific_columns&endDate=1600991999000&geoQueryType=all&limit=10000&productQueryType=all_product&startDate=1600905600000&walletQueryType=all_wallets',\r\n  };\r\n\r\n  summary = {\r\n    revenue: 0,\r\n    profit: 0,\r\n  };\r\n\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  allStat: any[];\r\n  allChartStat: any[];\r\n  //Sends chartData to ReportingRevenueChartComponent\r\n  chartData: ChartDataInterface;\r\n\r\n  //Sends summaryMetrics to SummaryMetricsComponent\r\n  summaryMetrics: any;\r\n  tagList: any = [];\r\n  rows: any[];\r\n  selectedCompany: any;\r\n  summaryMetricsData: any;\r\n  currentMonthData: any;\r\n  beforeMonthData: any;\r\n  twoBeforeMonthData: any;\r\n\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor(\r\n    private perionService: PerionService,\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n    private tagService: TagManagementService,\r\n  ) {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  async ngAfterViewInit() {   \r\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\r\n\r\n    this.rows = [];\r\n    this.rows = await this.getAllPerionStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  async routeTester() {\r\n    console.log('Testing Route');\r\n    this.perionService.testingRoute().subscribe((response) => {\r\n      console.log(response);\r\n    }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  updateAllPerionStats(company, startDate, endDate) {\r\n    this.perionService\r\n      .updateAllPerionStats(company, startDate, endDate)\r\n      .subscribe((response) => {\r\n        console.log(response);\r\n      }),\r\n      (err) => {\r\n        console.log(err);\r\n      };\r\n  }\r\n\r\n  public async updateReportingFiltering(range) {\r\n    // console.log('Update report filtering....');\r\n    this.range = range;\r\n    this.rows = await this.getAllPerionStats(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.chartData = await this.getChartMetrics(\r\n      this.selectedCompany,\r\n      this.range.startDate,\r\n      this.range.endDate\r\n    );\r\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\r\n    this.refreshTable();\r\n  }\r\n\r\n  getAllPerionStats(company, startDate, endDate) {\r\n    return this.perionService\r\n      .getAllPerionStats(company, startDate, endDate)\r\n      .toPromise()\r\n      .then((response) => {\r\n        console.log('getAllPerionStats() response:');\r\n        this.loadingIndicator = false;\r\n        // console.log(response.stats);\r\n        this.allStat = response.stats;\r\n        this.allStat.map(function(resStat) {\r\n          resStat.publisher = \"No Publisher\"\r\n          resStat.tagname = \"No Tag\" \r\n        });\r\n        \r\n        for (var tagL of this.tagList) {\r\n          if(tagL.tag.advertiser == \"perion\") {\r\n            for (var tagSub of tagL.tag.subids) {\r\n              if(tagSub.filterTag ==\"Contains\") {\r\n              \r\n                this.allStat.map(stat => {\r\n                  if (stat.subid.includes(tagSub.subid)) {\r\n                    stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                    stat.tagname = tagL.tag.name\r\n                  }\r\n                })\r\n                \r\n              } else if (tagSub.filterTag ==\"StartsWith\") {\r\n                this.allStat.map(stat => {\r\n                  if (stat.subid.startsWith(tagSub.subid)) {\r\n                    stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                    stat.tagname = tagL.tag.name\r\n                  }\r\n                })\r\n                \r\n              } else if (tagSub.filterTag ==\"EndsWith\") {\r\n                this.allStat.map(stat => {\r\n                  if (stat.subid.endsWith(tagSub.subid)) {\r\n                    stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                    stat.tagname = tagL.tag.name\r\n                  }\r\n                }) \r\n                \r\n              } else if (tagSub.filterTag ==\"ExactValue\") {\r\n                this.allStat.map(stat => {\r\n                  if (stat.subid == tagSub.subid) {\r\n                    stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\r\n                    stat.tagname = tagL.tag.name\r\n                  }\r\n                })\r\n                \r\n              } \r\n            }\r\n          }\r\n        }\r\n        // var helper = new Set();\r\n        \r\n        // //duplicated remove\r\n        // let filtered_data = this.allStat.filter((perionStat) => {\r\n        //   const key = JSON.stringify([perionStat.date, perionStat.subid]);\r\n        //   return !helper.has(key) && helper.add(key);\r\n        // });\r\n        // console.log(\"=========\", filtered_data.length)\r\n        //return filtered_data.slice().sort((a, b) => b.date - a.date);\r\n        return this.allStat;\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  }\r\n\r\n  refreshTable() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  getSummaryMetrics(company) {\r\n    return this.perionService.getSummaryMetrics(company).toPromise().then((response) => {\r\n      console.log('Got summary metrics');\r\n      // console.log(\"===============\", response)\r\n      // this.currentMonthData = response.summary[0].summaryMetrics;\r\n      // this.beforeMonthData = response.summary[0].lastMonthStat;  \r\n      // this.twoBeforeMonthData = response.summary[0].twoLastMonthStat;  \r\n      // var dayInCurrentMonth = response.summary[0].dayInCurrentMonth;\r\n      // var dayInBeforeMonth = response.summary[0].dayInBeforeMonth;\r\n      // var dayInTwoBeforeMonth = response.summary[0].dayInTwoBeforeMonth;\r\n      // var summaryCurrentStat = [];\r\n      //current data get part\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       summaryCurrentStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n      //       summaryCurrentStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n            \r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //       summaryCurrentStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       summaryCurrentStat = summaryCurrentStat.concat(this.currentMonthData.filter(stat => stat.subid == tagSub.subid ))\r\n      //       summaryCurrentStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     }\r\n      //   }\r\n      // }\r\n      // // //duplicated remove\r\n      // let filter_data = summaryCurrentStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      \r\n      // var helperSummary = {};\r\n      // filter_data.map(f =>{\r\n      //   f.revenue = parseFloat(f.revenue);\r\n      //   f.ctr = parseFloat(f.ctr);\r\n      //   f.biddedCtr = parseFloat(f.biddedCTR);\r\n      // })\r\n      \r\n      // var resultSummary = filter_data.reduce(function(r, o) {\r\n      //   var key = o.rptDate;\r\n      //   if(!helperSummary[key]) {\r\n      //     helperSummary[key] = Object.assign({}, o); // create a copy of o\r\n      //     r.push(helperSummary[key]);\r\n      //   } else {\r\n      //     helperSummary[key].searches += parseInt(o.searches);\r\n      //     if(o.revenue) {\r\n      //       helperSummary[key].revenue += o.revenue;\r\n      //     }\r\n      //   } \r\n      //   return r;\r\n      // }, []);\r\n      // var monthRevenue = 0;\r\n      // var monthProfit = 0;\r\n      // var monthRevenuePace = 0;\r\n      // var profitPace = 0;\r\n      // for(var sumData of resultSummary) {\r\n      //   monthRevenue += sumData.revenue;\r\n      //   monthProfit += sumData.revenue *(100 - sumData.split) * 0.01;\r\n      //   monthRevenuePace += (monthRevenue/resultSummary.length) * dayInCurrentMonth;\r\n      //   profitPace += (monthProfit/resultSummary.length)*dayInCurrentMonth;\r\n      // }\r\n\r\n      // //before month data get part\r\n      // var summaryBeforeStat = [];\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       summaryBeforeStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n            \r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       summaryBeforeStat = summaryBeforeStat.concat(this.beforeMonthData.filter(stat => stat.subid == tagSub.subid ))\r\n      //     }\r\n      //   }\r\n      // }\r\n      \r\n      // // //duplicated remove\r\n      // let filt_data = summaryBeforeStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      \r\n      // var helperBeforeSummary = {};\r\n      // filt_data.map(f =>{\r\n      //   f.revenue = parseFloat(f.revenue);\r\n      //   f.ctr = parseFloat(f.ctr);\r\n      //   f.biddedCtr = parseFloat(f.biddedCTR);\r\n      // })\r\n      \r\n      // var resultBeforeSummary = filt_data.reduce(function(r, o) {\r\n      //   var key = o.rptDate;\r\n      //   if(!helperBeforeSummary[key]) {\r\n      //     helperBeforeSummary[key] = Object.assign({}, o); // create a copy of o\r\n      //     r.push(helperBeforeSummary[key]);\r\n      //   } else {\r\n      //     helperBeforeSummary[key].searches += parseInt(o.searches);\r\n      //     if(o.revenue) {\r\n      //       helperBeforeSummary[key].revenue += o.revenue;\r\n      //     }\r\n      //   } \r\n      //   return r;\r\n      // }, []);\r\n      // var monthBeforeRevenue = 0;\r\n      // var monthBeforeProfit = 0;\r\n      // var monthBeforeRevenuePace = 0;\r\n      // var profitBeforePace = 0;\r\n      // for(var sumBeforeData of resultBeforeSummary) {\r\n      //   monthBeforeRevenue += sumBeforeData.revenue;\r\n      //   monthBeforeProfit += sumBeforeData.revenue *(100 - sumBeforeData.split) * 0.01;\r\n      //   monthBeforeRevenuePace += (monthBeforeRevenue/resultBeforeSummary.length) * dayInBeforeMonth;\r\n      //   profitBeforePace += (monthBeforeProfit/resultBeforeSummary.length)*dayInBeforeMonth;\r\n      // }\r\n\r\n      // //tow before month data get part\r\n      // var summaryTwoBeforeStat = [];\r\n      // for (var tagL of this.tagList) {\r\n      //   for (var tagSub of tagL.tag.subids) {\r\n      //     if(tagSub.filterTag ==\"Contains\") {\r\n            \r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.includes(tagSub.subid)))\r\n      //       summaryTwoBeforeStat.map(stat => {\r\n      //         stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n      //         stat.tagname = tagL.tag.name\r\n      //       })\r\n      //     } else if (tagSub.filterTag ==\"StartsWith\") {\r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n            \r\n      //     } else if (tagSub.filterTag ==\"EndsWith\") {\r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n      //     } else if (tagSub.filterTag ==\"ExactValue\") {\r\n      //       summaryTwoBeforeStat = summaryTwoBeforeStat.concat(this.twoBeforeMonthData.filter(stat => stat.subid == tagSub.subid ))\r\n      //     }\r\n      //   }\r\n      // }\r\n      \r\n      // // //duplicated remove\r\n      // let filter_two_data = summaryTwoBeforeStat.filter((obj, pos, arr) => {\r\n      //   return arr\r\n      //     .map(mapObj => mapObj._id)\r\n      //     .indexOf(obj._id) == pos;\r\n      // });\r\n      \r\n      // var helperTwoBeforeSummary = {};\r\n      // filter_two_data.map(f =>{\r\n      //   f.revenue = parseFloat(f.revenue);\r\n      //   f.ctr = parseFloat(f.ctr);\r\n      //   f.biddedCtr = parseFloat(f.biddedCTR);\r\n      // })\r\n      \r\n      // var resultTwoBeforeSummary = filter_two_data.reduce(function(r, o) {\r\n      //   var key = o.rptDate;\r\n      //   if(!helperTwoBeforeSummary[key]) {\r\n      //     helperTwoBeforeSummary[key] = Object.assign({}, o); // create a copy of o\r\n      //     r.push(helperTwoBeforeSummary[key]);\r\n      //   } else {\r\n      //     helperTwoBeforeSummary[key].searches += parseInt(o.searches);\r\n      //     if(o.revenue) {\r\n      //       helperTwoBeforeSummary[key].revenue += o.revenue;\r\n      //     }\r\n      //   } \r\n      //   return r;\r\n      // }, []);\r\n      // var monthTwoBeforeRevenue = 0;\r\n      // var monthTwoBeforeProfit = 0;\r\n      // var monthTwoBeforeRevenuePace = 0;\r\n      // var profitTwoBeforePace = 0;\r\n      // for(var sumTwoBeforeData of resultTwoBeforeSummary) {\r\n      //   monthTwoBeforeRevenue += sumTwoBeforeData.revenue;\r\n      //   monthTwoBeforeProfit += sumTwoBeforeData.revenue *(100 - sumTwoBeforeData.split) * 0.01;\r\n      //   monthTwoBeforeRevenuePace += (monthTwoBeforeRevenue/resultTwoBeforeSummary.length) * dayInTwoBeforeMonth;\r\n      //   profitTwoBeforePace += (monthTwoBeforeProfit/resultTwoBeforeSummary.length)*dayInTwoBeforeMonth;\r\n      // }\r\n      // var currentPercentPace = 0;\r\n      // var lastPercentPace = 0;\r\n      // if (profitBeforePace != 0) {\r\n      //   currentPercentPace = ((profitPace - profitBeforePace) / profitBeforePace) * 100\r\n      // }\r\n      // if (profitTwoBeforePace != 0) {\r\n      //   lastPercentPace = ((profitBeforePace - profitTwoBeforePace) / profitTwoBeforePace) * 100\r\n      // }\r\n      // var summaryFinalData = [];\r\n      // summaryFinalData.push({\r\n      //   summaryMetrics: [{\r\n      //     revenue: monthRevenue,\r\n      //     revenuePace: monthRevenuePace,\r\n      //     profit: monthProfit,\r\n      //     profitPace: profitPace,\r\n      //     percentPace: currentPercentPace\r\n      //   }],\r\n      //   lastMonthStat: [{\r\n      //     revenue: monthBeforeRevenue,\r\n      //     revenuePace: monthBeforeRevenuePace,\r\n      //     profit: monthBeforeProfit,\r\n      //     profitPace: profitBeforePace,\r\n      //     percentPace: lastPercentPace\r\n      //   }]\r\n      // });\r\n      var allSummary = {};\r\n      var currentPercentPace = 0;\r\n      var lastPercentPace = 0;\r\n      if(response.summary[0].lastMonthStat[0].profitPace != 0) {\r\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\r\n      }\r\n      if(response.summary[0].twoLastMonthStat[0].profitPace != 0) {\r\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\r\n      }\r\n      \r\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\r\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\r\n      allSummary['summary'] = response.summary;\r\n      return allSummary;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    })\r\n  }\r\n\r\n  getChartMetrics(company, startDate, endDate) {\r\n    return this.perionService\r\n      .getAllPerionStats(company, startDate, endDate)\r\n      .toPromise()\r\n      .then((response) => {\r\n        // console.log('getAllPerionStats() response:');\r\n        this.allChartStat = response.stats;\r\n        // var allChartPerionStat = [];\r\n        \r\n        // for (var tagL of this.tagList) {\r\n        //   if(tagL.tag.advertiser == \"perion\") {\r\n        //     for (var tagSub of tagL.tag.subids) {\r\n        //       if(tagSub.filterTag ==\"Contains\") {\r\n              \r\n        //         allChartPerionStat = allChartPerionStat.concat(this.allChartStat.filter(stat => stat.subid.includes(tagSub.subid)))\r\n        //         allChartPerionStat.map(stat => {\r\n        //           stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n        //           stat.tagname = tagL.tag.name\r\n        //         })\r\n        //       } else if (tagSub.filterTag ==\"StartsWith\") {\r\n        //         allChartPerionStat = allChartPerionStat.concat(this.allChartStat.filter(stat => stat.subid.startsWith(tagSub.subid)))\r\n        //         allChartPerionStat.map(stat => {\r\n        //           stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n        //           stat.tagname = tagL.tag.name\r\n        //         })\r\n        //       } else if (tagSub.filterTag ==\"EndsWith\") {\r\n        //         allChartPerionStat = allChartPerionStat.concat(this.allChartStat.filter(stat => stat.subid.endsWith(tagSub.subid)))\r\n        //         allChartPerionStat.map(stat => {\r\n        //           stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n        //           stat.tagname = tagL.tag.name\r\n        //         })\r\n        //       } else if (tagSub.filterTag ==\"ExactValue\") {\r\n        //         allChartPerionStat = allChartPerionStat.concat(this.allChartStat.filter(stat => stat.subid == tagSub.subid ))\r\n        //         allChartPerionStat.map(stat => {\r\n        //           stat.publisher = tagL.user ? tagL.user[0].fullname : \"\"\r\n        //           stat.tagname = tagL.tag.name\r\n        //         })\r\n        //       }\r\n        //     }\r\n        //   }\r\n        // }\r\n        // var helper = new Set();\r\n        //duplicated remove\r\n        // let filtered_data = this.allChartStat.filter((perionStat) => {\r\n        //   const key = JSON.stringify([perionStat.date, perionStat.subid]);\r\n        //   return !helper.has(key) && helper.add(key);\r\n        // });\r\n        this.allChartStat = this.allChartStat.slice().sort((a, b) => a.date - b.date);\r\n        var helperChart = {};\r\n        var resultChart = this.allChartStat.reduce(function(r, o) {\r\n          var key = o.date;\r\n          if(!helperChart[key]) {\r\n            helperChart[key] = Object.assign({}, o); // create a copy of o\r\n            r.push(helperChart[key]);\r\n          } else {\r\n            helperChart[key].impressions += parseInt(o.impressions);\r\n            if(o.revenue) {\r\n              helperChart[key].revenue += o.revenue;\r\n            }\r\n          } \r\n          return r;\r\n        }, []);\r\n        var revenuePerDayVal = [];\r\n        var datesOfRevenueVal = [];\r\n        var searchesPerDayVal = [];\r\n        var chartDataValue = {};\r\n        for(var resVal of resultChart) {\r\n          revenuePerDayVal.push(resVal.revenue);\r\n          datesOfRevenueVal.push(resVal.date);\r\n          searchesPerDayVal.push(resVal.impressions);\r\n        }\r\n        chartDataValue['revenuePerDay'] = revenuePerDayVal;\r\n        chartDataValue['datesOfRevenue'] = datesOfRevenueVal;\r\n        chartDataValue['searchesPerDay'] = searchesPerDayVal;\r\n        return chartDataValue;\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  }\r\n\r\n  combineSummaryMetrics(metrics) {\r\n    metrics.summary.keys.forEach((element) => {\r\n      console.log(element.revenue);\r\n      this.summary.revenue += element.revenue;\r\n      this.summary.profit += element.revenue * ((100 - element.split) * 0.01);\r\n    });\r\n  }\r\n\r\n  //get Tags with selected company\r\n  getCompanyTags(selectedCompany) {\r\n    var companyId = selectedCompany.split(\"/\")[1];\r\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      return error;\r\n    })\r\n  }\r\n\r\n  createChartData(stats) {}\r\n}\r\n","<app-reporting-filtering\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\n></app-reporting-filtering>\n\n<!--Chart Data Show-->\n<app-reporting-revenue-chart *ngIf=\"chartData\"\n  [chartData]=\"chartData\"\n></app-reporting-revenue-chart>\n\n<app-summary-metrics *ngIf=\"summaryMetrics\" [summaryMetricsData]=\"summaryMetrics\"></app-summary-metrics>\n\n<ngx-datatable\n  #expandableTable\n  class=\"material fullscreen expandable\"\n  style=\"top: 30px; height: 500px\"\n  [columnMode]=\"'force'\"\n  [headerHeight]=\"50\"\n  [footerHeight]=\"0\"\n  [rowHeight]=\"50\"\n  [scrollbarV]=\"true\"\n  [rows]=\"rows\"\n  [loadingIndicator]=\"loadingIndicator\"\n>\n  <!-- Row Detail Template -->\n  <ngx-datatable-row-detail\n    [rowHeight]=\"100\"\n    #myDetailRow\n    (toggle)=\"onDetailToggle($event)\"\n  >\n    <ng-template\n      let-row=\"row\"\n      let-expanded=\"expanded\"\n      ngx-datatable-row-detail-template\n    >\n      <div style=\"padding-left: 35px\">\n        <div><strong>Address</strong></div>\n        <div>Test</div>\n      </div>\n    </ng-template>\n  </ngx-datatable-row-detail>\n\n  <!-- Column Templates -->\n  <ngx-datatable-column\n    [width]=\"30\"\n    [resizeable]=\"false\"\n    [sortable]=\"false\"\n    [draggable]=\"false\"\n    [canAutoResize]=\"false\"\n  >\n    <ng-template\n      let-row=\"row\"\n      let-expanded=\"expanded\"\n      ngx-datatable-cell-template\n    >\n      <a\n        href=\"javascript:void(0)\"\n        [class.datatable-icon-right]=\"!expanded\"\n        [class.datatable-icon-down]=\"expanded\"\n        title=\"Expand/Collapse Row\"\n        (click)=\"toggleExpandRow(row)\"\n      >\n      </a>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Date -->\n  <ngx-datatable-column name=\"date\" [minWidth]=\"100\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Date\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | date }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SUBID -->\n  <ngx-datatable-column name=\"subid\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Subid\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SUBID -->\n  <ngx-datatable-column name=\"publisher\" [minWidth]=\"100\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Publisher\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SEARCHES -->\n  <ngx-datatable-column name=\"searches\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Searches\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- CLICKS -->\n  <ngx-datatable-column name=\"clicks\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Clicks\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- REVENUE -->\n  <ngx-datatable-column name=\"revenue\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Revenue\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | currency: 'USD' }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SPLIT -->\n  <ngx-datatable-column name=\"split\" [minWidth]=\"35\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Split\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ (value | number) || (0 | number: '1.0-0') }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n</ngx-datatable>","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\n\nimport { UsersService } from '../../../shared/service/users.service';\nimport { ChartDataInterface } from 'src/app/shared/models/chartData.interface';\nimport { RubiService } from 'src/app/shared/service/admin-stats/rubi.service';\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\n\n@Component({\n  selector: 'app-rubi',\n  templateUrl: './rubi.component.html',\n  styleUrls: ['./rubi.component.scss']\n})\nexport class RubiComponent implements AfterViewInit {\n  range = {\n    startDate: '',\n    endDate: '',\n  };\n  loadingIndicator = true;\n  rows: any[];\n  selectedCompany: any;\n  @ViewChild('expandableTable') table: any;\n  chartData: ChartDataInterface;\n  summary = {\n    revenue: 0,\n    profit: 0,\n  };\n\n  expanded: any = {};\n  allStats: any[];\n  summaryMetrics: any;\n  tagList: any = [];\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private userService: UsersService,\n    private rubiService: RubiService,\n    private tagService: TagManagementService,\n  ) { \n    this.selectedCompany = this.getSelectedCompanyStored();\n  }\n\n  async ngAfterViewInit() {\n    this.tagList = await this.getCompanyTags(this.selectedCompany);\n    this.rows = [];\n    this.rows = await this.getAllRubiStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.chartData = await this.getChartMetrics(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    \n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\n    this.refreshTable();\n  }\n  public async updateReportingFiltering(range) {\n    this.range = range;\n    this.rows = await this.getAllRubiStats(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.chartData = await this.getChartMetrics(\n      this.selectedCompany,\n      this.range.startDate,\n      this.range.endDate\n    );\n    this.summaryMetrics = await this.getSummaryMetrics(this.selectedCompany);\n    this.refreshTable();\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyStored() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  toggleExpandRow(row) {\n    console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event) {\n    console.log('Detail Toggled', event);\n  }\n\n  refreshTable() {\n    this.cdr.markForCheck();\n  }\n  getAllRubiStats(company, startDate, endDate) {\n    return this.rubiService.getAllRubiStats(company, startDate, endDate).toPromise().then((response) => {\n      console.log('getAllRubiStats() response:', response);\n      this.loadingIndicator = false;\n      this.allStats = response.stats;\n      this.allStats.map(function(resStat) {\n        resStat.publisher = \"No Publisher\"\n        resStat.tagname = \"No Tag\" \n      });\n      for (var tagL of this.tagList) {\n        if(tagL.tag.advertiser == \"rubi\") {\n          for (var tagSub of tagL.tag.subids) {\n            if(tagSub.filterTag ==\"Contains\") {\n            \n              this.allStats.map(stat => {\n                if (stat.subid.includes(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } else if (tagSub.filterTag ==\"StartsWith\") {\n              this.allStats.map(stat => {\n                if (stat.subid.startsWith(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } else if (tagSub.filterTag ==\"EndsWith\") {\n              this.allStats.map(stat => {\n                if (stat.subid.endsWith(tagSub.subid)) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              }) \n              \n            } else if (tagSub.filterTag ==\"ExactValue\") {\n              this.allStats.map(stat => {\n                if (stat.subid == tagSub.subid) {\n                  stat.publisher = tagL.user.length ? tagL.user[0].fullname : \"No Publisher\"\n                  stat.tagname = tagL.tag.name\n                }\n              })\n              \n            } \n          }\n        }\n      }\n      return this.allStats;\n    })\n  }\n  getChartMetrics(company, startDate, endDate) {\n    return this.rubiService\n      .getChartMetrics(company, startDate, endDate)\n      .toPromise()\n      .then((response) => {\n        return response;\n      })\n      .catch((error) => {\n        return error;\n      });\n  }\n  getSummaryMetrics(company) {\n    return this.rubiService.getSummaryMetrics(company).toPromise().then((response) => {\n      console.log('Got summary metrics');\n      var allSummary = {};\n      var currentPercentPace = 0;\n      var lastPercentPace = 0;\n      if(response.summary[0].lastMonthStat[0].profitPace != 0) {\n        currentPercentPace = (response.summary[0].summaryMetrics[0].profitPace - response.summary[0].lastMonthStat[0].profitPace) / (response.summary[0].lastMonthStat[0].profitPace) * 100;\n      }\n      if(response.summary[0].twoLastMonthStat[0].profitPace != 0) {\n        lastPercentPace = (response.summary[0].lastMonthStat[0].profitPace - response.summary[0].twoLastMonthStat[0].profitPace) / (response.summary[0].twoLastMonthStat[0].profitPace) * 100;\n      }\n      response.summary[0].summaryMetrics[0].percentPace = currentPercentPace;\n      response.summary[0].lastMonthStat[0].percentPace = lastPercentPace;\n      allSummary['summary'] = response.summary;\n      return allSummary;\n    })\n  }\n  //get Tags with selected company\n  getCompanyTags(selectedCompany) {\n    var companyId = selectedCompany.split(\"/\")[1];\n    return this.tagService.getCompanyTags(companyId).toPromise().then((response) => {  \n      return response;\n    })\n    .catch((error) => {\n      return error;\n    })\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as echarts from 'echarts';\r\n\r\n@Component({\r\n  selector: 'app-third-party',\r\n  templateUrl: './third-party.component.html',\r\n  styleUrls: ['./third-party.component.scss'],\r\n})\r\nexport class ThirdPartyComponent implements OnInit {\r\n  //Chart setup variables\r\n  chartDom;\r\n  myChart;\r\n  option;\r\n\r\n  rows = [\r\n    {\r\n      name: 'Datalox',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n    {\r\n      name: 'Hopkins Branded',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n    {\r\n      name: 'Datalox 2',\r\n      tag: 'Guppy Media',\r\n      totalSearches: '5341',\r\n      monetizedSearches: '5213',\r\n      revenue: '1362',\r\n      clicks: 562,\r\n    },\r\n  ];\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }];\r\n  expanded: any = {};\r\n  @ViewChild('expandableTable') table: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    let revenueByDayArray = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (8000 - 4000) + 4000)\r\n    );\r\n    let searchesPerDay = Array.from({ length: 20 }, () =>\r\n      Math.floor(Math.random() * (100000 - 40000) + 40000)\r\n    );\r\n    this.setChartOptions(\r\n      10000,\r\n      100000,\r\n      [\r\n        'Nov 1, Nov 2, Nov 3, Nov 4',\r\n        'Nov 5',\r\n        'Nov 5',\r\n        'Nov 6',\r\n        'Nov 7',\r\n        'Nov 8',\r\n        'Nov 9',\r\n        'Nov 10',\r\n        'Nov 11',\r\n        'Nov 12',\r\n        'Nov 13',\r\n        'Nov 14',\r\n        'Nov 15',\r\n        'Nov 16',\r\n        'Nov 17',\r\n        'Nov 18',\r\n        'Nov 19',\r\n        'Nov 20',\r\n      ],\r\n      revenueByDayArray,\r\n      searchesPerDay\r\n    );\r\n  }\r\n\r\n  public updateReportingFiltering(range) {\r\n    // this.range = range;\r\n    // this.getAllPerionStats(\r\n    //   'manic_perion',\r\n    //   this.range.startDate,\r\n    //   this.range.endDate\r\n    // );\r\n    console.log('Report');\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  setChartOptions(\r\n    maxRevenue,\r\n    maxSearches,\r\n    daysArray,\r\n    revenueByDayArray,\r\n    searchesPerDay\r\n  ) {\r\n    this.chartDom = document.getElementById('main')!;\r\n    this.myChart = echarts.init(this.chartDom);\r\n\r\n    this.option = {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          crossStyle: {\r\n            color: '#999',\r\n          },\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          dataView: { show: true, readOnly: false },\r\n          magicType: { show: true, type: ['line', 'bar'] },\r\n          restore: { show: true },\r\n          saveAsImage: { show: true },\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['Revenue', 'Searches'],\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: daysArray,\r\n          axisPointer: {\r\n            type: 'shadow',\r\n          },\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          name: 'Revenue',\r\n          min: 0,\r\n          max: maxRevenue,\r\n          interval: 25000,\r\n          axisLabel: {\r\n            formatter: '${value}',\r\n          },\r\n        },\r\n        {\r\n          type: 'value',\r\n          name: 'Searches',\r\n          min: 0,\r\n          max: maxSearches,\r\n          interval: 100000,\r\n          axisLabel: {\r\n            formatter: '{value}',\r\n          },\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'Revenue',\r\n          type: 'bar',\r\n          data: revenueByDayArray,\r\n        },\r\n        {\r\n          name: 'Searches',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: searchesPerDay,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.option && this.myChart.setOption(this.option);\r\n  }\r\n}\r\n","<app-reporting-filtering\r\n  (onDatesPicked)=\"updateReportingFiltering($event)\"\r\n></app-reporting-filtering>\r\n\r\n<div id=\"main\" style=\"width: 100%; height: 300px\"></div>\r\n\r\n<ngx-datatable\r\n  #expandableTable\r\n  class=\"material fullscreen expandable\"\r\n  style=\"top: 52px\"\r\n  [columnMode]=\"'force'\"\r\n  [headerHeight]=\"50\"\r\n  [footerHeight]=\"0\"\r\n  [rowHeight]=\"50\"\r\n  [scrollbarV]=\"true\"\r\n  [scrollbarH]=\"true\"\r\n  [rows]=\"rows\"\r\n>\r\n  <!-- Row Detail Template -->\r\n  <ngx-datatable-row-detail\r\n    [rowHeight]=\"100\"\r\n    #myDetailRow\r\n    (toggle)=\"onDetailToggle($event)\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-row-detail-template\r\n    >\r\n      <div style=\"padding-left: 35px\">\r\n        <div><strong>Address</strong></div>\r\n        <div>Test</div>\r\n      </div>\r\n    </ng-template>\r\n  </ngx-datatable-row-detail>\r\n  <!-- Column Templates -->\r\n  <ngx-datatable-column\r\n    [width]=\"50\"\r\n    [resizeable]=\"false\"\r\n    [sortable]=\"false\"\r\n    [draggable]=\"false\"\r\n    [canAutoResize]=\"false\"\r\n  >\r\n    <ng-template\r\n      let-row=\"row\"\r\n      let-expanded=\"expanded\"\r\n      ngx-datatable-cell-template\r\n    >\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        [class.datatable-icon-right]=\"!expanded\"\r\n        [class.datatable-icon-down]=\"expanded\"\r\n        title=\"Expand/Collapse Row\"\r\n        (click)=\"toggleExpandRow(row)\"\r\n      >\r\n      </a>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"name\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Publisher\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- PUBLISHER NAME -->\r\n  <ngx-datatable-column name=\"tag\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Tag\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- TOTAL SEARCHES -->\r\n  <ngx-datatable-column name=\"totalSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Total Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- MONETIZED SEARCHES -->\r\n  <ngx-datatable-column name=\"monetizedSearches\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Monetized Searches\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CLICKS -->\r\n  <ngx-datatable-column name=\"clicks\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Clicks\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | number }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- CTR -->\r\n  <ngx-datatable-column name=\"CTR\">\r\n    <ng-template\r\n      let-column=\"column\"\r\n      let-sort=\"sortFn\"\r\n      ngx-datatable-header-template\r\n    >\r\n      <span>{{ column.name }}</span>\r\n    </ng-template>\r\n    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong\r\n        [innerHTML]=\"row['clicks'] / row['totalSearches'] | percent: '2.2-2'\"\r\n      ></strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n\r\n  <!-- REVENUE -->\r\n  <ngx-datatable-column name=\"revenue\">\r\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n      Revenue\r\n    </ng-template>\r\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n      <strong>{{ value | currency: 'USD' }}</strong>\r\n    </ng-template>\r\n  </ngx-datatable-column>\r\n</ngx-datatable>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-verizon-direct',\n  templateUrl: './verizon-direct.component.html',\n  styleUrls: ['./verizon-direct.component.scss']\n})\nexport class VerizonDirectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>verizon-direct works!</p>\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\nconst API_MANUAL_UPDATE_URL = `${environment.apiUrl}/stats/admin/manual-update`;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class ManualUpdateService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    updateManualStats(updateData: any): Observable<any> {\r\n        const { company , reportType, startDate, endDate } = updateData;\r\n        var data = {\r\n            \"company\": company,\r\n            \"reportType\": reportType,\r\n            'startDate': startDate,\r\n            'endDate': endDate\r\n        }\r\n        return this.http.put<any>(API_MANUAL_UPDATE_URL + '/stat-update', data);\r\n      }\r\n    updateManualSplit(updateData: any): Observable<any> {\r\n        const { company , tag, startDate, endDate } = updateData;\r\n        var data = {\r\n            \"company\": company,\r\n            \"tag\": tag,\r\n            'startDate': startDate,\r\n            'endDate': endDate\r\n        }\r\n        return this.http.put<any>(API_MANUAL_UPDATE_URL + '/split-update', data);\r\n      }\r\n}"]}