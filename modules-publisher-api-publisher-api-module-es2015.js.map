{"version":3,"sources":["./src/app/modules/publisher-api/publisher-api-routing.module.ts","./src/app/modules/publisher-api/publisher-api.component.ts","./src/app/modules/publisher-api/publisher-api.component.html","./src/app/modules/publisher-api/publisher-api.module.ts","./src/app/modules/publisher-api/tag-api/tag-api.component.ts","./src/app/modules/publisher-api/tag-api/tag-api.component.html","./src/app/modules/tag-management/tag-management.service.ts","./src/app/shared/service/admin-stats/publisher-api.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACW;AACJ;;;AAE9D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8EAAqB;QAChC,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,0BAA0B;gBAChC,SAAS,EAAE,0EAAe;gBAC1B,SAAS,EAAE,MAAM;aAClB;YAED,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;YAC/C,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;SAClD;KACF;CACF,CAAC;AAMK,MAAM,yBAAyB;;wGAAzB,yBAAyB;4KAAzB,yBAAyB,kBAH3B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,yBAAyB,uFAF1B,4DAAY;6FAEX,yBAAyB;cAJrC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,qBAAqB;IAEhC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0FALU,qBAAqB;qGAArB,qBAAqB;QCPlC,2EAA+B;;6FDOlB,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAC2C;AAET;AACT;AACJ;AACf;AACqB;AACP;;AAetD,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,mBAHlB,CAAC,wDAAQ,EAAE,2DAAW,EAAE,4DAAY,CAAC,YAPvC;YACP,4DAAY;YACZ,4DAAY;YACZ,uFAAyB;YACzB,iFAAY;YACZ,0EAAkB;SACnB;mIAIU,kBAAkB,mBAXd,8EAAqB,EAAE,0EAAe,aAEnD,4DAAY;QACZ,4DAAY;QACZ,uFAAyB;QACzB,iFAAY;QACZ,0EAAkB;6FAKT,kBAAkB;cAZ9B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,8EAAqB,EAAE,0EAAe,CAAC;gBACtD,OAAO,EAAE;oBACP,4DAAY;oBACZ,4DAAY;oBACZ,uFAAyB;oBACzB,iFAAY;oBACZ,0EAAkB;iBACnB;gBACD,SAAS,EAAE,CAAC,wDAAQ,EAAE,2DAAW,EAAE,4DAAY,CAAC;gBAChD,eAAe,EAAE,EAAE;aACpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBsF;;;;;;;;;;;;;ICEvF,uGAAyH;;;IAAhE,uFAAuB;;;IAiB1E,iEACF;;;IAEE,yEAAQ;IAAA,uDAAkB;;IAAA,4DAAS;;;IAA3B,0DAAkB;IAAlB,2IAAkB;;;IAO1B,kEACF;;;IAEE,yEAAQ;IAAA,uDAAW;IAAA,4DAAS;;;IAApB,0DAAW;IAAX,0EAAW;;;IAOnB,mEACF;;;IAEE,yEAAQ;IAAA,uDAAoB;;IAAA,4DAAS;;;IAA7B,0DAAoB;IAApB,2IAAoB;;;IAO5B,qEACF;;;IAEE,yEAAQ;IAAA,uDAAW;IAAA,4DAAS;;;IAApB,0DAAW;IAAX,0EAAW;;;IAOnB,oEACF;;;IAEE,yEAAQ;IAAA,uDAAW;IAAA,4DAAS;;;IAApB,0DAAW;IAAX,0EAAW;;;IAOnB,gEACF;;;IAEE,yEAAQ;IAAA,uDAAwD;;;IAAA,4DAAS;;;IAAjE,0DAAwD;IAAxD,+NAAwD;;;IAOhE,gEACF;;;IAEE,yEAAQ;IAAA,uDAAwD;;;IAAA,4DAAS;;;IAAjE,0DAAwD;IAAxD,mOAAwD;;;IAOhE,oEACF;;;IAEE,yEAAQ;IAAA,uDAA6B;;IAAA,4DAAS;;;IAAtC,0DAA6B;IAA7B,kJAA6B;;AD/EpC,MAAM,eAAe;IAa1B,YACU,KAAqB,EACrB,GAAsB,EACtB,WAAyB,EACzB,mBAAwC,EACxC,iBAAoC,EACpC,QAAkB,EAClB,YAA0B,EAC1B,WAAwB,EACxB,oBAA0C;QAR1C,UAAK,GAAL,KAAK,CAAgB;QACrB,QAAG,GAAH,GAAG,CAAmB;QACtB,gBAAW,GAAX,WAAW,CAAc;QACzB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,aAAQ,GAAR,QAAQ,CAAU;QAClB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,yBAAoB,GAApB,oBAAoB,CAAsB;QApBpD,qBAAgB,GAAG,IAAI,CAAC;QAIxB,aAAQ,GAAQ,EAAE,CAAC;QACnB,UAAK,GAAG;YACN,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,EAAE;SACZ,CAAC;QAcA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kCAAkC,EAAE,CAAC;IACnE,CAAC;IAEK,eAAe;;YACnB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAM,WAAW,EAAC,EAAE,CAAC;gBAC/C,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC;gBACpC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC;gBACtC,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAC/D,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACnB,IAAI,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAClJ,IAAI,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC/I,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAC9B,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;YAC1B,CAAC,EAAC,CAAC;QACL,CAAC;KAAA;IAED,iBAAiB,CAAC,EAAO;QACvB,OAAO,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;YAC3E,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACjB,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;IACJ,CAAC;IAEK,eAAe,CAAC,OAAY,EAAE,MAAW,EAAE,KAAU,EAAE,SAAc,EAAE,OAAY;;YACvF,IAAI;gBACF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;gBAE7H,IAAI,WAAW,GAAG,EAAE,CAAC;gBACrB,IAAI,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;oBAC9C,IAAI,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC;oBACjB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE;wBACrB,WAAW,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,qBAAqB;wBAC9D,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC1B;yBAAM;wBACL,WAAW,CAAC,GAAG,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBAClD,IAAI,CAAC,CAAC,OAAO,EAAE;4BACb,WAAW,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;yBACnD;qBACF;oBACD,OAAO,CAAC,CAAC;gBACX,CAAC,EAAE,EAAE,CAAC,CAAC;gBAEP,IAAI,gBAAgB,GAAG,EAAE,CAAC;gBAC1B,IAAI,yBAAyB,GAAG,EAAE,CAAC;gBACnC,IAAI,iBAAiB,GAAG,EAAE,CAAC;gBAC3B,IAAI,iBAAiB,GAAG,EAAE,CAAC;gBAC3B,IAAI,cAAc,GAAG,EAAE,CAAC;gBACxB,KAAK,IAAI,MAAM,IAAI,WAAW,EAAE;oBAC9B,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACzB,yBAAyB,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBAC/C,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBACpC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;iBACzC;gBACD,cAAc,CAAC,eAAe,CAAC,GAAG,gBAAgB,CAAC;gBACnD,cAAc,CAAC,wBAAwB,CAAC,GAAG,yBAAyB,CAAC;gBACrE,cAAc,CAAC,gBAAgB,CAAC,GAAG,iBAAiB,CAAC;gBACrD,cAAc,CAAC,gBAAgB,CAAC,GAAG,iBAAiB,CAAC;gBACrD,OAAO,cAAc,CAAC;aACvB;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,KAAK,CAAC;aACd;QAEH,CAAC;KAAA;IAED,WAAW;QACT,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjC,IAAI,IAAI,GAAG;gBACT,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,aAAa,CAAC;gBAC1D,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,MAAM,EAAE,OAAO,CAAC,MAAM;gBACtB,QAAQ,EAAE,OAAO,CAAC,QAAQ;gBAC1B,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/D,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC;gBACrD,OAAO,EAAE,OAAO,CAAC,OAAO;aACzB,CAAC;YACF,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACtB;QACD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;IAChM,CAAC;IAEY,wBAAwB,CAAC,KAA8C;;YAClF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,UAAU,EAAE;gBACvC,IAAI,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAClJ,IAAI,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC/I,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAC9B,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;aACzB;QACH,CAAC;KAAA;IAED,8CAA8C;IAC9C,kCAAkC;QAChC,OAAO,IAAI,CAAC,WAAW,CAAC,kCAAkC,EAAE,CAAC;IAC/D,CAAC;IAEK,mBAAmB,CAAC,OAAY,EAAE,MAAc,EAAE,KAAa,EAAE,SAAiB,EAAE,OAAe;;YACvG,IAAI;gBACF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;gBAC7H,OAAO,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;aACzD;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,KAAK,CAAC;aACd;QACH,CAAC;KAAA;IAED,eAAe,CAAC,GAAG;QACjB,2CAA2C;QAC3C,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC;IAED,cAAc,CAAC,KAAK;QAClB,wCAAwC;IAC1C,CAAC;;8EA5IU,eAAe;+FAAf,eAAe;;;;;;QCd5B,6FAAsG;QAA7E,8KAAiB,oCAAgC,IAAC;QAAC,4DAA0B;QAGtG,+KAAiF;QAEjF,yEACI;QAAA,4EAGE;QAFA,uIAAS,iBAAa,IAAC;QAEvB,yEACF;QAAA,4DAAS;QACb,4DAAM;QAEN,sFAIE;QACA,0FACE;QAAA,2HACE;QAEF,2HACE;QAEJ,4DAAuB;QAGvB,2FACE;QAAA,6HACE;QAEF,6HACE;QAEJ,4DAAuB;QAGvB,4FACE;QAAA,6HACE;QAEF,6HACE;QAEJ,4DAAuB;QAGvB,4FACE;QAAA,6HACE;QAEF,6HACE;QAEJ,4DAAuB;QAGvB,4FACE;QAAA,6HACE;QAEF,6HACE;QAEJ,4DAAuB;QAGvB,4FACE;QAAA,6HACE;QAEF,6HACE;QAEJ,4DAAuB;QAGvB,4FACE;QAAA,6HACE;QAEF,6HACE;QAEJ,4DAAuB;QAGvB,4FACE;QAAA,6HACE;QAEF,6HACE;QAEJ,4DAAuB;QACzB,4DAAgB;;QA7FuB,0DAAiB;QAAjB,+EAAiB;QAUgD,0DAAqC;QAArC,kGAAqC;;6FDChI,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;gzBAE+B,KAAK;kBAAlC,uDAAS;mBAAC,iBAAiB;;;;;;;;;;;;;;AEf9B;AAAA;AAAA;AAAA;AAA2C;;;AASpC,MAAM,oBAAoB;IAE/B,YACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,yBAAyB;IACzB,uBAAuB;QACrB,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;IACtC,CAAC;IACD,yBAAyB;IACzB,wBAAwB;QACtB,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IACvC,CAAC;IACD,MAAM,CAAC,GAAiB;QACtB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IAED,eAAe,CAAC,KAAa,EAAE,SAAiB,EAAE,WAAmB;QACnE,OAAO,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,KAAK,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;IACzE,CAAC;IACD,UAAU;QACR,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IACvC,CAAC;IACD,cAAc,CAAC,UAAe;QAC5B,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;IACrD,CAAC;IAED,SAAS,CAAC,MAAW;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAED,SAAS,CAAC,GAAiB;QACzB,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC;IACD,YAAY,CAAC,GAAiB;QAC5B,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC;IACD,WAAW,CAAC,QAA2B;QACrC,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;IAC5C,CAAC;IACD,cAAc,CAAC,WAAgB;QAC7B,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IACtD,CAAC;IACD,cAAc,CAAC,QAA2B;QACxC,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;;wFAjDU,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB,mBAFnB,MAAM;6FAEP,oBAAoB;cAHhC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEwB;;;AAGnE,MAAM,iBAAiB,GAAG,GAAG,qEAAW,CAAC,MAAM,gBAAgB,CAAC;AAKzD,MAAM,mBAAmB;IAE9B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,oBAAoB,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,iBAAiB,GAAG,GAAG,EAAE;YACjD,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE;SACjG,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,iBAAiB,GAAG,kBAAkB,EAAE;YAChE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE;SACrE,CAAC,CAAC;IACL,CAAC;;sFAdU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"modules-publisher-api-publisher-api-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PublisherApiComponent } from './publisher-api.component';\nimport { TagApiComponent } from './tag-api/tag-api.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PublisherApiComponent,\n    children: [\n      {\n        path: ':fullname/:apiKey/:tagId',\n        component: TagApiComponent,\n        pathMatch: 'full',\n      },\n\n      { path: '', redirectTo: '', pathMatch: 'full' },\n      { path: '**', redirectTo: '', pathMatch: 'full' },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PublisherApiRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-publisher-api',\n  templateUrl: './publisher-api.component.html',\n  styleUrls: ['./publisher-api.component.scss']\n})\nexport class PublisherApiComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule, CurrencyPipe, DatePipe, PercentPipe } from '@angular/common';\n\nimport { PublisherApiRoutingModule } from './publisher-api-routing.module';\nimport { PublisherApiComponent } from './publisher-api.component';\nimport { TagApiComponent } from './tag-api/tag-api.component';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\n\n@NgModule({\n  declarations: [PublisherApiComponent, TagApiComponent],\n  imports: [\n    RouterModule,\n    CommonModule,\n    PublisherApiRoutingModule,\n    SharedModule,\n    NgxDatatableModule\n  ],\n  providers: [DatePipe, PercentPipe, CurrencyPipe],\n  entryComponents: [],\n})\nexport class PublisherApiModule { }\n","import { CurrencyPipe, DatePipe, PercentPipe } from '@angular/common';\nimport { AfterViewInit, ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PublisherChartDataInterface } from 'src/app/shared/models/publisher.charData.interface';\nimport { PublisherAPIService } from 'src/app/shared/service/admin-stats/publisher-api.service';\nimport { ExportDataService } from 'src/app/shared/service/export-data.service';\nimport { UsersService } from 'src/app/shared/service/users.service';\nimport { TagManagementService } from '../../tag-management/tag-management.service';\n\n@Component({\n  selector: 'app-tag-api',\n  templateUrl: './tag-api.component.html',\n  styleUrls: ['./tag-api.component.scss']\n})\nexport class TagApiComponent implements AfterViewInit {\n  @ViewChild('expandableTable') table: any;\n  loadingIndicator = true;\n  paramTagId: string;\n  paramApiKey: string;\n  selectedCompany: any;\n  statData: any = [];\n  range = {\n    startDate: '',\n    endDate: '',\n  };\n  tagRows: any;\n  chartData: PublisherChartDataInterface;\n  constructor(\n    private route: ActivatedRoute,\n    private cdr: ChangeDetectorRef,\n    private userService: UsersService,\n    private publisherApiService: PublisherAPIService,\n    private exportDataService: ExportDataService,\n    private datePipe: DatePipe,\n    private currencyPipe: CurrencyPipe,\n    private percentPipe: PercentPipe,\n    private tagManagementService: TagManagementService,\n  ) { \n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\n  }\n\n  async ngAfterViewInit() {\n    this.route.params.subscribe(async routeParams => {\n      this.paramTagId = routeParams.tagId;\n      this.paramApiKey = routeParams.apiKey;\n      this.tagRows = await this.getTagInformation(routeParams.tagId);\n      this.statData = [];\n      this.statData = await this.getPublisherAPIData(this.selectedCompany, this.paramApiKey, this.paramTagId, this.range.startDate, this.range.endDate);\n      this.chartData = await this.getChartMetrics(this.selectedCompany, this.paramApiKey, this.paramTagId, this.range.startDate, this.range.endDate);\n      this.loadingIndicator = false;\n      this.cdr.markForCheck();\n    });\n  }\n\n  getTagInformation(id: any) {\n    return this.tagManagementService.getOneTag(id).toPromise().then((response) => {\n      return response;\n    }).catch((error) => {\n      return error;\n    })\n  }\n\n  async getChartMetrics(company: any, apiKey: any, tagId: any, startDate: any, endDate: any) {\n    try {\n      const response = await this.publisherApiService.getPublisherAPIStats(company, apiKey, tagId, startDate, endDate).toPromise();\n\n      var helperChart = {};\n      var resultChart = response.reduce(function (r, o) {\n        var key = o.date;\n        if (!helperChart[key]) {\n          helperChart[key] = Object.assign({}, o); // create a copy of o\n          r.push(helperChart[key]);\n        } else {\n          helperChart[key].searches += parseInt(o.searches);\n          if (o.revenue) {\n            helperChart[key].revenue += parseFloat(o.revenue);\n          }\n        }\n        return r;\n      }, []);\n      \n      var revenuePerDayVal = [];\n      var publisherRevenuePerDayVal = [];\n      var datesOfRevenueVal = [];\n      var searchesPerDayVal = [];\n      var chartDataValue = {};\n      for (var resVal of resultChart) {\n        revenuePerDayVal.push(0);\n        publisherRevenuePerDayVal.push(resVal.revenue);\n        datesOfRevenueVal.push(resVal.date);\n        searchesPerDayVal.push(resVal.searches);\n      }\n      chartDataValue['revenuePerDay'] = revenuePerDayVal;\n      chartDataValue['publisherRevenuePerDay'] = publisherRevenuePerDayVal;\n      chartDataValue['datesOfRevenue'] = datesOfRevenueVal;\n      chartDataValue['searchesPerDay'] = searchesPerDayVal;\n      return chartDataValue;\n    } catch (error) {\n      return error;\n    }\n\n  }\n\n  exportToCsv(): void {\n    let exportCsv = [];\n    for (var statOne of this.statData) {\n      let stat = {\n        date: this.datePipe.transform(statOne.date, \"dd MMM yyyy\"),\n        subid: statOne.subid,\n        country: statOne.country,\n        clicks: statOne.clicks,\n        searches: statOne.searches,\n        cpc: this.currencyPipe.transform(statOne.cpc ? statOne.cpc : 0),\n        ctr: this.percentPipe.transform(statOne.ctr, \"1.2-2\"),\n        revenue: statOne.revenue,\n      };\n      exportCsv.push(stat);\n    }\n    this.exportDataService.exportToCsv(exportCsv, this.tagRows.nickName ? this.tagRows.nickName : this.tagRows.name, ['date', 'subid', 'country', 'clicks', 'searches', 'cpc', 'ctr', 'revenue']);\n  }\n\n  public async updateReportingFiltering(range: { startDate: string; endDate: string; }) {\n    this.range = range;\n    this.loadingIndicator = true;\n    this.statData = [];\n    if (this.paramApiKey && this.paramTagId) {\n      this.statData = await this.getPublisherAPIData(this.selectedCompany, this.paramApiKey, this.paramTagId, this.range.startDate, this.range.endDate);\n      this.chartData = await this.getChartMetrics(this.selectedCompany, this.paramApiKey, this.paramTagId, this.range.startDate, this.range.endDate);\n      this.loadingIndicator = false;\n      this.cdr.markForCheck();\n    }\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  async getPublisherAPIData(company: any, apiKey: string, tagId: string, startDate: string, endDate: string) {\n    try {\n      const response = await this.publisherApiService.getPublisherAPIStats(company, apiKey, tagId, startDate, endDate).toPromise();\n      return response.slice().sort((a, b) => b.date - a.date);\n    } catch (error) {\n      return error;\n    }\n  }\n\n  toggleExpandRow(row) {\n    // console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event) {\n    // console.log('Detail Toggled', event);\n  }\n\n}\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\n\n<!-- Chart Part-->\n<app-reporting-publisher-revenue-chart *ngIf=\"chartData\" [chartData]=\"chartData\"></app-reporting-publisher-revenue-chart>\n\n<div class=\"row py-6\">\n    <button class=\"btn btn-sm btn-primary mx-3\"\n      (click)=\"exportToCsv()\"\n    >\n      Export Stats\n    </button>\n</div>\n\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 10px; height: 500px\" [loadingIndicator]=\"loadingIndicator\"\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [scrollbarH]=\"true\"\n  [rows]=\"statData\">\n  \n  <!-- Date -->\n  <ngx-datatable-column name=\"date\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Date\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | date }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SubID -->\n  <ngx-datatable-column name=\"subid\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Subid\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Searches -->\n  <ngx-datatable-column name=\"clicks\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Clicks\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Searches -->\n  <ngx-datatable-column name=\"searches\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Searches\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Country -->\n  <ngx-datatable-column name=\"country\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Country\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- CPC -->\n  <ngx-datatable-column name=\"cpc\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      CPC\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ (value | currency: 'USD') || (0 | currency: 'USD') }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- CTR -->\n  <ngx-datatable-column name=\"ctr\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      CTR\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ (value | percent:'1.2-2') || (0 | percent:'1.2-2') }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- REVENUE -->\n  <ngx-datatable-column name=\"revenue\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Revenue\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | currency: 'USD' }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n</ngx-datatable>","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { TagsService } from './../../shared/service/tags.service';\r\nimport { TagInterface } from './../../shared/models/tag.interface';\r\nimport { TemplateInterface } from './../../shared/models/template.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TagManagementService {\r\n\r\n  constructor(\r\n    private tagsService: TagsService,\r\n  ) { }\r\n\r\n  // Get all Chrome objects\r\n  getChromeBrowserVersion() {\r\n    return this.tagsService.getChrome();\r\n  }\r\n  // Get all Chrome objects\r\n  getFirefoxBrowserVersion() {\r\n    return this.tagsService.getFirefox();\r\n  }\r\n  addTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.add(tag);\r\n  }\r\n\r\n  addPublisherTag(tagId: string, companyId: string, publisherId: string) {\r\n    return this.tagsService.addPublisherTag(tagId, companyId, publisherId);\r\n  }\r\n  getAllTags(): Observable<TagInterface[]> {\r\n    return this.tagsService.getAllTags();\r\n  }\r\n  getCompanyTags(companyKey: any) {\r\n    return this.tagsService.getCompanyTags(companyKey);\r\n  }\r\n  \r\n  deleteTag(tagKey: any) {\r\n    return this.tagsService.deleteTag(tagKey);\r\n  }\r\n\r\n  getOneTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.getOneTag(tag);\r\n  }\r\n  updateOneTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.updateOneTag(tag);\r\n  }\r\n  addTemplate(template: TemplateInterface): Observable<TemplateInterface> {\r\n    return this.tagsService.addTemplate(template);\r\n  }\r\n  getAllTemplates(): Observable<TemplateInterface[]> {\r\n    return this.tagsService.getAllTemplates();\r\n  }\r\n  deleteTemplate(templateKey: any) {\r\n    return this.tagsService.deleteTemplate(templateKey);\r\n  }\r\n  getOneTemplate(template: TemplateInterface): Observable<TemplateInterface> {\r\n    return this.tagsService.getOneTemplate(template);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst API_PUBLISHER_URL = `${environment.apiUrl}/publisher-api`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PublisherAPIService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPublisherAPIStats(company, apiKey, tagId, startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_PUBLISHER_URL + '/', {\r\n      params: { company: company, apiKey: apiKey, tag: tagId, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getSummaryMetrics(company, startDate, endDate) {\r\n    return this.http.get<any>(API_PUBLISHER_URL + '/summary_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}