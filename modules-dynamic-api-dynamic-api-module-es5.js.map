{"version":3,"sources":["webpack:///src/app/modules/dynamic-api/all-dynamic-api/all-dynamic-api.component.ts","webpack:///src/app/modules/dynamic-api/all-dynamic-api/all-dynamic-api.component.html","webpack:///src/app/modules/dynamic-api/dynamic-api-create/dynamic-api-create.component.ts","webpack:///src/app/modules/dynamic-api/dynamic-api-create/dynamic-api-create.component.html","webpack:///src/app/modules/dynamic-api/dynamic-api-routing.module.ts","webpack:///src/app/modules/dynamic-api/dynamic-api-update/dynamic-api-update.component.ts","webpack:///src/app/modules/dynamic-api/dynamic-api-update/dynamic-api-update.component.html","webpack:///src/app/modules/dynamic-api/dynamic-api.module.ts","webpack:///src/app/shared/service/dynamicApi.service.ts"],"names":["AllDynamicAPIComponent","cdr","router","userService","notification","clipboardService","dynamicAPIService","loadingIndicator","hidden","localStorageCompany","getSelectedCompanyFromLocalStorage","showError","getDynamicApis","getDynamicAPIs","subscribe","res","rows","detectChanges","err","error","navigateByUrl","dynamicAPIId","id","window","confirm","deleteDynamicAPI","data","showSuccess","console","log","row","apiId","urlKey","copy","dynamicAPILink","startDate","endDate","copyFromContent","setTimeout","selector","templateUrl","styleUrls","DynamicApiCreateComponent","fb","options","label","value","initResponseFields","originalApi","required","returnApi","dynamicAPIFG","group","apiName","advertiserProvider","dynamicApiUri","pattern","responseFields","array","endDateValidator","filteredCondition","subid","disabled","split","reportFormat","map","item","push","control","Date","parent","get","invalidRange","event","subidControl","enable","disable","i","removeAt","newResponseFields","markAllAsTouched","valid","formattedStartDate","startDateControl","toISOString","slice","formattedEndDate","endDateControl","patchValue","createDynamicAPI","navigate","JSON","stringify","controls","formGroupDirective","routes","path","component","children","pathMatch","redirectTo","DynamicAPIRoutingModule","forChild","imports","exports","DynamicApiUpdateComponent","route","dynamicAPIEditFG","snapshot","params","getOneDynamicAPI","dyanmicAPIData","subidKeyControl","updateDynamicAPI","DynamicAPIModule","forRoot","declarations","API_DYNAMICAPI_URL","apiUrl","DynamicAPIService","http","dynamicAPI","post","put","_key","providedIn"],"mappings":"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","file":"modules-dynamic-api-dynamic-api-module-es5.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ClipboardService } from 'ngx-clipboard';\nimport { DynamicAPIInterface } from 'src/app/shared/models/dynamicAPI.interface';\nimport { DynamicAPIService } from 'src/app/shared/service/dynamicApi.service';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\nimport { UsersService } from 'src/app/shared/service/users.service';\n\n@Component({\n  selector: 'app-all-dynamic-api',\n  templateUrl: './all-dynamic-api.component.html',\n  styleUrls: ['./all-dynamic-api.component.scss']\n})\nexport class AllDynamicAPIComponent implements OnInit {\n  loadingIndicator = true;\n  rows: Array<DynamicAPIInterface>;\n  hidden = false;\n  //Local Storage Company\n  localStorageCompany: any;\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private userService: UsersService,\n    private notification: NotificationService,\n    private clipboardService: ClipboardService,\n    private dynamicAPIService: DynamicAPIService\n  ) { }\n\n  ngOnInit(): void {\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\n\n    //access page part\n    if (!this.localStorageCompany) {\n      this.hidden = true;\n      this.notification.showError(\"Please select your Company!\", \"\")\n    } else {\n      this.hidden = false;\n    }\n\n    this.getDynamicApis();\n  }\n\n  getDynamicApis() {\n    this.dynamicAPIService.getDynamicAPIs().subscribe((res) => {\n      this.rows = res;\n      this.loadingIndicator = false;\n      this.cdr.detectChanges();\n    }, (err) => {\n      this.notification.showError(err.error, \"\");\n    });\n  }\n\n  handleAddDynamicAPI() {\n    this.router.navigateByUrl('/dynamicAPI/create');\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  editDynamicAPI(dynamicAPIId: string) {\n    this.router.navigateByUrl('/dynamicAPI/edit/' + dynamicAPIId);\n  }\n\n  deleteDynamicAPI(id: any) {\n    if(window.confirm('Do you want to go ahead?')) {\n      this.dynamicAPIService.deleteDynamicAPI(id).subscribe((data) => {\n        this.getDynamicApis();\n        this.notification.showSuccess('Successfully deleted Dynamic Api.', \"\");\n      }, (error) => {\n        console.log(error)\n        this.notification.showError(`Error deleting deleteDynamicAPI: ${error}`, \"\");\n      });\n    } \n  }\n\n  copyToDynamicAPIClipboard(row: any) {\n    const apiId = row.urlKey;\n    row.copy = true;\n    const dynamicAPILink = `http://api.nextsys.io/api/dynamicAPI/uri/${apiId}?startDate=${row.startDate}&endDate=${row.endDate}`;\n    \n    this.clipboardService.copyFromContent(dynamicAPILink);\n    setTimeout(()=>{    \n      row.copy = false;\n      this.cdr.detectChanges();\n    }, 3000);\n  }\n\n}\n","<div class=\"row\" *ngIf=\"!hidden\">\n    <div class=\"col-xl-12\">\n        <div class=\"card card-custom example example-compact gutter-b\">\n            <div class=\"card-header\">\n                <div class=\"card-title\">\n                    <h3 class=\"card-label\">Dynamic API</h3>\n                </div>\n            </div>\n            <div class=\"card-body\">\n                <div class=\"row pb-3\">\n                    <div class=\"col-md-12\">\n                        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"handleAddDynamicAPI()\">\n                            Create\n                        </button>\n                    </div>\n                </div>\n                <ngx-datatable class=\"material fullscreen\" [rows]=\"rows\" [columnMode]=\"'force'\"\n                    [loadingIndicator]=\"loadingIndicator\" [footerHeight]=\"50\" [rowHeight]=\"50\" [scrollbarH]=\"true\"\n                    [headerHeight]=\"50\" [limit]=\"10\">\n                    <ngx-datatable-column name=\"apiName\" [width]=\"50\">\n                        <ng-template let-column=\"column\" ngx-datatable-header-template>\n                            API Name\n                        </ng-template>\n                        <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                            {{ value }}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"advertiserProvider\" [width]=\"50\">\n                        <ng-template let-column=\"column\" ngx-datatable-header-template>\n                            Advertiser Provider\n                        </ng-template>\n                        <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                            {{ value }}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"dynamicApiUri\" [width]=\"150\">\n                        <ng-template let-column=\"column\" ngx-datatable-header-template>\n                            DynamicAPIUri\n                        </ng-template>\n                        <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                            {{ value }}\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                    <ngx-datatable-column name=\"startDate\" [width]=\"50\">\n                        <ng-template let-column=\"column\" ngx-datatable-header-template>\n                            Start Date\n                        </ng-template>\n                        <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                            {{ value }}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"endDate\" [width]=\"50\">\n                        <ng-template let-column=\"column\" ngx-datatable-header-template>\n                            End Date\n                        </ng-template>\n                        <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                            {{ value }}\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                    <ngx-datatable-column name=\"id\" [width]=\"100\">\n                        <ng-template ngx-datatable-header-template>Action</ng-template>\n                        <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                            <a title=\"Edit Sheet\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-2\"\n                                (click)=\"editDynamicAPI(row._key)\">\n                                <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\n                                    class=\"svg-icon svg-icon-md svg-icon-primary\">\n                                </span>\n                            </a>\n\n                            <a title=\"Delete Sheet\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm mx-2\"\n                                (click)=\"deleteDynamicAPI(row._key)\">\n                                <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"false\"\n                                    class=\"svg-icon svg-icon-md svg-icon-danger\">\n                                </span>\n                            </a>\n\n                            <a title=\"COPY Dynamic API\" class=\"btn btn-icon btn-light btn-hover-info btn-sm mx-2\"\n                                (click)=\"copyToDynamicAPIClipboard(row)\">\n                                <span\n                                    [inlineSVG]=\"row.copy ? './assets/media/svg/icons/General/copied.svg' : './assets/media/svg/icons/General/Clipboard.svg'\"\n                                    cacheSVG=\"false\" class=\"svg-icon svg-icon-md svg-icon-info\">\n                                </span>\n                            </a>\n                        </ng-template>\n                    </ngx-datatable-column>\n                </ngx-datatable>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- begin:: Error -->\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\n    display: block;\n    min-height: 80vh;\n    font-size: 14px;\n    line-height: 1.4;\n    color: #0e1724;\">\n    <!--begin::Content-->\n    <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\n        <p class=\"display-4 font-weight-boldest text-white mb-12\">\n            How did you get here\n        </p>\n        <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\n            Sorry you can't access the page you're looking for.\n        </p>\n        <p class=\"font-size-h4 line-height-md\">\n            There may be a misspelling in the URL entered,<br />or the page you are\n            looking for may no longer exist.\n        </p>\n    </div>\n    <!--end::Content-->\n</div>\n<!-- end:: Error -->","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DynamicAPIService } from 'src/app/shared/service/dynamicApi.service';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\nimport { UsersService } from 'src/app/shared/service/users.service';\n\n@Component({\n  selector: 'app-dynamic-api-create',\n  templateUrl: './dynamic-api-create.component.html',\n  styleUrls: ['./dynamic-api-create.component.scss']\n})\nexport class DynamicApiCreateComponent implements OnInit {\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\n  dynamicAPIFG: FormGroup;\n  hidden = false;\n  localStorageCompany: any;\n\n  options = [\n    { label: 'One Date', value: 'one' },\n    { label: 'Two Date', value: 'two' },\n  ];\n\n  initResponseFields = [\n    {\n      originalApi: ['', Validators.required],\n      returnApi: ['', Validators.required],\n    },\n  ];\n  startDate: Date;\n  endDate: Date;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private notification: NotificationService,\n    private userService: UsersService,\n    private dynamicAPIService: DynamicAPIService,\n  ) { \n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\n  }\n\n  ngOnInit(): void {\n    if (!this.localStorageCompany) {\n      this.hidden = true;\n      this.notification.showError(\"Please select your Company!\", \"\")\n    } else {\n      this.hidden = false;\n    }\n\n    this.dynamicAPIFG = this.fb.group({\n      apiName: new FormControl('', [Validators.required]),\n      advertiserProvider: new FormControl('', [Validators.required]),\n      dynamicApiUri: new FormControl('', [Validators.required, Validators.pattern(/^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$/)]),\n      responseFields: this.fb.array([]),\n      startDate: new FormControl('', [Validators.required]),\n      endDate: new FormControl('', [Validators.required, this.endDateValidator]),\n      filteredCondition: new FormControl(''),\n      subid: new FormControl({ value: '', disabled: true }),\n      split: new FormControl(''),\n      reportFormat: new FormControl('json'),\n    });\n\n    this.initResponseFields.map((item) => {\n      this.responseFields.push(this.fb.group(item));\n    });\n  }\n\n  get startDateControl() {\n    return this.dynamicAPIFG.get('startDate');\n  }\n\n  get endDateControl() {\n    return this.dynamicAPIFG.get('endDate');\n  }\n\n  endDateValidator(control: AbstractControl) {\n    const startDate = new Date(control.parent?.get('startDate').value);\n    const endDate = new Date(control.value);\n\n    if (startDate && endDate && endDate < startDate) {\n      return { invalidRange: true };\n    }\n\n    return null;\n  }\n\n  onFilteredConditionChange(event: any) {\n    const subidControl = this.dynamicAPIFG.get('subid')\n    if (event.value) {\n      subidControl.enable();\n    } else {\n      subidControl.disable();\n    }\n  }\n\n  removeResponseField(i: number) {\n    this.responseFields.removeAt(i);\n  }\n\n  addResponse(event) {\n    this.responseFields.push(this.newResponseFields());\n  }\n\n  newResponseFields(): FormGroup {\n    return this.fb.group({\n      originalApi: ['', Validators.required],\n      returnApi: ['', Validators.required],\n    })\n  }\n\n  get responseFields() {\n    return this.dynamicAPIFG.controls['responseFields'] as FormArray;\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  submitHandle() {\n    this.dynamicAPIFG.markAllAsTouched();\n    if (this.dynamicAPIFG.valid) {\n      const formattedStartDate = this.startDateControl.value.toISOString().slice(0, 10);\n      const formattedEndDate = this.endDateControl.value.toISOString().slice(0, 10);\n      this.dynamicAPIFG.patchValue({\n        startDate: formattedStartDate,\n        endDate: formattedEndDate\n      });\n      this.dynamicAPIService.createDynamicAPI(this.dynamicAPIFG.value).subscribe(res => {\n        this.notification.showSuccess('Successfully added a new Dynamic API.', \"\");\n        this.router.navigate(['/dynamicAPI/all-dynamic-api']);\n      }, (error) => {\n        this.notification.showError(JSON.stringify(error.error), \"\");\n      });\n    }\n  }\n\n}\n","<form class=\"example-container\" [formGroup]=\"dynamicAPIFG\" (submit)=\"submitHandle()\" *ngIf=\"!hidden\">\n    <div class=\"row\">\n        <div class=\"col-xl-8\">\n            <div class=\"row\">\n                <div class=\"col-xl-12\">\n                    <div class=\"card card-custom example example-compact gutter-b\">\n                        <div class=\"card-header\">\n                            <div class=\"card-title\">\n                                <h3 class=\"card-label\">Create Dynamic API</h3>\n                            </div>\n                        </div>\n                        <div class=\"card-body\">\n                            {{dynamicAPIFG.value | json}}\n                            <div class=\"row py-3\">\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"apiName\" placeholder=\"API Name\" />\n                                        <mat-error *ngIf=\"dynamicAPIFG.get('apiName').errors?.required\">API Name is\n                                            required.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"advertiserProvider\"\n                                            placeholder=\"Advertiser Provider\" />\n                                        <mat-error\n                                            *ngIf=\"dynamicAPIFG.get('advertiserProvider').errors?.required\">Advertiser\n                                            Provider is required.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row py-3\">\n                                <div class=\"col-xl-12\">\n                                    <mat-form-field>\n                                        <input type=\"url\" matInput formControlName=\"dynamicApiUri\"\n                                            placeholder=\"DynamicAPIURI\" />\n                                        <mat-error\n                                            *ngIf=\"dynamicAPIFG.get('dynamicApiUri').invalid && (dynamicAPIFG.get('dynamicApiUri').dirty || dynamicAPIFG.get('dynamicApiUri').touched)\">\n                                            <span\n                                                *ngIf=\"dynamicAPIFG.get('dynamicApiUri').errors?.required\">DynamicAPIURI\n                                                is required.</span>\n                                            <span *ngIf=\"dynamicAPIFG.get('dynamicApiUri').errors?.pattern\">Invalid URL\n                                                format.</span>\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row py-3\">\n                                <div class=\"col-xl-3\">\n                                    <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"addResponse($event)\">\n                                        Add Response Fields\n                                    </button>\n                                </div>\n                            </div>\n                            <div formArrayName=\"responseFields\">\n                                <div class=\"row py-2\" *ngFor=\"let subItem of responseFields.controls; let i=index\"\n                                    [formGroupName]=\"i\">\n                                    <div class=\"col-xl-5\">\n                                        <mat-form-field>\n                                            <input matInput placeholder=\"Original API\" formControlName=\"originalApi\" />\n                                            <mat-error *ngIf=\"subItem.get('originalApi').errors?.required\">\n                                                Original API is required.\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-xl-5\">\n                                        <mat-form-field>\n                                            <input matInput placeholder=\"Return API\" formControlName=\"returnApi\" />\n                                            <mat-error *ngIf=\"subItem.get('returnApi').errors?.required\">\n                                                Return API is required.\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-xl-2\">\n                                        <a title=\"Delete Response Field\"\n                                            class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n                                            (click)=\"removeResponseField(i)\">\n                                            <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\"\n                                                cacheSVG=\"false\" class=\"svg-icon svg-icon-md svg-icon-danger\">\n                                            </span>\n                                        </a>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div class=\"row py-2\">\n                                <div class=\"col-xl-4\">\n                                    <mat-form-field>\n                                        <mat-label>Filtered Condition</mat-label>\n                                        <mat-select matNativeControl formControlName=\"filteredCondition\"\n                                            (selectionChange)=\"onFilteredConditionChange($event)\">\n                                            <mat-option value=\"StartsWith\">StartsWith</mat-option>\n                                            <mat-option value=\"EndsWith\">EndsWith</mat-option>\n                                            <mat-option value=\"Contains\">Contains</mat-option>\n                                            <mat-option value=\"Equal\">Equal</mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-4\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"subid\" placeholder=\"Subid\" />\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-4\">\n                                    <mat-form-field>\n                                        <input type=\"number\" matInput formControlName=\"split\" placeholder=\"Split\" />\n                                    </mat-form-field>\n                                </div>\n                            </div>\n\n                            <div class=\"row py-2\">\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <input matInput [matDatepicker]=\"startDatePicker\" placeholder=\"Start Date\"\n                                            formControlName=\"startDate\">\n                                        <mat-datepicker-toggle matSuffix\n                                            [for]=\"startDatePicker\"></mat-datepicker-toggle>\n                                        <mat-datepicker #startDatePicker></mat-datepicker>\n                                        <mat-error *ngIf=\"startDateControl.hasError('required')\">Start Date is\n                                            required</mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <input matInput [matDatepicker]=\"endDatePicker\" placeholder=\"End Date\"\n                                            formControlName=\"endDate\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\n                                        <mat-datepicker #endDatePicker></mat-datepicker>\n                                        <mat-error *ngIf=\"endDateControl.hasError('required')\">End Date is\n                                            required</mat-error>\n                                        <mat-error *ngIf=\"endDateControl.hasError('invalidRange')\">End Date must be\n                                            greater than Start Date</mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row py-2\">\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <mat-label>Report Format</mat-label>\n                                        <mat-select matNativeControl formControlName=\"reportFormat\">\n                                            <mat-option value=\"json\">JSON</mat-option>\n                                            <mat-option value=\"csv\">CSV</mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row pt-2\">\n                                <div class=\"col-xl-12\">\n                                    <button class=\"save-button\" mat-raised-button color=\"primary\"\n                                        type=\"submit\">Save</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</form>\n<!-- begin:: Error -->\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\n  display: block;\n  min-height: 80vh;\n  font-size: 14px;\n  line-height: 1.4;\n  color: #0e1724;\">\n    <!--begin::Content-->\n    <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\n        <p class=\"display-4 font-weight-boldest text-white mb-12\">\n            How did you get here\n        </p>\n        <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\n            Sorry you can't access the page you're looking for.\n        </p>\n        <p class=\"font-size-h4 line-height-md\">\n            There may be a misspelling in the URL entered,<br />or the page you are\n            looking for may no longer exist.\n        </p>\n    </div>\n    <!--end::Content-->\n</div>\n<!-- end:: Error -->","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllDynamicAPIComponent } from './all-dynamic-api/all-dynamic-api.component';\nimport { DynamicApiCreateComponent } from './dynamic-api-create/dynamic-api-create.component';\nimport { DynamicApiUpdateComponent } from './dynamic-api-update/dynamic-api-update.component';\nimport { DynamicAPIComponent } from './dynamic-api.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DynamicAPIComponent,\n    children: [\n      {\n        path: 'all-dynamic-api',\n        component: AllDynamicAPIComponent,\n      },\n      {\n        path: 'create',\n        component: DynamicApiCreateComponent,\n      },\n      {\n        path: 'edit/:id',\n        component: DynamicApiUpdateComponent,\n        pathMatch: 'full'\n      },\n      { path: '', redirectTo: '', pathMatch: 'full' },\n      { path: '**', redirectTo: '', pathMatch: 'full' },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DynamicAPIRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DynamicAPIInterface } from 'src/app/shared/models/dynamicAPI.interface';\nimport { DynamicAPIService } from 'src/app/shared/service/dynamicApi.service';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\nimport { UsersService } from 'src/app/shared/service/users.service';\n\n@Component({\n  selector: 'app-dynamic-api-update',\n  templateUrl: './dynamic-api-update.component.html',\n  styleUrls: ['./dynamic-api-update.component.scss']\n})\nexport class DynamicApiUpdateComponent implements OnInit {\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\n  dynamicAPIEditFG: FormGroup;\n  hidden = false;\n  localStorageCompany: any;\n  dyanmicAPIData: DynamicAPIInterface;\n  options = [\n    { label: 'One Date', value: 'one' },\n    { label: 'Two Date', value: 'two' },\n  ];\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private notification: NotificationService,\n    private userService: UsersService,\n    private dynamicAPIService: DynamicAPIService,\n  ) { \n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\n  }\n\n  ngOnInit(): void {\n    if (!this.localStorageCompany) {\n      this.hidden = true;\n      this.notification.showError(\"Please select your Company!\", \"\")\n    } else {\n      this.hidden = false;\n    }\n\n    this.dynamicAPIEditFG = this.fb.group({\n      apiName: new FormControl('', [Validators.required]),\n      advertiserProvider: new FormControl('', [Validators.required]),\n      dynamicApiUri: new FormControl('', [Validators.required, Validators.pattern(/^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$/)]),\n      responseFields: this.fb.array([]),\n      startDate: new FormControl('', [Validators.required]),\n      endDate: new FormControl('', [Validators.required, this.endDateValidator]),\n      filteredCondition: new FormControl(''),\n      subid: new FormControl({ value: '', disabled: true }),\n      split: new FormControl(''),\n      reportFormat: new FormControl(''),\n    });\n\n    if (this.route.snapshot.params.id) {\n      this.dynamicAPIService.getOneDynamicAPI(this.route.snapshot.params.id).subscribe(res => {\n        this.dyanmicAPIData = res;\n        res['responseFields'].map((item) => {\n          this.responseFields.push(this.fb.group(item));\n        });\n        this.dynamicAPIEditFG.patchValue({\n          apiName: res['apiName'],\n          advertiserProvider: res['advertiserProvider'],\n          dynamicApiUri: res['dynamicApiUri'],\n          responseFields: res['responseFields'],\n          startDate: res['startDate'],\n          endDate: res['endDate'],\n          filteredCondition: res['filteredCondition'] !== 'empty' ? res['filteredCondition'] : '',\n          subid: res['subid'] !== 'empty' ? res['subid'] : '',\n          split: res['split'] !== 0 ? res['split'] : '',\n          reportFormat: res['reportFormat'],\n        });\n\n        const subidKeyControl = this.dynamicAPIEditFG.get('subid');\n        if (res['subid']) {\n          subidKeyControl.enable();\n        } else {\n          subidKeyControl.disable();\n        }\n      })\n    }\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  onFilteredConditionChange(event: any) {\n    const subidControl = this.dynamicAPIEditFG.get('subid')\n    if (event.value) {\n      subidControl.enable();\n    } else {\n      subidControl.disable();\n    }\n  }\n\n  get startDateControl() {\n    return this.dynamicAPIEditFG.get('startDate');\n  }\n\n  get endDateControl() {\n    return this.dynamicAPIEditFG.get('endDate');\n  }\n\n  endDateValidator(control: AbstractControl) {\n    const startDate = new Date(control.parent?.get('startDate').value);\n    const endDate = new Date(control.value);\n\n    if (startDate && endDate && endDate < startDate) {\n      return { invalidRange: true };\n    }\n\n    return null;\n  }\n\n  removeResponseField(i: number) {\n    this.responseFields.removeAt(i);\n  }\n\n  addResponse(event) {\n    this.responseFields.push(this.newResponseFields());\n  }\n\n  newResponseFields(): FormGroup {\n    return this.fb.group({\n      originalApi: ['', Validators.required],\n      returnApi: ['', Validators.required],\n    })\n  }\n\n  get responseFields() {\n    return this.dynamicAPIEditFG.controls['responseFields'] as FormArray;\n  }\n\n  submitHandle() {\n    this.dynamicAPIEditFG.markAllAsTouched();\n    if (this.dynamicAPIEditFG.valid) {\n      this.dyanmicAPIData = { ...this.dyanmicAPIData, ...this.dynamicAPIEditFG.value };\n      this.dynamicAPIService.updateDynamicAPI(this.dyanmicAPIData).subscribe(res => {\n        this.notification.showSuccess('Successfully updated a new Dynamic API.', \"\");\n        this.router.navigate(['/dynamicAPI/all-dynamic-api']);\n      }, (error) => {\n        this.notification.showError(JSON.stringify(error.error), \"\");\n      })\n    }\n  }\n\n}\n","<form class=\"example-container\" [formGroup]=\"dynamicAPIEditFG\" (submit)=\"submitHandle()\" *ngIf=\"!hidden\">\n    <div class=\"row\">\n        <div class=\"col-xl-8\">\n            <div class=\"row\">\n                <div class=\"col-xl-12\">\n                    <div class=\"card card-custom example example-compact gutter-b\">\n                        <div class=\"card-header\">\n                            <div class=\"card-title\">\n                                <h3 class=\"card-label\">Edit Dynamic API</h3>\n                            </div>\n                        </div>\n                        <div class=\"card-body\">\n                            {{dynamicAPIEditFG.value | json}}\n                            <div class=\"row py-3\">\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"apiName\" placeholder=\"API Name\" />\n                                        <mat-error *ngIf=\"dynamicAPIEditFG.get('apiName').errors?.required\">API Name is\n                                            required.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"advertiserProvider\"\n                                            placeholder=\"Advertiser Provider\" />\n                                        <mat-error\n                                            *ngIf=\"dynamicAPIEditFG.get('advertiserProvider').errors?.required\">Advertiser\n                                            Provider is required.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row py-3\">\n                                <div class=\"col-md-12\">\n                                    <mat-form-field>\n                                        <input type=\"url\" matInput formControlName=\"dynamicApiUri\"\n                                            placeholder=\"DynamicAPIURI\" />\n                                        <mat-error\n                                            *ngIf=\"dynamicAPIEditFG.get('dynamicApiUri').invalid && (dynamicAPIEditFG.get('dynamicApiUri').dirty || dynamicAPIEditFG.get('dynamicApiUri').touched)\">\n                                            <span\n                                                *ngIf=\"dynamicAPIEditFG.get('dynamicApiUri').errors?.required\">DynamicAPIURI\n                                                is required.</span>\n                                            <span *ngIf=\"dynamicAPIEditFG.get('dynamicApiUri').errors?.pattern\">Invalid\n                                                URL format.</span>\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n\n                            <div class=\"row py-3\">\n                                <div class=\"col-xl-3\">\n                                    <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"addResponse($event)\">\n                                        Add Response Fields\n                                    </button>\n                                </div>\n                            </div>\n                            <div formArrayName=\"responseFields\">\n                                <div class=\"row py-2\" *ngFor=\"let subItem of responseFields.controls; let i=index\"\n                                    [formGroupName]=\"i\">\n                                    <div class=\"col-xl-5\">\n                                        <mat-form-field>\n                                            <input matInput placeholder=\"Original API\" formControlName=\"originalApi\" />\n                                            <mat-error *ngIf=\"subItem.get('originalApi').errors?.required\">\n                                                Original API is required.\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-xl-5\">\n                                        <mat-form-field>\n                                            <input matInput placeholder=\"Return API\" formControlName=\"returnApi\" />\n                                            <mat-error *ngIf=\"subItem.get('returnApi').errors?.required\">\n                                                Return API is required.\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-xl-2\">\n                                        <a title=\"Delete Response Field\"\n                                            class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n                                            (click)=\"removeResponseField(i)\">\n                                            <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\"\n                                                cacheSVG=\"false\" class=\"svg-icon svg-icon-md svg-icon-danger\">\n                                            </span>\n                                        </a>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div class=\"row py-2\">\n                                <div class=\"col-xl-4\">\n                                    <mat-form-field>\n                                        <mat-label>Filtered Condition</mat-label>\n                                        <mat-select matNativeControl formControlName=\"filteredCondition\"\n                                            (selectionChange)=\"onFilteredConditionChange($event)\">\n                                            <mat-option value=\"StartsWith\">StartsWith</mat-option>\n                                            <mat-option value=\"EndsWith\">EndsWith</mat-option>\n                                            <mat-option value=\"Contains\">Contains</mat-option>\n                                            <mat-option value=\"Equal\">Equal</mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-4\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"subid\" placeholder=\"Subid\" />\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-4\">\n                                    <mat-form-field>\n                                        <input type=\"number\" matInput formControlName=\"split\" placeholder=\"Split\" />\n                                    </mat-form-field>\n                                </div>\n                            </div>\n\n                            <div class=\"row py-2\">\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <input matInput [matDatepicker]=\"startDatePicker\" placeholder=\"Start Date\"\n                                            formControlName=\"startDate\">\n                                        <mat-datepicker-toggle matSuffix\n                                            [for]=\"startDatePicker\"></mat-datepicker-toggle>\n                                        <mat-datepicker #startDatePicker></mat-datepicker>\n                                        <mat-error *ngIf=\"startDateControl.hasError('required')\">Start Date is\n                                            required</mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <input matInput [matDatepicker]=\"endDatePicker\" placeholder=\"End Date\"\n                                            formControlName=\"endDate\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\n                                        <mat-datepicker #endDatePicker></mat-datepicker>\n                                        <mat-error *ngIf=\"endDateControl.hasError('required')\">End Date is\n                                            required</mat-error>\n                                        <mat-error *ngIf=\"endDateControl.hasError('invalidRange')\">End Date must be\n                                            greater than Start Date</mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row py-2\">\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <mat-label>Report Format</mat-label>\n                                        <mat-select matNativeControl formControlName=\"reportFormat\">\n                                            <mat-option value=\"json\">JSON</mat-option>\n                                            <mat-option value=\"csv\">CSV</mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row pt-2\">\n                                <div class=\"col-md-12\">\n                                    <button class=\"save-button\" mat-raised-button color=\"primary\"\n                                        type=\"submit\">Save</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</form>\n<!-- begin:: Error -->\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\n  display: block;\n  min-height: 80vh;\n  font-size: 14px;\n  line-height: 1.4;\n  color: #0e1724;\">\n    <!--begin::Content-->\n    <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\n        <p class=\"display-4 font-weight-boldest text-white mb-12\">\n            How did you get here\n        </p>\n        <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\n            Sorry you can't access the page you're looking for.\n        </p>\n        <p class=\"font-size-h4 line-height-md\">\n            There may be a misspelling in the URL entered,<br />or the page you are\n            looking for may no longer exist.\n        </p>\n    </div>\n    <!--end::Content-->\n</div>\n<!-- end:: Error -->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DynamicAPIRoutingModule } from './dynamic-api-routing.module';\nimport { AllDynamicAPIComponent } from './all-dynamic-api/all-dynamic-api.component';\nimport { DynamicApiCreateComponent } from './dynamic-api-create/dynamic-api-create.component';\nimport { DynamicApiUpdateComponent } from './dynamic-api-update/dynamic-api-update.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\n\n@NgModule({\n  declarations: [AllDynamicAPIComponent, DynamicApiCreateComponent, DynamicApiUpdateComponent],\n  imports: [\n    CommonModule,\n    DynamicAPIRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatIconModule,\n    MatRadioModule,\n    MatSelectModule,\n    NgxDatatableModule,\n    SharedModule,\n    InlineSVGModule.forRoot()\n  ]\n})\nexport class DynamicAPIModule { }\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { DynamicAPIInterface } from '../models/dynamicAPI.interface';\r\n\r\nconst API_DYNAMICAPI_URL = `${environment.apiUrl}/dynamicAPI`;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class DynamicAPIService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    createDynamicAPI(dynamicAPI: DynamicAPIInterface): Observable<DynamicAPIInterface> {\r\n        return this.http.post<DynamicAPIInterface>(`${API_DYNAMICAPI_URL}/create`, dynamicAPI);\r\n    }\r\n\r\n    getDynamicAPIs(): Observable<DynamicAPIInterface[]> {\r\n        return this.http.get<DynamicAPIInterface[]>(`${API_DYNAMICAPI_URL}/all-dynamicApis`);\r\n    }\r\n\r\n    getOneDynamicAPI(dynamicAPI: DynamicAPIInterface): Observable<DynamicAPIInterface> {\r\n        return this.http.get<DynamicAPIInterface>(\r\n            API_DYNAMICAPI_URL + `/get-dynamicApi/${dynamicAPI}`\r\n        );\r\n    }\r\n\r\n    updateDynamicAPI(dynamicAPI: DynamicAPIInterface): Observable<DynamicAPIInterface> {\r\n        return this.http.put<DynamicAPIInterface>(\r\n            `${API_DYNAMICAPI_URL}/update/${dynamicAPI._key}`,\r\n            dynamicAPI\r\n        );\r\n    }\r\n\r\n    deleteDynamicAPI(dynamicAPI: string) {\r\n        return this.http.delete(API_DYNAMICAPI_URL + `/delete/${dynamicAPI}`);\r\n    }\r\n}"]}