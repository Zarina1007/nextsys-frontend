{"version":3,"sources":["./src/app/modules/tag-management/edit-tag/edit-tag.component.ts","./src/app/modules/tag-management/edit-tag/edit-tag.component.html","./src/app/modules/tag-management/new-tag/new-tag.component.ts","./src/app/modules/tag-management/new-tag/new-tag.component.html","./src/app/modules/tag-management/tag-management-routing.module.ts","./src/app/modules/tag-management/tag-management.component.ts","./src/app/modules/tag-management/tag-management.component.html","./src/app/modules/tag-management/tag-management.module.ts","./src/app/modules/tag-management/tag-management.service.ts","./src/app/modules/tag-management/tags/tags.component.ts","./src/app/modules/tag-management/tags/tags.component.html"],"names":[],"mappings":"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","file":"modules-tag-management-tag-management-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\nimport { TagManagementService } from '../tag-management.service';\nimport { TagInterface } from 'src/app/shared/models/tag.interface';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n  FormGroupDirective,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-tag',\n  templateUrl: './edit-tag.component.html',\n  styleUrls: ['./edit-tag.component.scss']\n})\nexport class EditTagComponent implements OnInit {\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\n\n  updateTagFG: FormGroup;\n  statTypes: any;\n  rotationTypes: any;\n  paramTypes: any;\n  url: String;\n  initialURL: URL;\n  company: String;\n  countries: any;\n  versions: any;\n  versionList: any = [];\n  edgeVersions : any;\n  operaVersions: any;\n  browserVersions: any;\n  tag: TagInterface;\n  constructor(\n    private route: ActivatedRoute,\n    private tagManagementService: TagManagementService,\n    private fb: FormBuilder, \n    private _snackBarService: SnackbarService,\n    router: Router\n  ) {\n    //Get the current tag to edit\n    if (this.route.snapshot.params.id) {\n      this.tagManagementService.getOneTag(this.route.snapshot.params.id).subscribe(x => {\n        this.tag = x;\n        var browserVal = [];\n        var deviceTypeVal = [];\n        var versionVal = [];\n        var countryVal = [];\n        this.url = x['url'];\n        this.initialURL = new URL('https://adserver.com/search');\n        for(var bval of x['browser'].toString().split(\",\")){\n          browserVal.push(bval)\n        }\n        for(var dval of x['deviceType'].toString().split(\",\")){\n          deviceTypeVal.push(dval)\n        }\n        for(var vval of x['version'].toString().split(\",\")){\n          versionVal.push(vval)\n        }\n        for(var cval of x['country'].toString().split(\",\")){\n          countryVal.push(cval)\n        }\n        x['subids'].map((item) => {\n          this.subids.push(this.fb.group(item));\n        });\n        x['params'].map((param) => {\n          this.params.push(this.fb.group(param));\n        });\n        // this.updateTagFG.patchValue(x);\n        this.updateTagFG.setValue({\n          name: x['name'],\n          company: x['name'],\n          advertiser: x['advertiser'],\n          publisher: x['publisher'],\n          browser: browserVal,\n          deviceType: deviceTypeVal,\n          country: countryVal,\n          version: versionVal,\n          adServerUrl: x['adServerUrl'],\n          statType: x['statType'],\n          subids: x['subids'],\n          rotationType: x['rotationType'],\n          url: x['url'],\n          params: x['params'],\n          \n        });\n      });\n    }\n   }\n\n  ngOnInit(): void {\n    this.updateTagFG = this.fb.group({\n      name: ['', Validators.required],\n      publisher: ['', Validators.required],\n      advertiser: ['', Validators.required],\n      browser: ['', Validators.required],\n      deviceType: ['', Validators.required],\n      version: ['', Validators.required],\n      country: ['', Validators.required],\n      company: ['', Validators.required],\n      adServerUrl: ['', Validators.required],\n      statType: ['', Validators.required],\n      subids: this.fb.array([]),\n      rotationType: ['', Validators.required],\n      url: new FormControl('', [Validators.required]),\n      params: this.fb.array([]),\n    });\n    this.statTypes = this.getStatTypes();\n    this.rotationTypes = this.getRotationTypes();\n    this.paramTypes = this.getParamTypes();\n    this.countries = this.getCountries();\n    this.browserVersions = this.getVersions();\n    \n  }\n  //Update the tag onto the database\n  updateTag() {\n    this.updateTagFG.markAllAsTouched();\n    if (this.updateTagFG.valid) {\n      this.tag = {...this.tag, ...this.updateTagFG.value};\n      this.tagManagementService.updateOneTag(this.tag).subscribe(res => {\n        this._snackBarService.info('Updated a  tag');\n      }, (err) => {\n        this._snackBarService.info(err.error);\n      },\n      )\n      \n    }\n  }\n  get subids() {\n    return this.updateTagFG.controls['subids'] as FormArray;\n  }\n  newSubids(): FormGroup {\n    return this.fb.group({\n      subid: \"\",\n      limit: \"\",\n      split: \"\"\n    })\n  }\n   \n  addSubid(event) {\n    this.subids.push(this.newSubids());\n  }\n  removeSubid(i:number) {\n    this.subids.removeAt(i);\n  }\n  //Detects when URL is pasted into the field\n  //https://us.search.yahoo.com/yhs/search?hspart=brandclick&hsimp=yhs-calm&p=flowers\n  getUrlParams(url) {\n    //Resets the URL params on every change\n    this.deleteValueOfFormControl('params');\n    if (this.isValidURL(url)) {\n      url = new URL(url);\n      for (var key of url.searchParams.keys()) {\n        let value = url.searchParams.get(key);\n        this.addParamsToUrlForm(key, value);\n      }\n    } else {\n      return;\n    }\n  }\n  \n  //Gets the value of any form Array\n  //Returns a form array\n  get params() {\n    return this.updateTagFG.controls['params'] as FormArray;\n  }\n\n  //Deletes value of any given form control\n  deleteValueOfFormControl(controlName) {\n    this.params.clear();\n  }\n\n  //Updates the original parameters that will be received and sent on the first server request\n  //Example: domain.com/search?subid={{dynamic}}&q={{dynamic}}&search=[bing]\n  updateInitialParams(param, index) {\n    console.log('Updating Initial Params');\n    console.log(param, index);\n    if (param.value === 'static') {\n      console.log('static!');\n      this.params.controls[index]\n        .get('initialParam')\n        .setValue(this.params.controls[index].get('value').value);\n      this.createInitialURL();\n    } else {\n      // this.params.controls[index]\n      //   .get('initialParam')\n      //   .setValue(this.params.controls[index].get('key').value);\n    }\n  }\n\n  //Checks to see if initialParam mat input field has been touched and updates initial URL\n  updateInitialParamURL(value, index) {\n    if (this.params.controls[index].get('paramType').value === 'dynamic') {\n      this.createInitialURL();\n    }\n  }\n\n  //Builds the initial URL from the paramaters\n  createInitialURL() {\n    console.log('Updating URL');\n    this.initialURL = new URL('https://adserver.com/search');\n    this.params.controls.forEach((element, index) => {\n      if (element.value.paramType === 'dynamic') {\n        this.initialURL.searchParams.append(\n          element.value.key,\n          '{{' + element.value.initialParam + '}}'\n        );\n      } else if (element.value.paramType === 'static') {\n        // this.initialURL.searchParams.append(\n        //   element.value.key,\n        //   element.value.value\n        // );\n      } else {\n      }\n    });\n  }\n\n  //Decodes the URL for the Angular Template\n  decodeURL(url) {\n    return decodeURI(url);\n  }\n\n  //Adds key/valuew to FormArray 'Params'\n  addParamsToUrlForm(key, value) {\n    let paramForm = this.fb.group({\n      key: [key, Validators.required],\n      value: [value, Validators.required],\n      paramType: ['', Validators.required],\n      initialParam: ['', Validators.required],\n    });\n    console.log(this.updateTagFG);\n    this.params.push(paramForm);\n  }\n\n  //Checks to see if URL entered is valid\n  //If URL is valid return true\n  //Else if URL is invalid return false and throw mat-error\n  private isValidURL(url) {\n    console.log(url);\n    try {\n      let finalUrl = new URL(url);\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n  getBrowers(event) {\n    if (event.value.length > 0) {\n      let vTemp: any[] = [];\n      for(var e of event.value) {\n        let filterdata = this.versionList.filter(function(version: any) {\n          return version.value.includes(e)\n        })\n        filterdata.map((filter: any) => {\n            vTemp.push(filter);\n        })\n      }\n      this.browserVersions = vTemp;\n    }\n  }\n  //update the tag as a template\n  updateTemplate() {}\n\n  //Gets different ways a tag can display stats\n  private getStatTypes() {\n    return [\n      { value: 'rpm', viewValue: 'RPM Based' },\n      { value: 'subid', viewValue: 'Sub-ID Based' },\n    ];\n  }\n\n  //Gets Country List\n  private getCountries() {\n    return [\n      {value: 'Afghanistan', viewValue: 'Afghanistan'}, \n      {value: 'Åland Islands', viewValue: 'Åland Islands'}, \n      {value: 'Albania', viewValue: 'Albania'}, \n      {value: 'Algeria', viewValue: 'Algeria'}, \n      {value: 'American Samoa', viewValue: 'American Samoa'}, \n      {value: 'Andorra', viewValue: 'Andorra'}, \n      {value: 'Angola', viewValue: 'Angola'}, \n      {value: 'Anguilla', viewValue: 'Anguilla'}, \n      {value: 'Antarctica', viewValue: 'Antarctica'}, \n      {value: 'Antigua and Barbuda', viewValue: 'Antigua and Barbuda'}, \n      {value: 'Argentina', viewValue: 'Argentina'}, \n      {value: 'Armenia', viewValue: 'Armenia'}, \n      {value: 'Aruba', viewValue: 'Aruba'}, \n      {value: 'Australia', viewValue: 'Australia'}, \n      {value: 'Austria', viewValue: 'Austria'}, \n      {value: 'Azerbaijan', viewValue: 'Azerbaijan'}, \n      {value: 'Bahamas', viewValue: 'Bahamas'}, \n      {value: 'Bahrain', viewValue: 'Bahrain'}, \n      {value: 'Bangladesh', viewValue: 'Bangladesh'}, \n      {value: 'Barbados', viewValue: 'Barbados'}, \n      {value: 'Belarus', viewValue: 'Belarus'}, \n      {value: 'Belgium', viewValue: 'Belgium'}, \n      {value: 'Belize', viewValue: 'Belize'}, \n      {value: 'Benin', viewValue: 'Benin'}, \n      {value: 'Bermuda', viewValue: 'Bermuda'}, \n      {value: 'Bhutan', viewValue: 'Bhutan'}, \n      {value: 'Bolivia', viewValue: 'Bolivia'}, \n      {value: 'Bosnia and Herzegovina', viewValue: 'Bosnia and Herzegovina'}, \n      {value: 'Botswana', viewValue: 'Botswana'}, \n      {value: 'Bouvet Island', viewValue: 'Bouvet Island'}, \n      {value: 'Brazil', viewValue: 'Brazil'}, \n      {value: 'British Indian Ocean Territory', viewValue: 'British Indian Ocean Territory'}, \n      {value: 'Brunei Darussalam', viewValue: 'Brunei Darussala'}, \n      {value: 'Bulgaria', viewValue: 'Bulgaria'}, \n      {value: 'Burkina Faso', viewValue: 'Burkina Faso'}, \n      {value: 'Burundi', viewValue: 'Burundi'}, \n      {value: 'Cambodia', viewValue: 'Cambodia'}, \n      {value: 'Cameroon', viewValue: 'Cameroon'}, \n      {value: 'Canada', viewValue: 'Canada'}, \n      {value: 'Cape Verde', viewValue: 'Cape Verde'}, \n      {value: 'Cayman Islands', viewValue: 'Cayman Islands'}, \n      {value: 'Central African Republic', viewValue: 'Central African Republic'}, \n      {value: 'Chad', viewValue: 'Chad'}, \n      {value: 'Chile', viewValue: 'Chile'}, \n      {value: 'China', viewValue: 'China'}, \n      {value: 'Christmas Island', viewValue: 'Christmas Island'}, \n      {value: 'Cocos (Keeling) Islands', viewValue: 'Cocos (Keeling) Islands'}, \n      {value: 'Colombia', viewValue: 'Colombia'}, \n      {value: 'Comoros', viewValue: 'Comoros'}, \n      {value: 'Congo', viewValue: 'Congo'}, \n      {value: 'Congo, The Democratic Republic of the', viewValue: 'Congo, The Democratic Republic of the'}, \n      {value: 'Cook Islands', viewValue: 'Cook Islands'}, \n      {value: 'Costa Rica', viewValue: 'Costa Rica'}, \n      {value: 'Cote D\\'Ivoire', viewValue: 'Cote D\\'Ivoire'}, \n      {value: 'Croatia', viewValue: 'Croatia'}, \n      {value: 'Cuba', viewValue: 'Cuba'}, \n      {value: 'Cyprus', viewValue: 'Cyprus'}, \n      {value: 'Czech Republic', viewValue: 'Czech Republic'}, \n      {value: 'Denmark', viewValue: 'Denmark'}, \n      {value: 'Djibouti', viewValue: 'Djibouti'}, \n      {value: 'Dominica', viewValue: 'Dominica'}, \n      {value: 'Dominican Republic', viewValue: 'Dominican Republic'}, \n      {value: 'Ecuador', viewValue: 'Ecuador'}, \n      {value: 'Egypt', viewValue: 'Egypt'}, \n      {value: 'El Salvador', viewValue: 'El Salvador'}, \n      {value: 'Equatorial Guinea', viewValue: 'Equatorial Guinea'}, \n      {value: 'Eritrea', viewValue: 'Eritrea'}, \n      {value: 'Estonia', viewValue: 'Estonia'}, \n      {value: 'Ethiopia', viewValue: 'Ethiopia'}, \n      {value: 'Falkland Islands (Malvinas)', viewValue: 'Falkland Islands (Malvinas)'}, \n      {value: 'Faroe Islands', viewValue: 'Faroe Islands'}, \n      {value: 'Fiji', viewValue: 'Fiji'}, \n      {value: 'Finland', viewValue: 'Finland'}, \n      {value: 'France', viewValue: 'France'}, \n      {value: 'French Guiana', viewValue: 'French Guiana'}, \n      {value: 'French Polynesia', viewValue: 'French Polynesia'}, \n      {value: 'French Southern Territories', viewValue: 'French Southern Territories'}, \n      {value: 'Gabon', viewValue: 'Gabon'}, \n      {value: 'Gambia', viewValue: 'Gambia'}, \n      {value: 'Georgia', viewValue: 'Georgia'}, \n      {value: 'Germany', viewValue: 'Germany'}, \n      {value: 'Ghana', viewValue: 'Ghana'}, \n      {value: 'Gibraltar', viewValue: 'Gibraltar'}, \n      {value: 'Greece', viewValue: 'Greece'}, \n      {value: 'Greenland', viewValue: 'Greenland'}, \n      {value: 'Grenada', viewValue: 'Grenada'}, \n      {value: 'Guadeloupe', viewValue: 'Guadeloupe'}, \n      {value: 'Guam', viewValue: 'Guam'}, \n      {value: 'Guatemala', viewValue: 'Guatemala'}, \n      {value: 'Guernsey', viewValue: 'Guernsey'}, \n      {value: 'Guinea', viewValue: 'Guinea'}, \n      {value: 'Guinea-Bissau', viewValue: 'Guinea-Bissau'}, \n      {value: 'Guyana', viewValue: 'Guyana'}, \n      {value: 'Haiti', viewValue: 'Haiti'}, \n      {value: 'Heard Island and Mcdonald Islands', viewValue: 'Heard Island and Mcdonald Islands'}, \n      {value: 'Holy See (Vatican City State)', viewValue: 'Holy See (Vatican City State)'}, \n      {value: 'Honduras', viewValue: 'Honduras'}, \n      {value: 'Hong Kong', viewValue: 'Hong Kong'}, \n      {value: 'Hungary', viewValue: 'Hungary'}, \n      {value: 'Iceland', viewValue: 'Iceland'}, \n      {value: 'India', viewValue: 'India'}, \n      {value: 'Indonesia', viewValue: 'Indonesia'}, \n      {value: 'Iran, Islamic Republic Of', viewValue: 'Iran, Islamic Republic Of'}, \n      {value: 'Iraq', viewValue: 'Iraq'}, \n      {value: 'Ireland', viewValue: 'Ireland'}, \n      {value: 'Isle of Man', viewValue: 'Isle of Man'}, \n      {value: 'Israel', viewValue: 'Israel'}, \n      {value: 'Italy', viewValue: 'Italy'}, \n      {value: 'Jamaica', viewValue: 'Jamaica'}, \n      {value: 'Japan', viewValue: 'Japan'}, \n      {value: 'Jersey', viewValue: 'Jersey'}, \n      {value: 'Jordan', viewValue: 'Jordan'}, \n      {value: 'Kazakhstan', viewValue: 'Kazakhstan'}, \n      {value: 'Kenya', viewValue: 'Kenya'}, \n      {value: 'Kiribati', viewValue: 'Kiribati'}, \n      {value: 'Korea, Democratic People\\'S Republic of', viewValue: 'Korea, Democratic People\\'S Republic o'}, \n      {value: 'Korea, Republic of', viewValue: 'Korea, Republic of'}, \n      {value: 'Kuwait', viewValue: 'Kuwait'}, \n      {value: 'Kyrgyzstan', viewValue: 'Kyrgyzstan'}, \n      {value: 'Lao People\\'S Democratic Republic', viewValue: 'Lao People\\'S Democratic Republic'}, \n      {value: 'Latvia', viewValue: 'Latvia'}, \n      {value: 'Lebanon', viewValue: 'Lebanon'}, \n      {value: 'Lesotho', viewValue: 'Lesotho'}, \n      {value: 'Liberia', viewValue: 'Liberia'}, \n      {value: 'Libyan Arab Jamahiriya', viewValue: 'Libyan Arab Jamahiriya'}, \n      {value: 'Liechtenstein', viewValue: 'Liechtenstein'}, \n      {value: 'Lithuania', viewValue: 'Lithuania'}, \n      {value: 'Luxembourg', viewValue: 'Luxembourg'}, \n      {value: 'Macao', viewValue: 'Macao'}, \n      {value: 'Macedonia, The Former Yugoslav Republic of', viewValue: 'Macedonia, The Former Yugoslav Republic of'}, \n      {value: 'Madagascar', viewValue: 'Madagascar'}, \n      {value: 'Malawi', viewValue: 'Malawi'}, \n      {value: 'Malaysia', viewValue: 'Malaysia'}, \n      {value: 'Maldives', viewValue: 'Maldives'}, \n      {value: 'Mali', viewValue: 'Mali'}, \n      {value: 'Malta', viewValue: 'Malta'}, \n      {value: 'Marshall Islands', viewValue: 'Marshall Islands'}, \n      {value: 'Martinique', viewValue: 'Martinique'}, \n      {value: 'Mauritania', viewValue: 'Mauritania'}, \n      {value: 'Mauritius', viewValue: 'Mauritius'}, \n      {value: 'Mayotte', viewValue: 'Mayotte'}, \n      {value: 'Mexico', viewValue: 'Mexico'}, \n      {value: 'Micronesia, Federated States of', viewValue: 'Micronesia, Federated States of'}, \n      {value: 'Moldova, Republic of', viewValue: 'Moldova, Republic of'}, \n      {value: 'Monaco', viewValue: 'Monaco'}, \n      {value: 'Mongolia', viewValue: 'Mongolia'}, \n      {value: 'Montserrat', viewValue: 'Montserrat'}, \n      {value: 'Morocco', viewValue: 'Morocco'}, \n      {value: 'Mozambique', viewValue: 'Mozambique'}, \n      {value: 'Myanmar', viewValue: 'Myanmar'}, \n      {value: 'Namibia', viewValue: 'Namibia'}, \n      {value: 'Nauru', viewValue: 'Nauru'}, \n      {value: 'Nepal', viewValue: 'Nepal'}, \n      {value: 'Netherlands', viewValue: 'Netherlands'}, \n      {value: 'Netherlands Antilles', viewValue: 'Netherlands Antilles'}, \n      {value: 'New Caledonia', viewValue: 'New Caledonia'}, \n      {value: 'New Zealand', viewValue: 'New Zealand'}, \n      {value: 'Nicaragua', viewValue: 'Nicaragua'}, \n      {value: 'Niger', viewValue: 'Niger'}, \n      {value: 'Nigeria', viewValue: 'Nigeria'}, \n      {value: 'Niue', viewValue: 'Niue'}, \n      {value: 'Norfolk Island', viewValue: 'Norfolk Island'}, \n      {value: 'Northern Mariana Islands', viewValue: 'Northern Mariana Islands'}, \n      {value: 'Norway', viewValue: 'Norway'}, \n      {value: 'Oman', viewValue: 'Oman'}, \n      {value: 'Pakistan', viewValue: 'Pakistan'}, \n      {value: 'Palau', viewValue: 'Palau'}, \n      {value: 'Palestinian Territory, Occupied', viewValue: 'Palestinian Territory, Occupied'}, \n      {value: 'Panama', viewValue: 'Panama'}, \n      {value: 'Papua New Guinea', viewValue: 'Papua New Guinea'}, \n      {value: 'Paraguay', viewValue: 'Paraguay'}, \n      {value: 'Peru', viewValue: 'Peru'}, \n      {value: 'Philippines', viewValue: 'Philippines'}, \n      {value: 'Pitcairn', viewValue: 'Pitcairn'}, \n      {value: 'Poland', viewValue: 'Poland'}, \n      {value: 'Portugal', viewValue: 'Portugal'}, \n      {value: 'Puerto Rico', viewValue: 'Puerto Rico'}, \n      {value: 'Qatar', viewValue: 'Qatar'}, \n      {value: 'Reunion', viewValue: 'Reunion'}, \n      {value: 'Romania', viewValue: 'Romania'}, \n      {value: 'Russian Federation', viewValue: 'Russian Federatio'}, \n      {value: 'RWANDA', viewValue: 'RWANDA'}, \n      {value: 'Saint Helena', viewValue: 'Saint Helena'}, \n      {value: 'Saint Kitts and Nevis', viewValue: 'Saint Kitts and Nevis'}, \n      {value: 'Saint Lucia', viewValue: 'Saint Lucia'}, \n      {value: 'Saint Pierre and Miquelon', viewValue: 'Saint Pierre and Miquelon'}, \n      {value: 'Saint Vincent and the Grenadines', viewValue: 'Saint Vincent and the Grenadines'}, \n      {value: 'Samoa', viewValue: 'Samoa'}, \n      {value: 'San Marino', viewValue: 'San Marino'}, \n      {value: 'Sao Tome and Principe', viewValue: 'Sao Tome and Principe'}, \n      {value: 'Saudi Arabia', viewValue: 'Saudi Arabia'}, \n      {value: 'Senegal', viewValue: 'Senegal'}, \n      {value: 'Serbia and Montenegro', viewValue: 'Serbia and Montenegro'}, \n      {value: 'Seychelles', viewValue: 'Seychelles'}, \n      {value: 'Sierra Leone', viewValue: 'Sierra Leone'}, \n      {value: 'Singapore', viewValue: 'Singapore'}, \n      {value: 'Slovakia', viewValue: 'Slovakia'}, \n      {value: 'Slovenia', viewValue: 'Slovenia'}, \n      {value: 'Solomon Islands', viewValue: 'Solomon Islands'}, \n      {value: 'Somalia', viewValue: 'Somalia'}, \n      {value: 'South Africa', viewValue: 'South Africa'}, \n      {value: 'South Georgia and the South Sandwich Islands', viewValue: 'South Georgia and the South Sandwich Isla'}, \n      {value: 'Spain', viewValue: 'Spain'}, \n      {value: 'Sri Lanka', viewValue: 'Sri Lanka'}, \n      {value: 'Sudan', viewValue: 'Sudan'}, \n      {value: 'Surivalue', viewValue: 'Surivalue'}, \n      {value: 'Svalbard and Jan Mayen', viewValue: 'Svalbard and Jan Mayen'}, \n      {value: 'Swaziland', viewValue: 'Swaziland'}, \n      {value: 'Sweden', viewValue: 'Sweden'}, \n      {value: 'Switzerland', viewValue: 'Switzerland'}, \n      {value: 'Syrian Arab Republic', viewValue: 'Syrian Arab Republic'}, \n      {value: 'Taiwan, Province of China', viewValue: 'Taiwan, Province of China'}, \n      {value: 'Tajikistan', viewValue: 'Tajikistan'}, \n      {value: 'Tanzania, United Republic of', viewValue: 'Tanzania, United Republic of'}, \n      {value: 'Thailand', viewValue: 'Thailand'}, \n      {value: 'Timor-Leste', viewValue: 'Timor-Leste'}, \n      {value: 'Togo', viewValue: 'Togo'}, \n      {value: 'Tokelau', viewValue: 'Tokelau'}, \n      {value: 'Tonga', viewValue: 'Tonga'}, \n      {value: 'TrinviewValuead and Tobago', viewValue: 'TrinviewValuead and Tobago'}, \n      {value: 'Tunisia', viewValue: 'Tunisia'}, \n      {value: 'Turkey', viewValue: 'Turkey'}, \n      {value: 'Turkmenistan', viewValue: 'Turkmenistan'}, \n      {value: 'Turks and Caicos Islands', viewValue: 'Turks and Caicos Islands'}, \n      {value: 'Tuvalu', viewValue: 'Tuvalu'}, \n      {value: 'Uganda', viewValue: 'Uganda'}, \n      {value: 'Ukraine', viewValue: 'Ukraine'}, \n      {value: 'United Arab Emirates', viewValue: 'United Arab Emirates'}, \n      {value: 'United Kingdom', viewValue: 'United Kingdom'}, \n      {value: 'United States', viewValue: 'United States'}, \n      {value: 'United States Minor Outlying Islands', viewValue: 'United States Minor Outlying Islands'}, \n      {value: 'Uruguay', viewValue: 'Uruguay'}, \n      {value: 'Uzbekistan', viewValue: 'Uzbekistan'}, \n      {value: 'Vanuatu', viewValue: 'Vanuatu'}, \n      {value: 'Venezuela', viewValue: 'Venezuela'}, \n      {value: 'Viet Nam', viewValue: 'Viet Nam'}, \n      {value: 'Virgin Islands, British', viewValue: 'Virgin Islands, British'}, \n      {value: 'Virgin Islands, U.S.', viewValue: 'Virgin Islands, U.S.'}, \n      {value: 'Wallis and Futuna', viewValue: 'Wallis and Futuna'}, \n      {value: 'Western Sahara', viewValue: 'Western Sahara'}, \n      {value: 'Yemen', viewValue: 'Yemen'}, \n      {value: 'Zambia', viewValue: 'Zambia'}, \n      {value: 'Zimbabwe', viewValue: 'Zimbabwe'} \n    ]\n  }\n  //Gets Browser Versions\n  private getVersions() {\n    this.edgeVersions = [\n      {value: \"Edge - 102.0.1245.7\", viewValue: \"Edge - 102.0.1245.7\"},\n      {value: \"Edge - 101.0.1210.10\", viewValue: \"Edge - 101.0.1210.10\"},\n      {value: \"Edge - 100.0.1185.10\", viewValue: \"Edge - 100.0.1185.10\"},\n      {value: \"Edge - 99.0.1150.11\", viewValue: \"Edge - 99.0.1150.11\"},\n      {value: \"Edge - 98.0.1108.23\", viewValue: \"Edge - 98.0.1108.23\"},\n      {value: \"Edge - 97.0.1072.21\", viewValue: \"Edge - 97.0.1072.21\"},\n      \n    ];\n    this.operaVersions = [\n      {value: \"Opera - 12.15\", viewValue: \"Opera - 12.15\"},\n      {value: \"Opera - 12.14\", viewValue: \"Opera - 12.14\"},\n      {value: \"Opera - 12.13\", viewValue: \"Opera - 12.13\"},\n      {value: \"Opera - 12.12\", viewValue: \"Opera - 12.12\"},\n      {value: \"Opera - 12.11\", viewValue: \"Opera - 12.11\"},\n      {value: \"Opera - 12.10\", viewValue: \"Opera - 12.10\"}\n    ];\n    this.edgeVersions.map((edge: any) => {\n      this.versionList.push(edge);\n    });\n    this.operaVersions.map((opera: any) => {\n      this.versionList.push(opera);\n    });\n\n    //Chrome Version List Get\n    this.tagManagementService.getChromeBrowserVersion().subscribe((res: any) => {\n      let versionsChromeData = res.slice(0, 6);\n      versionsChromeData.map((version: { version: string; }) => {\n        this.versionList.push(\n            {\n                value: \"Chrome - \" + version.version,\n                viewValue: \"Chrome - \" + version.version\n            }\n        )\n      });    \n    }); \n    //FireFox Version List Get\n    this.tagManagementService.getFirefoxBrowserVersion().subscribe(res => {\n      var firefoxList = [];\n      for(var i in res){\n        firefoxList.push(\n            {\n                value: \"Firefox - \" + i,\n                viewValue: \"Firefox - \" + i\n            }\n        )\n      }\n      firefoxList.slice(firefoxList['length'] - 6, firefoxList['length']).map((version: { version: string; }) => {\n        this.versionList.push(\n            {\n                value: version['value'],\n                viewValue: version['viewValue']\n            }\n        )\n      });\n    });  \n\n    return this.versionList;\n  }\n  //Gets different ways a tag can display stats\n  private getRotationTypes() {\n    return [\n      { value: 'roundRobin', viewValue: 'Round Robin' },\n      { value: 'percentage', viewValue: 'Percentage' },\n    ];\n  }\n\n  private getParamTypes() {\n    return [\n      { value: 'static', viewValue: 'Static' },\n      { value: 'dynamic', viewValue: 'Dynamic' },\n    ];\n  }\n}\n","<form class=\"example-container\" [formGroup]=\"updateTagFG\" (submit)=\"updateTag()\">\n    <div class=\"row\">\n      <div class=\"col-xl-6\">\n        <div class=\"card card-custom example example-compact gutter-b\">\n          <div class=\"card-header\">\n            <div class=\"card-title\">\n              <h3 class=\"card-label\">Create New Tag</h3>\n            </div>\n            {{ updateTagFG.value | json }}\n          </div>\n          <div class=\"card-body\">\n            <mat-form-field>\n              <input\n                matInput\n                formControlName=\"name\"\n                placeholder=\"Name\"\n              />\n              <mat-error *ngIf=\"updateTagFG.get('name').errors?.required\"\n                >Name is required.\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Advertiser</mat-label>\n              <mat-select matNativeControl formControlName=\"advertiser\">\n                <mat-option value=\"Perion\">Perion</mat-option>\n                <mat-option value=\"Apptitude\">Apptitude</mat-option>\n                <mat-option value=\"Hopkins\">Hopkins</mat-option>\n                <mat-option value=\"Third Party\">Third Party</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Publisher</mat-label>\n              <mat-select matNativeControl formControlName=\"publisher\">\n                <mat-option value=\"Pub 1\">Pub 1</mat-option>\n                <mat-option value=\"Pub 2\">Pub 2</mat-option>\n                <mat-option value=\"Pub 3\">Pub 3</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <input\n                matInput\n                formControlName=\"company\"\n                placeholder=\"Company\"\n                [(ngModel)]=\"company\"\n              />\n              <mat-error *ngIf=\"updateTagFG.get('company').errors?.required\"\n                >Company name is required.\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Browsers Allowed</mat-label>\n              <mat-select matNativeControl (selectionChange)=\"getBrowers($event)\" formControlName=\"browser\" multiple>\n                <mat-option value=\"Chrome\">Chrome</mat-option>\n                <mat-option value=\"Firefox\">Firefox</mat-option>\n                <mat-option value=\"Edge\">Edge</mat-option>\n                <mat-option value=\"Internet Explorer\">Internet Explorer</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Device Type Allowed</mat-label>\n              <mat-select matNativeControl formControlName=\"deviceType\" multiple>\n                <mat-option value=\"Desktop\">Desktop</mat-option>\n                <mat-option value=\"Mobile\">Mobile</mat-option>              \n                <mat-option value=\"Tablet\">Tablet</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Browser Version Allowed</mat-label>\n              <mat-select matNativeControl formControlName=\"version\" multiple>\n                <mat-option\n                  *ngFor=\"let browserVersion of browserVersions\"\n                  [value]=\"browserVersion.value\"\n                >\n                  {{ browserVersion.viewValue }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Country Allowed</mat-label>\n              <mat-select matNativeControl formControlName=\"country\" multiple>\n                <mat-option\n                  *ngFor=\"let country of countries\"\n                  [value]=\"country.value\"\n                >\n                  {{ country.viewValue }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Ad Server URL</mat-label>\n              <mat-select formControlName=\"adServerUrl\">\n                <mat-option value=\"devisedata.com\">devisedata.com</mat-option>\n                <mat-option value=\"search.monarchdigital.com\">search.monarchdigital.com</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Stat Type</mat-label>\n              <mat-select formControlName=\"statType\">\n                <mat-option\n                  *ngFor=\"let statType of statTypes\"\n                  [value]=\"statType.value\"\n                >\n                  {{ statType.viewValue }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <div class=\"row mb-2\">\n              <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"addSubid($event)\">\n                Add\n              </button>\n            </div>\n            <div formArrayName=\"subids\">\n              <div class=\"row\" *ngFor=\"let subItem of subids.controls; let i=index\" [formGroupName]=\"i\">\n                <div class=\"col-md-3\">\n                  <mat-form-field>\n                    <input matInput placeholder=\"Subid\" formControlName=\"subid\" />\n                  </mat-form-field>\n                </div>\n                <div class=\"col-md-3\">\n                  <mat-form-field>\n                    <input matInput placeholder=\"Limit\" formControlName=\"limit\" />\n                  </mat-form-field>\n                </div>\n                <div class=\"col-md-3\">\n                  <mat-form-field>\n                    <input matInput placeholder=\"Split\" formControlName=\"split\" />\n                  </mat-form-field>\n                </div>\n                <div class=\"col-md-3\">\n                  <button class=\"btn btn-sm btn-danger\" (click)=\"removeSubid(i)\">\n                    <i class=\"flaticon2-line\"></i>\n                  </button>\n                </div>\n              </div>\n              \n            </div>\n            <mat-form-field>\n              <mat-label>Rotation Type</mat-label>\n              <mat-select formControlName=\"rotationType\">\n                <mat-option\n                  *ngFor=\"let rotationType of rotationTypes\"\n                  [value]=\"rotationType.value\"\n                >\n                  {{ rotationType.viewValue }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-xl-6\">\n        <div class=\"card card-custom example example-compact gutter-b\">\n          <div class=\"card-header\">\n            <div class=\"card-title\">\n              <h3 class=\"card-label\">Tag URLs</h3>\n            </div>\n          </div>\n          <div class=\"card-body\">\n            <!-- URL INPUT START -->\n            <mat-form-field>\n              <input\n                matInput\n                [(ngModel)]=\"url\"\n                formControlName=\"url\"\n                placeholder=\"Final URL\"\n                (ngModelChange)=\"getUrlParams($event)\"\n              />\n              <mat-error *ngIf=\"updateTagFG.get('url').errors?.required\"\n                >Final URL is required.\n              </mat-error>\n            </mat-form-field>\n            <!-- URL INPUT END -->\n  \n            <!-- FORM ARRAY PARAMS START -->\n            <div formArrayName=\"params\">\n              <div *ngFor=\"let p of params.controls; index as i\" class=\"params row\" [formGroupName]=\"i\">\n                <div class=\"col-md-3\">\n                  <mat-form-field>\n                    <input\n                      matInput\n                      formControlName=\"key\"\n                      placeholder=\"Final Key\"\n                    />\n                  </mat-form-field>\n                </div>\n                <div class=\"col-md-3\">\n                  <mat-form-field>\n                    <input\n                      matInput\n                      formControlName=\"value\"\n                      placeholder=\"Final Value\"\n                    />\n                  </mat-form-field>\n                </div>\n                <div class=\"col-md-3\">\n                  <mat-form-field>\n                    <mat-label>Param Type</mat-label>\n                    <mat-select\n                      formControlName=\"paramType\"\n                      (selectionChange)=\"updateInitialParams($event, i)\"\n                    >\n                      <mat-option\n                        *ngFor=\"let paramType of paramTypes\"\n                        [value]=\"paramType.value\"\n                      >\n                        {{ paramType.viewValue }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-md-3\">\n                  <mat-form-field>\n                    <input\n                      matInput\n                      formControlName=\"initialParam\"\n                      placeholder=\"Inital Value\"\n                      (keyup)=\"updateInitialParamURL($event, i)\"\n                    />\n                  </mat-form-field>\n                </div>\n                \n              </div>\n            </div>\n            <p>Inital URL: <br />{{ decodeURL(initialURL) }}</p>\n            <!-- FORM ARRAY PARAMS END -->\n          </div>\n        </div>\n      </div>\n    </div>\n  \n    <!-- SAVING TAG -->\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <button mat-raised-button color=\"primary\" type=\"submit\">Update</button>\n      </div>\n      <div class=\"col-md-6\">\n        <button\n          mat-raised-button\n          color=\"primary\"\n          type=\"button\"\n          (click)=\"updateTag()\"\n        >\n          Update as Template\n        </button>\n      </div>\n    </div>\n  </form>\n  ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Params } from '@angular/router';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { TagManagementService } from '../tag-management.service';\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n  FormGroupDirective,\r\n} from '@angular/forms';\r\n\r\ninterface StatType {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-new-tag',\r\n  templateUrl: './new-tag.component.html',\r\n  styleUrls: ['./new-tag.component.scss'],\r\n})\r\nexport class NewTagComponent implements OnInit {\r\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\r\n  newTagFG: FormGroup;\r\n  statTypes: any;\r\n  rotationTypes: any;\r\n  paramTypes: any;\r\n  url: String;\r\n  initialURL: URL;\r\n  company: String;\r\n  countries: any;\r\n  versions: any;\r\n  versionList: any = [];\r\n  edgeVersions : any;\r\n  operaVersions: any;\r\n  browserVersions: any;\r\n  initSubid = [\r\n    {\r\n      subid: \"1\",\r\n      limit: \"1000\",\r\n      split: \"70\"\r\n    },\r\n    {\r\n      subid: \"2\",\r\n      limit: \"1000\",\r\n      split: \"70\"\r\n    }\r\n  ]\r\n  \r\n  constructor(\r\n    private tagManagementService: TagManagementService,\r\n    private fb: FormBuilder, \r\n    private _snackBarService: SnackbarService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.company = 'Manic Traffic';\r\n    this.url =\r\n      'https://us.search.yahoo.com/yhs/search?hspart=brandclick&hsimp=yhs-calm&p=flowers';\r\n    this.initialURL = new URL('https://adserver.com/search');\r\n\r\n    this.newTagFG = this.fb.group({\r\n      name: ['', Validators.required],\r\n      publisher: ['', Validators.required],\r\n      advertiser: ['', Validators.required],\r\n      browser: ['', Validators.required],\r\n      deviceType: ['', Validators.required],\r\n      version: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      company: ['', Validators.required],\r\n      adServerUrl: ['', Validators.required],\r\n      statType: ['', Validators.required],\r\n      // subid: ['', Validators.required],\r\n      // limit: ['', Validators.required],\r\n      // split: ['', Validators.required],\r\n      subids: this.fb.array([]),\r\n      rotationType: ['', Validators.required],\r\n      url: new FormControl('', [Validators.required]),\r\n      params: this.fb.array([]),\r\n    });\r\n\r\n    this.statTypes = this.getStatTypes();\r\n    this.rotationTypes = this.getRotationTypes();\r\n    this.paramTypes = this.getParamTypes();\r\n    this.countries = this.getCountries();\r\n    this.browserVersions = this.getVersions();\r\n    this.initSubid.map((item) => {\r\n      this.subids.push(this.fb.group(item));\r\n    });\r\n    \r\n  }\r\n\r\n  //Detects when URL is pasted into the field\r\n  //https://us.search.yahoo.com/yhs/search?hspart=brandclick&hsimp=yhs-calm&p=flowers\r\n  getUrlParams(url) {\r\n    //Resets the URL params on every change\r\n    this.deleteValueOfFormControl('params');\r\n    if (this.isValidURL(url)) {\r\n      url = new URL(url);\r\n      for (var key of url.searchParams.keys()) {\r\n        let value = url.searchParams.get(key);\r\n        this.addParamsToUrlForm(key, value);\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  \r\n  //Gets the value of any form Array\r\n  //Returns a form array\r\n  get params() {\r\n    return this.newTagFG.controls['params'] as FormArray;\r\n  }\r\n  \r\n  get subids() {\r\n    return this.newTagFG.controls['subids'] as FormArray;\r\n  }\r\n  newSubids(): FormGroup {\r\n    return this.fb.group({\r\n      subid: \"\",\r\n      limit: \"\",\r\n      split: \"\"\r\n    })\r\n  }\r\n   \r\n  addSubid(event) {\r\n    this.subids.push(this.newSubids());\r\n  }\r\n  removeSubid(i:number) {\r\n    this.subids.removeAt(i);\r\n  }\r\n  \r\n  //Deletes value of any given form control\r\n  deleteValueOfFormControl(controlName) {\r\n    this.params.clear();\r\n  }\r\n\r\n  //Updates the original parameters that will be received and sent on the first server request\r\n  //Example: domain.com/search?subid={{dynamic}}&q={{dynamic}}&search=[bing]\r\n  updateInitialParams(param, index) {\r\n    console.log('Updating Initial Params');\r\n    console.log(param, index);\r\n    if (param.value === 'static') {\r\n      console.log('static!');\r\n      this.params.controls[index]\r\n        .get('initialParam')\r\n        .setValue(this.params.controls[index].get('value').value);\r\n      this.createInitialURL();\r\n    } else {\r\n      // this.params.controls[index]\r\n      //   .get('initialParam')\r\n      //   .setValue(this.params.controls[index].get('key').value);\r\n    }\r\n  }\r\n\r\n  //Checks to see if initialParam mat input field has been touched and updates initial URL\r\n  updateInitialParamURL(value, index) {\r\n    if (this.params.controls[index].get('paramType').value === 'dynamic') {\r\n      this.createInitialURL();\r\n    }\r\n  }\r\n\r\n  //Builds the initial URL from the paramaters\r\n  createInitialURL() {\r\n    console.log('Updating URL');\r\n    this.initialURL = new URL('https://adserver.com/search');\r\n    this.params.controls.forEach((element, index) => {\r\n      if (element.value.paramType === 'dynamic') {\r\n        this.initialURL.searchParams.append(\r\n          element.value.key,\r\n          '{{' + element.value.initialParam + '}}'\r\n        );\r\n      } else if (element.value.paramType === 'static') {\r\n        // this.initialURL.searchParams.append(\r\n        //   element.value.key,\r\n        //   element.value.value\r\n        // );\r\n      } else {\r\n      }\r\n    });\r\n  }\r\n\r\n  //Decodes the URL for the Angular Template\r\n  decodeURL(url) {\r\n    return decodeURI(url);\r\n  }\r\n\r\n  //Adds key/valuew to FormArray 'Params'\r\n  addParamsToUrlForm(key, value) {\r\n    let paramForm = this.fb.group({\r\n      key: [key, Validators.required],\r\n      value: [value, Validators.required],\r\n      paramType: ['', Validators.required],\r\n      initialParam: ['', Validators.required],\r\n    });\r\n    console.log(this.newTagFG);\r\n    this.params.push(paramForm);\r\n  }\r\n\r\n  //Checks to see if URL entered is valid\r\n  //If URL is valid return true\r\n  //Else if URL is invalid return false and throw mat-error\r\n  private isValidURL(url) {\r\n    console.log(url);\r\n    try {\r\n      let finalUrl = new URL(url);\r\n      return true;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  //Saves the tag onto the database\r\n  saveTag() {\r\n    console.log(\"============\", this.newTagFG.value, this.newTagFG.valid)\r\n    this.newTagFG.markAllAsTouched();\r\n    if (this.newTagFG.valid) {\r\n      this.tagManagementService.addTag(this.newTagFG.value).subscribe(res => {\r\n        this._snackBarService.info('Added a new tag');\r\n        this.newTagFG.reset();\r\n        this.formGroupDirective.resetForm();\r\n        this.url ='https://us.search.yahoo.com/yhs/search?hspart=brandclick&hsimp=yhs-calm&p=flowers';\r\n        this.initialURL = new URL('https://adserver.com/search');\r\n        this.getUrlParams(this.url);\r\n      }, (err) => {\r\n        this._snackBarService.info(err.error);\r\n      },\r\n      )\r\n      \r\n    }\r\n  }\r\n  getBrowers(event) {\r\n    if (event.value.length > 0) {\r\n      let vTemp: any[] = [];\r\n      for(var e of event.value) {\r\n        let filterdata = this.versionList.filter(function(version: any) {\r\n          return version.value.includes(e)\r\n        })\r\n        filterdata.map((filter: any) => {\r\n            vTemp.push(filter);\r\n        })\r\n      }\r\n      this.browserVersions = vTemp;\r\n    }\r\n  }\r\n\r\n  //Saves the tag as a template\r\n  saveTemplate() {}\r\n\r\n  //Gets different ways a tag can display stats\r\n  private getStatTypes() {\r\n    return [\r\n      { value: 'rpm', viewValue: 'RPM Based' },\r\n      { value: 'subid', viewValue: 'Sub-ID Based' },\r\n    ];\r\n  }\r\n\r\n  //Gets Country List\r\n  private getCountries() {\r\n    return [\r\n      {value: 'Afghanistan', viewValue: 'Afghanistan'}, \r\n      {value: 'Åland Islands', viewValue: 'Åland Islands'}, \r\n      {value: 'Albania', viewValue: 'Albania'}, \r\n      {value: 'Algeria', viewValue: 'Algeria'}, \r\n      {value: 'American Samoa', viewValue: 'American Samoa'}, \r\n      {value: 'Andorra', viewValue: 'Andorra'}, \r\n      {value: 'Angola', viewValue: 'Angola'}, \r\n      {value: 'Anguilla', viewValue: 'Anguilla'}, \r\n      {value: 'Antarctica', viewValue: 'Antarctica'}, \r\n      {value: 'Antigua and Barbuda', viewValue: 'Antigua and Barbuda'}, \r\n      {value: 'Argentina', viewValue: 'Argentina'}, \r\n      {value: 'Armenia', viewValue: 'Armenia'}, \r\n      {value: 'Aruba', viewValue: 'Aruba'}, \r\n      {value: 'Australia', viewValue: 'Australia'}, \r\n      {value: 'Austria', viewValue: 'Austria'}, \r\n      {value: 'Azerbaijan', viewValue: 'Azerbaijan'}, \r\n      {value: 'Bahamas', viewValue: 'Bahamas'}, \r\n      {value: 'Bahrain', viewValue: 'Bahrain'}, \r\n      {value: 'Bangladesh', viewValue: 'Bangladesh'}, \r\n      {value: 'Barbados', viewValue: 'Barbados'}, \r\n      {value: 'Belarus', viewValue: 'Belarus'}, \r\n      {value: 'Belgium', viewValue: 'Belgium'}, \r\n      {value: 'Belize', viewValue: 'Belize'}, \r\n      {value: 'Benin', viewValue: 'Benin'}, \r\n      {value: 'Bermuda', viewValue: 'Bermuda'}, \r\n      {value: 'Bhutan', viewValue: 'Bhutan'}, \r\n      {value: 'Bolivia', viewValue: 'Bolivia'}, \r\n      {value: 'Bosnia and Herzegovina', viewValue: 'Bosnia and Herzegovina'}, \r\n      {value: 'Botswana', viewValue: 'Botswana'}, \r\n      {value: 'Bouvet Island', viewValue: 'Bouvet Island'}, \r\n      {value: 'Brazil', viewValue: 'Brazil'}, \r\n      {value: 'British Indian Ocean Territory', viewValue: 'British Indian Ocean Territory'}, \r\n      {value: 'Brunei Darussalam', viewValue: 'Brunei Darussala'}, \r\n      {value: 'Bulgaria', viewValue: 'Bulgaria'}, \r\n      {value: 'Burkina Faso', viewValue: 'Burkina Faso'}, \r\n      {value: 'Burundi', viewValue: 'Burundi'}, \r\n      {value: 'Cambodia', viewValue: 'Cambodia'}, \r\n      {value: 'Cameroon', viewValue: 'Cameroon'}, \r\n      {value: 'Canada', viewValue: 'Canada'}, \r\n      {value: 'Cape Verde', viewValue: 'Cape Verde'}, \r\n      {value: 'Cayman Islands', viewValue: 'Cayman Islands'}, \r\n      {value: 'Central African Republic', viewValue: 'Central African Republic'}, \r\n      {value: 'Chad', viewValue: 'Chad'}, \r\n      {value: 'Chile', viewValue: 'Chile'}, \r\n      {value: 'China', viewValue: 'China'}, \r\n      {value: 'Christmas Island', viewValue: 'Christmas Island'}, \r\n      {value: 'Cocos (Keeling) Islands', viewValue: 'Cocos (Keeling) Islands'}, \r\n      {value: 'Colombia', viewValue: 'Colombia'}, \r\n      {value: 'Comoros', viewValue: 'Comoros'}, \r\n      {value: 'Congo', viewValue: 'Congo'}, \r\n      {value: 'Congo, The Democratic Republic of the', viewValue: 'Congo, The Democratic Republic of the'}, \r\n      {value: 'Cook Islands', viewValue: 'Cook Islands'}, \r\n      {value: 'Costa Rica', viewValue: 'Costa Rica'}, \r\n      {value: 'Cote D\\'Ivoire', viewValue: 'Cote D\\'Ivoire'}, \r\n      {value: 'Croatia', viewValue: 'Croatia'}, \r\n      {value: 'Cuba', viewValue: 'Cuba'}, \r\n      {value: 'Cyprus', viewValue: 'Cyprus'}, \r\n      {value: 'Czech Republic', viewValue: 'Czech Republic'}, \r\n      {value: 'Denmark', viewValue: 'Denmark'}, \r\n      {value: 'Djibouti', viewValue: 'Djibouti'}, \r\n      {value: 'Dominica', viewValue: 'Dominica'}, \r\n      {value: 'Dominican Republic', viewValue: 'Dominican Republic'}, \r\n      {value: 'Ecuador', viewValue: 'Ecuador'}, \r\n      {value: 'Egypt', viewValue: 'Egypt'}, \r\n      {value: 'El Salvador', viewValue: 'El Salvador'}, \r\n      {value: 'Equatorial Guinea', viewValue: 'Equatorial Guinea'}, \r\n      {value: 'Eritrea', viewValue: 'Eritrea'}, \r\n      {value: 'Estonia', viewValue: 'Estonia'}, \r\n      {value: 'Ethiopia', viewValue: 'Ethiopia'}, \r\n      {value: 'Falkland Islands (Malvinas)', viewValue: 'Falkland Islands (Malvinas)'}, \r\n      {value: 'Faroe Islands', viewValue: 'Faroe Islands'}, \r\n      {value: 'Fiji', viewValue: 'Fiji'}, \r\n      {value: 'Finland', viewValue: 'Finland'}, \r\n      {value: 'France', viewValue: 'France'}, \r\n      {value: 'French Guiana', viewValue: 'French Guiana'}, \r\n      {value: 'French Polynesia', viewValue: 'French Polynesia'}, \r\n      {value: 'French Southern Territories', viewValue: 'French Southern Territories'}, \r\n      {value: 'Gabon', viewValue: 'Gabon'}, \r\n      {value: 'Gambia', viewValue: 'Gambia'}, \r\n      {value: 'Georgia', viewValue: 'Georgia'}, \r\n      {value: 'Germany', viewValue: 'Germany'}, \r\n      {value: 'Ghana', viewValue: 'Ghana'}, \r\n      {value: 'Gibraltar', viewValue: 'Gibraltar'}, \r\n      {value: 'Greece', viewValue: 'Greece'}, \r\n      {value: 'Greenland', viewValue: 'Greenland'}, \r\n      {value: 'Grenada', viewValue: 'Grenada'}, \r\n      {value: 'Guadeloupe', viewValue: 'Guadeloupe'}, \r\n      {value: 'Guam', viewValue: 'Guam'}, \r\n      {value: 'Guatemala', viewValue: 'Guatemala'}, \r\n      {value: 'Guernsey', viewValue: 'Guernsey'}, \r\n      {value: 'Guinea', viewValue: 'Guinea'}, \r\n      {value: 'Guinea-Bissau', viewValue: 'Guinea-Bissau'}, \r\n      {value: 'Guyana', viewValue: 'Guyana'}, \r\n      {value: 'Haiti', viewValue: 'Haiti'}, \r\n      {value: 'Heard Island and Mcdonald Islands', viewValue: 'Heard Island and Mcdonald Islands'}, \r\n      {value: 'Holy See (Vatican City State)', viewValue: 'Holy See (Vatican City State)'}, \r\n      {value: 'Honduras', viewValue: 'Honduras'}, \r\n      {value: 'Hong Kong', viewValue: 'Hong Kong'}, \r\n      {value: 'Hungary', viewValue: 'Hungary'}, \r\n      {value: 'Iceland', viewValue: 'Iceland'}, \r\n      {value: 'India', viewValue: 'India'}, \r\n      {value: 'Indonesia', viewValue: 'Indonesia'}, \r\n      {value: 'Iran, Islamic Republic Of', viewValue: 'Iran, Islamic Republic Of'}, \r\n      {value: 'Iraq', viewValue: 'Iraq'}, \r\n      {value: 'Ireland', viewValue: 'Ireland'}, \r\n      {value: 'Isle of Man', viewValue: 'Isle of Man'}, \r\n      {value: 'Israel', viewValue: 'Israel'}, \r\n      {value: 'Italy', viewValue: 'Italy'}, \r\n      {value: 'Jamaica', viewValue: 'Jamaica'}, \r\n      {value: 'Japan', viewValue: 'Japan'}, \r\n      {value: 'Jersey', viewValue: 'Jersey'}, \r\n      {value: 'Jordan', viewValue: 'Jordan'}, \r\n      {value: 'Kazakhstan', viewValue: 'Kazakhstan'}, \r\n      {value: 'Kenya', viewValue: 'Kenya'}, \r\n      {value: 'Kiribati', viewValue: 'Kiribati'}, \r\n      {value: 'Korea, Democratic People\\'S Republic of', viewValue: 'Korea, Democratic People\\'S Republic o'}, \r\n      {value: 'Korea, Republic of', viewValue: 'Korea, Republic of'}, \r\n      {value: 'Kuwait', viewValue: 'Kuwait'}, \r\n      {value: 'Kyrgyzstan', viewValue: 'Kyrgyzstan'}, \r\n      {value: 'Lao People\\'S Democratic Republic', viewValue: 'Lao People\\'S Democratic Republic'}, \r\n      {value: 'Latvia', viewValue: 'Latvia'}, \r\n      {value: 'Lebanon', viewValue: 'Lebanon'}, \r\n      {value: 'Lesotho', viewValue: 'Lesotho'}, \r\n      {value: 'Liberia', viewValue: 'Liberia'}, \r\n      {value: 'Libyan Arab Jamahiriya', viewValue: 'Libyan Arab Jamahiriya'}, \r\n      {value: 'Liechtenstein', viewValue: 'Liechtenstein'}, \r\n      {value: 'Lithuania', viewValue: 'Lithuania'}, \r\n      {value: 'Luxembourg', viewValue: 'Luxembourg'}, \r\n      {value: 'Macao', viewValue: 'Macao'}, \r\n      {value: 'Macedonia, The Former Yugoslav Republic of', viewValue: 'Macedonia, The Former Yugoslav Republic of'}, \r\n      {value: 'Madagascar', viewValue: 'Madagascar'}, \r\n      {value: 'Malawi', viewValue: 'Malawi'}, \r\n      {value: 'Malaysia', viewValue: 'Malaysia'}, \r\n      {value: 'Maldives', viewValue: 'Maldives'}, \r\n      {value: 'Mali', viewValue: 'Mali'}, \r\n      {value: 'Malta', viewValue: 'Malta'}, \r\n      {value: 'Marshall Islands', viewValue: 'Marshall Islands'}, \r\n      {value: 'Martinique', viewValue: 'Martinique'}, \r\n      {value: 'Mauritania', viewValue: 'Mauritania'}, \r\n      {value: 'Mauritius', viewValue: 'Mauritius'}, \r\n      {value: 'Mayotte', viewValue: 'Mayotte'}, \r\n      {value: 'Mexico', viewValue: 'Mexico'}, \r\n      {value: 'Micronesia, Federated States of', viewValue: 'Micronesia, Federated States of'}, \r\n      {value: 'Moldova, Republic of', viewValue: 'Moldova, Republic of'}, \r\n      {value: 'Monaco', viewValue: 'Monaco'}, \r\n      {value: 'Mongolia', viewValue: 'Mongolia'}, \r\n      {value: 'Montserrat', viewValue: 'Montserrat'}, \r\n      {value: 'Morocco', viewValue: 'Morocco'}, \r\n      {value: 'Mozambique', viewValue: 'Mozambique'}, \r\n      {value: 'Myanmar', viewValue: 'Myanmar'}, \r\n      {value: 'Namibia', viewValue: 'Namibia'}, \r\n      {value: 'Nauru', viewValue: 'Nauru'}, \r\n      {value: 'Nepal', viewValue: 'Nepal'}, \r\n      {value: 'Netherlands', viewValue: 'Netherlands'}, \r\n      {value: 'Netherlands Antilles', viewValue: 'Netherlands Antilles'}, \r\n      {value: 'New Caledonia', viewValue: 'New Caledonia'}, \r\n      {value: 'New Zealand', viewValue: 'New Zealand'}, \r\n      {value: 'Nicaragua', viewValue: 'Nicaragua'}, \r\n      {value: 'Niger', viewValue: 'Niger'}, \r\n      {value: 'Nigeria', viewValue: 'Nigeria'}, \r\n      {value: 'Niue', viewValue: 'Niue'}, \r\n      {value: 'Norfolk Island', viewValue: 'Norfolk Island'}, \r\n      {value: 'Northern Mariana Islands', viewValue: 'Northern Mariana Islands'}, \r\n      {value: 'Norway', viewValue: 'Norway'}, \r\n      {value: 'Oman', viewValue: 'Oman'}, \r\n      {value: 'Pakistan', viewValue: 'Pakistan'}, \r\n      {value: 'Palau', viewValue: 'Palau'}, \r\n      {value: 'Palestinian Territory, Occupied', viewValue: 'Palestinian Territory, Occupied'}, \r\n      {value: 'Panama', viewValue: 'Panama'}, \r\n      {value: 'Papua New Guinea', viewValue: 'Papua New Guinea'}, \r\n      {value: 'Paraguay', viewValue: 'Paraguay'}, \r\n      {value: 'Peru', viewValue: 'Peru'}, \r\n      {value: 'Philippines', viewValue: 'Philippines'}, \r\n      {value: 'Pitcairn', viewValue: 'Pitcairn'}, \r\n      {value: 'Poland', viewValue: 'Poland'}, \r\n      {value: 'Portugal', viewValue: 'Portugal'}, \r\n      {value: 'Puerto Rico', viewValue: 'Puerto Rico'}, \r\n      {value: 'Qatar', viewValue: 'Qatar'}, \r\n      {value: 'Reunion', viewValue: 'Reunion'}, \r\n      {value: 'Romania', viewValue: 'Romania'}, \r\n      {value: 'Russian Federation', viewValue: 'Russian Federatio'}, \r\n      {value: 'RWANDA', viewValue: 'RWANDA'}, \r\n      {value: 'Saint Helena', viewValue: 'Saint Helena'}, \r\n      {value: 'Saint Kitts and Nevis', viewValue: 'Saint Kitts and Nevis'}, \r\n      {value: 'Saint Lucia', viewValue: 'Saint Lucia'}, \r\n      {value: 'Saint Pierre and Miquelon', viewValue: 'Saint Pierre and Miquelon'}, \r\n      {value: 'Saint Vincent and the Grenadines', viewValue: 'Saint Vincent and the Grenadines'}, \r\n      {value: 'Samoa', viewValue: 'Samoa'}, \r\n      {value: 'San Marino', viewValue: 'San Marino'}, \r\n      {value: 'Sao Tome and Principe', viewValue: 'Sao Tome and Principe'}, \r\n      {value: 'Saudi Arabia', viewValue: 'Saudi Arabia'}, \r\n      {value: 'Senegal', viewValue: 'Senegal'}, \r\n      {value: 'Serbia and Montenegro', viewValue: 'Serbia and Montenegro'}, \r\n      {value: 'Seychelles', viewValue: 'Seychelles'}, \r\n      {value: 'Sierra Leone', viewValue: 'Sierra Leone'}, \r\n      {value: 'Singapore', viewValue: 'Singapore'}, \r\n      {value: 'Slovakia', viewValue: 'Slovakia'}, \r\n      {value: 'Slovenia', viewValue: 'Slovenia'}, \r\n      {value: 'Solomon Islands', viewValue: 'Solomon Islands'}, \r\n      {value: 'Somalia', viewValue: 'Somalia'}, \r\n      {value: 'South Africa', viewValue: 'South Africa'}, \r\n      {value: 'South Georgia and the South Sandwich Islands', viewValue: 'South Georgia and the South Sandwich Isla'}, \r\n      {value: 'Spain', viewValue: 'Spain'}, \r\n      {value: 'Sri Lanka', viewValue: 'Sri Lanka'}, \r\n      {value: 'Sudan', viewValue: 'Sudan'}, \r\n      {value: 'Surivalue', viewValue: 'Surivalue'}, \r\n      {value: 'Svalbard and Jan Mayen', viewValue: 'Svalbard and Jan Mayen'}, \r\n      {value: 'Swaziland', viewValue: 'Swaziland'}, \r\n      {value: 'Sweden', viewValue: 'Sweden'}, \r\n      {value: 'Switzerland', viewValue: 'Switzerland'}, \r\n      {value: 'Syrian Arab Republic', viewValue: 'Syrian Arab Republic'}, \r\n      {value: 'Taiwan, Province of China', viewValue: 'Taiwan, Province of China'}, \r\n      {value: 'Tajikistan', viewValue: 'Tajikistan'}, \r\n      {value: 'Tanzania, United Republic of', viewValue: 'Tanzania, United Republic of'}, \r\n      {value: 'Thailand', viewValue: 'Thailand'}, \r\n      {value: 'Timor-Leste', viewValue: 'Timor-Leste'}, \r\n      {value: 'Togo', viewValue: 'Togo'}, \r\n      {value: 'Tokelau', viewValue: 'Tokelau'}, \r\n      {value: 'Tonga', viewValue: 'Tonga'}, \r\n      {value: 'TrinviewValuead and Tobago', viewValue: 'TrinviewValuead and Tobago'}, \r\n      {value: 'Tunisia', viewValue: 'Tunisia'}, \r\n      {value: 'Turkey', viewValue: 'Turkey'}, \r\n      {value: 'Turkmenistan', viewValue: 'Turkmenistan'}, \r\n      {value: 'Turks and Caicos Islands', viewValue: 'Turks and Caicos Islands'}, \r\n      {value: 'Tuvalu', viewValue: 'Tuvalu'}, \r\n      {value: 'Uganda', viewValue: 'Uganda'}, \r\n      {value: 'Ukraine', viewValue: 'Ukraine'}, \r\n      {value: 'United Arab Emirates', viewValue: 'United Arab Emirates'}, \r\n      {value: 'United Kingdom', viewValue: 'United Kingdom'}, \r\n      {value: 'United States', viewValue: 'United States'}, \r\n      {value: 'United States Minor Outlying Islands', viewValue: 'United States Minor Outlying Islands'}, \r\n      {value: 'Uruguay', viewValue: 'Uruguay'}, \r\n      {value: 'Uzbekistan', viewValue: 'Uzbekistan'}, \r\n      {value: 'Vanuatu', viewValue: 'Vanuatu'}, \r\n      {value: 'Venezuela', viewValue: 'Venezuela'}, \r\n      {value: 'Viet Nam', viewValue: 'Viet Nam'}, \r\n      {value: 'Virgin Islands, British', viewValue: 'Virgin Islands, British'}, \r\n      {value: 'Virgin Islands, U.S.', viewValue: 'Virgin Islands, U.S.'}, \r\n      {value: 'Wallis and Futuna', viewValue: 'Wallis and Futuna'}, \r\n      {value: 'Western Sahara', viewValue: 'Western Sahara'}, \r\n      {value: 'Yemen', viewValue: 'Yemen'}, \r\n      {value: 'Zambia', viewValue: 'Zambia'}, \r\n      {value: 'Zimbabwe', viewValue: 'Zimbabwe'} \r\n    ]\r\n  }\r\n  //Gets Browser Versions\r\n  private getVersions() {\r\n    this.edgeVersions = [\r\n      {value: \"Edge - 102.0.1245.7\", viewValue: \"Edge - 102.0.1245.7\"},\r\n      {value: \"Edge - 101.0.1210.10\", viewValue: \"Edge - 101.0.1210.10\"},\r\n      {value: \"Edge - 100.0.1185.10\", viewValue: \"Edge - 100.0.1185.10\"},\r\n      {value: \"Edge - 99.0.1150.11\", viewValue: \"Edge - 99.0.1150.11\"},\r\n      {value: \"Edge - 98.0.1108.23\", viewValue: \"Edge - 98.0.1108.23\"},\r\n      {value: \"Edge - 97.0.1072.21\", viewValue: \"Edge - 97.0.1072.21\"},\r\n      \r\n    ];\r\n    this.operaVersions = [\r\n      {value: \"Opera - 12.15\", viewValue: \"Opera - 12.15\"},\r\n      {value: \"Opera - 12.14\", viewValue: \"Opera - 12.14\"},\r\n      {value: \"Opera - 12.13\", viewValue: \"Opera - 12.13\"},\r\n      {value: \"Opera - 12.12\", viewValue: \"Opera - 12.12\"},\r\n      {value: \"Opera - 12.11\", viewValue: \"Opera - 12.11\"},\r\n      {value: \"Opera - 12.10\", viewValue: \"Opera - 12.10\"}\r\n    ];\r\n    this.edgeVersions.map((edge: any) => {\r\n      this.versionList.push(edge);\r\n    });\r\n    this.operaVersions.map((opera: any) => {\r\n      this.versionList.push(opera);\r\n    });\r\n\r\n    //Chrome Version List Get\r\n    this.tagManagementService.getChromeBrowserVersion().subscribe((res: any) => {\r\n      let versionsChromeData = res.slice(0, 6);\r\n      versionsChromeData.map((version: { version: string; }) => {\r\n        this.versionList.push(\r\n            {\r\n                value: \"Chrome - \" + version.version,\r\n                viewValue: \"Chrome - \" + version.version\r\n            }\r\n        )\r\n      });    \r\n    }); \r\n    //FireFox Version List Get\r\n    this.tagManagementService.getFirefoxBrowserVersion().subscribe(res => {\r\n      var firefoxList = [];\r\n      for(var i in res){\r\n        firefoxList.push(\r\n            {\r\n                value: \"Firefox - \" + i,\r\n                viewValue: \"Firefox - \" + i\r\n            }\r\n        )\r\n      }\r\n      firefoxList.slice(firefoxList['length'] - 6, firefoxList['length']).map((version: { version: string; }) => {\r\n        this.versionList.push(\r\n            {\r\n                value: version['value'],\r\n                viewValue: version['viewValue']\r\n            }\r\n        )\r\n      });\r\n    });  \r\n\r\n    return this.versionList;\r\n  }\r\n  //Gets different ways a tag can display stats\r\n  private getRotationTypes() {\r\n    return [\r\n      { value: 'roundRobin', viewValue: 'Round Robin' },\r\n      { value: 'percentage', viewValue: 'Percentage' },\r\n    ];\r\n  }\r\n\r\n  private getParamTypes() {\r\n    return [\r\n      { value: 'static', viewValue: 'Static' },\r\n      { value: 'dynamic', viewValue: 'Dynamic' },\r\n    ];\r\n  }\r\n}\r\n","<form class=\"example-container\" [formGroup]=\"newTagFG\" (submit)=\"saveTag()\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Create New Tag</h3>\r\n          </div>\r\n          {{ newTagFG.value | json }}\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <mat-form-field>\r\n            <input\r\n              matInput\r\n              formControlName=\"name\"\r\n              placeholder=\"Name\"\r\n            />\r\n            <mat-error *ngIf=\"newTagFG.get('name').errors?.required\"\r\n              >Name is required.\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Advertiser</mat-label>\r\n            <mat-select matNativeControl formControlName=\"advertiser\">\r\n              <mat-option value=\"Perion\">Perion</mat-option>\r\n              <mat-option value=\"Apptitude\">Apptitude</mat-option>\r\n              <mat-option value=\"Hopkins\">Hopkins</mat-option>\r\n              <mat-option value=\"Third Party\">Third Party</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Publisher</mat-label>\r\n            <mat-select matNativeControl formControlName=\"publisher\">\r\n              <mat-option value=\"Pub 1\">Pub 1</mat-option>\r\n              <mat-option value=\"Pub 2\">Pub 2</mat-option>\r\n              <mat-option value=\"Pub 3\">Pub 3</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <input\r\n              matInput\r\n              formControlName=\"company\"\r\n              placeholder=\"Company\"\r\n              [(ngModel)]=\"company\"\r\n            />\r\n            <mat-error *ngIf=\"newTagFG.get('company').errors?.required\"\r\n              >Company name is required.\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Browsers Allowed</mat-label>\r\n            <mat-select matNativeControl (selectionChange)=\"getBrowers($event)\" formControlName=\"browser\" multiple>\r\n              <mat-option value=\"Chrome\">Chrome</mat-option>\r\n              <mat-option value=\"Firefox\">Firefox</mat-option>\r\n              <mat-option value=\"Edge\">Edge</mat-option>\r\n              <mat-option value=\"Internet Explorer\">Internet Explorer</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Device Type Allowed</mat-label>\r\n            <mat-select matNativeControl formControlName=\"deviceType\" multiple>\r\n              <mat-option value=\"Desktop\">Desktop</mat-option>\r\n              <mat-option value=\"Mobile\">Mobile</mat-option>              \r\n              <mat-option value=\"Tablet\">Tablet</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Browser Version Allowed</mat-label>\r\n            <mat-select matNativeControl formControlName=\"version\" multiple>\r\n              <mat-option\r\n                *ngFor=\"let browserVersion of browserVersions\"\r\n                [value]=\"browserVersion.value\"\r\n              >\r\n                {{ browserVersion.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Country Allowed</mat-label>\r\n            <mat-select matNativeControl formControlName=\"country\" multiple>\r\n              <mat-option\r\n                *ngFor=\"let country of countries\"\r\n                [value]=\"country.value\"\r\n              >\r\n                {{ country.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Ad Server URL</mat-label>\r\n            <mat-select formControlName=\"adServerUrl\">\r\n              <mat-option value=\"devisedata.com\">devisedata.com</mat-option>\r\n              <mat-option value=\"search.monarchdigital.com\">search.monarchdigital.com</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Stat Type</mat-label>\r\n            <mat-select formControlName=\"statType\">\r\n              <mat-option\r\n                *ngFor=\"let statType of statTypes\"\r\n                [value]=\"statType.value\"\r\n              >\r\n                {{ statType.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <div class=\"row mb-2\">\r\n            <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"addSubid($event)\">\r\n              Add\r\n            </button>\r\n          </div>\r\n          \r\n          <div formArrayName=\"subids\">\r\n            <div class=\"row\" *ngFor=\"let subItem of subids.controls; let i=index\" [formGroupName]=\"i\">\r\n              <div class=\"col-md-3\">\r\n                <mat-form-field>\r\n                  <input matInput placeholder=\"Subid\" formControlName=\"subid\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <mat-form-field>\r\n                  <input matInput placeholder=\"Limit\" formControlName=\"limit\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <mat-form-field>\r\n                  <input matInput placeholder=\"Split\" formControlName=\"split\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <button class=\"btn btn-sm btn-danger\" (click)=\"removeSubid(i)\">\r\n                  <i class=\"flaticon2-line\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n          \r\n          \r\n          <mat-form-field>\r\n            <mat-label>Rotation Type</mat-label>\r\n            <mat-select formControlName=\"rotationType\">\r\n              <mat-option\r\n                *ngFor=\"let rotationType of rotationTypes\"\r\n                [value]=\"rotationType.value\"\r\n              >\r\n                {{ rotationType.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Tag URLs</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <!-- URL INPUT START -->\r\n          <mat-form-field>\r\n            <input\r\n              matInput\r\n              [(ngModel)]=\"url\"\r\n              formControlName=\"url\"\r\n              placeholder=\"Final URL\"\r\n              (ngModelChange)=\"getUrlParams($event)\"\r\n            />\r\n            <mat-error *ngIf=\"newTagFG.get('url').errors?.required\"\r\n              >Final URL is required.\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <!-- URL INPUT END -->\r\n\r\n          <!-- FORM ARRAY PARAMS START -->\r\n          <ng-container formArrayName=\"params\">\r\n            <div *ngFor=\"let p of params.controls; index as i\">\r\n              <div class=\"params\" [formGroup]=\"p\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"key\"\r\n                    placeholder=\"Final Key\"\r\n                  />\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"value\"\r\n                    placeholder=\"Final Value\"\r\n                  />\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                  <mat-label>Param Type</mat-label>\r\n                  <mat-select\r\n                    formControlName=\"paramType\"\r\n                    (selectionChange)=\"updateInitialParams($event, i)\"\r\n                  >\r\n                    <mat-option\r\n                      *ngFor=\"let paramType of paramTypes\"\r\n                      [value]=\"paramType.value\"\r\n                    >\r\n                      {{ paramType.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"initialParam\"\r\n                    placeholder=\"Inital Value\"\r\n                    (keyup)=\"updateInitialParamURL($event, i)\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <p>Inital URL: <br />{{ decodeURL(initialURL) }}</p>\r\n          </ng-container>\r\n          <!-- FORM ARRAY PARAMS END -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- SAVING TAG -->\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <button mat-raised-button color=\"primary\" type=\"submit\">Save</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <button \r\n        mat-raised-button\r\n        color=\"primary\"\r\n        type=\"button\"\r\n        (click)=\"saveTag()\"\r\n      >\r\n        Save as Template\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NewTagComponent } from './new-tag/new-tag.component';\r\nimport { EditTagComponent } from './edit-tag/edit-tag.component';\r\nimport { TagsComponent } from './tags/tags.component';\r\nimport { TagManagementComponent } from './tag-management.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TagManagementComponent,\r\n    children: [\r\n      {\r\n        path: 'tags',\r\n        component: TagsComponent\r\n      },\r\n      {\r\n        path: 'new',\r\n        component: NewTagComponent\r\n      },\r\n      {\r\n        path: 'edit/:id',\r\n        component: EditTagComponent,\r\n        pathMatch: 'full'\r\n      },\r\n      { path: '', redirectTo: '', pathMatch: 'full' },\r\n      { path: '**', redirectTo: '', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TagManagementRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tag-management',\r\n  templateUrl: './tag-management.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class TagManagementComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TagManagementRoutingModule } from './tag-management-routing.module';\r\nimport { TagManagementComponent } from './tag-management.component';\r\nimport { NewTagComponent } from './new-tag/new-tag.component';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatIconModule } from '@angular/material/icon';\nimport { TagsComponent } from './tags/tags.component';\nimport { EditTagComponent } from './edit-tag/edit-tag.component';\r\n\r\n@NgModule({\r\n  declarations: [TagManagementComponent, NewTagComponent, TagsComponent, EditTagComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TagManagementRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    NgxDatatableModule,\r\n  ],\r\n  providers: [SnackbarService],\r\n  entryComponents: [NewTagComponent],\r\n})\r\nexport class TagManagementModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { TagsService } from './../../shared/service/tags.service';\r\nimport { TagInterface } from './../../shared/models/tag.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TagManagementService {\r\n\r\n  constructor(\r\n    private tagsService: TagsService,\r\n  ) { }\r\n\r\n  // Get all Chrome objects\r\n  getChromeBrowserVersion() {\r\n    return this.tagsService.getChrome();\r\n  }\r\n  // Get all Chrome objects\r\n  getFirefoxBrowserVersion() {\r\n    return this.tagsService.getFirefox();\r\n  }\r\n  addTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.add(tag);\r\n  }\r\n  getAllTags(): Observable<TagInterface[]> {\r\n    return this.tagsService.getAllTags();\r\n  }\r\n  deleteTag(tagKey: any) {\r\n    return this.tagsService.deleteTag(tagKey);\r\n  }\r\n\r\n  getOneTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.getOneTag(tag);\r\n  }\r\n  updateOneTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.updateOneTag(tag);\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TagManagementService } from '../tag-management.service';\nimport { TagInterface } from 'src/app/shared/models/tag.interface';\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\n\n@Component({\n  selector: 'app-tags',\n  templateUrl: './tags.component.html',\n  styleUrls: ['./tags.component.scss']\n})\nexport class TagsComponent implements OnInit {\n  loadingIndicator = true;\n  rows: Array<TagInterface>;\n  constructor(\n    private tagService: TagManagementService,\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private _snackBarService: SnackbarService\n  ) {\n    this.getAllTags();\n   }\n   \n  ngOnInit(): void {\n  }\n  editTag(tagID:any) {\n    this.router.navigateByUrl('/tag-management/edit/' + tagID);\n  }\n  deleteTag(id: any) {\n    if(window.confirm('Do you want to go ahead?')) {\n      this.tagService.deleteTag(id).subscribe((res) => {\n        this.getAllTags();\n        this._snackBarService.info('Deleted a tag');\n      })\n    }\n  }\n  getAllTags() {\n    this.tagService.getAllTags().subscribe((x) => {\n      this.rows = x;\n      console.log(this.rows);\n      this.loadingIndicator = false;\n      this.cdr.detectChanges();\n    });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xl-12\">\n      <div class=\"card card-custom example example-compact gutter-b\">\n        <div class=\"card-header\">\n          <div class=\"card-title\">\n            <h3 class=\"card-label\">View Tags</h3>\n          </div>\n        </div>\n        <div class=\"card-body\">\n          <ngx-datatable\n            class=\"material fullscreen\"\n            [rows]=\"rows\"\n            [columnMode]=\"'force'\"\n            [loadingIndicator]=\"loadingIndicator\"\n            [footerHeight]=\"50\"\n            [rowHeight]=\"50\"\n            [scrollbarH]=\"true\"\n            [headerHeight]=\"50\"\n            [limit]=\"10\"\n          >\n            <ngx-datatable-column name=\"Name\">\n              <ng-template let-column=\"column\" ngx-datatable-header-template>\n                Name\n              </ng-template>\n              <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                {{ value }}\n              </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Company\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Company\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Advertiser\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Advertiser\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Publisher\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Publisher\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Browser\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Browser\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Device Type\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Device Type\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Version\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Browser Version\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Country\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Country\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"id\">\n              <ng-template ngx-datatable-header-template>Edit</ng-template>\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                <button class=\"btn btn-sm btn-icon btn-icon-white btn-bg-primary m-1\" (click)=\"editTag(row._key)\">\n                    <i class=\"flaticon2-pen\"></i>\n                  </button>\n                  <button class=\"btn btn-sm btn-icon btn-bg-light btn-icon-danger m-1 btn-hover-danger\" (click)=\"deleteTag(row._key)\">\n                    <i class=\"flaticon2-line\"></i>\n                  </button>\n              </ng-template>\n            </ngx-datatable-column>\n          </ngx-datatable>\n        </div>\n      </div>\n    </div>\n</div>\n  "],"sourceRoot":"webpack:///"}