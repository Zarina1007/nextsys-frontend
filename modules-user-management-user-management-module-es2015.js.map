{"version":3,"sources":["./node_modules/ng-validate-equal/__ivy_ngcc__/fesm2015/ng-validate-equal.js","./src/app/modules/user-management/admins/admins.component.ts","./src/app/modules/user-management/admins/admins.component.html","./src/app/modules/user-management/advertisers/advertisers.component.ts","./src/app/modules/user-management/advertisers/advertisers.component.html","./src/app/modules/user-management/edit-users/add-company/add-company.component.ts","./src/app/modules/user-management/edit-users/add-company/add-company.component.html","./src/app/modules/user-management/edit-users/add-tag/add-tag.component.ts","./src/app/modules/user-management/edit-users/add-tag/add-tag.component.html","./src/app/modules/user-management/edit-users/edit-users.component.ts","./src/app/modules/user-management/edit-users/edit-users.component.html","./src/app/modules/user-management/edit-users/user-password-reset/user-password-reset.component.ts","./src/app/modules/user-management/edit-users/user-password-reset/user-password-reset.component.html","./src/app/modules/user-management/roles/permission/permission.component.ts","./src/app/modules/user-management/roles/permission/permission.component.html","./src/app/modules/user-management/roles/roles.component.ts","./src/app/modules/user-management/roles/roles.component.html","./src/app/modules/user-management/superadmins/superadmins.component.ts","./src/app/modules/user-management/superadmins/superadmins.component.html","./src/app/modules/user-management/user-management-routing.module.ts","./src/app/modules/user-management/user-management.component.ts","./src/app/modules/user-management/user-management.component.html","./src/app/modules/user-management/user-management.module.ts","./src/app/modules/user-management/user-management.service.ts","./src/app/modules/user-management/users/users.component.ts","./src/app/modules/user-management/users/users.component.html","./src/app/shared/service/helper.service.ts"],"names":[],"mappings":"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","file":"modules-user-management-user-management-module-es2015.js","sourcesContent":["import { __decorate, __param } from 'tslib';\r\nimport { Attribute, Directive, forwardRef, NgModule } from '@angular/core';\r\nimport { NG_VALIDATORS } from '@angular/forms';\r\n\r\nimport * as ɵngcc0 from '@angular/core';\nvar ValidateEqualDirective_1;\r\nlet ValidateEqualDirective = ValidateEqualDirective_1 = class ValidateEqualDirective {\r\n    constructor(otherControl) {\r\n        this.otherControl = otherControl;\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.valueChangesSub) {\r\n            this.valueChangesSub.unsubscribe();\r\n        }\r\n    }\r\n    validate(selfControl) {\r\n        const selfControlValue = selfControl.value;\r\n        const otherControl = selfControl.root.get(this.otherControl);\r\n        if (this.valueChangesSub) {\r\n            this.valueChangesSub.unsubscribe();\r\n        }\r\n        // this code works when user types in other control putting the error in self control\r\n        this.valueChangesSub = otherControl.valueChanges.subscribe(otherControlValue => {\r\n            if (!this.isEqual(selfControlValue, otherControlValue) && (selfControl.touched || selfControl.dirty)) {\r\n                selfControl.setErrors({\r\n                    notEqual: true\r\n                });\r\n            }\r\n            else {\r\n                if (selfControl.hasError('notEqual')) {\r\n                    delete selfControl.errors['notEqual'];\r\n                    if (!Object.keys(selfControl.errors).length) {\r\n                        selfControl.setErrors(null);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        // this code works when the user types in self control putting the error in self control\r\n        if (!this.isEqual(selfControlValue, otherControl.value) && (selfControl.touched || selfControl.dirty)) {\r\n            return {\r\n                notEqual: true\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    isEqual(val1, val2) {\r\n        val1 = this.unifyEmptyStrings(val1);\r\n        val2 = this.unifyEmptyStrings(val2);\r\n        return val1 === val2;\r\n    }\r\n    unifyEmptyStrings(val) {\r\n        const isDefined = this.isDefined;\r\n        if (val === null || !isDefined(val)) {\r\n            val = '';\r\n        }\r\n        return val;\r\n    }\r\n    isDefined(value) {\r\n        const defaultUndefined = void (0);\r\n        return value !== defaultUndefined;\r\n    }\r\n};\nValidateEqualDirective.ɵfac = function ValidateEqualDirective_Factory(t) { return new (t || ValidateEqualDirective)(ɵngcc0.ɵɵinjectAttribute('ngValidateEqual')); };\nValidateEqualDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ValidateEqualDirective, selectors: [[\"\", \"ngValidateEqual\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: NG_VALIDATORS, useExisting: forwardRef(() => ValidateEqualDirective_1), multi: true }\n        ])] });\r\nValidateEqualDirective.ctorParameters = () => [\r\n    { type: String, decorators: [{ type: Attribute, args: ['ngValidateEqual',] }] }\r\n];\r\nValidateEqualDirective = ValidateEqualDirective_1 = __decorate([ __param(0, Attribute('ngValidateEqual'))\r\n], ValidateEqualDirective);\r\n\r\nlet ValidateEqualModule = class ValidateEqualModule {\r\n};\nValidateEqualModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ValidateEqualModule });\nValidateEqualModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ValidateEqualModule_Factory(t) { return new (t || ValidateEqualModule)(); }, imports: [[]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ValidateEqualDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngValidateEqual]',\n                providers: [\n                    { provide: NG_VALIDATORS, useExisting: forwardRef(() => ValidateEqualDirective_1), multi: true }\n                ]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Attribute,\n                args: ['ngValidateEqual']\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ValidateEqualModule, { declarations: [ValidateEqualDirective], exports: [ValidateEqualDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ValidateEqualModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [ValidateEqualDirective],\n                imports: [],\n                exports: [ValidateEqualDirective]\n            }]\n    }], null, null); })();\r\n\r\n/*\r\n * Public API Surface of ng-validate-equal\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { ValidateEqualDirective, ValidateEqualModule };\r\n\r\n\n//# sourceMappingURL=ng-validate-equal.js.map","import { Router, ActivatedRoute } from '@angular/router';\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { UsersService } from '../../../shared/service/users.service'\nimport { Subscription } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { UserInterface } from './../../../shared/models/user.interface';\n\n@Component({\n  selector: 'app-admins',\n  templateUrl: './admins.component.html',\n  styleUrls: ['./admins.component.scss']\n})\nexport class AdminsComponent implements OnInit {\n  displayedColumns = [\"fullname\", \"email\", \"stat\", \"action\"];\n  admins = new MatTableDataSource<UserInterface>();\n\n  //Local Storage Company\n  localStorageCompany: any;\n\n  private subscritions: Subscription[] = [];\n  constructor(\n    private usersServie: UsersService,\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UsersService\n  ) { }\n\n  ngOnInit(): void {\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\n    this.subscritions.push(\n      this.usersServie.getAdminAll().subscribe(data => {\n        console.log(data);\n        if(this.localStorageCompany) {\n          this.admins.data = data.filter(userData => userData.companies.includes(this.localStorageCompany));\n        } else {\n          this.admins.data = data;\n        }\n        this.cdr.detectChanges();\n      })\n    );\n  }\n  handleEditClick(userId: string): void {\n    this.router.navigateByUrl('/user-management/edit/' + userId);\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-xl-12\">\n      <div class=\"card card-custom example example-compact gutter-b\">\n        <div class=\"card-header\">\n          <div class=\"card-title\">\n            <h3 class=\"card-label\">Admins</h3>\n          </div>\n        </div>\n        <div class=\"card-body\">\n            <div class=\"example-container mat-elevation-z8\">\n                <mat-table #table [dataSource]=\"admins\">\n                    <ng-container matColumnDef=\"fullname\">\n                        <mat-header-cell *matHeaderCellDef> Full Name </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{element.fullname}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"email\">\n                        <mat-header-cell *matHeaderCellDef> Email </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{element.email}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"stat\">\n                        <mat-header-cell *matHeaderCellDef> Stat# </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{element.tags.length}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"action\">\n                        <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"handleEditClick(element._key)\">\n                            Edit\n                        </button>\n                        </mat-cell>\n                    </ng-container>\n        \n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n                </mat-table>\n                <div *ngIf=\"admins.data.length === 0\">\n                    <p style=\"text-align: center;padding: 10px;\">No records found</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Router, ActivatedRoute } from '@angular/router';\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { UsersService } from '../../../shared/service/users.service'\nimport { Subscription } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { UserInterface } from './../../../shared/models/user.interface';\n\n@Component({\n  selector: 'app-advertisers',\n  templateUrl: './advertisers.component.html',\n  styleUrls: ['./advertisers.component.scss']\n})\nexport class AdvertisersComponent implements OnInit {\n  displayedColumns = [\"fullname\", \"email\", \"stat\", \"action\"];\n  advertisers = new MatTableDataSource<UserInterface>();\n\n  //Local Storage Company\n  localStorageCompany: any;\n\n  private subscritions: Subscription[] = [];\n  constructor(\n    private usersServie: UsersService,\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UsersService\n  ) { }\n\n  ngOnInit(): void {\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\n    this.subscritions.push(\n      this.usersServie.getAdvertiserAll().subscribe(data => {\n        console.log(data);\n        if(this.localStorageCompany) {\n          this.advertisers.data = data.filter(userData => userData.companies.includes(this.localStorageCompany));\n        } else {\n          this.advertisers.data = data;\n        }\n        \n        this.cdr.detectChanges();\n      })\n    );\n  }\n  handleEditClick(userId: string): void {\n    this.router.navigateByUrl('/user-management/edit/' + userId);\n  }\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xl-12\">\n      <div class=\"card card-custom example example-compact gutter-b\">\n        <div class=\"card-header\">\n          <div class=\"card-title\">\n            <h3 class=\"card-label\">Advertiser Users</h3>\n          </div>\n        </div>\n        <div class=\"card-body\">\n            <div class=\"example-container mat-elevation-z8\">\n                <mat-table #table [dataSource]=\"advertisers\">\n                    <ng-container matColumnDef=\"fullname\">\n                        <mat-header-cell *matHeaderCellDef> Full Name </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{element.fullname}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"email\">\n                        <mat-header-cell *matHeaderCellDef> Email </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{element.email}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"stat\">\n                        <mat-header-cell *matHeaderCellDef> Stat# </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{element.tags.length}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"action\">\n                        <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"handleEditClick(element._key)\">\n                            Edit\n                        </button>\n                        </mat-cell>\n                    </ng-container>\n    \n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n                </mat-table>\n                <div *ngIf=\"advertisers.data.length === 0\">\n                    <p style=\"text-align: center;padding: 10px;\">No records found</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectorRef, Inject } from '@angular/core';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { CompanyService } from 'src/app/shared/service/companies.service';\r\nimport { CompanyInterface } from '../../../../shared/models/company.interface';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { UserInterface } from 'src/app/shared/models/user.interface';\r\n\r\n@Component({\r\n  selector: 'app-add-company',\r\n  templateUrl: './add-company.component.html',\r\n  styleUrls: ['./add-company.component.scss'],\r\n})\r\nexport class AddCompanyComponent implements OnInit {\r\n  //Variable for loading indicator\r\n  loadingIndicator = true;\r\n\r\n  //Variable for current user\r\n  user: UserInterface;\r\n\r\n  //Variable for current companies saved on user account\r\n  userCompanies: string[];\r\n\r\n  //Variable for ALL Companies avaiablable\r\n  allCompanies: any;\r\n\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private cdr: ChangeDetectorRef,\r\n    public dialogRef: MatDialogRef<AddCompanyComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    //Sets current user to data input variable\r\n    this.user = this.data;\r\n\r\n    //Sets userCompanies to user's current companies\r\n    this.userCompanies = this.user.companies;\r\n\r\n    //Gets ALL companies available\r\n    this.getAllCompanies();\r\n  }\r\n\r\n  /**\r\n   * getAllCompanies()\r\n   * * Gets all companies available from companyService method.\r\n   * * @param NONE\r\n   */\r\n  getAllCompanies() {\r\n    this.companyService.getAllCompanies().subscribe((response) => {\r\n      console.log(response);\r\n      this.loadingIndicator = false;\r\n      this.allCompanies = response;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * save()\r\n   * * Saves added or removed companies to the user's profile\r\n   * TODO: TBD\r\n   * @param NONE\r\n   */\r\n  save() {\r\n    this.user.companies = [...this.userCompanies];\r\n    this.dialogRef.close({ user: this.user });\r\n  }\r\n\r\n  /**\r\n   * close()\r\n   * * Closes the dialog and does not make any changes.\r\n   *\r\n   */\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<mat-dialog-content class=\"mat-typography\">\r\n  <div class=\"row\">\r\n    <!-- STARTING UPDATE PROFILE-->\r\n    <div class=\"col-xl-12\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Add or Remove Companies</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-12\">\r\n              <mat-selection-list\r\n                color=\"primary\"\r\n                #company\r\n                [(ngModel)]=\"userCompanies\"\r\n              >\r\n                <mat-list-option\r\n                  *ngFor=\"let company of allCompanies\"\r\n                  [value]=\"company._id\"\r\n                >\r\n                  {{ company.name }}\r\n                </mat-list-option>\r\n              </mat-selection-list>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-dialog-content>\r\n<div class=\"row buttons\">\r\n  <div class=\"col-md-6\">\r\n    <button\r\n      class=\"save-button\"\r\n      mat-raised-button\r\n      color=\"secondary\"\r\n      (click)=\"close()\"\r\n    >\r\n      Cancel\r\n    </button>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <button\r\n      class=\"back-button\"\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"save()\"\r\n    >\r\n      Save\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { UserManagementService } from '../../user-management.service';\r\n\r\n@Component({\r\n  selector: 'app-add-tag',\r\n  templateUrl: './add-tag.component.html',\r\n  styleUrls: ['./add-tag.component.scss']\r\n})\r\nexport class AddTagComponent implements OnInit {\r\n  tagFG: FormGroup;\r\n\r\n  constructor(\r\n    public activeModal: NgbActiveModal,\r\n    private userManagementService: UserManagementService,\r\n    private fb: FormBuilder,\r\n    private sS: SnackbarService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.tagFG = this.fb.group({\r\n      name: new FormControl('', Validators.required),\r\n      company: new FormControl('', Validators.required)\r\n    })\r\n  }\r\n\r\n  handleSubmit(): void {\r\n    this.tagFG.markAllAsTouched();\r\n    if (this.tagFG.valid) {\r\n      this.userManagementService.addTag(this.tagFG.value).subscribe(x => {\r\n        console.log(x);\r\n        this.sS.info('Added a new tag');\r\n        this.activeModal.close(x);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<!-- <h1 mat-dialog-title>Add Tag</h1>\r\n<div mat-dialog-content>\r\n    <form class=\"example-container\" [formGroup]=\"tagFG\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <mat-form-field>\r\n                    <input type=\"text\" matInput formControlName=\"name\" placeholder=\"Name\" />\r\n                    <mat-error *ngIf=\"tagFG.get('name').errors?.required\">Name is required</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <mat-form-field>\r\n                    <input type=\"text\" matInput formControlName=\"company\" placeholder=\"Company\" />\r\n                    <mat-error *ngIf=\"tagFG.get('company').errors?.required\">Company is required\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-button (click)=\"dialogRef.close()\">Close</button>\r\n    <button mat-raised-button color=\"primary\" (click)=\"handleSubmit()\" cdkFocusInitial>Add Tag</button>\r\n</div>\r\n -->\r\n\r\n\r\n<div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">New Tag</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <form class=\"example-container\" [formGroup]=\"tagFG\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <mat-form-field>\r\n                    <input type=\"text\" matInput formControlName=\"name\" placeholder=\"Name\" />\r\n                    <mat-error *ngIf=\"tagFG.get('name').errors?.required\">Name is required</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <mat-form-field>\r\n                    <input type=\"text\" matInput formControlName=\"company\" placeholder=\"Company\" />\r\n                    <mat-error *ngIf=\"tagFG.get('company').errors?.required\">Company is required\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"activeModal.close()\">Close</button>\r\n    <button type=\"button\" class=\"btn btn-primary\"  (click)=\"handleSubmit()\">Add</button>\r\n</div>\r\n","import { ActivatedRoute } from '@angular/router';\r\nimport { TagInterface } from './../../../shared/models/tag.interface';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../auth/_services/auth.service';\r\nimport { UserManagementService } from '../user-management.service';\r\nimport { UserInterface } from 'src/app/shared/models/user.interface';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { UserPasswordResetComponent } from './user-password-reset/user-password-reset.component';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { AddTagComponent } from './add-tag/add-tag.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CompanyInterface } from 'src/app/shared/models/company.interface';\r\nimport { AddCompanyComponent } from './add-company/add-company.component';\r\nimport { CompanyService } from 'src/app/shared/service/companies.service';\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\nimport { toJSDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar';\r\n\r\n@Component({\r\n  selector: 'app-edit-users',\r\n  templateUrl: './edit-users.component.html',\r\n  styleUrls: ['./edit-users.component.scss'],\r\n})\r\nexport class EditUsersComponent implements OnInit {\r\n  userProfileFG: FormGroup;\r\n  tagsColumnDisplay = ['name', 'company'];\r\n  tags = new MatTableDataSource<TagInterface>();\r\n  rows: Array<CompanyInterface>;\r\n\r\n  //All User Data\r\n  user: UserInterface;\r\n\r\n  //All User Data\r\n  userCompanies: Array<CompanyInterface>;\r\n\r\n  constructor(\r\n    private userManagementService: UserManagementService,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private sS: SnackbarService,\r\n    private modalService: NgbModal,\r\n    private companyService: CompanyService,\r\n    private snackBarService: SnackbarService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.userProfileFG = new FormGroup({\r\n      fullname: new FormControl('', Validators.required),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      role: new FormControl('', Validators.required),\r\n    });\r\n\r\n    if (this.route.snapshot.params.id) {\r\n      this.getUserData(this.route.snapshot.params.id);\r\n      // await this.getUserCompanies(this.user.companies);\r\n    } else {\r\n      this.user = this.authService.currentUserSubject.value as any;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * getUserData(id)\r\n   * @param id: User _key value\r\n   */\r\n  async getUserData(id) {\r\n    //Pulls the specific USER from the database.\r\n    this.user = await this.userManagementService.getUser(id).toPromise();\r\n    //If user has companies on their account\r\n    if (this.user.companies.length) {\r\n      this.userCompanies = await this.companyService\r\n        .getUserCompanies(this.user.companies)\r\n        .toPromise();\r\n    }\r\n\r\n    //Patches value into FormGroup\r\n    this.userProfileFG.patchValue(this.user);\r\n  }\r\n\r\n  updateUserProfile($event: any): void {\r\n    if (this.userProfileFG.valid) {\r\n      this.user = { ...this.user, ...this.userProfileFG.value };\r\n      this.userManagementService.updateUser(this.user).subscribe((x) => {\r\n        this.sS.info('user profile updated');\r\n      });\r\n    }\r\n  }\r\n\r\n  openPasswordResetDialog() {\r\n    const modalRef = this.modalService.open(UserPasswordResetComponent, {\r\n      size: 'sm',\r\n    });\r\n    modalRef.componentInstance.data = {\r\n      id: this.user._key,\r\n    };\r\n    modalRef.result.then((c) => {});\r\n  }\r\n\r\n  openAddTagDialog() {\r\n    const modalRef = this.modalService.open(AddTagComponent, {\r\n      size: 'sm',\r\n    });\r\n    modalRef.componentInstance.data = {};\r\n    modalRef.result.then((c) => {\r\n      var tags = this.user.tags || [];\r\n      var tagsId = this.user.tagsId || [];\r\n      tags.push(c);\r\n      tagsId.push(c._key);\r\n      this.user.tagsId = tagsId;\r\n      this.tags.data = tags;\r\n      this.userManagementService.updateUser(this.user).subscribe((x) => {});\r\n    });\r\n  }\r\n\r\n  //Add/Edit Companies to a user profile\r\n  openAddCompanyDialog() {\r\n    console.log(this.user);\r\n    let dialogRef = this.dialog\r\n      .open(AddCompanyComponent, {\r\n        height: 'auto',\r\n        width: '600px',\r\n        data: this.user,\r\n      })\r\n      .afterClosed()\r\n      .subscribe((response) => {\r\n        //If user hits save\r\n        if (response) {\r\n          console.log(response);\r\n          //New variable readability -- all user data\r\n          this.user = response.user;\r\n\r\n          //Updates current user with new company selection.\r\n          this.userManagementService.updateUser(this.user).subscribe((x) => {\r\n            //\r\n            this.getUserData(this.user._key);\r\n            this.snackBarService.info(\r\n              `Updated  ${this.user.fullname}'s companies.`\r\n            );\r\n          });\r\n        }\r\n      });\r\n\r\n    // dialogRef.afterClosed().subscribe((result) => {\r\n    //   console.log(`Dialog result: ${result}`);\r\n    // });\r\n\r\n    // console.log(this.user);\r\n    // const initialState = { data: this.user };\r\n    // const modalRef = this.modalService.open(AddCompanyComponent, {\r\n    //   size: 'md',\r\n    // });\r\n    // modalRef.componentInstance.companies = [...this.user.companies];\r\n\r\n    // modalRef.result.then((res) => {\r\n    //   //If a result is passed back, update the user profile with new companies.\r\n    //   if (res) {\r\n    //     this.user.companies = [...res];\r\n    //     this.userManagementService.updateUser(this.user).subscribe((x) => {\r\n    //       this.getUserData(this.user._key);\r\n    //       this.snackBarService.info(\r\n    //         `Updated  ${this.user.fullname}'s companies.`\r\n    //       );\r\n    //     });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  // isEnabled(tagKey: string): boolean {\r\n  //   if (this.user && Array.isArray(this.user.tags)) {\r\n  //     return !!this.user.tags.filter(x => !!x).find(x => x._key === tagKey);\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  // handleTagClick(tagKey: string): void {\r\n  //   this.user.tags = this.user.tags || [];\r\n  //   let tag = this.user.tags.filter(x => !!x).find(x => x._key === tagKey);\r\n  //   if (tag) {\r\n  //     this.user.tags.splice(this.user.tags.indexOf(tag), 1);\r\n  //   } else {\r\n  //     this.user.tags.push(tag);\r\n  //   }\r\n  //   this.userManagementService.updateUser(this.user).subscribe();\r\n  // }\r\n}\r\n","<div class=\"row\">\r\n  <!-- STARTING UPDATE PROFILE-->\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">Update Profile</h3>\r\n          <button\r\n            mat-button\r\n            color=\"primary\"\r\n            type=\"button\"\r\n            (click)=\"openPasswordResetDialog()\"\r\n          >\r\n            Reset Password\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form\r\n          class=\"example-container\"\r\n          [formGroup]=\"userProfileFG\"\r\n          (submit)=\"updateUserProfile($event)\"\r\n        >\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input\r\n                  matInput\r\n                  formControlName=\"fullname\"\r\n                  placeholder=\"Full Name\"\r\n                />\r\n                <mat-error\r\n                  *ngIf=\"userProfileFG.get('fullname').errors?.required\"\r\n                  >Name is required</mat-error\r\n                >\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('email').errors?.email\"\r\n                  >Email is not valid</mat-error\r\n                >\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <mat-select formControlName=\"role\" placeholder=\"Role\">\r\n                  <mat-option [value]=\"1\">Super Admin</mat-option>\r\n                  <mat-option [value]=\"2\">Admin</mat-option>              \r\n                  <mat-option [value]=\"3\">Publisher</mat-option>\r\n                  <mat-option [value]=\"4\">Advertiser</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"userProfileFG.get('role').errors?.required\"\r\n                  >Role is not valid</mat-error\r\n                >\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row updateProfile\">\r\n            <div class=\"col-md-12\">\r\n              <button mat-raised-button color=\"primary\" type=\"submit\">\r\n                Update Profile\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- STARTING UPDATING TAGS -->\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">Tags</h3>\r\n        </div>\r\n        <div class=\"card-toolbar\">\r\n          <div class=\"example-tools justify-content-center\">\r\n            <button\r\n              class=\"\r\n                btn\r\n                btn-sm\r\n                btn-icon\r\n                btn-bg-light\r\n                btn-icon-success\r\n                btn-hover-success\r\n              \"\r\n              (click)=\"openAddTagDialog()\"\r\n            >\r\n              <i class=\"flaticon-add-circular-button\"></i>\r\n            </button>\r\n\r\n            <button\r\n              class=\"\r\n                btn\r\n                btn-sm\r\n                btn-icon\r\n                btn-bg-light\r\n                btn-icon-danger\r\n                btn-hover-danger\r\n              \"\r\n            >\r\n              <i class=\"flaticon2-line\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"example-container mat-elevation-z8\">\r\n          <mat-table #table [dataSource]=\"tags\">\r\n            <ng-container matColumnDef=\"name\">\r\n              <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\">\r\n                {{ element.name }}\r\n              </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"company\">\r\n              <mat-header-cell *matHeaderCellDef> Company </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\">\r\n                {{ element.company }}\r\n              </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row\r\n              *matHeaderRowDef=\"tagsColumnDisplay\"\r\n            ></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: tagsColumnDisplay\"></mat-row>\r\n          </mat-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- STARTING UPDATE COMPANIES -->\r\n<div class=\"row\">\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">Companies</h3>\r\n          <button mat-button color=\"primary\" (click)=\"openAddCompanyDialog()\">\r\n            Add or Remove\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-12\">\r\n            <mat-list *ngIf=\"user\" #company>\r\n              <mat-list-item *ngFor=\"let company of userCompanies\">\r\n                {{ company.name }}\r\n                <mat-divider></mat-divider>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HelperService } from 'src/app/shared/service/helper.service';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { UserManagementService } from '../../user-management.service';\r\n\r\n@Component({\r\n  selector: 'app-user-password-reset',\r\n  templateUrl: './user-password-reset.component.html',\r\n  styleUrls: ['./user-password-reset.component.scss']\r\n})\r\nexport class UserPasswordResetComponent implements OnInit {\r\n  passwordFG: FormGroup;\r\n  @Input() data: any;\r\n\r\n  constructor(\r\n    public activeModal: NgbActiveModal,\r\n    private userManagementService: UserManagementService,\r\n    private fb: FormBuilder,\r\n    private sS: SnackbarService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.passwordFG = this.fb.group({\r\n      password: new FormControl('', Validators.required),\r\n      passwordConfirm: new FormControl('', Validators.required)\r\n    }, { validator: HelperService.passwordConfirming })\r\n  }\r\n\r\n  handleSubmit(): void {\r\n    this.passwordFG.markAllAsTouched();\r\n    if (this.passwordFG.valid) {\r\n      var password = this.passwordFG.value.password;\r\n      var id = this.data.id;\r\n      this.userManagementService.resetPassword(id, password).subscribe(x => {\r\n        this.sS.info('password has been reset');\r\n        this.activeModal.close();\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Update Profile</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <form class=\"example-container\" [formGroup]=\"passwordFG\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <mat-form-field>\r\n                    <input type=\"password\" matInput formControlName=\"password\" placeholder=\"Password\" />\r\n                    <mat-error *ngIf=\"passwordFG.get('password').errors?.required\">Password is required</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <mat-form-field>\r\n                    <input type=\"password\" matInput formControlName=\"passwordConfirm\" placeholder=\"Confirm Password\" />\r\n                    <mat-error *ngIf=\"passwordFG.get('passwordConfirm').errors?.required\">Confirm password is required\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"passwordFG.errors?.invalid\">Password is not match</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"activeModal.close()\">Close</button>\r\n    <button type=\"button\" class=\"btn btn-primary\"  (click)=\"handleSubmit()\">Reset Password</button>\r\n    <!-- <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">Close</button> -->\r\n</div>\r\n\r\n\r\n<!-- <h1 mat-dialog-title>Reset Password</h1>\r\n<div mat-dialog-content>\r\n\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-button (click)=\"dialogRef.close()\">Close</button>\r\n    <button mat-raised-button color=\"primary\" (click)=\"handleSubmit()\" cdkFocusInitial>Reset Password</button>\r\n</div> -->","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { MatCheckboxChange } from '@angular/material/checkbox';\r\nimport { PermissionInterface } from 'src/app/shared/models/permission.interface';\r\nimport { UserManagementService } from '../../user-management.service';\r\n\r\n@Component({\r\n  selector: 'app-permission',\r\n  templateUrl: './permission.component.html',\r\n  styleUrls: ['./permission.component.scss']\r\n})\r\nexport class PermissionComponent implements OnInit {\r\n  @Input() data: any;\r\n  permission: PermissionInterface\r\n  permissionFG: FormGroup;\r\n  allChecked = false;\r\n  isIndeterminate = false;\r\n  notifications = false;\r\n  protectedMedia = false;\r\n  googleMaterial = false;\r\n  dashboard = false;\r\n  eCommerce = false;\r\n  liveTraffic = false;\r\n  ngBootstrap =  false;\r\n  layoutBuilder = false;\r\n  userManage = false;\r\n  companyManage = false;\r\n  tagManage = false;\r\n  reportManage = false;\r\n  i = 0;\r\n  constructor(\r\n    public activeModal: NgbActiveModal,\r\n    private fb: FormBuilder,\r\n    private snackService: SnackbarService,\r\n    private userManagementService: UserManagementService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    //Get the current company to edit\r\n    if (this.data['id']) {\r\n      this.userManagementService.getOnePermission(this.data['id']).subscribe(x => {\r\n        this.permission = x;\r\n        this.permissionFG.patchValue(x);\r\n        if (x['companyManage'] == true && x['eCommerce'] == true && x['dashboard'] == true && x['googleMaterial'] == true && x['layoutBuilder'] == true && x['liveTraffic'] == true && x['ngBootstrap'] == true && x['notifications'] == true && x['protectedMedia'] == true && x['reportManage'] == true && x['tagManage'] == true && x['userManage'] == true) {\r\n          this.allChecked = true;\r\n          this.isIndeterminate = false;\r\n        } else {\r\n          this.allChecked = false;\r\n          this.isIndeterminate = false;\r\n        }\r\n      });\r\n    } else {}\r\n    this.permissionFG = this.fb.group({\r\n      dashboard: new FormControl('', Validators.required),\r\n      notifications: new FormControl('', Validators.required),\r\n      layoutBuilder: new FormControl('', Validators.required),\r\n      protectedMedia: new FormControl('', Validators.required),\r\n      googleMaterial: new FormControl('', Validators.required),\r\n      eCommerce: new FormControl('', Validators.required),\r\n      liveTraffic: new FormControl('', Validators.required),\r\n      ngBootstrap: new FormControl('', Validators.required),\r\n      companyManage: new FormControl('', Validators.required),\r\n      userManage: new FormControl('', Validators.required),\r\n      reportManage: new FormControl('', Validators.required),\r\n      tagManage: new FormControl('', Validators.required),\r\n    })\r\n  }\r\n  onIndeterminateChange(val: boolean) {\r\n    console.log('isIndeterminate: ' + val);\r\n  }\r\n  onChange(ob: MatCheckboxChange) {\r\n    console.log(\"checked: \" + ob.checked);\r\n  }\r\n  onChkChange(ob: MatCheckboxChange) {\r\n    if(ob.checked) {\r\n      this.userManage = true;\r\n      this.companyManage = true;\r\n      this.tagManage = true;\r\n      this.reportManage = true;\r\n      this.notifications = true;\r\n      this.protectedMedia = true;\r\n      this.googleMaterial = true;\r\n      this.dashboard = true;\r\n      this.eCommerce = true;\r\n      this.liveTraffic = true;\r\n      this.ngBootstrap =  true;\r\n      this.layoutBuilder = true;\r\n      this.i = 12;\r\n    } else {\r\n      this.userManage = false;\r\n      this.companyManage = false;\r\n      this.tagManage = false;\r\n      this.reportManage = false; \r\n      this.notifications = false;\r\n      this.protectedMedia = false;\r\n      this.googleMaterial = false;\r\n      this.dashboard = false;\r\n      this.eCommerce = false;\r\n      this.liveTraffic = false;\r\n      this.ngBootstrap =  false;\r\n      this.layoutBuilder = false;    \r\n    }\r\n }\r\n onChildChkChange(ob: MatCheckboxChange) {\r\n    if(ob.checked) {\r\n      this.i++;\r\n    } else {\r\n      this.i--;\r\n    }\r\n    if(this.i==12) {\r\n      this.allChecked = true;\r\n      this.isIndeterminate = false;\r\n    } else if (this.i >= 1 || this.i <= 11) {\r\n      this.isIndeterminate = true;\r\n      this.allChecked = false;\r\n    } else {\r\n      this.isIndeterminate = false;\r\n      this.allChecked = false;\r\n    }\r\n  }\r\n  \r\n  handleSubmit() {\r\n    this.permissionFG.markAllAsTouched();\r\n    if (this.permissionFG.valid) {     \r\n      this.permission = {...this.permission, ...this.permissionFG.value};\r\n      this.userManagementService.updateOnePermission(this.permission).subscribe(x => {\r\n        this.snackService.info('Successfully updated permission.');\r\n        this.activeModal.close(x);\r\n      }, (err) => {\r\n        this.snackService.info(`Error updating permission: ${err.statusText}`);\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Permission</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"row justify-content-end d-flex\">\r\n        <div class=\"select-all\">\r\n            <mat-checkbox [ngStyle]=\"{'color': '#232428'}\" class=\"example-margin\" [indeterminate]=\"isIndeterminate\" [checked]=\"allChecked\" (indeterminateChange)=\"onIndeterminateChange($event)\" (change)=\"onChkChange($event)\">Select All</mat-checkbox>\r\n        </div>\r\n    </div>\r\n    <form class=\"example-container\" [formGroup]=\"permissionFG\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"dashboard\" class=\"example-margin\" [(ngModel)]=\"dashboard\" (change)=\"onChildChkChange($event)\">Dashboard</mat-checkbox>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"layoutBuilder\" class=\"example-margin\" [(ngModel)]=\"layoutBuilder\" (change)=\"onChildChkChange($event)\">Layout Builder</mat-checkbox>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"googleMaterial\" class=\"example-margin\" [(ngModel)]=\"googleMaterial\" (change)=\"onChildChkChange($event)\">Google Material</mat-checkbox>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"ngBootstrap\" class=\"example-margin\" [(ngModel)]=\"ngBootstrap\" (change)=\"onChildChkChange($event)\">Ng-Bootstrap</mat-checkbox>\r\n                        </span>\r\n                    </div>\r\n                    \r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"companyManage\" class=\"example-margin\" [(ngModel)]=\"companyManage\" (change)=\"onChildChkChange($event)\">Company Management</mat-checkbox>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"tagManage\" class=\"example-margin\" [(ngModel)]=\"tagManage\" (change)=\"onChildChkChange($event)\">Tag Management</mat-checkbox>\r\n                        </span>\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"eCommerce\" class=\"example-margin\" [(ngModel)]=\"eCommerce\" (change)=\"onChildChkChange($event)\">eCommerce</mat-checkbox>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"liveTraffic\" class=\"example-margin\" [(ngModel)]=\"liveTraffic\" (change)=\"onChildChkChange($event)\">Live Traffic</mat-checkbox>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"protectedMedia\" class=\"example-margin\" [(ngModel)]=\"protectedMedia\" (change)=\"onChildChkChange($event)\">Protected Media</mat-checkbox>\r\n                        </span>\r\n                        \r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"notifications\" class=\"example-margin\" [(ngModel)]=\"notifications\" (change)=\"onChildChkChange($event)\">Notifications</mat-checkbox>\r\n                        </span>\r\n                        \r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"userManage\" class=\"example-margin\" [(ngModel)]=\"userManage\" (change)=\"onChildChkChange($event)\">User Management</mat-checkbox>\r\n                        </span>\r\n                        \r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"reportManage\" class=\"example-margin\" [(ngModel)]=\"reportManage\" (change)=\"onChildChkChange($event)\">Report</mat-checkbox>\r\n                        </span>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"activeModal.close()\">Close</button>\r\n    <button type=\"button\" class=\"btn btn-sm btn-primary\"  (click)=\"handleSubmit()\">Update</button>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PermissionComponent } from './permission/permission.component';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { position: 1, name: \"Super Admin\" },\r\n  { position: 2, name: \"Admin\" },\r\n  { position: 3, name: \"Advertiser\" },\r\n  { position: 4, name: \"Publisher\" },\r\n];\r\n\r\n@Component({\r\n  selector: \"app-roles\",\r\n  templateUrl: \"./roles.component.html\",\r\n  styleUrls: [\"./roles.component.scss\"],\r\n})\r\nexport class RolesComponent implements OnInit {\r\n  displayedColumns: string[] = [\"position\", \"name\", \"action\"];\r\n  dataSource = ELEMENT_DATA;\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private route: ActivatedRoute,\r\n    private sS: SnackbarService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  openManagePermissionDialog(roleKey) {\r\n    const modalRef = this.modalService.open(PermissionComponent, {\r\n      size: 'md',\r\n    });\r\n    modalRef.componentInstance.data = {\r\n      id: roleKey\r\n    };\r\n    modalRef.result.then((c) => {});\r\n  }\r\n}\r\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n  <!--- Note that these columns can be defined in any order.\r\n        The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n  <!-- Position Column -->\r\n  <ng-container matColumnDef=\"position\">\r\n    <th mat-header-cell *matHeaderCellDef> No. </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Name Column -->\r\n  <ng-container matColumnDef=\"name\">\r\n    <th mat-header-cell *matHeaderCellDef> Role </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Action Column -->\r\n  <ng-container matColumnDef=\"action\">\r\n    <th mat-header-cell *matHeaderCellDef> Action </th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <button class=\"btn btn-sm btn-icon btn-icon-white btn-bg-primary m-1\" (click)=\"openManagePermissionDialog(element.position)\">\r\n        <i class=\"flaticon2-pen\"></i>\r\n      </button>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>\r\n","import { Router, ActivatedRoute } from '@angular/router';\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { UsersService } from '../../../shared/service/users.service'\nimport { Subscription } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { UserInterface } from './../../../shared/models/user.interface';\n\n@Component({\n  selector: 'app-superadmins',\n  templateUrl: './superadmins.component.html',\n  styleUrls: ['./superadmins.component.scss']\n})\nexport class SuperadminsComponent implements OnInit {\n  displayedColumns = [\"fullname\", \"email\", \"stat\", \"action\"];\n  superadmins = new MatTableDataSource<UserInterface>();\n\n  //Local Storage Company\n  localStorageCompany: any;\n  \n  private subscritions: Subscription[] = [];\n  constructor(\n    private usersServie: UsersService,\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UsersService\n  ) { }\n\n  ngOnInit(): void {\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\n    this.subscritions.push(\n      this.usersServie.getSuperAdminAll().subscribe(data => {\n        console.log(data);\n        if(this.localStorageCompany) {\n          this.superadmins.data = data.filter(userData => userData.companies.includes(this.localStorageCompany));\n        } else {\n          this.superadmins.data = data;\n        }\n        this.superadmins.data = data;\n        this.cdr.detectChanges();\n      })\n    );\n  }\n  handleEditClick(userId: string): void {\n    this.router.navigateByUrl('/user-management/edit/' + userId);\n  }\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xl-12\">\n      <div class=\"card card-custom example example-compact gutter-b\">\n        <div class=\"card-header\">\n          <div class=\"card-title\">\n            <h3 class=\"card-label\">Super Admins</h3>\n          </div>\n        </div>\n        <div class=\"card-body\">\n            <div class=\"example-container mat-elevation-z8\">\n                <mat-table #table [dataSource]=\"superadmins\">\n                    <ng-container matColumnDef=\"fullname\">\n                        <mat-header-cell *matHeaderCellDef> Full Name </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{element.fullname}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"email\">\n                        <mat-header-cell *matHeaderCellDef> Email </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{element.email}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"stat\">\n                        <mat-header-cell *matHeaderCellDef> Stat# </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{element.tags.length}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"action\">\n                        <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"handleEditClick(element._key)\">\n                            Edit\n                        </button>\n                        </mat-cell>\n                    </ng-container>\n        \n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n                    \n                </mat-table>\n                <div *ngIf=\"superadmins.data.length === 0\">\n                    <p style=\"text-align: center;padding: 10px;\">No records found</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserManagementComponent } from './user-management.component';\r\nimport { SuperadminsComponent } from './superadmins/superadmins.component';\r\nimport { AdminsComponent } from './admins/admins.component';\r\nimport { AdvertisersComponent } from './advertisers/advertisers.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { EditUsersComponent } from './edit-users/edit-users.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserManagementComponent,\r\n    children: [\r\n      {\r\n        path: 'super-admin-users',\r\n        component: SuperadminsComponent,\r\n      },\r\n      {\r\n        path: 'admin-users',\r\n        component: AdminsComponent,\r\n      },\r\n      {\r\n        path: 'advertiser-users',\r\n        component: AdvertisersComponent,\r\n      },\r\n      {\r\n        path: 'publisher-users',\r\n        component: UsersComponent,\r\n      },\r\n      {\r\n        path: 'roles',\r\n        component: RolesComponent,\r\n      },\r\n      {\r\n        path: 'edit-user',\r\n        component: EditUsersComponent,\r\n      },\r\n      {\r\n        path: 'edit/:id',\r\n        component: EditUsersComponent,\r\n        pathMatch: 'full'\r\n      },\r\n      { path: '', redirectTo: 'publisher-users', pathMatch: 'full' },\r\n      { path: '**', redirectTo: 'publisher-users', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserManagementRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { UserManagementComponent } from './user-management.component';\r\nimport { UserManagementRoutingModule } from './user-management-routing.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { NgbAlertConfig, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { EditUsersComponent } from './edit-users/edit-users.component';\r\nimport { ValidateEqualModule } from 'ng-validate-equal';\r\nimport { UserPasswordResetComponent } from './edit-users/user-password-reset/user-password-reset.component';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { AddTagComponent } from './edit-users/add-tag/add-tag.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { AddCompanyComponent } from './edit-users/add-company/add-company.component';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { PermissionComponent } from './roles/permission/permission.component';\nimport { SuperadminsComponent } from './superadmins/superadmins.component';\nimport { AdminsComponent } from './admins/admins.component';\nimport { AdvertisersComponent } from './advertisers/advertisers.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UsersComponent,\r\n    RolesComponent,\r\n    UserManagementComponent,\r\n    EditUsersComponent,\r\n    UserPasswordResetComponent,\r\n    AddTagComponent,\r\n    AddCompanyComponent,\r\n    PermissionComponent,\r\n    SuperadminsComponent,\r\n    AdminsComponent,\r\n    AdvertisersComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatTableModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    MatSelectModule,\r\n    NgbModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    UserManagementRoutingModule,\r\n    ValidateEqualModule,\r\n    NgxDatatableModule,\r\n    MatListModule,\r\n    MatDialogModule,\r\n  ],\r\n  providers: [SnackbarService],\r\n  entryComponents: [\r\n    UserPasswordResetComponent,\r\n    AddTagComponent,\r\n    AddCompanyComponent,\r\n    EditUsersComponent,\r\n  ],\r\n})\r\nexport class UserManagementModule {}\r\n","import { UserInterface } from './../../shared/models/user.interface';\r\nimport { PermissionInterface } from './../../shared/models/permission.interface';\r\nimport { AuthUserInterface } from 'src/app/shared/models/auth-user.interface';\r\nimport { TagsService } from './../../shared/service/tags.service';\r\nimport { TagInterface } from './../../shared/models/tag.interface';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserManagementService {\r\n\r\n  constructor(\r\n    private usersService: UsersService,\r\n    private tagsService: TagsService\r\n  ) { }\r\n\r\n  resetPassword(userId: number, password: string): Observable<void> {\r\n    return this.usersService.resetPassword(userId, password);\r\n  }\r\n\r\n  getAllTags(): Observable<TagInterface[]> {\r\n    return this.tagsService.getAll();\r\n  }\r\n\r\n  addTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.add(tag);\r\n  }\r\n\r\n  updateUser(user: UserInterface): Observable<UserInterface> {\r\n    return this.usersService.updateUser(user);\r\n  }\r\n\r\n  getUser(userId: string): Observable<UserInterface> {\r\n    return this.usersService.getUser(userId);\r\n  }\r\n\r\n  updateOnePermission(permission: PermissionInterface): Observable<PermissionInterface> {\r\n    return this.usersService.updateOnePermission(permission);\r\n  }\r\n  getOnePermission(permission: PermissionInterface): Observable<PermissionInterface> {\r\n    return this.usersService.getOnePermission(permission);\r\n  }\r\n}\r\n","import { UserInterface } from './../../../shared/models/user.interface';\r\nimport { TagInterface } from './../../../shared/models/tag.interface';\r\nimport { AuthUserInterface } from 'src/app/shared/models/auth-user.interface';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { Subscription } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  displayedColumns = [\"fullname\", \"email\", \"stat\", \"action\"];\r\n  users = new MatTableDataSource<UserInterface>();\r\n\r\n  private subscritions: Subscription[] = [];\r\n\r\n  //Local Storage Company\r\n  localStorageCompany: any;\r\n\r\n  constructor(\r\n    private usersServie: UsersService,\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private userService: UsersService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\r\n    this.subscritions.push(\r\n      this.usersServie.getPublisherAll().subscribe(data => {\r\n        console.log(data);\r\n        if(this.localStorageCompany) {\r\n          this.users.data = data.filter(userData => userData.companies.includes(this.localStorageCompany));\r\n        } else {\r\n          this.users.data = data;\r\n        }\r\n        this.cdr.detectChanges();\r\n      })\r\n    );\r\n  }\r\n\r\n  handleEditClick(userId: string): void {\r\n    this.router.navigateByUrl('/user-management/edit/' + userId);\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-xl-12\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">Publisher Users</h3>\r\n        </div>\r\n        <!-- <div class=\"card-toolbar\">\r\n        <div class=\"example-tools justify-content-center\">\r\n          <button class=\"btn btn-sm btn-icon btn-bg-light btn-icon-success btn-hover-success\"\r\n            (click)=\"openAddTagDialog()\">\r\n            <i class=\"flaticon-add-circular-button\"></i>\r\n          </button>\r\n          <button class=\"btn btn-sm btn-icon btn-bg-light btn-icon-danger btn-hover-danger\">\r\n            <i class=\"flaticon2-line\"></i>\r\n          </button>\r\n        </div>\r\n      </div> -->\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"example-container mat-elevation-z8\">\r\n          <mat-table #table [dataSource]=\"users\">\r\n            <ng-container matColumnDef=\"fullname\">\r\n              <mat-header-cell *matHeaderCellDef> Full Name </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.fullname}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"email\">\r\n              <mat-header-cell *matHeaderCellDef> Email </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.email}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"stat\">\r\n              <mat-header-cell *matHeaderCellDef> Stat# </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.tags.length}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"action\">\r\n              <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\">\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"handleEditClick(element._key)\">\r\n                  Edit\r\n                </button>\r\n              </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n          </mat-table>\r\n          <div *ngIf=\"users.data.length === 0\">\r\n            <p style=\"text-align: center;padding: 10px;\">No records found</p>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <!-- <table class=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">Name</th>\r\n      <th scope=\"col\">Email</th>\r\n      <th scope=\"col\">Stats #</th>\r\n      <th scope=\"col\"></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let user of users; index as i\">\r\n      <td>{{ user.fullname }}</td>\r\n      <td>{{ user.email }}</td>\r\n      <td>{{ user.tags.length }}</td>\r\n      <td>\r\n        <button type=\"button\" \r\n          class=\"btn btn-primary\"\r\n          (click)=\"handleEditClick(user._key)\" >\r\n          Edit\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table> -->","import { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HelperService {\r\n\r\n  constructor(\r\n  ) { }\r\n\r\n  static passwordConfirming(c: AbstractControl): { invalid: boolean } {\r\n    if (c.get('password').value !== c.get('passwordConfirm').value) {\r\n      return { invalid: true };\r\n    }\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}