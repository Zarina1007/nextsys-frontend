{"version":3,"sources":["./node_modules/ng-validate-equal/__ivy_ngcc__/fesm2015/ng-validate-equal.js","./src/app/modules/tag-management/tag-management.service.ts","./src/app/modules/user-management/admins/admins.component.ts","./src/app/modules/user-management/admins/admins.component.html","./src/app/modules/user-management/advertisers/advertisers.component.ts","./src/app/modules/user-management/advertisers/advertisers.component.html","./src/app/modules/user-management/edit-users/add-company/add-company.component.ts","./src/app/modules/user-management/edit-users/add-company/add-company.component.html","./src/app/modules/user-management/edit-users/add-tag/add-tag.component.ts","./src/app/modules/user-management/edit-users/add-tag/add-tag.component.html","./src/app/modules/user-management/edit-users/edit-users.component.ts","./src/app/modules/user-management/edit-users/edit-users.component.html","./src/app/modules/user-management/edit-users/user-password-reset/user-password-reset.component.ts","./src/app/modules/user-management/edit-users/user-password-reset/user-password-reset.component.html","./src/app/modules/user-management/new-admin/new-admin.component.ts","./src/app/modules/user-management/new-admin/new-admin.component.html","./src/app/modules/user-management/new-advertiser/new-advertiser.component.ts","./src/app/modules/user-management/new-advertiser/new-advertiser.component.html","./src/app/modules/user-management/new-superadmin/new-superadmin.component.ts","./src/app/modules/user-management/new-superadmin/new-superadmin.component.html","./src/app/modules/user-management/new-user/new-user.component.ts","./src/app/modules/user-management/new-user/new-user.component.html","./src/app/modules/user-management/roles/permission/permission.component.ts","./src/app/modules/user-management/roles/permission/permission.component.html","./src/app/modules/user-management/roles/roles.component.ts","./src/app/modules/user-management/roles/roles.component.html","./src/app/modules/user-management/superadmins/superadmins.component.ts","./src/app/modules/user-management/superadmins/superadmins.component.html","./src/app/modules/user-management/user-management-routing.module.ts","./src/app/modules/user-management/user-management.component.ts","./src/app/modules/user-management/user-management.component.html","./src/app/modules/user-management/user-management.module.ts","./src/app/modules/user-management/user-management.service.ts","./src/app/modules/user-management/users/users.component.ts","./src/app/modules/user-management/users/users.component.html","./src/app/shared/service/helper.service.ts"],"names":[],"mappings":"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","file":"modules-user-management-user-management-module-es2015.js","sourcesContent":["import { __decorate, __param } from 'tslib';\r\nimport { Attribute, Directive, forwardRef, NgModule } from '@angular/core';\r\nimport { NG_VALIDATORS } from '@angular/forms';\r\n\r\nimport * as ɵngcc0 from '@angular/core';\nvar ValidateEqualDirective_1;\r\nlet ValidateEqualDirective = ValidateEqualDirective_1 = class ValidateEqualDirective {\r\n    constructor(otherControl) {\r\n        this.otherControl = otherControl;\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.valueChangesSub) {\r\n            this.valueChangesSub.unsubscribe();\r\n        }\r\n    }\r\n    validate(selfControl) {\r\n        const selfControlValue = selfControl.value;\r\n        const otherControl = selfControl.root.get(this.otherControl);\r\n        if (this.valueChangesSub) {\r\n            this.valueChangesSub.unsubscribe();\r\n        }\r\n        // this code works when user types in other control putting the error in self control\r\n        this.valueChangesSub = otherControl.valueChanges.subscribe(otherControlValue => {\r\n            if (!this.isEqual(selfControlValue, otherControlValue) && (selfControl.touched || selfControl.dirty)) {\r\n                selfControl.setErrors({\r\n                    notEqual: true\r\n                });\r\n            }\r\n            else {\r\n                if (selfControl.hasError('notEqual')) {\r\n                    delete selfControl.errors['notEqual'];\r\n                    if (!Object.keys(selfControl.errors).length) {\r\n                        selfControl.setErrors(null);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        // this code works when the user types in self control putting the error in self control\r\n        if (!this.isEqual(selfControlValue, otherControl.value) && (selfControl.touched || selfControl.dirty)) {\r\n            return {\r\n                notEqual: true\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    isEqual(val1, val2) {\r\n        val1 = this.unifyEmptyStrings(val1);\r\n        val2 = this.unifyEmptyStrings(val2);\r\n        return val1 === val2;\r\n    }\r\n    unifyEmptyStrings(val) {\r\n        const isDefined = this.isDefined;\r\n        if (val === null || !isDefined(val)) {\r\n            val = '';\r\n        }\r\n        return val;\r\n    }\r\n    isDefined(value) {\r\n        const defaultUndefined = void (0);\r\n        return value !== defaultUndefined;\r\n    }\r\n};\nValidateEqualDirective.ɵfac = function ValidateEqualDirective_Factory(t) { return new (t || ValidateEqualDirective)(ɵngcc0.ɵɵinjectAttribute('ngValidateEqual')); };\nValidateEqualDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ValidateEqualDirective, selectors: [[\"\", \"ngValidateEqual\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: NG_VALIDATORS, useExisting: forwardRef(() => ValidateEqualDirective_1), multi: true }\n        ])] });\r\nValidateEqualDirective.ctorParameters = () => [\r\n    { type: String, decorators: [{ type: Attribute, args: ['ngValidateEqual',] }] }\r\n];\r\nValidateEqualDirective = ValidateEqualDirective_1 = __decorate([ __param(0, Attribute('ngValidateEqual'))\r\n], ValidateEqualDirective);\r\n\r\nlet ValidateEqualModule = class ValidateEqualModule {\r\n};\nValidateEqualModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ValidateEqualModule });\nValidateEqualModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ValidateEqualModule_Factory(t) { return new (t || ValidateEqualModule)(); }, imports: [[]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ValidateEqualDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngValidateEqual]',\n                providers: [\n                    { provide: NG_VALIDATORS, useExisting: forwardRef(() => ValidateEqualDirective_1), multi: true }\n                ]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Attribute,\n                args: ['ngValidateEqual']\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ValidateEqualModule, { declarations: [ValidateEqualDirective], exports: [ValidateEqualDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ValidateEqualModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [ValidateEqualDirective],\n                imports: [],\n                exports: [ValidateEqualDirective]\n            }]\n    }], null, null); })();\r\n\r\n/*\r\n * Public API Surface of ng-validate-equal\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { ValidateEqualDirective, ValidateEqualModule };\r\n\r\n\n//# sourceMappingURL=ng-validate-equal.js.map","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { TagsService } from './../../shared/service/tags.service';\r\nimport { TagInterface } from './../../shared/models/tag.interface';\r\nimport { TemplateInterface } from './../../shared/models/template.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TagManagementService {\r\n\r\n  constructor(\r\n    private tagsService: TagsService,\r\n  ) { }\r\n\r\n  // Get all Chrome objects\r\n  getChromeBrowserVersion() {\r\n    return this.tagsService.getChrome();\r\n  }\r\n  // Get all Chrome objects\r\n  getFirefoxBrowserVersion() {\r\n    return this.tagsService.getFirefox();\r\n  }\r\n  addTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.add(tag);\r\n  }\r\n\r\n  addPublisherTag(tagId: string, companyId: string, publisherId: string) {\r\n    return this.tagsService.addPublisherTag(tagId, companyId, publisherId);\r\n  }\r\n  getAllTags(): Observable<TagInterface[]> {\r\n    return this.tagsService.getAllTags();\r\n  }\r\n  getCompanyTags(companyKey: any) {\r\n    return this.tagsService.getCompanyTags(companyKey);\r\n  }\r\n  \r\n  deleteTag(tagKey: any) {\r\n    return this.tagsService.deleteTag(tagKey);\r\n  }\r\n\r\n  getOneTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.getOneTag(tag);\r\n  }\r\n  updateOneTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.updateOneTag(tag);\r\n  }\r\n  addTemplate(template: TemplateInterface): Observable<TemplateInterface> {\r\n    return this.tagsService.addTemplate(template);\r\n  }\r\n  getAllTemplates(): Observable<TemplateInterface[]> {\r\n    return this.tagsService.getAllTemplates();\r\n  }\r\n  deleteTemplate(templateKey: any) {\r\n    return this.tagsService.deleteTemplate(templateKey);\r\n  }\r\n  getOneTemplate(template: TemplateInterface): Observable<TemplateInterface> {\r\n    return this.tagsService.getOneTemplate(template);\r\n  }\r\n}\r\n","import { Router, ActivatedRoute } from '@angular/router';\r\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { Subscription } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { UserInterface } from './../../../shared/models/user.interface';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-admins',\r\n  templateUrl: './admins.component.html',\r\n  styleUrls: ['./admins.component.scss']\r\n})\r\nexport class AdminsComponent implements OnInit {\r\n  displayedColumns = [\"fullname\", \"email\", \"companyname\", \"stat\", \"apiKey\", \"action\"];\r\n  admins = new MatTableDataSource<UserInterface>();\r\n  hidden = false;\r\n  //Local Storage Company\r\n  localStorageCompany: any;\r\n  companyUser = false;\r\n  originalData: any[];\r\n\r\n  private subscritions: Subscription[] = [];\r\n  constructor(\r\n    private usersServie: UsersService,\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private userService: UsersService,\r\n    private _snackBarService: SnackbarService,\r\n    private notification: NotificationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\r\n    //access page part\r\n    if (!this.localStorageCompany) {\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.subscritions.push(\r\n      this.usersServie.getAdminAll().subscribe(data => {\r\n        // console.log(data);\r\n        this.originalData = data;\r\n        if (this.localStorageCompany) {\r\n          this.admins.data = data.filter(userData => userData.companies.includes(this.localStorageCompany));\r\n        } else {\r\n          this.admins.data = data.filter(userData => userData.companies.length == 0);\r\n        }\r\n        this.cdr.detectChanges();\r\n      })\r\n    );\r\n  }\r\n  handleEditClick(userId: string): void {\r\n    this.router.navigateByUrl('/user-management/edit/' + userId);\r\n  }\r\n\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  handleAddProfile() {\r\n    this.router.navigateByUrl('/user-management/new-admin');\r\n  }\r\n  deleteAdmin(id: any) {\r\n    if (window.confirm('Do you want to go ahead?')) {\r\n      this.usersServie.deleteUser(id).subscribe((res) => {\r\n        this.usersServie.getAdminAll().subscribe(data => {\r\n          // console.log(data);\r\n          if (this.companyUser) {\r\n            this.admins.data = data;\r\n          } else {\r\n            if (this.localStorageCompany) {\r\n              this.admins.data = data.filter(userData => userData.companies.includes(this.localStorageCompany));\r\n            } else {\r\n              this.admins.data = data.filter(userData => userData.companies.length == 0);\r\n            }\r\n          }\r\n\r\n          this.cdr.detectChanges();\r\n        })\r\n        this._snackBarService.info('Deleted a User');\r\n      })\r\n    }\r\n  }\r\n  onChangeAdmin(event) {\r\n    this.companyUser = event.checked;\r\n    if (this.companyUser) {\r\n      this.admins.data = this.originalData;\r\n    } else {\r\n      if (this.localStorageCompany) {\r\n        this.admins.data = this.originalData.filter(userData => userData.companies.includes(this.localStorageCompany));\r\n      } else {\r\n        this.admins.data = this.originalData;\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"!hidden\">\r\n  <div class=\"col-xl-12\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">Admins</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"pb-3\">\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-6\">\r\n              <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"handleAddProfile()\">\r\n                Add Admin\r\n              </button>\r\n            </div>\r\n            <div class=\"col-xl-6 all-admin-user align-self-center d-flex\">\r\n              <mat-checkbox color=\"primary\" [(ngModel)]=\"companyUser\" (change)=\"onChangeAdmin($event)\">Display All\r\n                Admins</mat-checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"example-container mat-elevation-z8\">\r\n          <mat-table #table [dataSource]=\"admins\">\r\n            <ng-container matColumnDef=\"fullname\">\r\n              <mat-header-cell *matHeaderCellDef> Full Name </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.fullname}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"email\">\r\n              <mat-header-cell *matHeaderCellDef> Email </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.email}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"companyname\">\r\n              <mat-header-cell *matHeaderCellDef> Companies </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\" [ngClass]=\"'font-weight-bold'\"> {{element.companyname}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"stat\">\r\n              <mat-header-cell *matHeaderCellDef> Stat# </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.tags.length}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"apiKey\">\r\n              <mat-header-cell *matHeaderCellDef> ApiKey </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.apiKey}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"action\">\r\n              <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\">\r\n                <a title=\"Edit Admin\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n                  (click)=\"handleEditClick(element._key)\">\r\n                  <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                    class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n                  </span>\r\n                </a>\r\n\r\n                <a title=\"Delete Admin\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n                  (click)=\"deleteAdmin(element._key)\">\r\n                  <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"false\"\r\n                    class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n                  </span>\r\n                </a>\r\n              </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n          </mat-table>\r\n          <div *ngIf=\"admins.data.length === 0\">\r\n            <p style=\"text-align: center;padding: 10px;\">No records found</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\">\r\n  <!--begin::Content-->\r\n  <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->","import { Router, ActivatedRoute } from '@angular/router';\r\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { Subscription } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { UserInterface } from './../../../shared/models/user.interface';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-advertisers',\r\n  templateUrl: './advertisers.component.html',\r\n  styleUrls: ['./advertisers.component.scss']\r\n})\r\nexport class AdvertisersComponent implements OnInit {\r\n  displayedColumns = [\"fullname\", \"email\", \"companyname\", \"stat\", \"apiKey\", \"action\"];\r\n  advertisers = new MatTableDataSource<UserInterface>();\r\n  hidden = false;\r\n  //Local Storage Company\r\n  localStorageCompany: any;\r\n  companyUser = false;\r\n  originalData: any[];\r\n\r\n  private subscritions: Subscription[] = [];\r\n  constructor(\r\n    private usersServie: UsersService,\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private userService: UsersService,\r\n    private _snackBarService: SnackbarService,\r\n    private notification: NotificationService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\r\n    //access page part\r\n    if (!this.localStorageCompany) {\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.subscritions.push(\r\n      this.usersServie.getAdvertiserAll().subscribe(data => {\r\n        // console.log(data);\r\n        this.originalData = data;\r\n        if (this.localStorageCompany) {\r\n          this.advertisers.data = data.filter(userData => userData.companies.includes(this.localStorageCompany));\r\n        } else {\r\n          this.advertisers.data = data.filter(userData => userData.companies.length == 0);\r\n        }\r\n\r\n        this.cdr.detectChanges();\r\n      })\r\n    );\r\n  }\r\n  handleEditClick(userId: string): void {\r\n    this.router.navigateByUrl('/user-management/edit/' + userId);\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  handleAddProfile() {\r\n    this.router.navigateByUrl('/user-management/new-advertiser');\r\n  }\r\n  deleteAdvertiser(id: any) {\r\n    if (window.confirm('Do you want to go ahead?')) {\r\n      this.usersServie.deleteUser(id).subscribe((res) => {\r\n        this.usersServie.getAdvertiserAll().subscribe(data => {\r\n          // console.log(data);\r\n          if (this.companyUser) {\r\n            this.advertisers.data = data;\r\n          } else {\r\n            if (this.localStorageCompany) {\r\n              this.advertisers.data = data.filter(userData => userData.companies.includes(this.localStorageCompany));\r\n            } else {\r\n              this.advertisers.data = data.filter(userData => userData.companies.length == 0);\r\n            }\r\n          }\r\n\r\n          this.cdr.detectChanges();\r\n        })\r\n        this._snackBarService.info('Deleted a User');\r\n      })\r\n    }\r\n  }\r\n  onChangeAdvertiser(event) {\r\n    this.companyUser = event.checked;\r\n    if (this.companyUser) {\r\n      this.advertisers.data = this.originalData;\r\n    } else {\r\n      if (this.localStorageCompany) {\r\n        this.advertisers.data = this.originalData.filter(userData => userData.companies.includes(this.localStorageCompany));\r\n      } else {\r\n        this.advertisers.data = this.originalData;\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"!hidden\">\r\n  <div class=\"col-xl-12\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">Advertiser Users</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"pb-3\">\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-6\">\r\n              <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"handleAddProfile()\">\r\n                Add Advertiser\r\n              </button>\r\n            </div>\r\n            <div class=\"col-xl-6 all-advertiser-user align-self-center d-flex\">\r\n              <mat-checkbox color=\"primary\" [(ngModel)]=\"companyUser\" (change)=\"onChangeAdvertiser($event)\">Display All\r\n                Advertisers</mat-checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"example-container mat-elevation-z8\">\r\n          <mat-table #table [dataSource]=\"advertisers\">\r\n            <ng-container matColumnDef=\"fullname\">\r\n              <mat-header-cell *matHeaderCellDef> Full Name </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.fullname}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"email\">\r\n              <mat-header-cell *matHeaderCellDef> Email </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.email}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"companyname\">\r\n              <mat-header-cell *matHeaderCellDef> Companies </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\" [ngClass]=\"'font-weight-bold'\"> {{element.companyname}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"stat\">\r\n              <mat-header-cell *matHeaderCellDef> Stat# </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.tags.length}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"apiKey\">\r\n              <mat-header-cell *matHeaderCellDef> ApiKey </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.apiKey}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"action\">\r\n              <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\">\r\n                <a title=\"Edit Advertiser\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n                  (click)=\"handleEditClick(element._key)\">\r\n                  <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                    class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n                  </span>\r\n                </a>\r\n\r\n                <a title=\"Delete Advertiser\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n                  (click)=\"deleteAdvertiser(element._key)\">\r\n                  <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"false\"\r\n                    class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n                  </span>\r\n                </a>\r\n\r\n              </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n          </mat-table>\r\n          <div *ngIf=\"advertisers.data.length === 0\">\r\n            <p style=\"text-align: center;padding: 10px;\">No records found</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\">\r\n  <!--begin::Content-->\r\n  <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->","import { ChangeDetectorRef, Inject } from '@angular/core';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { CompanyService } from 'src/app/shared/service/companies.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { UserInterface } from 'src/app/shared/models/user.interface';\r\n\r\n@Component({\r\n  selector: 'app-add-company',\r\n  templateUrl: './add-company.component.html',\r\n  styleUrls: ['./add-company.component.scss'],\r\n})\r\nexport class AddCompanyComponent implements OnInit {\r\n  //Variable for loading indicator\r\n  loadingIndicator = true;\r\n\r\n  //Variable for current user\r\n  user: UserInterface;\r\n\r\n  //Variable for current companies saved on user account\r\n  userCompanies: string[];\r\n\r\n  //Variable for ALL Companies avaiablable\r\n  allCompanies: any;\r\n\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private cdr: ChangeDetectorRef,\r\n    public dialogRef: MatDialogRef<AddCompanyComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    //Sets current user to data input variable\r\n    this.user = this.data;\r\n\r\n    //Sets userCompanies to user's current companies\r\n    this.userCompanies = this.user.companies;\r\n\r\n    //Gets ALL companies available\r\n    this.getAllCompanies();\r\n  }\r\n\r\n  /**\r\n   * getAllCompanies()\r\n   * * Gets all companies available from companyService method.\r\n   * * @param NONE\r\n   */\r\n  getAllCompanies() {\r\n    this.companyService.getAllCompanies().subscribe((response) => {\r\n      console.log(response);\r\n      this.loadingIndicator = false;\r\n      this.allCompanies = response;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * save()\r\n   * * Saves added or removed companies to the user's profile\r\n   * TODO: TBD\r\n   * @param NONE\r\n   */\r\n  save() {\r\n    this.user.companies = [...this.userCompanies];\r\n    this.dialogRef.close({ user: this.user });\r\n  }\r\n\r\n  /**\r\n   * close()\r\n   * * Closes the dialog and does not make any changes.\r\n   *\r\n   */\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<mat-dialog-content class=\"mat-typography\">\r\n  <div class=\"row\">\r\n    <!-- STARTING UPDATE PROFILE-->\r\n    <div class=\"col-xl-12\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Add or Remove Companies</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-12\">\r\n              <mat-selection-list\r\n                color=\"primary\"\r\n                #company\r\n                [(ngModel)]=\"userCompanies\"\r\n              >\r\n                <mat-list-option\r\n                  *ngFor=\"let company of allCompanies\"\r\n                  [value]=\"company._id\"\r\n                >\r\n                  {{ company.name }}\r\n                </mat-list-option>\r\n              </mat-selection-list>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-dialog-content>\r\n<div class=\"row buttons\">\r\n  <div class=\"col-md-6\">\r\n    <button\r\n      class=\"save-button\"\r\n      mat-raised-button\r\n      color=\"secondary\"\r\n      (click)=\"close()\"\r\n    >\r\n      Cancel\r\n    </button>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <button\r\n      class=\"back-button\"\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"save()\"\r\n    >\r\n      Save\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectorRef, Inject } from '@angular/core';\r\nimport { UserInterface } from 'src/app/shared/models/user.interface';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { TagsService } from 'src/app/shared/service/tags.service';\r\nimport { TagManagementService } from 'src/app/modules/tag-management/tag-management.service';\r\n\r\n@Component({\r\n  selector: 'app-add-tag',\r\n  templateUrl: './add-tag.component.html',\r\n  styleUrls: ['./add-tag.component.scss']\r\n})\r\nexport class AddTagComponent implements OnInit {\r\n  //Variable for loading indicator\r\n  loadingIndicator = true;\r\n\r\n  //Variable for current user\r\n  user: UserInterface;\r\n  companySelected: any;\r\n  userTags: string[];\r\n  reportProviderData: any = [];\r\n  allTags: any = [];\r\n\r\n  constructor(\r\n    private tagService: TagsService,\r\n    private cdr: ChangeDetectorRef,\r\n    public dialogRef: MatDialogRef<AddTagComponent>,\r\n    private userService: UsersService,\r\n    private tagManagementService: TagManagementService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { \r\n    this.companySelected = this.getSelectedCompanyLocalStorage();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //Sets current user to data input variable\r\n    this.user = this.data;\r\n    //Sets userAdvertisers to user's current tags\r\n    this.userTags = this.user.tagsId[this.companySelected] ? this.user.tagsId[this.companySelected] : [];\r\n\r\n    //Gets ALL companies available\r\n    this.getAllTags();\r\n    //this.getReportingProviderList();\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  checkAllCheckBox(event: any) {\r\n    this.allTags.forEach((x: { checked: any; }) => x.checked = event.target.checked);\r\n  }\r\n\r\n  isAllCheckBoxChecked() {\r\n    return this.allTags.every(p => p.checked);\r\n  }\r\n\r\n  //get report Provider List\r\n  // getReportingProviderList() {\r\n  //   if (this.companySelected) {\r\n  //     this.tagService.getTagUserAdvertiser(this.user._key).subscribe(res => {\r\n  //       for (var resAdvertiser of res) {\r\n  //         this.reportProviderData.push({\r\n  //           value: resAdvertiser.advertiser,\r\n  //           viewValue: resAdvertiser.advertiser,\r\n  //         })\r\n  //       }\r\n  //       this.cdr.detectChanges();\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  getAllTags() {\r\n    this.tagManagementService.getAllTags().subscribe((response) => {\r\n      this.loadingIndicator = false;\r\n      let tempTags = [];\r\n      let currentCompanyTag = response.filter(current => current.company[0][\"_id\"] == this.companySelected);\r\n      currentCompanyTag.map(res => {\r\n        tempTags.push({\r\n          _id: res._id,\r\n          tagName: res.name,\r\n          publisher: res.publisher[0][\"fullname\"],\r\n          advertiser: res.advertiser,\r\n          checked: this.userTags.includes(res._id)\r\n        })\r\n      })\r\n      this.allTags = tempTags;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n  handleSubmit(): void {\r\n    let userNewTags = [];\r\n    this.allTags.map(data => {\r\n      if (data.checked) {\r\n        userNewTags.push(data._id);\r\n      }\r\n    });\r\n    this.userTags = userNewTags;\r\n    this.user.tagsId = [...this.userTags];\r\n    this.dialogRef.close({ user: this.user });\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<mat-dialog-content class=\"mat-typography\">\r\n  <div class=\"row\">\r\n    <!-- STARTING UPDATE Tag-->\r\n    <div class=\"col-xl-12\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Add or Remove Tags</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-12\">\r\n              <table class=\"table table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th><input type=\"checkbox\" [checked]=\"isAllCheckBoxChecked()\" (change)=\"checkAllCheckBox($event)\"></th>\r\n                    <th>Tag Name</th>\r\n                    <th>Publisher</th>\r\n                    <th>Advertiser</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let tag of allTags; let i=index;\">\r\n                    <td><input type=\"checkbox\" value=\"{{tag._id}}\" [(ngModel)]=\"tag.checked\"></td>\r\n                    <td>{{ tag.tagName }}</td>\r\n                    <td>{{ tag.publisher }}</td>\r\n                    <td>{{ tag.advertiser }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <!-- <mat-selection-list color=\"primary\" #advertiser [(ngModel)]=\"userTags\">\r\n                <mat-list-option *ngFor=\"let tag of allTags\" [value]=\"tag._id\">\r\n                  {{ tag.name }}\r\n                </mat-list-option>\r\n              </mat-selection-list> -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-dialog-content>\r\n<div class=\"row buttons\">\r\n  <div class=\"col-md-6\">\r\n    <button class=\"save-button\" mat-raised-button color=\"secondary\" (click)=\"close()\">\r\n      Cancel\r\n    </button>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <button class=\"back-button\" mat-raised-button color=\"primary\" (click)=\"handleSubmit()\">\r\n      Save\r\n    </button>\r\n  </div>\r\n</div>","import { ActivatedRoute } from '@angular/router';\r\nimport { TagInterface } from './../../../shared/models/tag.interface';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../auth/_services/auth.service';\r\nimport { UserManagementService } from '../user-management.service';\r\nimport { UserInterface } from 'src/app/shared/models/user.interface';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { UserPasswordResetComponent } from './user-password-reset/user-password-reset.component';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { AddTagComponent } from './add-tag/add-tag.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CompanyInterface } from 'src/app/shared/models/company.interface';\r\nimport { AddCompanyComponent } from './add-company/add-company.component';\r\nimport { CompanyService } from 'src/app/shared/service/companies.service';\r\nimport { TagsService } from 'src/app/shared/service/tags.service';\r\nimport { ClipboardService } from 'ngx-clipboard';\r\n\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\nimport { toJSDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-users',\r\n  templateUrl: './edit-users.component.html',\r\n  styleUrls: ['./edit-users.component.scss'],\r\n})\r\nexport class EditUsersComponent implements OnInit {\r\n  userProfileFG: FormGroup;\r\n  rows: Array<CompanyInterface>;\r\n\r\n  //All User Data\r\n  user: UserInterface;\r\n\r\n  //All User Data\r\n  userCompanies: Array<CompanyInterface>;\r\n  apiKey: string;\r\n  apiKeyCopy = false;\r\n  userTags: any;\r\n  selectedCompany: any;\r\n\r\n  constructor(\r\n    private userManagementService: UserManagementService,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private sS: SnackbarService,\r\n    private modalService: NgbModal,\r\n    private companyService: CompanyService,\r\n    private tagService: TagsService,\r\n    private snackBarService: SnackbarService,\r\n    public dialog: MatDialog,\r\n    private clipboardService: ClipboardService,\r\n    private cdr: ChangeDetectorRef,\r\n    private userService: UsersService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\r\n    this.userProfileFG = new FormGroup({\r\n      fullname: new FormControl('', Validators.required),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      role: new FormControl('', Validators.required),\r\n    });\r\n\r\n    if (this.route.snapshot.params.id) {\r\n      this.getUserData(this.route.snapshot.params.id);\r\n      // await this.getUserCompanies(this.user.companies);\r\n    } else {\r\n      this.user = this.authService.currentUserSubject.value as any;\r\n    }\r\n  }\r\n\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  /**\r\n   * getUserData(id)\r\n   * @param id: User _key value\r\n   */\r\n  async getUserData(id: string) {\r\n    //Pulls the specific USER from the database.\r\n    this.user = await this.userManagementService.getUser(id, this.selectedCompany).toPromise();\r\n    this.apiKey = this.user.apiKey;\r\n    //If user has companies on their account\r\n    if (this.user.companies.length) {\r\n      this.userCompanies = await this.companyService\r\n        .getUserCompanies(this.user.companies)\r\n        .toPromise();\r\n    }\r\n\r\n    if (this.user.tagsId[this.selectedCompany]) {\r\n      this.userTags = await this.tagService\r\n        .getUserTags(this.user.tagsId[this.selectedCompany])\r\n        .toPromise();\r\n    }\r\n\r\n    //Patches value into FormGroup\r\n    this.userProfileFG.patchValue(this.user);\r\n  }\r\n\r\n  openClipBoard(apiKey: any) {\r\n    this.apiKeyCopy = true;\r\n    this.clipboardService.copyFromContent(apiKey);\r\n    setTimeout(()=>{    \r\n      this.apiKeyCopy = false;\r\n      this.cdr.detectChanges();\r\n  }, 3000);\r\n  }\r\n\r\n  updateUserProfile($event: any): void {\r\n    if (this.userProfileFG.valid) {\r\n      this.user = { ...this.user, ...this.userProfileFG.value };\r\n      this.userManagementService.updateUser(this.user, this.selectedCompany).subscribe((x) => {\r\n        this.sS.info('user profile updated');\r\n      });\r\n    }\r\n  }\r\n\r\n  openPasswordResetDialog() {\r\n    const modalRef = this.modalService.open(UserPasswordResetComponent, {\r\n      size: 'md',\r\n    });\r\n    modalRef.componentInstance.data = {\r\n      id: this.user._key,\r\n    };\r\n    modalRef.result.then((c) => { });\r\n  }\r\n\r\n  openAddTagDialog() {\r\n    let tagdialog = this.dialog\r\n      .open(AddTagComponent, {\r\n        height: 'auto',\r\n        width: '600px',\r\n        data: this.user,\r\n      })\r\n      .afterClosed()\r\n      .subscribe((response) => {\r\n        //If user hits save\r\n        if (response) {\r\n          this.user = response.user;\r\n          //Updates current user with new company selection.\r\n          this.userManagementService.updateUser(this.user, this.selectedCompany).subscribe((x) => {\r\n            //\r\n            this.getUserData(this.user._key);\r\n            this.snackBarService.info(\r\n              `Updated  ${this.user.fullname}'s tags.`\r\n            );\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  //Add/Edit Companies to a user profile\r\n  openAddCompanyDialog() {\r\n    console.log(this.user);\r\n    let dialogRef = this.dialog\r\n      .open(AddCompanyComponent, {\r\n        height: 'auto',\r\n        width: '600px',\r\n        data: this.user,\r\n      })\r\n      .afterClosed()\r\n      .subscribe((response) => {\r\n        //If user hits save\r\n        if (response) {\r\n          console.log(response);\r\n          //New variable readability -- all user data\r\n          this.user = response.user;\r\n\r\n          //Updates current user with new company selection.\r\n          this.userManagementService.updateUser(this.user, this.selectedCompany).subscribe((x) => {\r\n            //\r\n            this.getUserData(this.user._key);\r\n            this.snackBarService.info(\r\n              `Updated  ${this.user.fullname}'s companies.`\r\n            );\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <!-- STARTING UPDATE PROFILE-->\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">Update Profile</h3>\r\n          <button mat-button color=\"primary\" type=\"button\" (click)=\"openPasswordResetDialog()\">\r\n            Reset Password\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form class=\"example-container\" [formGroup]=\"userProfileFG\" (submit)=\"updateUserProfile($event)\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"fullname\" placeholder=\"Full Name\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('fullname').errors?.required\">Name is required</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('email').errors?.email\">Email is not valid</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <mat-select formControlName=\"role\" placeholder=\"Role\">\r\n                  <mat-option [value]=\"1\">Super Admin</mat-option>\r\n                  <mat-option [value]=\"2\">Admin</mat-option>\r\n                  <mat-option [value]=\"3\">Publisher</mat-option>\r\n                  <mat-option [value]=\"4\">Advertiser</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"userProfileFG.get('role').errors?.required\">Role is not valid</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row updateProfile\">\r\n            <div class=\"col-md-12\">\r\n              <button mat-raised-button color=\"primary\" type=\"submit\">\r\n                Update Profile\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- STARTING USER INFORMATION -->\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\" style=\"min-height: 315px;\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">User Information</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-12\">\r\n            <div class=\"d-flex justify-content-between w-100\" style=\"align-items: center;\">\r\n              <div>\r\n                <span class=\"text-dark\" style=\"font-size: 1.25rem;\">API Key : </span>\r\n                <span class=\"text-dark\" style=\"font-size: 1.25rem;\">{{apiKey}}</span>\r\n              </div>\r\n              <div>\r\n                <a title=\"Copy APIKEY\" class=\"btn btn-icon btn-light btn-hover-info btn-sm\" (click)=\"openClipBoard(apiKey)\">\r\n                  <span [inlineSVG]=\"apiKeyCopy ? './assets/media/svg/icons/General/copied.svg' : './assets/media/svg/icons/General/Clipboard.svg'\" cacheSVG=\"false\"\r\n                    class=\"svg-icon svg-icon-md svg-icon-info\">\r\n                  </span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- STARTING UPDATE COMPANIES -->\r\n<div class=\"row\">\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">Companies</h3>\r\n          <button mat-button color=\"primary\" (click)=\"openAddCompanyDialog()\">\r\n            Add or Remove\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-12\">\r\n            <mat-list *ngIf=\"user\" #company>\r\n              <mat-list-item *ngFor=\"let company of userCompanies\">\r\n                {{ company.name }}\r\n                <mat-divider></mat-divider>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- STARTING UPDATING TAGS -->\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">Tags</h3>\r\n          <button mat-button color=\"primary\" (click)=\"openAddTagDialog()\">\r\n            Add or Remove\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-12\">\r\n            <mat-list *ngIf=\"user\" #tag>\r\n              <mat-list-item *ngFor=\"let tag of userTags\">\r\n                <div style=\"display: flex;justify-content: space-between;width: 100%;\">\r\n                  <div> {{tag.name}} </div>\r\n                  <div> {{tag._key}} </div>\r\n                </div>\r\n                <mat-divider></mat-divider>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HelperService } from 'src/app/shared/service/helper.service';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { UserManagementService } from '../../user-management.service';\r\n\r\n@Component({\r\n  selector: 'app-user-password-reset',\r\n  templateUrl: './user-password-reset.component.html',\r\n  styleUrls: ['./user-password-reset.component.scss']\r\n})\r\nexport class UserPasswordResetComponent implements OnInit {\r\n  passwordFG: FormGroup;\r\n  @Input() data: any;\r\n\r\n  constructor(\r\n    public activeModal: NgbActiveModal,\r\n    private userManagementService: UserManagementService,\r\n    private fb: FormBuilder,\r\n    private sS: SnackbarService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.passwordFG = this.fb.group({\r\n      password: new FormControl('', Validators.required),\r\n      passwordConfirm: new FormControl('', Validators.required)\r\n    }, { validator: HelperService.passwordConfirming })\r\n  }\r\n\r\n  handleSubmit(): void {\r\n    this.passwordFG.markAllAsTouched();\r\n    if (this.passwordFG.valid) {\r\n      var password = this.passwordFG.value.password;\r\n      var id = this.data.id;\r\n      this.userManagementService.resetPassword(id, password).subscribe(x => {\r\n        this.sS.info('password has been reset');\r\n        this.activeModal.close();\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Update Profile</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <form class=\"example-container\" [formGroup]=\"passwordFG\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <mat-form-field>\r\n                    <input type=\"password\" matInput formControlName=\"password\" placeholder=\"Password\" />\r\n                    <mat-error *ngIf=\"passwordFG.get('password').errors?.required\">Password is required</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <mat-form-field>\r\n                    <input type=\"password\" matInput formControlName=\"passwordConfirm\" placeholder=\"Confirm Password\" />\r\n                    <mat-error *ngIf=\"passwordFG.get('passwordConfirm').errors?.required\">Confirm password is required\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"passwordFG.errors?.invalid\">Password is not match</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"activeModal.close()\">Close</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"handleSubmit()\">Reset Password</button>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\r\nimport { UserManagementService } from '../user-management.service';\r\nimport { UserInterface } from 'src/app/shared/models/user.interface';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../../auth/_services/auth.service';\r\nimport { ConfirmPasswordValidator } from 'src/app/modules/auth/registration/confirm-password.validator';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-new-admin',\r\n  templateUrl: './new-admin.component.html',\r\n  styleUrls: ['./new-admin.component.scss']\r\n})\r\nexport class NewAdminComponent implements OnInit {\r\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\r\n  userProfileFG: FormGroup;\r\n  //All User Data\r\n  user: UserInterface;\r\n  companySelected: any;\r\n  hidden = false;\r\n  constructor(\r\n    private userManagementService: UserManagementService,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private sS: SnackbarService,\r\n    private fb: FormBuilder,\r\n    private userService: UsersService,\r\n    private notification: NotificationService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.companySelected = this.getSelectedCompanyFromLocalStorage();\r\n    //access page part\r\n    if (!this.companySelected) {\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.userProfileFG = this.fb.group(\r\n      {\r\n        fullname: new FormControl('', Validators.required),\r\n        email: new FormControl('', [Validators.required, Validators.email]),\r\n        password: new FormControl('', Validators.required),\r\n        cPassword: new FormControl('', Validators.required),\r\n        role: new FormControl(''),\r\n        companies: new FormControl(''),\r\n      },\r\n      {\r\n        validator: ConfirmPasswordValidator.MatchPassword,\r\n      }\r\n    );\r\n  }\r\n  newUserProfile($event: any): void {\r\n    this.userProfileFG.patchValue({\r\n      role: 2,\r\n      companies: [this.companySelected]\r\n    })\r\n    this.user = { ...this.user, ...this.userProfileFG.value }\r\n    if (this.userProfileFG.valid) {\r\n      if (this.companySelected) {\r\n        this.user = { ...this.user, ...this.userProfileFG.value };\r\n        this.userManagementService.addNewUser(this.user).subscribe((x) => {\r\n          if (x['status']) {\r\n            var userName = x['data']\r\n            this.sS.info(`New Admin ${userName} profile created`);\r\n            this.userProfileFG.reset();\r\n            this.formGroupDirective.resetForm();\r\n          } else {\r\n            this.sS.info(`${x['data']}`);\r\n          }\r\n        });\r\n      } else {\r\n        this.sS.error('No Company, You can not create User!.');\r\n      }\r\n\r\n    }\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"!hidden\">\r\n  <!-- STARTING UPDATE PROFILE-->\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">New Admin Profile</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form class=\"example-container\" [formGroup]=\"userProfileFG\" #formGroupDirective=\"ngForm\"\r\n          (submit)=\"newUserProfile($event)\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"fullname\" placeholder=\"Full Name\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('fullname').errors?.required\">Name is required</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('email').errors?.email\">Email is not valid</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"password\" placeholder=\"Password\" type=\"password\" autocomplete=\"off\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('password').errors?.required\">Password is required</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"cPassword\" placeholder=\"Confirm Passsword\" type=\"password\"\r\n                  autocomplete=\"off\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('cPassword').errors?.required\">Confirm Password is required\r\n                </mat-error>\r\n                <mat-error\r\n                  *ngIf=\"userProfileFG.controls['cPassword'].errors && userProfileFG.controls['cPassword'].errors.ConfirmPassword\">\r\n                  'Passsword' and 'Confirm Password' didn't match.</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row pt-2\">\r\n            <div class=\"col-md-12\">\r\n              <button mat-raised-button color=\"primary\" type=\"submit\">\r\n                Create Profile\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\">\r\n  <!--begin::Content-->\r\n  <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\r\nimport { UserManagementService } from '../user-management.service';\r\nimport { UserInterface } from 'src/app/shared/models/user.interface';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../../auth/_services/auth.service';\r\nimport { ConfirmPasswordValidator } from 'src/app/modules/auth/registration/confirm-password.validator';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-new-advertiser',\r\n  templateUrl: './new-advertiser.component.html',\r\n  styleUrls: ['./new-advertiser.component.scss']\r\n})\r\nexport class NewAdvertiserComponent implements OnInit {\r\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\r\n  userProfileFG: FormGroup;\r\n  //All User Data\r\n  user: UserInterface;\r\n  companySelected: any;\r\n  hidden = false;\r\n\r\n  constructor(\r\n    private userManagementService: UserManagementService,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private sS: SnackbarService,\r\n    private fb: FormBuilder,\r\n    private userService: UsersService,\r\n    private notification: NotificationService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.companySelected = this.getSelectedCompanyFromLocalStorage();\r\n    //access page part\r\n    if (!this.companySelected) {\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.userProfileFG = this.fb.group(\r\n      {\r\n        fullname: new FormControl('', Validators.required),\r\n        email: new FormControl('', [Validators.required, Validators.email]),\r\n        password: new FormControl('', Validators.required),\r\n        cPassword: new FormControl('', Validators.required),\r\n        role: new FormControl(''),\r\n        companies: new FormControl(''),\r\n      },\r\n      {\r\n        validator: ConfirmPasswordValidator.MatchPassword,\r\n      }\r\n    );\r\n  }\r\n  newUserProfile($event: any): void {\r\n    this.userProfileFG.patchValue({\r\n      role: 4,\r\n      companies: [this.companySelected]\r\n    })\r\n    this.user = { ...this.user, ...this.userProfileFG.value }\r\n    if (this.userProfileFG.valid) {\r\n      if (this.companySelected) {\r\n        this.user = { ...this.user, ...this.userProfileFG.value };\r\n        this.userManagementService.addNewUser(this.user).subscribe((x) => {\r\n          if (x['status']) {\r\n            var userName = x['data']\r\n            this.sS.info(`New Advertiser ${userName} profile created`);\r\n            this.userProfileFG.reset();\r\n            this.formGroupDirective.resetForm();\r\n          } else {\r\n            this.sS.info(`${x['data']}`);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.sS.error('No Company, You can not create User!.');\r\n      }\r\n    }\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n}\r\n","<div class=\"row\" *ngIf=\"!hidden\">\r\n  <!-- STARTING UPDATE PROFILE-->\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">New Advertiser Profile</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form class=\"example-container\" [formGroup]=\"userProfileFG\" #formGroupDirective=\"ngForm\"\r\n          (submit)=\"newUserProfile($event)\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"fullname\" placeholder=\"Full Name\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('fullname').errors?.required\">Name is required</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('email').errors?.email\">Email is not valid</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"password\" placeholder=\"Password\" type=\"password\" autocomplete=\"off\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('password').errors?.required\">Password is required</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"cPassword\" placeholder=\"Confirm Passsword\" type=\"password\"\r\n                  autocomplete=\"off\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('cPassword').errors?.required\">Confirm Password is required\r\n                </mat-error>\r\n                <mat-error\r\n                  *ngIf=\"userProfileFG.controls['cPassword'].errors && userProfileFG.controls['cPassword'].errors.ConfirmPassword\">\r\n                  'Passsword' and 'Confirm Password' didn't match.</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row pt-2\">\r\n            <div class=\"col-md-12\">\r\n              <button mat-raised-button color=\"primary\" type=\"submit\">\r\n                Create Profile\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\">\r\n  <!--begin::Content-->\r\n  <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\r\nimport { UserManagementService } from '../user-management.service';\r\nimport { UserInterface } from 'src/app/shared/models/user.interface';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../../auth/_services/auth.service';\r\nimport { ConfirmPasswordValidator } from 'src/app/modules/auth/registration/confirm-password.validator';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-new-superadmin',\r\n  templateUrl: './new-superadmin.component.html',\r\n  styleUrls: ['./new-superadmin.component.scss']\r\n})\r\nexport class NewSuperadminComponent implements OnInit {\r\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\r\n  userProfileFG: FormGroup;\r\n  //All User Data\r\n  user: UserInterface;\r\n  companySelected: any;\r\n  hidden = false;\r\n\r\n  constructor(\r\n    private userManagementService: UserManagementService,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private sS: SnackbarService,\r\n    private fb: FormBuilder,\r\n    private userService: UsersService,\r\n    private notification: NotificationService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.companySelected = this.getSelectedCompanyFromLocalStorage();\r\n    //access page part\r\n    if (!this.companySelected) {\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.userProfileFG = this.fb.group(\r\n      {\r\n        fullname: new FormControl('', Validators.required),\r\n        email: new FormControl('', [Validators.required, Validators.email]),\r\n        password: new FormControl('', Validators.required),\r\n        cPassword: new FormControl('', Validators.required),\r\n        role: new FormControl(''),\r\n        companies: new FormControl(''),\r\n      },\r\n      {\r\n        validator: ConfirmPasswordValidator.MatchPassword,\r\n      }\r\n    );\r\n  }\r\n  newUserProfile($event: any): void {\r\n    this.userProfileFG.patchValue({\r\n      role: 1,\r\n      companies: [this.companySelected]\r\n    })\r\n    this.user = { ...this.user, ...this.userProfileFG.value }\r\n    if (this.userProfileFG.valid) {\r\n      if (this.companySelected) {\r\n        this.user = { ...this.user, ...this.userProfileFG.value };\r\n        this.userManagementService.addNewUser(this.user).subscribe((x) => {\r\n          if (x['status']) {\r\n            var userName = x['data']\r\n            this.sS.info(`New Super Admin ${userName} profile created`);\r\n            this.userProfileFG.reset();\r\n            this.formGroupDirective.resetForm();\r\n          } else {\r\n            this.sS.info(`${x['data']}`);\r\n          }\r\n\r\n        });\r\n      } else {\r\n        this.sS.error('No Company, You can not create User!.');\r\n      }\r\n\r\n    }\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n}\r\n","<div class=\"row\" *ngIf=\"!hidden\">\r\n  <!-- STARTING UPDATE PROFILE-->\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">Super Admin Profile</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form class=\"example-container\" [formGroup]=\"userProfileFG\" #formGroupDirective=\"ngForm\"\r\n          (submit)=\"newUserProfile($event)\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"fullname\" placeholder=\"Full Name\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('fullname').errors?.required\">Name is required</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('email').errors?.email\">Email is not valid</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"password\" placeholder=\"Password\" type=\"password\" autocomplete=\"off\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('password').errors?.required\">Password is required</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"cPassword\" placeholder=\"Confirm Passsword\" type=\"password\"\r\n                  autocomplete=\"off\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('cPassword').errors?.required\">Confirm Password is required\r\n                </mat-error>\r\n                <mat-error\r\n                  *ngIf=\"userProfileFG.controls['cPassword'].errors && userProfileFG.controls['cPassword'].errors.ConfirmPassword\">\r\n                  'Passsword' and 'Confirm Password' didn't match.</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row pt-2\">\r\n            <div class=\"col-md-12\">\r\n              <button mat-raised-button color=\"primary\" type=\"submit\">\r\n                Create Profile\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\">\r\n  <!--begin::Content-->\r\n  <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\r\nimport { UserManagementService } from '../user-management.service';\r\nimport { UserInterface } from 'src/app/shared/models/user.interface';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../../auth/_services/auth.service';\r\nimport { ConfirmPasswordValidator } from 'src/app/modules/auth/registration/confirm-password.validator';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-new-user',\r\n  templateUrl: './new-user.component.html',\r\n  styleUrls: ['./new-user.component.scss']\r\n})\r\nexport class NewUserComponent implements OnInit {\r\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\r\n  userProfileFG: FormGroup;\r\n  //All User Data\r\n  user: UserInterface;\r\n  companySelected: any;\r\n  hidden = false;\r\n\r\n  constructor(\r\n    private userManagementService: UserManagementService,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private sS: SnackbarService,\r\n    private fb: FormBuilder,\r\n    private userService: UsersService,\r\n    private notification: NotificationService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.companySelected = this.getSelectedCompanyFromLocalStorage();\r\n    //access page part\r\n    if (!this.companySelected) {\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.userProfileFG = this.fb.group(\r\n      {\r\n        fullname: new FormControl('', Validators.required),\r\n        email: new FormControl('', [Validators.required, Validators.email]),\r\n        password: new FormControl('', Validators.required),\r\n        cPassword: new FormControl('', Validators.required),\r\n        role: new FormControl(''),\r\n        companies: new FormControl(''),\r\n      },\r\n      {\r\n        validator: ConfirmPasswordValidator.MatchPassword,\r\n      }\r\n    );\r\n  }\r\n  newUserProfile($event: any): void {\r\n    this.userProfileFG.patchValue({\r\n      role: 3,\r\n      companies: [this.companySelected]\r\n    })\r\n    this.user = { ...this.user, ...this.userProfileFG.value }\r\n    if (this.userProfileFG.valid) {\r\n      if (this.companySelected) {\r\n        this.user = { ...this.user, ...this.userProfileFG.value };\r\n        this.userManagementService.addNewUser(this.user).subscribe((x) => {\r\n          if (x['status']) {\r\n            var userName = x['data']\r\n            this.sS.info(`New Publisher ${userName} profile created`);\r\n            this.userProfileFG.reset();\r\n            this.formGroupDirective.resetForm();\r\n          } else {\r\n            this.sS.info(`${x['data']}`);\r\n          }\r\n        });\r\n      } else {\r\n        this.sS.error('No Company, You can not create User!.');\r\n      }\r\n\r\n    }\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"!hidden\">\r\n  <!-- STARTING UPDATE PROFILE-->\r\n  <div class=\"col-xl-6\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">New Publisher Profile</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form class=\"example-container\" [formGroup]=\"userProfileFG\" #formGroupDirective=\"ngForm\"\r\n          (submit)=\"newUserProfile($event)\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"fullname\" placeholder=\"Full Name\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('fullname').errors?.required\">Name is required</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('email').errors?.email\">Email is not valid</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"password\" placeholder=\"Password\" type=\"password\" autocomplete=\"off\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('password').errors?.required\">Password is required</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"cPassword\" placeholder=\"Confirm Passsword\" type=\"password\"\r\n                  autocomplete=\"off\" />\r\n                <mat-error *ngIf=\"userProfileFG.get('cPassword').errors?.required\">Confirm Password is required\r\n                </mat-error>\r\n                <mat-error\r\n                  *ngIf=\"userProfileFG.controls['cPassword'].errors && userProfileFG.controls['cPassword'].errors.ConfirmPassword\">\r\n                  'Passsword' and 'Confirm Password' didn't match.</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row pt-2\">\r\n            <div class=\"col-md-12\">\r\n              <button mat-raised-button color=\"primary\" type=\"submit\">\r\n                Create Profile\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\">\r\n  <!--begin::Content-->\r\n  <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { MatCheckboxChange } from '@angular/material/checkbox';\r\nimport { PermissionInterface } from 'src/app/shared/models/permission.interface';\r\nimport { UserManagementService } from '../../user-management.service';\r\n\r\n@Component({\r\n  selector: 'app-permission',\r\n  templateUrl: './permission.component.html',\r\n  styleUrls: ['./permission.component.scss']\r\n})\r\nexport class PermissionComponent implements OnInit {\r\n  @Input() data: any;\r\n  permission: PermissionInterface\r\n  permissionFG: FormGroup;\r\n  allChecked = false;\r\n  isIndeterminate = false;\r\n  notifications = false;\r\n  protectedMedia = false;\r\n  googleMaterial = false;\r\n  dashboard = false;\r\n  eCommerce = false;\r\n  liveTraffic = false;\r\n  ngBootstrap =  false;\r\n  layoutBuilder = false;\r\n  userManage = false;\r\n  companyManage = false;\r\n  tagManage = false;\r\n  reportManage = false;\r\n  apiDocumentationManage = false;\r\n  publisherReportingManage = false;\r\n  googlesheetReportingManage = false;\r\n  i = 0;\r\n  constructor(\r\n    public activeModal: NgbActiveModal,\r\n    private fb: FormBuilder,\r\n    private snackService: SnackbarService,\r\n    private userManagementService: UserManagementService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    //Get the current company to edit\r\n    if (this.data['id']) {\r\n      this.userManagementService.getOnePermission(this.data['id']).subscribe(x => {\r\n        this.permission = x;\r\n        this.permissionFG.patchValue(x);\r\n        if (x['companyManage'] == true && x['eCommerce'] == true && x['dashboard'] == true && x['googleMaterial'] == true && x['layoutBuilder'] == true && x['liveTraffic'] == true && x['ngBootstrap'] == true && x['notifications'] == true && x['protectedMedia'] == true && x['reportManage'] == true && x['tagManage'] == true && x['userManage'] == true && x['publisherReportingManage'] == true && x['apiDocumentationManage'] == true && x['googlesheetReportingManage'] == true) {\r\n          this.allChecked = true;\r\n          this.isIndeterminate = false;\r\n        } else {\r\n          this.allChecked = false;\r\n          this.isIndeterminate = false;\r\n        }\r\n      });\r\n    } else {}\r\n    this.permissionFG = this.fb.group({\r\n      dashboard: new FormControl('', Validators.required),\r\n      notifications: new FormControl('', Validators.required),\r\n      layoutBuilder: new FormControl('', Validators.required),\r\n      protectedMedia: new FormControl('', Validators.required),\r\n      googleMaterial: new FormControl('', Validators.required),\r\n      eCommerce: new FormControl('', Validators.required),\r\n      liveTraffic: new FormControl('', Validators.required),\r\n      ngBootstrap: new FormControl('', Validators.required),\r\n      companyManage: new FormControl('', Validators.required),\r\n      userManage: new FormControl('', Validators.required),\r\n      reportManage: new FormControl('', Validators.required),\r\n      tagManage: new FormControl('', Validators.required),\r\n      publisherReportingManage: new FormControl('', Validators.required),\r\n      googlesheetReportingManage: new FormControl('', Validators.required),\r\n      apiDocumentationManage: new FormControl('', Validators.required),\r\n    })\r\n  }\r\n  onIndeterminateChange(val: boolean) {\r\n    console.log('isIndeterminate: ' + val);\r\n  }\r\n  onChange(ob: MatCheckboxChange) {\r\n    console.log(\"checked: \" + ob.checked);\r\n  }\r\n  onChkChange(ob: MatCheckboxChange) {\r\n    if(ob.checked) {\r\n      this.userManage = true;\r\n      this.companyManage = true;\r\n      this.tagManage = true;\r\n      this.reportManage = true;\r\n      this.publisherReportingManage = true;\r\n      this.googlesheetReportingManage = true;\r\n      this.notifications = true;\r\n      this.protectedMedia = true;\r\n      this.googleMaterial = true;\r\n      this.dashboard = true;\r\n      this.eCommerce = true;\r\n      this.liveTraffic = true;\r\n      this.ngBootstrap =  true;\r\n      this.layoutBuilder = true;\r\n      this.apiDocumentationManage = true;\r\n      this.i = 15;\r\n    } else {\r\n      this.userManage = false;\r\n      this.companyManage = false;\r\n      this.tagManage = false;\r\n      this.reportManage = false; \r\n      this.notifications = false;\r\n      this.protectedMedia = false;\r\n      this.googleMaterial = false;\r\n      this.dashboard = false;\r\n      this.eCommerce = false;\r\n      this.liveTraffic = false;\r\n      this.ngBootstrap =  false;\r\n      this.layoutBuilder = false;    \r\n      this.publisherReportingManage = false;\r\n      this.googlesheetReportingManage = false;\r\n      this.apiDocumentationManage = false;\r\n    }\r\n }\r\n onChildChkChange(ob: MatCheckboxChange) {\r\n    if(ob.checked) {\r\n      this.i++;\r\n    } else {\r\n      this.i--;\r\n    }\r\n    if(this.i==15) {\r\n      this.allChecked = true;\r\n      this.isIndeterminate = false;\r\n    } else if (this.i >= 1 || this.i <= 15) {\r\n      this.isIndeterminate = true;\r\n      this.allChecked = false;\r\n    } else {\r\n      this.isIndeterminate = false;\r\n      this.allChecked = false;\r\n    }\r\n  }\r\n  \r\n  handleSubmit() {\r\n    this.permissionFG.markAllAsTouched();\r\n    if (this.permissionFG.valid) {     \r\n      this.permission = {...this.permission, ...this.permissionFG.value};\r\n      this.userManagementService.updateOnePermission(this.permission).subscribe(x => {\r\n        this.snackService.info('Successfully updated permission.');\r\n        this.activeModal.close(x);\r\n      }, (err) => {\r\n        this.snackService.info(`Error updating permission: ${err.statusText}`);\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Permission</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"row justify-content-end d-flex\">\r\n        <div class=\"select-all\">\r\n            <mat-checkbox [ngStyle]=\"{'color': '#232428'}\" class=\"example-margin\" [indeterminate]=\"isIndeterminate\" [checked]=\"allChecked\" (indeterminateChange)=\"onIndeterminateChange($event)\" (change)=\"onChkChange($event)\">Select All</mat-checkbox>\r\n        </div>\r\n    </div>\r\n    <form class=\"example-container\" [formGroup]=\"permissionFG\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"dashboard\" class=\"example-margin\" [(ngModel)]=\"dashboard\" (change)=\"onChildChkChange($event)\">Dashboard</mat-checkbox>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"layoutBuilder\" class=\"example-margin\" [(ngModel)]=\"layoutBuilder\" (change)=\"onChildChkChange($event)\">Layout Builder</mat-checkbox>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"googleMaterial\" class=\"example-margin\" [(ngModel)]=\"googleMaterial\" (change)=\"onChildChkChange($event)\">Google Material</mat-checkbox>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"ngBootstrap\" class=\"example-margin\" [(ngModel)]=\"ngBootstrap\" (change)=\"onChildChkChange($event)\">Ng-Bootstrap</mat-checkbox>\r\n                        </span>\r\n                    </div>\r\n                    \r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"companyManage\" class=\"example-margin\" [(ngModel)]=\"companyManage\" (change)=\"onChildChkChange($event)\">Company Management</mat-checkbox>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"tagManage\" class=\"example-margin\" [(ngModel)]=\"tagManage\" (change)=\"onChildChkChange($event)\">Tag Management</mat-checkbox>\r\n                        </span>\r\n                        \r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"publisherReportingManage\" class=\"example-margin\" [(ngModel)]=\"publisherReportingManage\" (change)=\"onChildChkChange($event)\">Publisher Reporting</mat-checkbox>\r\n                        </span>\r\n                        \r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"googlesheetReportingManage\" class=\"example-margin\" [(ngModel)]=\"googlesheetReportingManage\" (change)=\"onChildChkChange($event)\">Google Sheet Reporting</mat-checkbox>\r\n                        </span>\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"eCommerce\" class=\"example-margin\" [(ngModel)]=\"eCommerce\" (change)=\"onChildChkChange($event)\">eCommerce</mat-checkbox>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"liveTraffic\" class=\"example-margin\" [(ngModel)]=\"liveTraffic\" (change)=\"onChildChkChange($event)\">Live Traffic</mat-checkbox>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"protectedMedia\" class=\"example-margin\" [(ngModel)]=\"protectedMedia\" (change)=\"onChildChkChange($event)\">Protected Media</mat-checkbox>\r\n                        </span>\r\n                        \r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"notifications\" class=\"example-margin\" [(ngModel)]=\"notifications\" (change)=\"onChildChkChange($event)\">Notifications</mat-checkbox>\r\n                        </span>\r\n                        \r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"userManage\" class=\"example-margin\" [(ngModel)]=\"userManage\" (change)=\"onChildChkChange($event)\">User Management</mat-checkbox>\r\n                        </span>\r\n                        \r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"reportManage\" class=\"example-margin\" [(ngModel)]=\"reportManage\" (change)=\"onChildChkChange($event)\">Reporting</mat-checkbox>\r\n                        </span>\r\n                        \r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <span class=\"example-list-section\">\r\n                            <mat-checkbox color=\"primary\" formControlName=\"apiDocumentationManage\" class=\"example-margin\" [(ngModel)]=\"apiDocumentationManage\" (change)=\"onChildChkChange($event)\">API Documentation</mat-checkbox>\r\n                        </span>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"activeModal.close()\">Close</button>\r\n    <button type=\"button\" class=\"btn btn-sm btn-primary\"  (click)=\"handleSubmit()\">Update</button>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PermissionComponent } from './permission/permission.component';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { position: 1, name: \"Super Admin\" },\r\n  { position: 2, name: \"Admin\" },\r\n  { position: 3, name: \"Publisher\" },\r\n  { position: 4, name: \"Advertiser\" },\r\n];\r\n\r\n@Component({\r\n  selector: \"app-roles\",\r\n  templateUrl: \"./roles.component.html\",\r\n  styleUrls: [\"./roles.component.scss\"],\r\n})\r\nexport class RolesComponent implements OnInit {\r\n  displayedColumns: string[] = [\"position\", \"name\", \"action\"];\r\n  dataSource = ELEMENT_DATA;\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private route: ActivatedRoute,\r\n    private sS: SnackbarService,\r\n  ) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  openManagePermissionDialog(roleKey) {\r\n    const modalRef = this.modalService.open(PermissionComponent, {\r\n      size: 'md',\r\n    });\r\n    modalRef.componentInstance.data = {\r\n      id: roleKey\r\n    };\r\n    modalRef.result.then((c) => { });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-xl-12\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">User Role</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n          <!--- Note that these columns can be defined in any order.\r\n                The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n          <!-- Position Column -->\r\n          <ng-container matColumnDef=\"position\">\r\n            <th mat-header-cell *matHeaderCellDef> No. </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n          </ng-container>\r\n\r\n          <!-- Name Column -->\r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef> Role </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n          </ng-container>\r\n\r\n          <!-- Action Column -->\r\n          <ng-container matColumnDef=\"action\">\r\n            <th mat-header-cell *matHeaderCellDef> Action </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              <a title=\"Edit Role\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n                (click)=\"openManagePermissionDialog(element.position)\">\r\n                <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                  class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n                </span>\r\n              </a>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Router, ActivatedRoute } from '@angular/router';\r\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { Subscription } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { UserInterface } from './../../../shared/models/user.interface';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-superadmins',\r\n  templateUrl: './superadmins.component.html',\r\n  styleUrls: ['./superadmins.component.scss']\r\n})\r\nexport class SuperadminsComponent implements OnInit {\r\n  displayedColumns = [\"fullname\", \"email\", \"companyname\", \"stat\", \"apiKey\", \"action\"];\r\n  superadmins = new MatTableDataSource<UserInterface>();\r\n  companyUser = false;\r\n  //Local Storage Company\r\n  localStorageCompany: any;\r\n  hidden = false;\r\n  originalData: any[];\r\n  private subscritions: Subscription[] = [];\r\n  constructor(\r\n    private userService: UsersService,\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private notification: NotificationService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\r\n    //access page part\r\n    if (!this.localStorageCompany) {\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.subscritions.push(\r\n      this.userService.getSuperAdminAll().subscribe(data => {\r\n        this.originalData = data;\r\n        if (this.localStorageCompany) {\r\n          this.superadmins.data = data.filter(userData => userData.companies.includes(this.localStorageCompany));\r\n        } else {\r\n          this.superadmins.data = data;\r\n        }\r\n        this.cdr.detectChanges();\r\n      })\r\n    );\r\n  }\r\n  handleEditClick(userId: string): void {\r\n    this.router.navigateByUrl('/user-management/edit/' + userId);\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  handleAddProfile() {\r\n    this.router.navigateByUrl('/user-management/new-super-admin');\r\n  }\r\n  onChangeSuperAdmin(event) {\r\n    this.companyUser = event.checked;\r\n    if (this.companyUser) {\r\n      this.superadmins.data = this.originalData;\r\n    } else {\r\n      if (this.localStorageCompany) {\r\n        this.superadmins.data = this.originalData.filter(userData => userData.companies.includes(this.localStorageCompany));\r\n      } else {\r\n        this.superadmins.data = this.originalData;\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"!hidden\">\r\n    <div class=\"col-xl-12\">\r\n        <div class=\"card card-custom example example-compact gutter-b\">\r\n            <div class=\"card-header\">\r\n                <div class=\"card-title\">\r\n                    <h3 class=\"card-label\">Super Admins</h3>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"pb-3\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xl-6\">\r\n                            <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"handleAddProfile()\">\r\n                                Add Super Admin\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"col-xl-6 all-super-user align-self-center d-flex\">\r\n                            <mat-checkbox color=\"primary\" [(ngModel)]=\"companyUser\"\r\n                                (change)=\"onChangeSuperAdmin($event)\">Display All Super Admins</mat-checkbox>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"example-container mat-elevation-z8\">\r\n                    <mat-table #table [dataSource]=\"superadmins\">\r\n                        <ng-container matColumnDef=\"fullname\">\r\n                            <mat-header-cell *matHeaderCellDef> Full Name </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\"> {{element.fullname}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"email\">\r\n                            <mat-header-cell *matHeaderCellDef> Email </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\"> {{element.email}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"companyname\">\r\n                            <mat-header-cell *matHeaderCellDef> Companies </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\" [ngClass]=\"'font-weight-bold'\"> {{element.companyname}}\r\n                            </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"stat\">\r\n                            <mat-header-cell *matHeaderCellDef> Stat# </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\"> {{element.tags.length}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"apiKey\">\r\n                            <mat-header-cell *matHeaderCellDef> ApiKey </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\"> {{element.apiKey}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"action\">\r\n                            <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\">\r\n                                <a title=\"Edit Super Admin\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n                                    (click)=\"handleEditClick(element._key)\">\r\n                                    <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\"\r\n                                        cacheSVG=\"true\" class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n                                    </span>\r\n                                </a>\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n\r\n                    </mat-table>\r\n                    <div *ngIf=\"superadmins.data.length === 0\">\r\n                        <p style=\"text-align: center;padding: 10px;\">No records found</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\">\r\n    <!--begin::Content-->\r\n    <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\r\n        <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n            How did you get here\r\n        </p>\r\n        <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n            Sorry you can't access the page you're looking for.\r\n        </p>\r\n        <p class=\"font-size-h4 line-height-md\">\r\n            There may be a misspelling in the URL entered,<br />or the page you are\r\n            looking for may no longer exist.\r\n        </p>\r\n    </div>\r\n    <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserManagementComponent } from './user-management.component';\r\nimport { SuperadminsComponent } from './superadmins/superadmins.component';\r\nimport { AdminsComponent } from './admins/admins.component';\r\nimport { AdvertisersComponent } from './advertisers/advertisers.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { EditUsersComponent } from './edit-users/edit-users.component';\r\nimport { NewUserComponent } from './new-user/new-user.component';\r\nimport { NewSuperadminComponent } from './new-superadmin/new-superadmin.component';\r\nimport { NewAdminComponent } from './new-admin/new-admin.component';\r\nimport { NewAdvertiserComponent } from './new-advertiser/new-advertiser.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserManagementComponent,\r\n    children: [\r\n      {\r\n        path: 'super-admin-users',\r\n        component: SuperadminsComponent,\r\n      },\r\n      {\r\n        path: 'admin-users',\r\n        component: AdminsComponent,\r\n      },\r\n      {\r\n        path: 'advertiser-users',\r\n        component: AdvertisersComponent,\r\n      },\r\n      {\r\n        path: 'publisher-users',\r\n        component: UsersComponent,\r\n      },\r\n      {\r\n        path: 'roles',\r\n        component: RolesComponent,\r\n      },\r\n      {\r\n        path: 'new-super-admin',\r\n        component: NewSuperadminComponent,\r\n      },\r\n      {\r\n        path: 'new-admin',\r\n        component: NewAdminComponent,\r\n      },\r\n      {\r\n        path: 'new-advertiser',\r\n        component: NewAdvertiserComponent,\r\n      },\r\n      {\r\n        path: 'new-publisher',\r\n        component: NewUserComponent,\r\n      },\r\n      {\r\n        path: 'edit-user',\r\n        component: EditUsersComponent,\r\n      },\r\n      {\r\n        path: 'edit/:id',\r\n        component: EditUsersComponent,\r\n        pathMatch: 'full'\r\n      },\r\n      { path: '', redirectTo: 'publisher-users', pathMatch: 'full' },\r\n      { path: '**', redirectTo: 'publisher-users', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserManagementRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { UserManagementComponent } from './user-management.component';\r\nimport { UserManagementRoutingModule } from './user-management-routing.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { NgbAlertConfig, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { EditUsersComponent } from './edit-users/edit-users.component';\r\nimport { ValidateEqualModule } from 'ng-validate-equal';\r\nimport { UserPasswordResetComponent } from './edit-users/user-password-reset/user-password-reset.component';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { AddTagComponent } from './edit-users/add-tag/add-tag.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { AddCompanyComponent } from './edit-users/add-company/add-company.component';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { PermissionComponent } from './roles/permission/permission.component';\r\nimport { SuperadminsComponent } from './superadmins/superadmins.component';\r\nimport { AdminsComponent } from './admins/admins.component';\r\nimport { AdvertisersComponent } from './advertisers/advertisers.component';\r\nimport { NewUserComponent } from './new-user/new-user.component';\r\nimport { NewSuperadminComponent } from './new-superadmin/new-superadmin.component';\r\nimport { NewAdminComponent } from './new-admin/new-admin.component';\r\nimport { NewAdvertiserComponent } from './new-advertiser/new-advertiser.component';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UsersComponent,\r\n    RolesComponent,\r\n    UserManagementComponent,\r\n    EditUsersComponent,\r\n    UserPasswordResetComponent,\r\n    AddTagComponent,\r\n    AddCompanyComponent,\r\n    PermissionComponent,\r\n    SuperadminsComponent,\r\n    AdminsComponent,\r\n    AdvertisersComponent,\r\n    NewUserComponent,\r\n    NewSuperadminComponent,\r\n    NewAdminComponent,\r\n    NewAdvertiserComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatTableModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    MatSelectModule,\r\n    NgbModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    UserManagementRoutingModule,\r\n    ValidateEqualModule,\r\n    NgxDatatableModule,\r\n    MatListModule,\r\n    MatDialogModule,\r\n    InlineSVGModule.forRoot()\r\n  ],\r\n  providers: [SnackbarService],\r\n  entryComponents: [\r\n    UserPasswordResetComponent,\r\n    AddTagComponent,\r\n    AddCompanyComponent,\r\n    EditUsersComponent,\r\n  ],\r\n})\r\nexport class UserManagementModule {}\r\n","import { UserInterface } from './../../shared/models/user.interface';\r\nimport { PermissionInterface } from './../../shared/models/permission.interface';\r\nimport { AuthUserInterface } from 'src/app/shared/models/auth-user.interface';\r\nimport { TagsService } from './../../shared/service/tags.service';\r\nimport { TagInterface } from './../../shared/models/tag.interface';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserManagementService {\r\n\r\n  constructor(\r\n    private usersService: UsersService,\r\n    private tagsService: TagsService\r\n  ) { }\r\n\r\n  resetPassword(userId: number, password: string): Observable<void> {\r\n    return this.usersService.resetPassword(userId, password);\r\n  }\r\n\r\n  getAllTags(): Observable<TagInterface[]> {\r\n    return this.tagsService.getAll();\r\n  }\r\n\r\n  addTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.add(tag);\r\n  }\r\n\r\n  addNewUser(user: UserInterface): Observable<UserInterface> {\r\n    return this.usersService.addUser(user);\r\n  }\r\n\r\n  updateUser(user: UserInterface, company: string): Observable<UserInterface> {\r\n    return this.usersService.updateUser(user, company);\r\n  }\r\n\r\n  getUser(userId: string, company: string): Observable<UserInterface> {\r\n    return this.usersService.getUser(userId, company);\r\n  }\r\n\r\n  updateOnePermission(permission: PermissionInterface): Observable<PermissionInterface> {\r\n    return this.usersService.updateOnePermission(permission);\r\n  }\r\n  getOnePermission(permission: PermissionInterface): Observable<PermissionInterface> {\r\n    return this.usersService.getOnePermission(permission);\r\n  }\r\n}\r\n","import { UserInterface } from './../../../shared/models/user.interface';\r\nimport { TagInterface } from './../../../shared/models/tag.interface';\r\nimport { AuthUserInterface } from 'src/app/shared/models/auth-user.interface';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { UsersService } from '../../../shared/service/users.service'\r\nimport { Subscription } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  displayedColumns = [\"fullname\", \"email\", \"companyname\", \"stat\", \"apiKey\", \"action\"];\r\n  users = new MatTableDataSource<UserInterface>();\r\n\r\n  private subscritions: Subscription[] = [];\r\n\r\n  //Local Storage Company\r\n  localStorageCompany: any;\r\n  hidden = false;\r\n  companyUser = false;\r\n  originalData: any[];\r\n\r\n  constructor(\r\n    private usersServie: UsersService,\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private userService: UsersService,\r\n    private notification: NotificationService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\r\n    //access page part\r\n    if (!this.localStorageCompany) {\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.subscritions.push(\r\n      this.usersServie.getPublisherAll().subscribe(data => {\r\n        // console.log(data);\r\n        this.originalData = data;\r\n        if (this.localStorageCompany) {\r\n          this.users.data = data.filter(userData => userData.companies.includes(this.localStorageCompany));\r\n        } else {\r\n          this.users.data = data.filter(userData => userData.companies.length == 0);\r\n        }\r\n        this.cdr.detectChanges();\r\n      })\r\n    );\r\n  }\r\n\r\n  handleEditClick(userId: string): void {\r\n    this.router.navigateByUrl('/user-management/edit/' + userId);\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  handleAddProfile() {\r\n    this.router.navigateByUrl('/user-management/new-publisher');\r\n  }\r\n  deletePublisher(id: any) {\r\n    if (window.confirm('Do you want to go ahead?')) {\r\n      this.usersServie.deleteUser(id).subscribe((res) => {\r\n        this.usersServie.getPublisherAll().subscribe(data => {\r\n          // console.log(data);\r\n          if (this.companyUser) {\r\n            this.users.data = data;\r\n          } else {\r\n            if (this.localStorageCompany) {\r\n              this.users.data = data.filter(userData => userData.companies.includes(this.localStorageCompany));\r\n            } else {\r\n              this.users.data = data.filter(userData => userData.companies.length == 0);\r\n            }\r\n          }\r\n\r\n          this.cdr.detectChanges();\r\n        })\r\n        this.notification.showWarning('Deleted a User', \"\");\r\n      })\r\n    }\r\n  }\r\n  onChangePublisher(event) {\r\n    this.companyUser = event.checked;\r\n    if (this.companyUser) {\r\n      this.users.data = this.originalData;\r\n    } else {\r\n      if (this.localStorageCompany) {\r\n        this.users.data = this.originalData.filter(userData => userData.companies.includes(this.localStorageCompany));\r\n      } else {\r\n        this.users.data = this.originalData;\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"!hidden\">\r\n  <div class=\"col-xl-12\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">Publisher Users</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"pb-3\">\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-6\">\r\n              <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"handleAddProfile()\">\r\n                Add Publisher\r\n              </button>\r\n            </div>\r\n            <div class=\"col-xl-6 all-publisher-user align-self-center d-flex\">\r\n              <mat-checkbox color=\"primary\" [(ngModel)]=\"companyUser\" (change)=\"onChangePublisher($event)\">Display All\r\n                Publishers</mat-checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"example-container mat-elevation-z8\">\r\n          <mat-table #table [dataSource]=\"users\">\r\n            <ng-container matColumnDef=\"fullname\">\r\n              <mat-header-cell *matHeaderCellDef> Full Name </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.fullname}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"email\">\r\n              <mat-header-cell *matHeaderCellDef> Email </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.email}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"companyname\">\r\n              <mat-header-cell *matHeaderCellDef> Companies </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\" [ngClass]=\"'font-weight-bold'\"> {{element.companyname}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"stat\">\r\n              <mat-header-cell *matHeaderCellDef> Stat# </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.tags.length}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"apiKey\">\r\n              <mat-header-cell *matHeaderCellDef> ApiKey </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.apiKey}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"action\">\r\n              <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\">\r\n\r\n                <a title=\"Edit Pubisher\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n                  (click)=\"handleEditClick(element._key)\">\r\n                  <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                    class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n                  </span>\r\n                </a>\r\n\r\n                <a title=\"Delete Pubisher\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n                  (click)=\"deletePublisher(element._key)\">\r\n                  <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"false\"\r\n                    class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n                  </span>\r\n                </a>\r\n              </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n          </mat-table>\r\n          <div *ngIf=\"users.data.length === 0\">\r\n            <p style=\"text-align: center;padding: 10px;\">No records found</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- <table class=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">Name</th>\r\n      <th scope=\"col\">Email</th>\r\n      <th scope=\"col\">Stats #</th>\r\n      <th scope=\"col\"></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let user of users; index as i\">\r\n      <td>{{ user.fullname }}</td>\r\n      <td>{{ user.email }}</td>\r\n      <td>{{ user.tags.length }}</td>\r\n      <td>\r\n        <button type=\"button\" \r\n          class=\"btn btn-primary\"\r\n          (click)=\"handleEditClick(user._key)\" >\r\n          Edit\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table> -->\r\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\">\r\n  <!--begin::Content-->\r\n  <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->","import { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HelperService {\r\n\r\n  constructor(\r\n  ) { }\r\n\r\n  static passwordConfirming(c: AbstractControl): { invalid: boolean } {\r\n    if (c.get('password').value !== c.get('passwordConfirm').value) {\r\n      return { invalid: true };\r\n    }\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}