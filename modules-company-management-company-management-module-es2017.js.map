{"version":3,"sources":["./src/app/modules/company-management/companies/companies.component.ts","./src/app/modules/company-management/companies/companies.component.html","./src/app/modules/company-management/company-management-routing.module.ts","./src/app/modules/company-management/company-management.module.ts","./src/app/modules/company-management/edit-company/edit-company.component.ts","./src/app/modules/company-management/edit-company/edit-company.component.html","./src/app/modules/company-management/new-company/new-company.component.ts","./src/app/modules/company-management/new-company/new-company.component.html"],"names":[],"mappings":"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","file":"modules-company-management-company-management-module-es2017.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { CompanyManagementService } from '../company-management.service';\r\nimport { CompanyInterface } from 'src/app/shared/models/company.interface';\r\nimport { Router } from '@angular/router';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-companies',\r\n  templateUrl: './companies.component.html',\r\n  styleUrls: ['./companies.component.scss'],\r\n})\r\nexport class CompaniesComponent implements OnInit {\r\n  loadingIndicator = true;\r\n  rows: Array<CompanyInterface>;\r\n  hidden = false;\r\n  //Local Storage Company\r\n  localStorageCompany: any;\r\n\r\n  constructor(\r\n    private companyService: CompanyManagementService,\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router,\r\n    private userService: UsersService,\r\n    private notification: NotificationService,\r\n  ) { }\r\n\r\n  getAllCompanies() {\r\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\r\n    //access page part\r\n    if (!this.localStorageCompany) {\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.companyService.getAllCompanies().subscribe((x) => {\r\n      this.rows = x;\r\n      this.loadingIndicator = false;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  editCompany(companyID: string) {\r\n    this.router.navigateByUrl('/company-management/edit/' + companyID);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCompanies();\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"!hidden\">\r\n  <div class=\"col-xl-12\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">View Companies</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <ngx-datatable class=\"material fullscreen\" [rows]=\"rows\" [columnMode]=\"'force'\"\r\n          [loadingIndicator]=\"loadingIndicator\" [footerHeight]=\"50\" [rowHeight]=\"50\" [scrollbarH]=\"true\"\r\n          [headerHeight]=\"50\" [limit]=\"10\">\r\n          <ngx-datatable-column name=\"Name\">\r\n            <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n              Name\r\n            </ng-template>\r\n            <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n              {{ value }}\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n\r\n          <ngx-datatable-column name=\"id\">\r\n            <ng-template ngx-datatable-header-template>Edit</ng-template>\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n              <a title=\"Edit company\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n                (click)=\"editCompany(row._key)\">\r\n                <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                  class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n                </span>\r\n              </a>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- begin:: Error -->\r\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\">\r\n  <!--begin::Content-->\r\n  <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TagManagementComponent } from '../tag-management/tag-management.component';\r\nimport { CompaniesComponent } from './companies/companies.component';\r\nimport { CompanyManagementComponent } from './company-management.component';\r\nimport { EditCompanyComponent } from './edit-company/edit-company.component';\r\nimport { NewCompanyComponent } from './new-company/new-company.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompanyManagementComponent,\r\n    children: [\r\n      {\r\n        path: 'companies',\r\n        component: CompaniesComponent\r\n      },\r\n      {\r\n        path: 'new',\r\n        component: NewCompanyComponent\r\n      },\r\n      {\r\n        path: 'edit/:id',\r\n        component: EditCompanyComponent,\r\n        pathMatch: 'full'\r\n      },\r\n      { path: '', redirectTo: '', pathMatch: 'full' },\r\n      { path: '**', redirectTo: '', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyManagementRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CompanyManagementRoutingModule } from './company-management-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { NewCompanyComponent } from './new-company/new-company.component';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { CompaniesComponent } from './companies/companies.component';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { EditCompanyComponent } from './edit-company/edit-company.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\n\r\n@NgModule({\r\n  declarations: [NewCompanyComponent, CompaniesComponent, EditCompanyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyManagementRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    NgxDatatableModule,\r\n    InlineSVGModule.forRoot()\r\n  ],\r\n  providers: [SnackbarService],\r\n  entryComponents: [NewCompanyComponent],\r\n})\r\nexport class CompanyManagementModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, FormArray } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyInterface } from 'src/app/shared/models/company.interface';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\nimport { CompanyManagementService } from '../company-management.service';\r\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-company',\r\n  templateUrl: './edit-company.component.html',\r\n  styleUrls: ['./edit-company.component.scss']\r\n})\r\nexport class EditCompanyComponent implements OnInit {\r\n\r\n  companyFG: FormGroup;\r\n  company: CompanyInterface;\r\n  currentUser:any;\r\n  currentUserRole: number;\r\n  hidden = false;\r\n  reportingProviderList = [\r\n    { value : \"apptitude\", viewValue: \"Apptitude\"},\r\n    { value : \"bing-direct\", viewValue: \"Bing Direct\"},\r\n    { value : \"hopkins\", viewValue: \"Hopkins YHS\"},\r\n    { value : \"lyons\", viewValue: \"Lyons\"},\r\n    { value : \"media-net\", viewValue: \"Media.net\"},\r\n    { value : \"perion\", viewValue: \"Perion\"},\r\n    { value : \"rubi\", viewValue: \"Rubi\"},\r\n    { value : \"system1\", viewValue: \"System1\"},\r\n    { value : \"solex-bc\", viewValue: \"Solex BC\"},\r\n    { value : \"verizon-direct\", viewValue: \"Verizon Direct\"},\r\n  ]\r\n  reportingProviderHandleList = []\r\n  //Local Storage Company\r\n  localStorageCompany: any;\r\n  constructor(\r\n    private fb: FormBuilder, \r\n    private authService: AuthService,\r\n    private route: ActivatedRoute, \r\n    private companyManagementService: CompanyManagementService, \r\n    private notification: NotificationService,\r\n    private userService: UsersService, \r\n    private router: Router) { \r\n      this.currentUser = this.authService.currentUserValue;\r\n      this.currentUserRole = this.currentUser.role;\r\n      this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    //access page part\r\n    if(!this.localStorageCompany){\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.reportingProviderHandleList = this.reportingProviderList.sort((a, b) => (a.viewValue > b.viewValue) ? 1 : -1)\r\n    //Create update formgroup\r\n    this.companyFG = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      adServerUrls: this.fb.array([]),\r\n      reportingProviders: this.fb.array([]),\r\n    })\r\n\r\n    //Get the current company to edit\r\n    if (this.route.snapshot.params.id) {\r\n      this.companyManagementService.getOneCompany(this.route.snapshot.params.id).subscribe(res => {\r\n        this.company = res;\r\n        // for company BrandClick\r\n        if (this.company['name'] == \"BrandClick\") {\r\n          this.reportingProviderHandleList.push({\r\n            value : \"solex-bc\", viewValue: \"Solex BC\",\r\n          });\r\n        }\r\n        res['adServerUrls'].map((item) => {\r\n          this.adServerUrls.push(this.fb.group(item));\r\n        });\r\n        res['reportingProviders'].map((reporting) => {\r\n          this.reportingProviders.push(this.fb.group(reporting));\r\n        });\r\n        this.companyFG.setValue({\r\n          name: res['name'],\r\n          adServerUrls: res['adServerUrls'],\r\n          reportingProviders: res['reportingProviders']\r\n        });\r\n      });\r\n    } else {\r\n      // this.user = this.authService.currentUserSubject.value as any;\r\n    }\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  //Update one company\r\n  //Checks to see if edits were made\r\n  //If edits were made updates current company with new updated fields\r\n  updateOneCompany($event: any) {\r\n    this.companyFG.markAllAsTouched();\r\n    if (this.companyFG.valid) {\r\n      this.company = {...this.company, ...this.companyFG.value};\r\n      this.companyManagementService.updateOneCompany(this.company).subscribe(x => {\r\n        this.notification.showSuccess('Successfully updated company.', \"\");\r\n      }, (err) => {\r\n        this.notification.showError(`Error updating company: ${err.statusText}`, \"\");\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteOneCompany() {\r\n      this.companyManagementService.deleteOneCompany(this.company).subscribe(x => {\r\n        this.notification.showSuccess('Successfully deleted company.', \"\");\r\n        this.router.navigate(['/company-management/companies']).then(() => {\r\n          window.location.reload();\r\n        });\r\n      }, (err) => {\r\n        this.notification.showError(`Error deleting company: ${err.statusText}`, \"\");\r\n      });\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['/company-management/companies']);\r\n  }\r\n\r\n  get adServerUrls() {\r\n    return this.companyFG.controls['adServerUrls'] as FormArray;\r\n  }\r\n  get reportingProviders() {\r\n    return this.companyFG.controls['reportingProviders'] as FormArray;\r\n  }\r\n  newAdServerUrls(): FormGroup {\r\n    return this.fb.group({\r\n      adServerUrl: ['', Validators.required],\r\n    })\r\n  }\r\n  addAdServerUrl(event) {\r\n    this.adServerUrls.push(this.newAdServerUrls());\r\n  }\r\n  removeAdServerUrl(i:number) {\r\n    this.adServerUrls.removeAt(i);\r\n  }\r\n  newReporingProvider(): FormGroup {\r\n    return this.fb.group({\r\n      reportingProvider: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      apiUrl: [''],\r\n      apiKey: [''],\r\n    })\r\n  }\r\n  handleReportingProvider() {\r\n    this.reportingProviders.push(this.newReporingProvider());\r\n  }\r\n  handleChangeProvider(event:any) {\r\n    \r\n  }\r\n  removeReportingProvider(i:number) {\r\n    this.reportingProviders.removeAt(i);\r\n  }\r\n}\r\n","<form class=\"example-container\" [formGroup]=\"companyFG\" (submit)=\"updateOneCompany($event)\" *ngIf=\"!hidden\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Edit Company</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          {{ companyFG.value | json }}\r\n          <div class=\"row pb-2\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"name\" placeholder=\"Company Name\" />\r\n                <mat-error *ngIf=\"companyFG.get('name').errors?.required\">Company Name is required.\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <button class=\"save-button\" mat-raised-button color=\"primary\" type=\"submit\">\r\n                Save\r\n              </button>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <button class=\"back-button\" mat-raised-button color=\"secondary\" (click)=\"back()\">\r\n                Back\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\" *ngIf=\"currentUserRole == 1\">\r\n            <a class=\"delete\" (click)=\"deleteOneCompany()\">Delete</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Add Stats</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <form class=\"example-container\" [formGroup]=\"companyFG\" (submit)=\"updateOneCompany($event)\">\r\n            <div class=\"row\">\r\n              {{ companyFG.value | json }}\r\n              <div class=\"col-md-12\">\r\n                <mat-form-field>\r\n                  <input matInput formControlName=\"name\" placeholder=\"Company Name\" />\r\n                  <mat-error *ngIf=\"companyFG.get('name').errors?.required\">Company Name is required.\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <button class=\"save-button\" mat-raised-button color=\"primary\" type=\"submit\">\r\n                  Save\r\n                </button>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <button class=\"back-button\" mat-raised-button color=\"secondary\" (click)=\"back()\">\r\n                  Back\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"currentUserRole == 1\">\r\n              <a class=\"delete\" (click)=\"deleteOneCompany()\">Delete</a>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Ad Server Url</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row pb-2\">\r\n            <div class=\"col-md-3\">\r\n              <button type=\"button\" class=\"\r\n                    btn\r\n                    btn-sm\r\n                    btn-icon\r\n                    btn-bg-light\r\n                    btn-icon-primary\r\n                    btn-hover-primary\r\n                \" (click)=\"addAdServerUrl($event)\">\r\n                <i class=\"flaticon-add-circular-button\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <div formArrayName=\"adServerUrls\">\r\n                <div class=\"row\" *ngFor=\"let adUrlItem of adServerUrls.controls; let i=index\" [formGroupName]=\"i\">\r\n                  <div class=\"col-md-10\">\r\n                    <mat-form-field>\r\n                      <input matInput placeholder=\"Ad Server Url\" formControlName=\"adServerUrl\" />\r\n                      <mat-error *ngIf=\"adUrlItem.get('adServerUrl').errors?.required\">\r\n                        AdServerURL is required.\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col-md-2\">\r\n                    <button class=\"\r\n                                    btn\r\n                                    btn-sm\r\n                                    btn-icon\r\n                                    btn-bg-light\r\n                                    btn-icon-danger\r\n                                    btn-hover-danger\r\n                                \" (click)=\"removeAdServerUrl(i)\">\r\n                      <i class=\"flaticon2-line\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-3 mb-3\">\r\n      <button type=\"button\" class=\"\r\n              btn\r\n              btn-sm\r\n              btn-icon\r\n              btn-bg-light\r\n              btn-icon-primary\r\n              btn-hover-primary\r\n          \" (click)=\"handleReportingProvider()\">\r\n        <i class=\"flaticon-add-circular-button\"></i>\r\n      </button>\r\n    </div>\r\n    <div class=\"col-xl-12\">\r\n      <div formArrayName=\"reportingProviders\">\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-4\" *ngFor=\"let reportItem of reportingProviders.controls; let i=index\" [formGroupName]=\"i\">\r\n            <div class=\"card card-custom example example-compact gutter-b\">\r\n              <div class=\"card-header\">\r\n                <div class=\"card-title col-12\" style=\"justify-content: space-between;display:flex;\">\r\n                  <h3 class=\"card-label\">Reporting Providers - {{i + 1}}</h3>\r\n                  <button class=\"\r\n                          btn\r\n                          btn-sm\r\n                          btn-icon\r\n                          btn-bg-light\r\n                          btn-icon-danger\r\n                          btn-hover-danger\r\n                      \" (click)=\"removeReportingProvider(i)\">\r\n                    <i class=\"flaticon2-line\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <div class=\"row pb-2\">\r\n                  <div class=\"col-xl-12\">\r\n                    <mat-form-field>\r\n                      <mat-label>Reporting Providers</mat-label>\r\n                      <mat-select matNativeControl formControlName=\"reportingProvider\"\r\n                        (selectionChange)=\"handleChangeProvider($event.value)\">\r\n                        <mat-option *ngFor=\"let reportingProvider of reportingProviderHandleList\"\r\n                          [value]=\"reportingProvider.value\">\r\n                          {{ reportingProvider.viewValue }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                      <mat-error *ngIf=\"reportItem.get('reportingProvider').errors?.required\">\r\n                        Reporting Provider is required.\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row pb-2\">\r\n                  <div class=\"col-xl-6\">\r\n                    <mat-form-field>\r\n                      <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                      <mat-error *ngIf=\"reportItem.get('email').errors?.email\">Email is not valid</mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col-xl-6\">\r\n                    <mat-form-field>\r\n                      <input matInput formControlName=\"password\" placeholder=\"Password\" type=\"password\"\r\n                        autocomplete=\"off\" />\r\n                      <mat-error *ngIf=\"reportItem.get('password').errors?.required\">Password is required</mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row pb-2\">\r\n                  <div class=\"col-xl-6\">\r\n                    <mat-form-field>\r\n                      <input matInput formControlName=\"apiUrl\" placeholder=\"ApiUrl\" />\r\n                      <mat-error *ngIf=\"reportItem.get('apiUrl').errors?.required\">ApiUrl Name is required.\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col-xl-6\">\r\n                    <mat-form-field>\r\n                      <input matInput formControlName=\"apiKey\" placeholder=\"ApiKey\" />\r\n                      <mat-error *ngIf=\"reportItem.get('apiKey').errors?.required\">ApiKey Name is required.\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</form>\r\n<!-- begin:: Error -->\r\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\">\r\n  <!--begin::Content-->\r\n  <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators, FormArray, FormGroupDirective } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\nimport { CompanyManagementService } from '../company-management.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\n\r\n@Component({\r\n  selector: 'app-new-company',\r\n  templateUrl: './new-company.component.html',\r\n  styleUrls: ['./new-company.component.scss']\r\n})\r\nexport class NewCompanyComponent implements OnInit {\r\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\r\n  companyFG: FormGroup;\r\n  hidden = false;\r\n\r\n  intialServerUrl = { adServerUrl: ['', Validators.required] } \r\n  intialReportProvider = { \r\n    reportingProvider: ['', Validators.required],\r\n    email: [''],\r\n    password: [''],\r\n    apiUrl: [''],\r\n    apiKey: [''],\r\n  } \r\n  reportingProviderList = [\r\n    { value : \"apptitude\", viewValue: \"Apptitude\"},\r\n    { value : \"bing-direct\", viewValue: \"Bing Direct\"},\r\n    { value : \"hopkins\", viewValue: \"Hopkins YHS\"},\r\n    { value : \"lyons\", viewValue: \"Lyons\"},\r\n    { value : \"media-net\", viewValue: \"Media.net\"},\r\n    { value : \"perion\", viewValue: \"Perion\"},\r\n    { value : \"rubi\", viewValue: \"Rubi\"},\r\n    { value : \"system1\", viewValue: \"System1\"},\r\n    { value : \"solex-bc\", viewValue: \"Solex BC\"},\r\n    { value : \"verizon-direct\", viewValue: \"Verizon Direct\"},\r\n  ]\r\n  reportingProviderHandleList = []\r\n  //Local Storage Company\r\n  localStorageCompany: any;\r\n\r\n  constructor(\r\n    private companyManagementService: CompanyManagementService,\r\n    private notification: NotificationService,\r\n    private fb: FormBuilder, \r\n    private userService: UsersService,\r\n  ) { \r\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //access page part\r\n    if(!this.localStorageCompany){\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.companyFG = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      adServerUrls: this.fb.array([]),\r\n      reportingProviders: this.fb.array([]),\r\n    });\r\n    this.adServerUrls.push(this.fb.group(this.intialServerUrl));\r\n    this.reportingProviders.push(this.fb.group(this.intialReportProvider));\r\n    this.reportingProviderHandleList = this.reportingProviderList.sort((a, b) => (a.viewValue > b.viewValue) ? 1 : -1)\r\n  }\r\n\r\n  save(): void {\r\n    this.companyFG.markAllAsTouched();\r\n    if (this.companyFG.valid) {\r\n      this.companyManagementService.addCompany(this.companyFG.value).subscribe(x => {\r\n        this.notification.showSuccess('Successfully added a new company.', \"\");\r\n        this.companyFG.reset();\r\n        this.formGroupDirective.resetForm();\r\n      }, (err) => {\r\n        this.notification.showError(err.error, \"\");\r\n      });\r\n    }\r\n  }\r\n  get reportingProviders() {\r\n    return this.companyFG.controls['reportingProviders'] as FormArray;\r\n  }\r\n  get adServerUrls() {\r\n    return this.companyFG.controls['adServerUrls'] as FormArray;\r\n  }\r\n  newAdServerUrls(): FormGroup {\r\n    return this.fb.group({\r\n      adServerUrl: ['', Validators.required],\r\n    })\r\n  }\r\n  addAdServerUrl(event) {\r\n    this.adServerUrls.push(this.newAdServerUrls());\r\n  }\r\n  removeAdServerUrl(i:number) {\r\n    this.adServerUrls.removeAt(i);\r\n  }\r\n  removeReportingProvider(i:number) {\r\n    this.reportingProviders.removeAt(i);\r\n  }\r\n  newReporingProvider(): FormGroup {\r\n    return this.fb.group({\r\n      reportingProvider: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      apiUrl: [''],\r\n      apiKey: [''],\r\n    })\r\n  }\r\n  handleReportingProvider() {\r\n    this.reportingProviders.push(this.newReporingProvider());\r\n  }\r\n  handleChangeProvider(event:any) {\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n}\r\n","<form class=\"example-container\" [formGroup]=\"companyFG\" (submit)=\"save()\" *ngIf=\"!hidden\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xl-6\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12\">\r\n                    <div class=\"card card-custom example example-compact gutter-b\">\r\n                        <div class=\"card-header\">\r\n                            <div class=\"card-title\">\r\n                                <h3 class=\"card-label\">Create New Company</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            {{companyFG.value | json}}\r\n                            <div class=\"row pb-2 pt-2\">\r\n                                <div class=\"col-md-12\">\r\n                                    <mat-form-field>\r\n                                        <input matInput formControlName=\"name\" placeholder=\"Company Name\" />\r\n                                        <mat-error *ngIf=\"companyFG.get('name').errors?.required\">Company Name is\r\n                                            required.\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-md-12\">\r\n                                    <button class=\"save-button\" mat-raised-button color=\"primary\"\r\n                                        type=\"submit\">Save</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-xl-6\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12\">\r\n                    <div class=\"card card-custom example example-compact gutter-b\">\r\n                        <div class=\"card-header\">\r\n                            <div class=\"card-title\">\r\n                                <h3 class=\"card-label\">Ad Server Url</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"row pb-2\">\r\n                                <div class=\"col-md-3\">\r\n                                    <button type=\"button\" class=\"\r\n                                            btn\r\n                                            btn-sm\r\n                                            btn-icon\r\n                                            btn-bg-light\r\n                                            btn-icon-primary\r\n                                            btn-hover-primary\r\n                                        \" (click)=\"addAdServerUrl($event)\">\r\n                                        <i class=\"flaticon-add-circular-button\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row pb-2\">\r\n                                <div class=\"col-md-12\">\r\n                                    <div formArrayName=\"adServerUrls\">\r\n                                        <div class=\"row\" *ngFor=\"let adUrlItem of adServerUrls.controls; let i=index\"\r\n                                            [formGroupName]=\"i\">\r\n                                            <div class=\"col-md-10\">\r\n                                                <mat-form-field>\r\n                                                    <input matInput placeholder=\"Ad Server Url\"\r\n                                                        formControlName=\"adServerUrl\" />\r\n                                                    <mat-error *ngIf=\"adUrlItem.get('adServerUrl').errors?.required\">\r\n                                                        AdServerURL is required.\r\n                                                    </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                            <div class=\"col-md-2\">\r\n                                                <button class=\"\r\n                                                    btn\r\n                                                    btn-sm\r\n                                                    btn-icon\r\n                                                    btn-bg-light\r\n                                                    btn-icon-danger\r\n                                                    btn-hover-danger\r\n                                                \" (click)=\"removeAdServerUrl(i)\">\r\n                                                    <i class=\"flaticon2-line\"></i>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-xl-3 mb-3\">\r\n            <button type=\"button\" class=\"\r\n                    btn\r\n                    btn-sm\r\n                    btn-icon\r\n                    btn-bg-light\r\n                    btn-icon-primary\r\n                    btn-hover-primary\r\n                \" (click)=\"handleReportingProvider()\">\r\n                <i class=\"flaticon-add-circular-button\"></i>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"col-xl-12\">\r\n            <div formArrayName=\"reportingProviders\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-4\" *ngFor=\"let reportItem of reportingProviders.controls; let i=index\"\r\n                        [formGroupName]=\"i\">\r\n                        <div class=\"card card-custom example example-compact gutter-b\">\r\n                            <div class=\"card-header\">\r\n                                <div class=\"card-title col-12\" style=\"justify-content: space-between;display:flex;\">\r\n                                    <h3 class=\"card-label\">Reporting Providers - {{i + 1}}</h3>\r\n                                    <button class=\"\r\n                                            btn\r\n                                            btn-sm\r\n                                            btn-icon\r\n                                            btn-bg-light\r\n                                            btn-icon-danger\r\n                                            btn-hover-danger\r\n                                        \" (click)=\"removeReportingProvider(i)\">\r\n                                        <i class=\"flaticon2-line\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card-body\">\r\n                                <div class=\"row pb-2\">\r\n                                    <div class=\"col-xl-12\">\r\n                                        <mat-form-field>\r\n                                            <mat-label>Reporting Providers</mat-label>\r\n                                            <mat-select matNativeControl formControlName=\"reportingProvider\"\r\n                                                (selectionChange)=\"handleChangeProvider($event.value)\">\r\n                                                <mat-option\r\n                                                    *ngFor=\"let reportingProvider of reportingProviderHandleList\"\r\n                                                    [value]=\"reportingProvider.value\">\r\n                                                    {{ reportingProvider.viewValue }}\r\n                                                </mat-option>\r\n                                            </mat-select>\r\n                                            <mat-error *ngIf=\"reportItem.get('reportingProvider').errors?.required\">\r\n                                                Reporting Provider is required.\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row pb-2\">\r\n                                    <div class=\"col-xl-6\">\r\n                                        <mat-form-field>\r\n                                            <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                                            <mat-error *ngIf=\"reportItem.get('email').errors?.email\">Email is not valid\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-xl-6\">\r\n                                        <mat-form-field>\r\n                                            <input matInput formControlName=\"password\" placeholder=\"Password\"\r\n                                                type=\"password\" autocomplete=\"off\" />\r\n                                            <mat-error *ngIf=\"reportItem.get('password').errors?.required\">Password is\r\n                                                required</mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row pb-2\">\r\n                                    <div class=\"col-xl-6\">\r\n                                        <mat-form-field>\r\n                                            <input matInput formControlName=\"apiUrl\" placeholder=\"ApiUrl\" />\r\n                                            <mat-error *ngIf=\"reportItem.get('apiUrl').errors?.required\">ApiUrl Name is\r\n                                                required.\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-xl-6\">\r\n                                        <mat-form-field>\r\n                                            <input matInput formControlName=\"apiKey\" placeholder=\"ApiKey\" />\r\n                                            <mat-error *ngIf=\"reportItem.get('apiKey').errors?.required\">ApiKey Name is\r\n                                                required.\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</form>\r\n<!-- begin:: Error -->\r\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\">\r\n    <!--begin::Content-->\r\n    <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\r\n        <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n            How did you get here\r\n        </p>\r\n        <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n            Sorry you can't access the page you're looking for.\r\n        </p>\r\n        <p class=\"font-size-h4 line-height-md\">\r\n            There may be a misspelling in the URL entered,<br />or the page you are\r\n            looking for may no longer exist.\r\n        </p>\r\n    </div>\r\n    <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->"],"sourceRoot":"webpack:///"}