{"version":3,"sources":["./src/app/modules/auth/registration/confirm-password.validator.ts","./src/app/modules/i18n/translation.module.ts","./src/app/shared/service/snackbar.service.ts","./src/app/shared/service/tags.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { AbstractControl } from '@angular/forms';\r\n\r\nexport class ConfirmPasswordValidator {\r\n  /**\r\n   * Check matching password with confirm password\r\n   * @param control AbstractControl\r\n   */\r\n  static MatchPassword(control: AbstractControl) {\r\n    const password = control.get('password').value;\r\n\r\n    const confirmPassword = control.get('cPassword').value;\r\n\r\n    if (password !== confirmPassword) {\r\n      control.get('cPassword').setErrors({ ConfirmPassword: true });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, TranslateModule],\r\n  exports: [CommonModule, TranslateModule],\r\n})\r\nexport class TranslationModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SnackbarService {\r\n\r\n  constructor(private _snackBar: MatSnackBar) { }\r\n\r\n  info(message): void {\r\n    this._snackBar.open(message, null, {\r\n      duration: 2000,\r\n      horizontalPosition: 'right',\r\n      verticalPosition: 'bottom',\r\n    });\r\n  }\r\n  notAccess(message): void {\r\n    this._snackBar.open(message, null, {\r\n      duration: 2000,\r\n      horizontalPosition: 'right',\r\n      verticalPosition: 'top',\r\n      panelClass: 'not-allowed-access'\r\n    });\r\n  }\r\n  error(message): void {\r\n    this._snackBar.open(message, null, {\r\n      duration: 2000,\r\n      horizontalPosition: 'right',\r\n      verticalPosition: 'top',\r\n      panelClass: 'not-allowed-access'\r\n    });\r\n  }\r\n\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { TagInterface } from '../models/tag.interface';\r\nimport { TemplateInterface } from '../models/template.interface';\r\n\r\nconst API_TAGS_URL = `${environment.apiUrl}/tags`;\r\nconst API_TEMPLATES_URL = `${environment.apiUrl}/templates`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TagsService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getAll(): Observable<TagInterface[]> {\r\n    return this.http.get<TagInterface[]>(API_TAGS_URL);\r\n  }\r\n\r\n  add(tag:TagInterface): Observable<TagInterface> {\r\n    return this.http.post<TagInterface>(API_TAGS_URL,tag);\r\n  }\r\n  \r\n  getChrome() {\r\n    return this.http.get<any>(API_TAGS_URL + \"/chrome/browser\");\r\n  }\r\n  getFirefox(){\r\n    return this.http.get<any>(API_TAGS_URL + \"/firefox/browser\");\r\n  }\r\n  getAllTags(): Observable<TagInterface[]> {\r\n    return this.http.get<TagInterface[]>(API_TAGS_URL + '/');\r\n  }\r\n  deleteTag(tagKey:any) {\r\n    return this.http.delete(API_TAGS_URL + `/${tagKey}`);\r\n  }\r\n  getOneTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.http.get<TagInterface>(\r\n      API_TAGS_URL + `/get_tag/${tag}`\r\n    );\r\n  }\r\n  updateOneTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.http.post<TagInterface>(\r\n      API_TAGS_URL + `/update/${tag._key}`,\r\n      tag\r\n    );\r\n  }\r\n  addTemplate(template:TemplateInterface): Observable<TemplateInterface> {\r\n    return this.http.post<TemplateInterface>(API_TEMPLATES_URL, template);\r\n  }\r\n  getAllTemplates(): Observable<TemplateInterface[]> {\r\n    return this.http.get<TemplateInterface[]>(API_TEMPLATES_URL);\r\n  }\r\n  deleteTemplate(templateKey:any) {\r\n    return this.http.delete(API_TEMPLATES_URL + `/${templateKey}`);\r\n  }\r\n  getOneTemplate(template: TemplateInterface): Observable<TemplateInterface> {\r\n    return this.http.get<TemplateInterface>(\r\n      API_TEMPLATES_URL + `/get_template/${template}`\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}