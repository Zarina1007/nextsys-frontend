{"version":3,"sources":["webpack:///src/app/modules/company-management/companies/companies.component.ts","webpack:///src/app/modules/company-management/companies/companies.component.html","webpack:///src/app/modules/company-management/company-management-routing.module.ts","webpack:///src/app/modules/company-management/company-management.module.ts","webpack:///src/app/modules/company-management/edit-company/edit-company.component.ts","webpack:///src/app/modules/company-management/edit-company/edit-company.component.html","webpack:///src/app/modules/company-management/new-company/new-company.component.ts","webpack:///src/app/modules/company-management/new-company/new-company.component.html"],"names":["CompaniesComponent","companyService","cdr","router","loadingIndicator","getAllCompanies","subscribe","x","rows","console","log","detectChanges","companyID","navigateByUrl","selector","templateUrl","styleUrls","routes","path","component","children","pathMatch","redirectTo","CompanyManagementRoutingModule","forChild","imports","exports","CompanyManagementModule","declarations","providers","entryComponents","EditCompanyComponent","fb","authService","route","companyManagementService","snackService","reportingProviderList","value","viewValue","reportingProviderHandleList","currentUser","currentUserValue","currentUserRole","role","sort","a","b","companyFG","name","required","adServerUrls","array","reportingProviders","snapshot","params","id","getOneCompany","res","company","map","item","push","group","reporting","setValue","$event","markAllAsTouched","valid","updateOneCompany","info","err","statusText","deleteOneCompany","navigate","then","window","location","reload","adServerUrl","event","newAdServerUrls","i","removeAt","reportingProvider","email","password","apiUrl","apiKey","newReporingProvider","controls","back","handleReportingProvider","addAdServerUrl","NewCompanyComponent","intialServerUrl","intialReportProvider","addCompany","reset","formGroupDirective","resetForm","error","save"],"mappings":"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","file":"modules-company-management-company-management-module-es5.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { CompanyManagementService } from '../company-management.service';\r\nimport { CompanyInterface } from 'src/app/shared/models/company.interface';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-companies',\r\n  templateUrl: './companies.component.html',\r\n  styleUrls: ['./companies.component.scss'],\r\n})\r\nexport class CompaniesComponent implements OnInit {\r\n  loadingIndicator = true;\r\n  rows: Array<CompanyInterface>;\r\n  // columns = [{ name: 'Name' }, {prop: '_id'}];\\\r\n\r\n  constructor(\r\n    private companyService: CompanyManagementService,\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router\r\n  ) {\r\n    this.getAllCompanies();\r\n  }\r\n\r\n  getAllCompanies() {\r\n    this.companyService.getAllCompanies().subscribe((x) => {\r\n      this.rows = x;\r\n      console.log(this.rows);\r\n      this.loadingIndicator = false;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  editCompany(companyID) {\r\n    this.router.navigateByUrl('/company-management/edit/' + companyID);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // console.log(companies)\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-xl-12\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">View Companies</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <ngx-datatable\r\n          class=\"material fullscreen\"\r\n          [rows]=\"rows\"\r\n          [columnMode]=\"'force'\"\r\n          [loadingIndicator]=\"loadingIndicator\"\r\n          [footerHeight]=\"50\"\r\n          [rowHeight]=\"50\"\r\n          [scrollbarH]=\"true\"\r\n          [headerHeight]=\"50\"\r\n          [limit]=\"10\"\r\n        >\r\n          <ngx-datatable-column name=\"Name\">\r\n            <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n              Name\r\n            </ng-template>\r\n            <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n              {{ value }}\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column name=\"id\">\r\n            <ng-template ngx-datatable-header-template>Edit</ng-template>\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n              <button\r\n                mat-raised-button\r\n                color=\"primary\"\r\n                (click)=\"editCompany(row._key)\"\r\n              >\r\n                Edit <mat-icon>edit</mat-icon>\r\n              </button>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TagManagementComponent } from '../tag-management/tag-management.component';\r\nimport { CompaniesComponent } from './companies/companies.component';\r\nimport { CompanyManagementComponent } from './company-management.component';\r\nimport { EditCompanyComponent } from './edit-company/edit-company.component';\r\nimport { NewCompanyComponent } from './new-company/new-company.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompanyManagementComponent,\r\n    children: [\r\n      {\r\n        path: 'companies',\r\n        component: CompaniesComponent\r\n      },\r\n      {\r\n        path: 'new',\r\n        component: NewCompanyComponent\r\n      },\r\n      {\r\n        path: 'edit/:id',\r\n        component: EditCompanyComponent,\r\n        pathMatch: 'full'\r\n      },\r\n      { path: '', redirectTo: '', pathMatch: 'full' },\r\n      { path: '**', redirectTo: '', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyManagementRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CompanyManagementRoutingModule } from './company-management-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { NewCompanyComponent } from './new-company/new-company.component';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { CompaniesComponent } from './companies/companies.component';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { EditCompanyComponent } from './edit-company/edit-company.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\n@NgModule({\r\n  declarations: [NewCompanyComponent, CompaniesComponent, EditCompanyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyManagementRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    NgxDatatableModule,\r\n  ],\r\n  providers: [SnackbarService],\r\n  entryComponents: [NewCompanyComponent],\r\n})\r\nexport class CompanyManagementModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, FormArray } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyInterface } from 'src/app/shared/models/company.interface';\r\nimport { CompanyService } from 'src/app/shared/service/companies.service';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { CompanyManagementService } from '../company-management.service';\r\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-company',\r\n  templateUrl: './edit-company.component.html',\r\n  styleUrls: ['./edit-company.component.scss']\r\n})\r\nexport class EditCompanyComponent implements OnInit {\r\n\r\n  companyFG: FormGroup;\r\n  company: CompanyInterface;\r\n  currentUser:any;\r\n  currentUserRole: number;\r\n  reportingProviderList = [\r\n    { value : \"apptitude\", viewValue: \"Apptitude\"},\r\n    { value : \"bing-direct\", viewValue: \"Bing Direct\"},\r\n    { value : \"hopkins\", viewValue: \"Hopkins\"},\r\n    { value : \"lyons\", viewValue: \"Lyons\"},\r\n    { value : \"media-net\", viewValue: \"Media.net\"},\r\n    { value : \"perion\", viewValue: \"Perion\"},\r\n    { value : \"rubi\", viewValue: \"Rubi\"},\r\n    { value : \"verizon-direct\", viewValue: \"Verizon Direct\"},\r\n  ]\r\n  reportingProviderHandleList = []\r\n  constructor(\r\n    private fb: FormBuilder, \r\n    private authService: AuthService,\r\n    private route: ActivatedRoute, \r\n    private companyManagementService: CompanyManagementService, \r\n    private snackService: SnackbarService, \r\n    private router: Router) { \r\n      this.currentUser = this.authService.currentUserValue;\r\n      this.currentUserRole = this.currentUser.role;\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.reportingProviderHandleList = this.reportingProviderList.sort((a, b) => (a.viewValue > b.viewValue) ? 1 : -1)\r\n    //Create update formgroup\r\n    this.companyFG = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      adServerUrls: this.fb.array([]),\r\n      reportingProviders: this.fb.array([]),\r\n    })\r\n\r\n    //Get the current company to edit\r\n    if (this.route.snapshot.params.id) {\r\n      this.companyManagementService.getOneCompany(this.route.snapshot.params.id).subscribe(res => {\r\n        this.company = res;\r\n        res['adServerUrls'].map((item) => {\r\n          this.adServerUrls.push(this.fb.group(item));\r\n        });\r\n        res['reportingProviders'].map((reporting) => {\r\n          this.reportingProviders.push(this.fb.group(reporting));\r\n        });\r\n        this.companyFG.setValue({\r\n          name: res['name'],\r\n          adServerUrls: res['adServerUrls'],\r\n          reportingProviders: res['reportingProviders']\r\n        });\r\n      });\r\n    } else {\r\n      // this.user = this.authService.currentUserSubject.value as any;\r\n    }\r\n  }\r\n\r\n  //Update one company\r\n  //Checks to see if edits were made\r\n  //If edits were made updates current company with new updated fields\r\n  updateOneCompany($event: any) {\r\n    this.companyFG.markAllAsTouched();\r\n    if (this.companyFG.valid) {\r\n      this.company = {...this.company, ...this.companyFG.value};\r\n      this.companyManagementService.updateOneCompany(this.company).subscribe(x => {\r\n        this.snackService.info('Successfully updated company.');\r\n      }, (err) => {\r\n        this.snackService.info(`Error updating company: ${err.statusText}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteOneCompany() {\r\n      this.companyManagementService.deleteOneCompany(this.company).subscribe(x => {\r\n        this.snackService.info('Successfully deleted company.');\r\n        this.router.navigate(['/company-management/companies']).then(() => {\r\n          window.location.reload();\r\n        });\r\n      }, (err) => {\r\n        this.snackService.info(`Error deleting company: ${err.statusText}`);\r\n      });\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['/company-management/companies']);\r\n  }\r\n\r\n  get adServerUrls() {\r\n    return this.companyFG.controls['adServerUrls'] as FormArray;\r\n  }\r\n  get reportingProviders() {\r\n    return this.companyFG.controls['reportingProviders'] as FormArray;\r\n  }\r\n  newAdServerUrls(): FormGroup {\r\n    return this.fb.group({\r\n      adServerUrl: ['', Validators.required],\r\n    })\r\n  }\r\n  addAdServerUrl(event) {\r\n    this.adServerUrls.push(this.newAdServerUrls());\r\n  }\r\n  removeAdServerUrl(i:number) {\r\n    this.adServerUrls.removeAt(i);\r\n  }\r\n  newReporingProvider(): FormGroup {\r\n    return this.fb.group({\r\n      reportingProvider: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      apiUrl: [''],\r\n      apiKey: [''],\r\n    })\r\n  }\r\n  handleReportingProvider() {\r\n    this.reportingProviders.push(this.newReporingProvider());\r\n  }\r\n  handleChangeProvider(event:any) {\r\n    console.log(\"==========\", event)\r\n    if(event) {\r\n      console.log(this.reportingProviderList)\r\n    }\r\n  }\r\n  removeReportingProvider(i:number) {\r\n    this.reportingProviders.removeAt(i);\r\n  }\r\n}\r\n","<form class=\"example-container\" [formGroup]=\"companyFG\" (submit)=\"updateOneCompany($event)\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Edit Company</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          {{ companyFG.value | json }}\r\n          <div class=\"row pb-2\"> \r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input\r\n                  matInput\r\n                  formControlName=\"name\"\r\n                  placeholder=\"Company Name\"\r\n                />\r\n                <mat-error *ngIf=\"companyFG.get('name').errors?.required\"\r\n                  >Company Name is required.\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>           \r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <button\r\n                class=\"save-button\"\r\n                mat-raised-button\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <button\r\n                class=\"back-button\"\r\n                mat-raised-button\r\n                color=\"secondary\"\r\n                (click)=\"back()\"\r\n              >\r\n                Back\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\" *ngIf=\"currentUserRole == 1\">\r\n            <a class=\"delete\" (click)=\"deleteOneCompany()\">Delete</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Add Stats</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <form\r\n            class=\"example-container\"\r\n            [formGroup]=\"companyFG\"\r\n            (submit)=\"updateOneCompany($event)\"\r\n          >\r\n            <div class=\"row\">\r\n              {{ companyFG.value | json }}\r\n              <div class=\"col-md-12\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"name\"\r\n                    placeholder=\"Company Name\"\r\n                  />\r\n                  <mat-error *ngIf=\"companyFG.get('name').errors?.required\"\r\n                    >Company Name is required.\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <button\r\n                  class=\"save-button\"\r\n                  mat-raised-button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <button\r\n                  class=\"back-button\"\r\n                  mat-raised-button\r\n                  color=\"secondary\"\r\n                  (click)=\"back()\"\r\n                >\r\n                  Back\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <a class=\"delete\" (click)=\"deleteOneCompany()\">Delete</a>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title col-12\" style=\"justify-content: space-between;display:flex;\">\r\n              <h3 class=\"card-label\">Reporting Providers</h3>\r\n              <button mat-button type=\"button\" color=\"primary\" (click) = \"handleReportingProvider()\">\r\n                  Add\r\n              </button>\r\n          </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n          <div formArrayName=\"reportingProviders\">\r\n              <div *ngFor=\"let reportItem of reportingProviders.controls; let i=index\" [formGroupName]=\"i\">\r\n                  <div class=\"row pb-2\">\r\n                      <div class=\"col-xl-4\">\r\n                          <mat-form-field>\r\n                              <mat-label>Reporting Providers</mat-label>\r\n                              <mat-select matNativeControl formControlName=\"reportingProvider\" (selectionChange)=\"handleChangeProvider($event.value)\">\r\n                                  <mat-option\r\n                                      *ngFor=\"let reportingProvider of reportingProviderHandleList\"\r\n                                      [value]=\"reportingProvider.value\"\r\n                                  >\r\n                                      {{ reportingProvider.viewValue }}\r\n                                  </mat-option>\r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"reportItem.get('reportingProvider').errors?.required\">\r\n                                  Reporting Provider is required.\r\n                              </mat-error>\r\n                          </mat-form-field>\r\n                      </div>\r\n                      <div class=\"col-xl-4\">\r\n                          <mat-form-field>\r\n                              <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                              <mat-error *ngIf=\"reportItem.get('email').errors?.email\"\r\n                              >Email is not valid</mat-error\r\n                              >\r\n                          </mat-form-field>\r\n                      </div>\r\n                      <div class=\"col-xl-4\">\r\n                          <mat-form-field>\r\n                          <input\r\n                              matInput\r\n                              formControlName=\"password\"\r\n                              placeholder=\"Password\"\r\n                              type=\"password\"\r\n                              autocomplete=\"off\"\r\n                          />\r\n                          <mat-error\r\n                              *ngIf=\"reportItem.get('password').errors?.required\"\r\n                              >Password is required</mat-error\r\n                          >\r\n                          </mat-form-field>\r\n                      </div>\r\n                  </div>\r\n          \r\n                  <div class=\"row pb-2\">\r\n                      <div class=\"col-xl-5\">\r\n                          <mat-form-field>\r\n                              <input matInput formControlName=\"apiUrl\" placeholder=\"ApiUrl\" />\r\n                              <mat-error *ngIf=\"reportItem.get('apiUrl').errors?.required\">ApiUrl Name is required.\r\n                              </mat-error>\r\n                          </mat-form-field>\r\n                      </div>\r\n                      <div class=\"col-xl-5\">\r\n                          <mat-form-field>\r\n                              <input matInput formControlName=\"apiKey\" placeholder=\"ApiKey\" />\r\n                              <mat-error *ngIf=\"reportItem.get('apiKey').errors?.required\">ApiKey Name is required.\r\n                              </mat-error>\r\n                          </mat-form-field>\r\n                      </div>\r\n                      <div class=\"col-xl-2\">\r\n                          <button class=\"btn btn-sm btn-danger\" (click)=\"removeReportingProvider(i)\">\r\n                              <i class=\"flaticon2-line\"></i>\r\n                          </button>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      </div>\r\n      \r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n            <div class=\"card-title\">\r\n                <h3 class=\"card-label\">Ad Server Url</h3>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row pb-2\">\r\n            <div class=\"col-md-3\">\r\n              <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"addAdServerUrl($event)\">\r\n                Add\r\n              </button>\r\n            </div>           \r\n          </div>\r\n          <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                  <div formArrayName=\"adServerUrls\">\r\n                      <div class=\"row\" *ngFor=\"let adUrlItem of adServerUrls.controls; let i=index\" [formGroupName]=\"i\">\r\n                          <div class=\"col-md-10\">\r\n                              <mat-form-field>\r\n                                  <input matInput placeholder=\"Ad Server Url\" formControlName=\"adServerUrl\" />\r\n                                  <mat-error *ngIf=\"adUrlItem.get('adServerUrl').errors?.required\">\r\n                                      AdServerURL is required.\r\n                                  </mat-error>\r\n                              </mat-form-field>\r\n                          </div>\r\n                          <div class=\"col-md-2\">\r\n                              <button class=\"btn btn-sm btn-danger\" (click)=\"removeAdServerUrl(i)\">\r\n                                <i class=\"flaticon2-line\"></i>\r\n                              </button>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n</form>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators, FormArray, FormGroupDirective } from '@angular/forms';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { CompanyManagementService } from '../company-management.service';\r\n\r\n@Component({\r\n  selector: 'app-new-company',\r\n  templateUrl: './new-company.component.html',\r\n  styleUrls: ['./new-company.component.scss']\r\n})\r\nexport class NewCompanyComponent implements OnInit {\r\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\r\n  companyFG: FormGroup;\r\n\r\n  intialServerUrl = { adServerUrl: ['', Validators.required] } \r\n  intialReportProvider = { \r\n    reportingProvider: ['', Validators.required],\r\n    email: [''],\r\n    password: [''],\r\n    apiUrl: [''],\r\n    apiKey: [''],\r\n  } \r\n  reportingProviderList = [\r\n    { value : \"apptitude\", viewValue: \"Apptitude\"},\r\n    { value : \"bing-direct\", viewValue: \"Bing Direct\"},\r\n    { value : \"hopkins\", viewValue: \"Hopkins\"},\r\n    { value : \"lyons\", viewValue: \"Lyons\"},\r\n    { value : \"media-net\", viewValue: \"Media.net\"},\r\n    { value : \"perion\", viewValue: \"Perion\"},\r\n    { value : \"rubi\", viewValue: \"Rubi\"},\r\n    { value : \"verizon-direct\", viewValue: \"Verizon Direct\"},\r\n  ]\r\n  reportingProviderHandleList = []\r\n\r\n  constructor(\r\n    private companyManagementService: CompanyManagementService,\r\n    private snackService: SnackbarService,\r\n    private fb: FormBuilder, \r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.companyFG = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      adServerUrls: this.fb.array([]),\r\n      reportingProviders: this.fb.array([]),\r\n    });\r\n    this.adServerUrls.push(this.fb.group(this.intialServerUrl));\r\n    this.reportingProviders.push(this.fb.group(this.intialReportProvider));\r\n    this.reportingProviderHandleList = this.reportingProviderList.sort((a, b) => (a.viewValue > b.viewValue) ? 1 : -1)\r\n  }\r\n\r\n  save(): void {\r\n    this.companyFG.markAllAsTouched();\r\n    if (this.companyFG.valid) {\r\n      this.companyManagementService.addCompany(this.companyFG.value).subscribe(x => {\r\n        this.snackService.info('Successfully added a new company.');\r\n        this.companyFG.reset();\r\n        this.formGroupDirective.resetForm();\r\n      }, (err) => {\r\n        this.snackService.info(err.error);\r\n      });\r\n    }\r\n  }\r\n  get reportingProviders() {\r\n    return this.companyFG.controls['reportingProviders'] as FormArray;\r\n  }\r\n  get adServerUrls() {\r\n    return this.companyFG.controls['adServerUrls'] as FormArray;\r\n  }\r\n  newAdServerUrls(): FormGroup {\r\n    return this.fb.group({\r\n      adServerUrl: ['', Validators.required],\r\n    })\r\n  }\r\n  addAdServerUrl(event) {\r\n    this.adServerUrls.push(this.newAdServerUrls());\r\n  }\r\n  removeAdServerUrl(i:number) {\r\n    this.adServerUrls.removeAt(i);\r\n  }\r\n  removeReportingProvider(i:number) {\r\n    this.reportingProviders.removeAt(i);\r\n  }\r\n  newReporingProvider(): FormGroup {\r\n    return this.fb.group({\r\n      reportingProvider: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      apiUrl: [''],\r\n      apiKey: [''],\r\n    })\r\n  }\r\n  handleReportingProvider() {\r\n    this.reportingProviders.push(this.newReporingProvider());\r\n  }\r\n  handleChangeProvider(event:any) {\r\n    console.log(\"==========\", event)\r\n    if(event) {\r\n      console.log(this.reportingProviderList)\r\n    }\r\n  }\r\n}\r\n","<form class=\"example-container\" [formGroup]=\"companyFG\" (submit)=\"save()\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xl-6\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12\">\r\n                    <div class=\"card card-custom example example-compact gutter-b\">\r\n                        <div class=\"card-header\">\r\n                            <div class=\"card-title\">\r\n                                <h3 class=\"card-label\">Create New Company</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            {{companyFG.value | json}}\r\n                            <div class=\"row pb-2 pt-2\">\r\n                                <div class=\"col-md-12\">\r\n                                    <mat-form-field>\r\n                                        <input matInput formControlName=\"name\" placeholder=\"Company Name\" />\r\n                                        <mat-error *ngIf=\"companyFG.get('name').errors?.required\">Company Name is required.\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-md-12\">\r\n                                    <button class=\"save-button\" mat-raised-button color=\"primary\" type=\"submit\">Save</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12\">\r\n                    <div class=\"card card-custom example example-compact gutter-b\">\r\n                        <div class=\"card-header\">\r\n                            <div class=\"card-title col-12\" style=\"justify-content: space-between;display:flex;\">\r\n                                <h3 class=\"card-label\">Reporting Providers</h3>\r\n                                <button mat-button type=\"button\" color=\"primary\" (click) = \"handleReportingProvider()\">\r\n                                    Add\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <div formArrayName=\"reportingProviders\">\r\n                                <div *ngFor=\"let reportItem of reportingProviders.controls; let i=index\" [formGroupName]=\"i\">\r\n                                    <div class=\"row pb-2\">\r\n                                        <div class=\"col-xl-4\">\r\n                                            <mat-form-field>\r\n                                                <mat-label>Reporting Providers</mat-label>\r\n                                                <mat-select matNativeControl formControlName=\"reportingProvider\" (selectionChange)=\"handleChangeProvider($event.value)\">\r\n                                                    <mat-option\r\n                                                        *ngFor=\"let reportingProvider of reportingProviderHandleList\"\r\n                                                        [value]=\"reportingProvider.value\"\r\n                                                    >\r\n                                                        {{ reportingProvider.viewValue }}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                                <mat-error *ngIf=\"reportItem.get('reportingProvider').errors?.required\">\r\n                                                    Reporting Provider is required.\r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                        <div class=\"col-xl-4\">\r\n                                            <mat-form-field>\r\n                                                <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                                                <mat-error *ngIf=\"reportItem.get('email').errors?.email\"\r\n                                                >Email is not valid</mat-error\r\n                                                >\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                        <div class=\"col-xl-4\">\r\n                                            <mat-form-field>\r\n                                            <input\r\n                                                matInput\r\n                                                formControlName=\"password\"\r\n                                                placeholder=\"Password\"\r\n                                                type=\"password\"\r\n                                                autocomplete=\"off\"\r\n                                            />\r\n                                            <mat-error\r\n                                                *ngIf=\"reportItem.get('password').errors?.required\"\r\n                                                >Password is required</mat-error\r\n                                            >\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                    </div>\r\n                            \r\n                                    <div class=\"row pb-2\">\r\n                                        <div class=\"col-xl-5\">\r\n                                            <mat-form-field>\r\n                                                <input matInput formControlName=\"apiUrl\" placeholder=\"ApiUrl\" />\r\n                                                <mat-error *ngIf=\"reportItem.get('apiUrl').errors?.required\">ApiUrl Name is required.\r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                        <div class=\"col-xl-5\">\r\n                                            <mat-form-field>\r\n                                                <input matInput formControlName=\"apiKey\" placeholder=\"ApiKey\" />\r\n                                                <mat-error *ngIf=\"reportItem.get('apiKey').errors?.required\">ApiKey Name is required.\r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                        <div class=\"col-xl-2\">\r\n                                            <button class=\"btn btn-sm btn-danger\" (click)=\"removeReportingProvider(i)\">\r\n                                                <i class=\"flaticon2-line\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-xl-6\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12\">\r\n                    <div class=\"card card-custom example example-compact gutter-b\">\r\n                        <div class=\"card-header\">\r\n                            <div class=\"card-title\">\r\n                                <h3 class=\"card-label\">Ad Server Url</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"row pb-2\">\r\n                                <div class=\"col-md-3\">\r\n                                    <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"addAdServerUrl($event)\">\r\n                                    Add\r\n                                    </button>\r\n                                </div>           \r\n                            </div>\r\n                            <div class=\"row pb-2\">\r\n                                <div class=\"col-md-12\">\r\n                                    <div formArrayName=\"adServerUrls\">\r\n                                        <div class=\"row\" *ngFor=\"let adUrlItem of adServerUrls.controls; let i=index\" [formGroupName]=\"i\">\r\n                                            <div class=\"col-md-10\">\r\n                                                <mat-form-field>\r\n                                                    <input matInput placeholder=\"Ad Server Url\" formControlName=\"adServerUrl\" />\r\n                                                    <mat-error *ngIf=\"adUrlItem.get('adServerUrl').errors?.required\">\r\n                                                        AdServerURL is required.\r\n                                                    </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                            <div class=\"col-md-2\">\r\n                                                <button class=\"btn btn-sm btn-danger\" (click)=\"removeAdServerUrl(i)\">\r\n                                                    <i class=\"flaticon2-line\"></i>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n    \r\n</form>\r\n"]}