{"version":3,"sources":["webpack:///src/app/modules/company-management/companies/companies.component.ts","webpack:///src/app/modules/company-management/companies/companies.component.html","webpack:///src/app/modules/company-management/company-management-routing.module.ts","webpack:///src/app/modules/company-management/company-management.module.ts","webpack:///src/app/modules/company-management/edit-company/edit-company.component.ts","webpack:///src/app/modules/company-management/edit-company/edit-company.component.html","webpack:///src/app/modules/company-management/new-company/new-company.component.ts","webpack:///src/app/modules/company-management/new-company/new-company.component.html"],"names":["CompaniesComponent","companyService","cdr","router","userService","notification","loadingIndicator","hidden","getAllCompanies","localStorageCompany","getSelectedCompanyFromLocalStorage","showError","subscribe","x","rows","console","log","detectChanges","companyID","navigateByUrl","selector","templateUrl","styleUrls","routes","path","component","children","pathMatch","redirectTo","CompanyManagementRoutingModule","forChild","imports","exports","CompanyManagementModule","declarations","providers","entryComponents","EditCompanyComponent","fb","authService","route","companyManagementService","reportingProviderList","value","viewValue","reportingProviderHandleList","currentUser","currentUserValue","currentUserRole","role","sort","a","b","companyFG","name","required","adServerUrls","array","reportingProviders","snapshot","params","id","getOneCompany","res","company","map","item","push","group","reporting","setValue","$event","markAllAsTouched","valid","updateOneCompany","showSuccess","err","statusText","deleteOneCompany","navigate","then","window","location","reload","adServerUrl","event","newAdServerUrls","i","removeAt","reportingProvider","email","password","apiUrl","apiKey","newReporingProvider","controls","NewCompanyComponent","intialServerUrl","intialReportProvider","addCompany","reset","formGroupDirective","resetForm","error"],"mappings":"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","file":"modules-company-management-company-management-module-es5.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { CompanyManagementService } from '../company-management.service';\r\nimport { CompanyInterface } from 'src/app/shared/models/company.interface';\r\nimport { Router } from '@angular/router';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-companies',\r\n  templateUrl: './companies.component.html',\r\n  styleUrls: ['./companies.component.scss'],\r\n})\r\nexport class CompaniesComponent implements OnInit {\r\n  loadingIndicator = true;\r\n  rows: Array<CompanyInterface>;\r\n  hidden = false;\r\n  //Local Storage Company\r\n  localStorageCompany: any;\r\n\r\n  constructor(\r\n    private companyService: CompanyManagementService,\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router,\r\n    private userService: UsersService, \r\n    private notification: NotificationService,\r\n  ) {\r\n    this.getAllCompanies();\r\n  }\r\n\r\n  getAllCompanies() {\r\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\r\n    //access page part\r\n    if(!this.localStorageCompany){\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.companyService.getAllCompanies().subscribe((x) => {\r\n      this.rows = x;\r\n      console.log(this.rows);\r\n      this.loadingIndicator = false;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  editCompany(companyID) {\r\n    this.router.navigateByUrl('/company-management/edit/' + companyID);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // console.log(companies)\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"!hidden\">\r\n  <div class=\"col-xl-12\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">View Companies</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <ngx-datatable\r\n          class=\"material fullscreen\"\r\n          [rows]=\"rows\"\r\n          [columnMode]=\"'force'\"\r\n          [loadingIndicator]=\"loadingIndicator\"\r\n          [footerHeight]=\"50\"\r\n          [rowHeight]=\"50\"\r\n          [scrollbarH]=\"true\"\r\n          [headerHeight]=\"50\"\r\n          [limit]=\"10\"\r\n        >\r\n          <ngx-datatable-column name=\"Name\">\r\n            <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n              Name\r\n            </ng-template>\r\n            <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n              {{ value }}\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column name=\"id\">\r\n            <ng-template ngx-datatable-header-template>Edit</ng-template>\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n              <button\r\n                class=\"btn btn-sm btn-icon btn-icon-white btn-bg-primary\"\r\n                color=\"primary\"\r\n                (click)=\"editCompany(row._key)\"\r\n              >\r\n              <i class=\"flaticon2-pen\"></i>\r\n              </button>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- begin:: Error -->\r\n<div\r\n*ngIf=\"hidden\"\r\n  class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\"\r\n  style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\"\r\n>\r\n  <!--begin::Content-->\r\n  <div\r\n    class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\"\r\n  >\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TagManagementComponent } from '../tag-management/tag-management.component';\r\nimport { CompaniesComponent } from './companies/companies.component';\r\nimport { CompanyManagementComponent } from './company-management.component';\r\nimport { EditCompanyComponent } from './edit-company/edit-company.component';\r\nimport { NewCompanyComponent } from './new-company/new-company.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompanyManagementComponent,\r\n    children: [\r\n      {\r\n        path: 'companies',\r\n        component: CompaniesComponent\r\n      },\r\n      {\r\n        path: 'new',\r\n        component: NewCompanyComponent\r\n      },\r\n      {\r\n        path: 'edit/:id',\r\n        component: EditCompanyComponent,\r\n        pathMatch: 'full'\r\n      },\r\n      { path: '', redirectTo: '', pathMatch: 'full' },\r\n      { path: '**', redirectTo: '', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyManagementRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CompanyManagementRoutingModule } from './company-management-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { NewCompanyComponent } from './new-company/new-company.component';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { CompaniesComponent } from './companies/companies.component';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { EditCompanyComponent } from './edit-company/edit-company.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\n@NgModule({\r\n  declarations: [NewCompanyComponent, CompaniesComponent, EditCompanyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyManagementRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    NgxDatatableModule,\r\n  ],\r\n  providers: [SnackbarService],\r\n  entryComponents: [NewCompanyComponent],\r\n})\r\nexport class CompanyManagementModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, FormArray } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyInterface } from 'src/app/shared/models/company.interface';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\nimport { CompanyManagementService } from '../company-management.service';\r\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-company',\r\n  templateUrl: './edit-company.component.html',\r\n  styleUrls: ['./edit-company.component.scss']\r\n})\r\nexport class EditCompanyComponent implements OnInit {\r\n\r\n  companyFG: FormGroup;\r\n  company: CompanyInterface;\r\n  currentUser:any;\r\n  currentUserRole: number;\r\n  hidden = false;\r\n  reportingProviderList = [\r\n    { value : \"apptitude\", viewValue: \"Apptitude\"},\r\n    { value : \"bing-direct\", viewValue: \"Bing Direct\"},\r\n    { value : \"hopkins\", viewValue: \"Hopkins\"},\r\n    { value : \"lyons\", viewValue: \"Lyons\"},\r\n    { value : \"media-net\", viewValue: \"Media.net\"},\r\n    { value : \"perion\", viewValue: \"Perion\"},\r\n    { value : \"rubi\", viewValue: \"Rubi\"},\r\n    { value : \"verizon-direct\", viewValue: \"Verizon Direct\"},\r\n  ]\r\n  reportingProviderHandleList = []\r\n  //Local Storage Company\r\n  localStorageCompany: any;\r\n  constructor(\r\n    private fb: FormBuilder, \r\n    private authService: AuthService,\r\n    private route: ActivatedRoute, \r\n    private companyManagementService: CompanyManagementService, \r\n    private notification: NotificationService,\r\n    private userService: UsersService, \r\n    private router: Router) { \r\n      this.currentUser = this.authService.currentUserValue;\r\n      this.currentUserRole = this.currentUser.role;\r\n      this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    //access page part\r\n    if(!this.localStorageCompany){\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.reportingProviderHandleList = this.reportingProviderList.sort((a, b) => (a.viewValue > b.viewValue) ? 1 : -1)\r\n    //Create update formgroup\r\n    this.companyFG = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      adServerUrls: this.fb.array([]),\r\n      reportingProviders: this.fb.array([]),\r\n    })\r\n\r\n    //Get the current company to edit\r\n    if (this.route.snapshot.params.id) {\r\n      this.companyManagementService.getOneCompany(this.route.snapshot.params.id).subscribe(res => {\r\n        this.company = res;\r\n        res['adServerUrls'].map((item) => {\r\n          this.adServerUrls.push(this.fb.group(item));\r\n        });\r\n        res['reportingProviders'].map((reporting) => {\r\n          this.reportingProviders.push(this.fb.group(reporting));\r\n        });\r\n        this.companyFG.setValue({\r\n          name: res['name'],\r\n          adServerUrls: res['adServerUrls'],\r\n          reportingProviders: res['reportingProviders']\r\n        });\r\n      });\r\n    } else {\r\n      // this.user = this.authService.currentUserSubject.value as any;\r\n    }\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  //Update one company\r\n  //Checks to see if edits were made\r\n  //If edits were made updates current company with new updated fields\r\n  updateOneCompany($event: any) {\r\n    this.companyFG.markAllAsTouched();\r\n    if (this.companyFG.valid) {\r\n      this.company = {...this.company, ...this.companyFG.value};\r\n      this.companyManagementService.updateOneCompany(this.company).subscribe(x => {\r\n        this.notification.showSuccess('Successfully updated company.', \"\");\r\n      }, (err) => {\r\n        this.notification.showError(`Error updating company: ${err.statusText}`, \"\");\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteOneCompany() {\r\n      this.companyManagementService.deleteOneCompany(this.company).subscribe(x => {\r\n        this.notification.showSuccess('Successfully deleted company.', \"\");\r\n        this.router.navigate(['/company-management/companies']).then(() => {\r\n          window.location.reload();\r\n        });\r\n      }, (err) => {\r\n        this.notification.showError(`Error deleting company: ${err.statusText}`, \"\");\r\n      });\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['/company-management/companies']);\r\n  }\r\n\r\n  get adServerUrls() {\r\n    return this.companyFG.controls['adServerUrls'] as FormArray;\r\n  }\r\n  get reportingProviders() {\r\n    return this.companyFG.controls['reportingProviders'] as FormArray;\r\n  }\r\n  newAdServerUrls(): FormGroup {\r\n    return this.fb.group({\r\n      adServerUrl: ['', Validators.required],\r\n    })\r\n  }\r\n  addAdServerUrl(event) {\r\n    this.adServerUrls.push(this.newAdServerUrls());\r\n  }\r\n  removeAdServerUrl(i:number) {\r\n    this.adServerUrls.removeAt(i);\r\n  }\r\n  newReporingProvider(): FormGroup {\r\n    return this.fb.group({\r\n      reportingProvider: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      apiUrl: [''],\r\n      apiKey: [''],\r\n    })\r\n  }\r\n  handleReportingProvider() {\r\n    this.reportingProviders.push(this.newReporingProvider());\r\n  }\r\n  handleChangeProvider(event:any) {\r\n    \r\n  }\r\n  removeReportingProvider(i:number) {\r\n    this.reportingProviders.removeAt(i);\r\n  }\r\n}\r\n","<form class=\"example-container\" [formGroup]=\"companyFG\" (submit)=\"updateOneCompany($event)\" *ngIf=\"!hidden\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Edit Company</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          {{ companyFG.value | json }}\r\n          <div class=\"row pb-2\"> \r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input\r\n                  matInput\r\n                  formControlName=\"name\"\r\n                  placeholder=\"Company Name\"\r\n                />\r\n                <mat-error *ngIf=\"companyFG.get('name').errors?.required\"\r\n                  >Company Name is required.\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>           \r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <button\r\n                class=\"save-button\"\r\n                mat-raised-button\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <button\r\n                class=\"back-button\"\r\n                mat-raised-button\r\n                color=\"secondary\"\r\n                (click)=\"back()\"\r\n              >\r\n                Back\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\" *ngIf=\"currentUserRole == 1\">\r\n            <a class=\"delete\" (click)=\"deleteOneCompany()\">Delete</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Add Stats</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <form\r\n            class=\"example-container\"\r\n            [formGroup]=\"companyFG\"\r\n            (submit)=\"updateOneCompany($event)\"\r\n          >\r\n            <div class=\"row\">\r\n              {{ companyFG.value | json }}\r\n              <div class=\"col-md-12\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"name\"\r\n                    placeholder=\"Company Name\"\r\n                  />\r\n                  <mat-error *ngIf=\"companyFG.get('name').errors?.required\"\r\n                    >Company Name is required.\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <button\r\n                  class=\"save-button\"\r\n                  mat-raised-button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <button\r\n                  class=\"back-button\"\r\n                  mat-raised-button\r\n                  color=\"secondary\"\r\n                  (click)=\"back()\"\r\n                >\r\n                  Back\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"currentUserRole == 1\">\r\n              <a class=\"delete\" (click)=\"deleteOneCompany()\">Delete</a>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n            <div class=\"card-title\">\r\n                <h3 class=\"card-label\">Ad Server Url</h3>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row pb-2\">\r\n            <div class=\"col-md-3\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"\r\n                    btn\r\n                    btn-sm\r\n                    btn-icon\r\n                    btn-bg-light\r\n                    btn-icon-primary\r\n                    btn-hover-primary\r\n                \"\r\n                (click)=\"addAdServerUrl($event)\"\r\n                >\r\n                <i class=\"flaticon-add-circular-button\"></i>\r\n              </button>\r\n            </div>           \r\n          </div>\r\n          <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                  <div formArrayName=\"adServerUrls\">\r\n                      <div class=\"row\" *ngFor=\"let adUrlItem of adServerUrls.controls; let i=index\" [formGroupName]=\"i\">\r\n                          <div class=\"col-md-10\">\r\n                              <mat-form-field>\r\n                                  <input matInput placeholder=\"Ad Server Url\" formControlName=\"adServerUrl\" />\r\n                                  <mat-error *ngIf=\"adUrlItem.get('adServerUrl').errors?.required\">\r\n                                      AdServerURL is required.\r\n                                  </mat-error>\r\n                              </mat-form-field>\r\n                          </div>\r\n                          <div class=\"col-md-2\">\r\n                              <button\r\n                                class=\"\r\n                                    btn\r\n                                    btn-sm\r\n                                    btn-icon\r\n                                    btn-bg-light\r\n                                    btn-icon-danger\r\n                                    btn-hover-danger\r\n                                \"\r\n                                (click)=\"removeAdServerUrl(i)\"\r\n                                >\r\n                                <i class=\"flaticon2-line\"></i>\r\n                              </button>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-3 mb-3\">\r\n      <button\r\n          type=\"button\"\r\n          class=\"\r\n              btn\r\n              btn-sm\r\n              btn-icon\r\n              btn-bg-light\r\n              btn-icon-primary\r\n              btn-hover-primary\r\n          \"\r\n          (click)=\"handleReportingProvider()\"\r\n          >\r\n          <i class=\"flaticon-add-circular-button\"></i>\r\n      </button>\r\n    </div>\r\n    <div class=\"col-xl-12\">\r\n      <div formArrayName=\"reportingProviders\">\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-4\" *ngFor=\"let reportItem of reportingProviders.controls; let i=index\" [formGroupName]=\"i\">\r\n            <div class=\"card card-custom example example-compact gutter-b\">\r\n              <div class=\"card-header\">\r\n                <div class=\"card-title col-12\" style=\"justify-content: space-between;display:flex;\">\r\n                    <h3 class=\"card-label\">Reporting Providers - {{i + 1}}</h3>\r\n                    <button\r\n                      class=\"\r\n                          btn\r\n                          btn-sm\r\n                          btn-icon\r\n                          btn-bg-light\r\n                          btn-icon-danger\r\n                          btn-hover-danger\r\n                      \"\r\n                      (click)=\"removeReportingProvider(i)\"\r\n                      >\r\n                      <i class=\"flaticon2-line\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <div class=\"row pb-2\">\r\n                    <div class=\"col-xl-12\">\r\n                        <mat-form-field>\r\n                            <mat-label>Reporting Providers</mat-label>\r\n                            <mat-select matNativeControl formControlName=\"reportingProvider\" (selectionChange)=\"handleChangeProvider($event.value)\">\r\n                                <mat-option\r\n                                    *ngFor=\"let reportingProvider of reportingProviderHandleList\"\r\n                                    [value]=\"reportingProvider.value\"\r\n                                >\r\n                                    {{ reportingProvider.viewValue }}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"reportItem.get('reportingProvider').errors?.required\">\r\n                                Reporting Provider is required.\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row pb-2\">\r\n                    <div class=\"col-xl-6\">\r\n                        <mat-form-field>\r\n                            <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                            <mat-error *ngIf=\"reportItem.get('email').errors?.email\"\r\n                            >Email is not valid</mat-error\r\n                            >\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-xl-6\">\r\n                        <mat-form-field>\r\n                        <input\r\n                            matInput\r\n                            formControlName=\"password\"\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            autocomplete=\"off\"\r\n                        />\r\n                        <mat-error\r\n                            *ngIf=\"reportItem.get('password').errors?.required\"\r\n                            >Password is required</mat-error\r\n                        >\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n        \r\n                <div class=\"row pb-2\">\r\n                    <div class=\"col-xl-6\">\r\n                        <mat-form-field>\r\n                            <input matInput formControlName=\"apiUrl\" placeholder=\"ApiUrl\" />\r\n                            <mat-error *ngIf=\"reportItem.get('apiUrl').errors?.required\">ApiUrl Name is required.\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-xl-6\">\r\n                        <mat-form-field>\r\n                            <input matInput formControlName=\"apiKey\" placeholder=\"ApiKey\" />\r\n                            <mat-error *ngIf=\"reportItem.get('apiKey').errors?.required\">ApiKey Name is required.\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  </div>\r\n</form>\r\n<!-- begin:: Error -->\r\n<div\r\n*ngIf=\"hidden\"\r\n  class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\"\r\n  style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\"\r\n>\r\n  <!--begin::Content-->\r\n  <div\r\n    class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\"\r\n  >\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators, FormArray, FormGroupDirective } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\nimport { CompanyManagementService } from '../company-management.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\n\r\n@Component({\r\n  selector: 'app-new-company',\r\n  templateUrl: './new-company.component.html',\r\n  styleUrls: ['./new-company.component.scss']\r\n})\r\nexport class NewCompanyComponent implements OnInit {\r\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\r\n  companyFG: FormGroup;\r\n  hidden = false;\r\n\r\n  intialServerUrl = { adServerUrl: ['', Validators.required] } \r\n  intialReportProvider = { \r\n    reportingProvider: ['', Validators.required],\r\n    email: [''],\r\n    password: [''],\r\n    apiUrl: [''],\r\n    apiKey: [''],\r\n  } \r\n  reportingProviderList = [\r\n    { value : \"apptitude\", viewValue: \"Apptitude\"},\r\n    { value : \"bing-direct\", viewValue: \"Bing Direct\"},\r\n    { value : \"hopkins\", viewValue: \"Hopkins\"},\r\n    { value : \"lyons\", viewValue: \"Lyons\"},\r\n    { value : \"media-net\", viewValue: \"Media.net\"},\r\n    { value : \"perion\", viewValue: \"Perion\"},\r\n    { value : \"rubi\", viewValue: \"Rubi\"},\r\n    { value : \"verizon-direct\", viewValue: \"Verizon Direct\"},\r\n  ]\r\n  reportingProviderHandleList = []\r\n  //Local Storage Company\r\n  localStorageCompany: any;\r\n\r\n  constructor(\r\n    private companyManagementService: CompanyManagementService,\r\n    private notification: NotificationService,\r\n    private fb: FormBuilder, \r\n    private userService: UsersService,\r\n  ) { \r\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //access page part\r\n    if(!this.localStorageCompany){\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.companyFG = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      adServerUrls: this.fb.array([]),\r\n      reportingProviders: this.fb.array([]),\r\n    });\r\n    this.adServerUrls.push(this.fb.group(this.intialServerUrl));\r\n    this.reportingProviders.push(this.fb.group(this.intialReportProvider));\r\n    this.reportingProviderHandleList = this.reportingProviderList.sort((a, b) => (a.viewValue > b.viewValue) ? 1 : -1)\r\n  }\r\n\r\n  save(): void {\r\n    this.companyFG.markAllAsTouched();\r\n    if (this.companyFG.valid) {\r\n      this.companyManagementService.addCompany(this.companyFG.value).subscribe(x => {\r\n        this.notification.showSuccess('Successfully added a new company.', \"\");\r\n        this.companyFG.reset();\r\n        this.formGroupDirective.resetForm();\r\n      }, (err) => {\r\n        this.notification.showError(err.error, \"\");\r\n      });\r\n    }\r\n  }\r\n  get reportingProviders() {\r\n    return this.companyFG.controls['reportingProviders'] as FormArray;\r\n  }\r\n  get adServerUrls() {\r\n    return this.companyFG.controls['adServerUrls'] as FormArray;\r\n  }\r\n  newAdServerUrls(): FormGroup {\r\n    return this.fb.group({\r\n      adServerUrl: ['', Validators.required],\r\n    })\r\n  }\r\n  addAdServerUrl(event) {\r\n    this.adServerUrls.push(this.newAdServerUrls());\r\n  }\r\n  removeAdServerUrl(i:number) {\r\n    this.adServerUrls.removeAt(i);\r\n  }\r\n  removeReportingProvider(i:number) {\r\n    this.reportingProviders.removeAt(i);\r\n  }\r\n  newReporingProvider(): FormGroup {\r\n    return this.fb.group({\r\n      reportingProvider: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      apiUrl: [''],\r\n      apiKey: [''],\r\n    })\r\n  }\r\n  handleReportingProvider() {\r\n    this.reportingProviders.push(this.newReporingProvider());\r\n  }\r\n  handleChangeProvider(event:any) {\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n}\r\n","<form class=\"example-container\" [formGroup]=\"companyFG\" (submit)=\"save()\" *ngIf=\"!hidden\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xl-6\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12\">\r\n                    <div class=\"card card-custom example example-compact gutter-b\">\r\n                        <div class=\"card-header\">\r\n                            <div class=\"card-title\">\r\n                                <h3 class=\"card-label\">Create New Company</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            {{companyFG.value | json}}\r\n                            <div class=\"row pb-2 pt-2\">\r\n                                <div class=\"col-md-12\">\r\n                                    <mat-form-field>\r\n                                        <input matInput formControlName=\"name\" placeholder=\"Company Name\" />\r\n                                        <mat-error *ngIf=\"companyFG.get('name').errors?.required\">Company Name is required.\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-md-12\">\r\n                                    <button class=\"save-button\" mat-raised-button color=\"primary\" type=\"submit\">Save</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        <div class=\"col-xl-6\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12\">\r\n                    <div class=\"card card-custom example example-compact gutter-b\">\r\n                        <div class=\"card-header\">\r\n                            <div class=\"card-title\">\r\n                                <h3 class=\"card-label\">Ad Server Url</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"row pb-2\">\r\n                                <div class=\"col-md-3\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        class=\"\r\n                                            btn\r\n                                            btn-sm\r\n                                            btn-icon\r\n                                            btn-bg-light\r\n                                            btn-icon-primary\r\n                                            btn-hover-primary\r\n                                        \"\r\n                                        (click)=\"addAdServerUrl($event)\"\r\n                                        >\r\n                                        <i class=\"flaticon-add-circular-button\"></i>\r\n                                    </button>\r\n                                </div>           \r\n                            </div>\r\n                            <div class=\"row pb-2\">\r\n                                <div class=\"col-md-12\">\r\n                                    <div formArrayName=\"adServerUrls\">\r\n                                        <div class=\"row\" *ngFor=\"let adUrlItem of adServerUrls.controls; let i=index\" [formGroupName]=\"i\">\r\n                                            <div class=\"col-md-10\">\r\n                                                <mat-form-field>\r\n                                                    <input matInput placeholder=\"Ad Server Url\" formControlName=\"adServerUrl\" />\r\n                                                    <mat-error *ngIf=\"adUrlItem.get('adServerUrl').errors?.required\">\r\n                                                        AdServerURL is required.\r\n                                                    </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                            <div class=\"col-md-2\">\r\n                                                <button\r\n                                                class=\"\r\n                                                    btn\r\n                                                    btn-sm\r\n                                                    btn-icon\r\n                                                    btn-bg-light\r\n                                                    btn-icon-danger\r\n                                                    btn-hover-danger\r\n                                                \"\r\n                                                (click)=\"removeAdServerUrl(i)\"\r\n                                                >\r\n                                                <i class=\"flaticon2-line\"></i>\r\n                                            </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-xl-3 mb-3\">\r\n            <button\r\n                type=\"button\"\r\n                class=\"\r\n                    btn\r\n                    btn-sm\r\n                    btn-icon\r\n                    btn-bg-light\r\n                    btn-icon-primary\r\n                    btn-hover-primary\r\n                \"\r\n                (click)=\"handleReportingProvider()\"\r\n                >\r\n                <i class=\"flaticon-add-circular-button\"></i>\r\n            </button>\r\n        </div>\r\n        \r\n        <div class=\"col-xl-12\">\r\n            <div formArrayName=\"reportingProviders\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-4\" *ngFor=\"let reportItem of reportingProviders.controls; let i=index\" [formGroupName]=\"i\">\r\n                        <div class=\"card card-custom example example-compact gutter-b\">\r\n                            <div class=\"card-header\">\r\n                                <div class=\"card-title col-12\" style=\"justify-content: space-between;display:flex;\">\r\n                                    <h3 class=\"card-label\">Reporting Providers - {{i + 1}}</h3>\r\n                                    <button\r\n                                        class=\"\r\n                                            btn\r\n                                            btn-sm\r\n                                            btn-icon\r\n                                            btn-bg-light\r\n                                            btn-icon-danger\r\n                                            btn-hover-danger\r\n                                        \"\r\n                                        (click)=\"removeReportingProvider(i)\"\r\n                                        >\r\n                                        <i class=\"flaticon2-line\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card-body\">\r\n                                <div class=\"row pb-2\">\r\n                                    <div class=\"col-xl-12\">\r\n                                        <mat-form-field>\r\n                                            <mat-label>Reporting Providers</mat-label>\r\n                                            <mat-select matNativeControl formControlName=\"reportingProvider\" (selectionChange)=\"handleChangeProvider($event.value)\">\r\n                                                <mat-option\r\n                                                    *ngFor=\"let reportingProvider of reportingProviderHandleList\"\r\n                                                    [value]=\"reportingProvider.value\"\r\n                                                >\r\n                                                    {{ reportingProvider.viewValue }}\r\n                                                </mat-option>\r\n                                            </mat-select>\r\n                                            <mat-error *ngIf=\"reportItem.get('reportingProvider').errors?.required\">\r\n                                                Reporting Provider is required.\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row pb-2\">\r\n                                    <div class=\"col-xl-6\">\r\n                                        <mat-form-field>\r\n                                            <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                                            <mat-error *ngIf=\"reportItem.get('email').errors?.email\"\r\n                                            >Email is not valid</mat-error\r\n                                            >\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-xl-6\">\r\n                                        <mat-form-field>\r\n                                        <input\r\n                                            matInput\r\n                                            formControlName=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            type=\"password\"\r\n                                            autocomplete=\"off\"\r\n                                        />\r\n                                        <mat-error\r\n                                            *ngIf=\"reportItem.get('password').errors?.required\"\r\n                                            >Password is required</mat-error\r\n                                        >\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                        \r\n                                <div class=\"row pb-2\">\r\n                                    <div class=\"col-xl-6\">\r\n                                        <mat-form-field>\r\n                                            <input matInput formControlName=\"apiUrl\" placeholder=\"ApiUrl\" />\r\n                                            <mat-error *ngIf=\"reportItem.get('apiUrl').errors?.required\">ApiUrl Name is required.\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-xl-6\">\r\n                                        <mat-form-field>\r\n                                            <input matInput formControlName=\"apiKey\" placeholder=\"ApiKey\" />\r\n                                            <mat-error *ngIf=\"reportItem.get('apiKey').errors?.required\">ApiKey Name is required.\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    </div>\r\n</form>\r\n<!-- begin:: Error -->\r\n<div\r\n*ngIf=\"hidden\"\r\n  class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\"\r\n  style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\"\r\n>\r\n  <!--begin::Content-->\r\n  <div\r\n    class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\"\r\n  >\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->\r\n"]}