{"version":3,"sources":["webpack:///src/app/modules/company-management/companies/companies.component.ts","webpack:///src/app/modules/company-management/companies/companies.component.html","webpack:///src/app/modules/company-management/company-management-routing.module.ts","webpack:///src/app/modules/company-management/company-management.module.ts","webpack:///src/app/modules/company-management/edit-company/edit-company.component.ts","webpack:///src/app/modules/company-management/edit-company/edit-company.component.html","webpack:///src/app/modules/company-management/new-company/new-company.component.ts","webpack:///src/app/modules/company-management/new-company/new-company.component.html"],"names":["CompaniesComponent","companyService","cdr","router","userService","notification","loadingIndicator","hidden","localStorageCompany","getSelectedCompanyFromLocalStorage","showError","getAllCompanies","subscribe","x","rows","detectChanges","companyID","navigateByUrl","selector","templateUrl","styleUrls","routes","path","component","children","pathMatch","redirectTo","CompanyManagementRoutingModule","forChild","imports","exports","CompanyManagementModule","forRoot","declarations","providers","entryComponents","EditCompanyComponent","fb","authService","route","companyManagementService","reportingProviderList","value","viewValue","reportingProviderHandleList","currentUser","currentUserValue","currentUserRole","role","sort","a","b","companyFG","name","required","adServerUrls","array","reportingProviders","snapshot","params","id","getOneCompany","res","company","push","map","item","group","reporting","setValue","$event","markAllAsTouched","valid","updateOneCompany","showSuccess","err","statusText","deleteOneCompany","navigate","then","window","location","reload","adServerUrl","event","newAdServerUrls","i","removeAt","reportingProvider","email","password","apiUrl","apiKey","newReporingProvider","controls","NewCompanyComponent","intialServerUrl","intialReportProvider","addCompany","reset","formGroupDirective","resetForm","error"],"mappings":"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","file":"modules-company-management-company-management-module-es5.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { CompanyManagementService } from '../company-management.service';\r\nimport { CompanyInterface } from 'src/app/shared/models/company.interface';\r\nimport { Router } from '@angular/router';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-companies',\r\n  templateUrl: './companies.component.html',\r\n  styleUrls: ['./companies.component.scss'],\r\n})\r\nexport class CompaniesComponent implements OnInit {\r\n  loadingIndicator = true;\r\n  rows: Array<CompanyInterface>;\r\n  hidden = false;\r\n  //Local Storage Company\r\n  localStorageCompany: any;\r\n\r\n  constructor(\r\n    private companyService: CompanyManagementService,\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router,\r\n    private userService: UsersService,\r\n    private notification: NotificationService,\r\n  ) { }\r\n\r\n  getAllCompanies() {\r\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\r\n    //access page part\r\n    if (!this.localStorageCompany) {\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.companyService.getAllCompanies().subscribe((x) => {\r\n      this.rows = x;\r\n      this.loadingIndicator = false;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  editCompany(companyID: string) {\r\n    this.router.navigateByUrl('/company-management/edit/' + companyID);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCompanies();\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"!hidden\">\r\n  <div class=\"col-xl-12\">\r\n    <div class=\"card card-custom example example-compact gutter-b\">\r\n      <div class=\"card-header\">\r\n        <div class=\"card-title\">\r\n          <h3 class=\"card-label\">View Companies</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <ngx-datatable class=\"material fullscreen\" [rows]=\"rows\" [columnMode]=\"'force'\"\r\n          [loadingIndicator]=\"loadingIndicator\" [footerHeight]=\"50\" [rowHeight]=\"50\" [scrollbarH]=\"true\"\r\n          [headerHeight]=\"50\" [limit]=\"10\">\r\n          <ngx-datatable-column name=\"Name\">\r\n            <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n              Name\r\n            </ng-template>\r\n            <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n              {{ value }}\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n\r\n          <ngx-datatable-column name=\"id\">\r\n            <ng-template ngx-datatable-header-template>Edit</ng-template>\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n              <a title=\"Edit company\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n                (click)=\"editCompany(row._key)\">\r\n                <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                  class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n                </span>\r\n              </a>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- begin:: Error -->\r\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\">\r\n  <!--begin::Content-->\r\n  <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TagManagementComponent } from '../tag-management/tag-management.component';\r\nimport { CompaniesComponent } from './companies/companies.component';\r\nimport { CompanyManagementComponent } from './company-management.component';\r\nimport { EditCompanyComponent } from './edit-company/edit-company.component';\r\nimport { NewCompanyComponent } from './new-company/new-company.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompanyManagementComponent,\r\n    children: [\r\n      {\r\n        path: 'companies',\r\n        component: CompaniesComponent\r\n      },\r\n      {\r\n        path: 'new',\r\n        component: NewCompanyComponent\r\n      },\r\n      {\r\n        path: 'edit/:id',\r\n        component: EditCompanyComponent,\r\n        pathMatch: 'full'\r\n      },\r\n      { path: '', redirectTo: '', pathMatch: 'full' },\r\n      { path: '**', redirectTo: '', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyManagementRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CompanyManagementRoutingModule } from './company-management-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { NewCompanyComponent } from './new-company/new-company.component';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { CompaniesComponent } from './companies/companies.component';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { EditCompanyComponent } from './edit-company/edit-company.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\n\r\n@NgModule({\r\n  declarations: [NewCompanyComponent, CompaniesComponent, EditCompanyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyManagementRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    NgxDatatableModule,\r\n    InlineSVGModule.forRoot()\r\n  ],\r\n  providers: [SnackbarService],\r\n  entryComponents: [NewCompanyComponent],\r\n})\r\nexport class CompanyManagementModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, FormBuilder, FormArray } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyInterface } from 'src/app/shared/models/company.interface';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\nimport { CompanyManagementService } from '../company-management.service';\r\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-company',\r\n  templateUrl: './edit-company.component.html',\r\n  styleUrls: ['./edit-company.component.scss']\r\n})\r\nexport class EditCompanyComponent implements OnInit {\r\n\r\n  companyFG: FormGroup;\r\n  company: CompanyInterface;\r\n  currentUser:any;\r\n  currentUserRole: number;\r\n  hidden = false;\r\n  reportingProviderList = [\r\n    { value : \"apptitude\", viewValue: \"Apptitude\"},\r\n    { value : \"bing-direct\", viewValue: \"Bing Direct\"},\r\n    { value : \"hopkins\", viewValue: \"Hopkins YHS\"},\r\n    { value : \"lyons\", viewValue: \"Lyons\"},\r\n    { value : \"media-net\", viewValue: \"Media.net\"},\r\n    { value : \"perion\", viewValue: \"Perion\"},\r\n    { value : \"rubi\", viewValue: \"Rubi\"},\r\n    { value : \"system1\", viewValue: \"System1\"},\r\n    { value : \"solex-bc\", viewValue: \"Solex BC\"},\r\n    { value : \"verizon-direct\", viewValue: \"Verizon Direct\"},\r\n  ]\r\n  reportingProviderHandleList = []\r\n  //Local Storage Company\r\n  localStorageCompany: any;\r\n  constructor(\r\n    private fb: FormBuilder, \r\n    private authService: AuthService,\r\n    private route: ActivatedRoute, \r\n    private companyManagementService: CompanyManagementService, \r\n    private notification: NotificationService,\r\n    private userService: UsersService, \r\n    private router: Router) { \r\n      this.currentUser = this.authService.currentUserValue;\r\n      this.currentUserRole = this.currentUser.role;\r\n      this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    //access page part\r\n    if(!this.localStorageCompany){\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.reportingProviderHandleList = this.reportingProviderList.sort((a, b) => (a.viewValue > b.viewValue) ? 1 : -1)\r\n    //Create update formgroup\r\n    this.companyFG = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      adServerUrls: this.fb.array([]),\r\n      reportingProviders: this.fb.array([]),\r\n    })\r\n\r\n    //Get the current company to edit\r\n    if (this.route.snapshot.params.id) {\r\n      this.companyManagementService.getOneCompany(this.route.snapshot.params.id).subscribe(res => {\r\n        this.company = res;\r\n        // for company BrandClick\r\n        if (this.company['name'] == \"BrandClick\") {\r\n          this.reportingProviderHandleList.push({\r\n            value : \"solex-bc\", viewValue: \"Solex BC\",\r\n          });\r\n        }\r\n        res['adServerUrls'].map((item) => {\r\n          this.adServerUrls.push(this.fb.group(item));\r\n        });\r\n        res['reportingProviders'].map((reporting) => {\r\n          this.reportingProviders.push(this.fb.group(reporting));\r\n        });\r\n        this.companyFG.setValue({\r\n          name: res['name'],\r\n          adServerUrls: res['adServerUrls'],\r\n          reportingProviders: res['reportingProviders']\r\n        });\r\n      });\r\n    } else {\r\n      // this.user = this.authService.currentUserSubject.value as any;\r\n    }\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  //Update one company\r\n  //Checks to see if edits were made\r\n  //If edits were made updates current company with new updated fields\r\n  updateOneCompany($event: any) {\r\n    this.companyFG.markAllAsTouched();\r\n    if (this.companyFG.valid) {\r\n      this.company = {...this.company, ...this.companyFG.value};\r\n      this.companyManagementService.updateOneCompany(this.company).subscribe(x => {\r\n        this.notification.showSuccess('Successfully updated company.', \"\");\r\n      }, (err) => {\r\n        this.notification.showError(`Error updating company: ${err.statusText}`, \"\");\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteOneCompany() {\r\n      this.companyManagementService.deleteOneCompany(this.company).subscribe(x => {\r\n        this.notification.showSuccess('Successfully deleted company.', \"\");\r\n        this.router.navigate(['/company-management/companies']).then(() => {\r\n          window.location.reload();\r\n        });\r\n      }, (err) => {\r\n        this.notification.showError(`Error deleting company: ${err.statusText}`, \"\");\r\n      });\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['/company-management/companies']);\r\n  }\r\n\r\n  get adServerUrls() {\r\n    return this.companyFG.controls['adServerUrls'] as FormArray;\r\n  }\r\n  get reportingProviders() {\r\n    return this.companyFG.controls['reportingProviders'] as FormArray;\r\n  }\r\n  newAdServerUrls(): FormGroup {\r\n    return this.fb.group({\r\n      adServerUrl: ['', Validators.required],\r\n    })\r\n  }\r\n  addAdServerUrl(event) {\r\n    this.adServerUrls.push(this.newAdServerUrls());\r\n  }\r\n  removeAdServerUrl(i:number) {\r\n    this.adServerUrls.removeAt(i);\r\n  }\r\n  newReporingProvider(): FormGroup {\r\n    return this.fb.group({\r\n      reportingProvider: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      apiUrl: [''],\r\n      apiKey: [''],\r\n    })\r\n  }\r\n  handleReportingProvider() {\r\n    this.reportingProviders.push(this.newReporingProvider());\r\n  }\r\n  handleChangeProvider(event:any) {\r\n    \r\n  }\r\n  removeReportingProvider(i:number) {\r\n    this.reportingProviders.removeAt(i);\r\n  }\r\n}\r\n","<form class=\"example-container\" [formGroup]=\"companyFG\" (submit)=\"updateOneCompany($event)\" *ngIf=\"!hidden\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Edit Company</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          {{ companyFG.value | json }}\r\n          <div class=\"row pb-2\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <input matInput formControlName=\"name\" placeholder=\"Company Name\" />\r\n                <mat-error *ngIf=\"companyFG.get('name').errors?.required\">Company Name is required.\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <button class=\"save-button\" mat-raised-button color=\"primary\" type=\"submit\">\r\n                Save\r\n              </button>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <button class=\"back-button\" mat-raised-button color=\"secondary\" (click)=\"back()\">\r\n                Back\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\" *ngIf=\"currentUserRole == 1\">\r\n            <a class=\"delete\" (click)=\"deleteOneCompany()\">Delete</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Add Stats</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <form class=\"example-container\" [formGroup]=\"companyFG\" (submit)=\"updateOneCompany($event)\">\r\n            <div class=\"row\">\r\n              {{ companyFG.value | json }}\r\n              <div class=\"col-md-12\">\r\n                <mat-form-field>\r\n                  <input matInput formControlName=\"name\" placeholder=\"Company Name\" />\r\n                  <mat-error *ngIf=\"companyFG.get('name').errors?.required\">Company Name is required.\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <button class=\"save-button\" mat-raised-button color=\"primary\" type=\"submit\">\r\n                  Save\r\n                </button>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <button class=\"back-button\" mat-raised-button color=\"secondary\" (click)=\"back()\">\r\n                  Back\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"currentUserRole == 1\">\r\n              <a class=\"delete\" (click)=\"deleteOneCompany()\">Delete</a>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Ad Server Url</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row pb-2\">\r\n            <div class=\"col-md-3\">\r\n              <button type=\"button\" class=\"\r\n                    btn\r\n                    btn-sm\r\n                    btn-icon\r\n                    btn-bg-light\r\n                    btn-icon-primary\r\n                    btn-hover-primary\r\n                \" (click)=\"addAdServerUrl($event)\">\r\n                <i class=\"flaticon-add-circular-button\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <div formArrayName=\"adServerUrls\">\r\n                <div class=\"row\" *ngFor=\"let adUrlItem of adServerUrls.controls; let i=index\" [formGroupName]=\"i\">\r\n                  <div class=\"col-md-10\">\r\n                    <mat-form-field>\r\n                      <input matInput placeholder=\"Ad Server Url\" formControlName=\"adServerUrl\" />\r\n                      <mat-error *ngIf=\"adUrlItem.get('adServerUrl').errors?.required\">\r\n                        AdServerURL is required.\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col-md-2\">\r\n                    <button class=\"\r\n                                    btn\r\n                                    btn-sm\r\n                                    btn-icon\r\n                                    btn-bg-light\r\n                                    btn-icon-danger\r\n                                    btn-hover-danger\r\n                                \" (click)=\"removeAdServerUrl(i)\">\r\n                      <i class=\"flaticon2-line\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-3 mb-3\">\r\n      <button type=\"button\" class=\"\r\n              btn\r\n              btn-sm\r\n              btn-icon\r\n              btn-bg-light\r\n              btn-icon-primary\r\n              btn-hover-primary\r\n          \" (click)=\"handleReportingProvider()\">\r\n        <i class=\"flaticon-add-circular-button\"></i>\r\n      </button>\r\n    </div>\r\n    <div class=\"col-xl-12\">\r\n      <div formArrayName=\"reportingProviders\">\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-4\" *ngFor=\"let reportItem of reportingProviders.controls; let i=index\" [formGroupName]=\"i\">\r\n            <div class=\"card card-custom example example-compact gutter-b\">\r\n              <div class=\"card-header\">\r\n                <div class=\"card-title col-12\" style=\"justify-content: space-between;display:flex;\">\r\n                  <h3 class=\"card-label\">Reporting Providers - {{i + 1}}</h3>\r\n                  <button class=\"\r\n                          btn\r\n                          btn-sm\r\n                          btn-icon\r\n                          btn-bg-light\r\n                          btn-icon-danger\r\n                          btn-hover-danger\r\n                      \" (click)=\"removeReportingProvider(i)\">\r\n                    <i class=\"flaticon2-line\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <div class=\"row pb-2\">\r\n                  <div class=\"col-xl-12\">\r\n                    <mat-form-field>\r\n                      <mat-label>Reporting Providers</mat-label>\r\n                      <mat-select matNativeControl formControlName=\"reportingProvider\"\r\n                        (selectionChange)=\"handleChangeProvider($event.value)\">\r\n                        <mat-option *ngFor=\"let reportingProvider of reportingProviderHandleList\"\r\n                          [value]=\"reportingProvider.value\">\r\n                          {{ reportingProvider.viewValue }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                      <mat-error *ngIf=\"reportItem.get('reportingProvider').errors?.required\">\r\n                        Reporting Provider is required.\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row pb-2\">\r\n                  <div class=\"col-xl-6\">\r\n                    <mat-form-field>\r\n                      <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                      <mat-error *ngIf=\"reportItem.get('email').errors?.email\">Email is not valid</mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col-xl-6\">\r\n                    <mat-form-field>\r\n                      <input matInput formControlName=\"password\" placeholder=\"Password\" type=\"password\"\r\n                        autocomplete=\"off\" />\r\n                      <mat-error *ngIf=\"reportItem.get('password').errors?.required\">Password is required</mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row pb-2\">\r\n                  <div class=\"col-xl-6\">\r\n                    <mat-form-field>\r\n                      <input matInput formControlName=\"apiUrl\" placeholder=\"ApiUrl\" />\r\n                      <mat-error *ngIf=\"reportItem.get('apiUrl').errors?.required\">ApiUrl Name is required.\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col-xl-6\">\r\n                    <mat-form-field>\r\n                      <input matInput formControlName=\"apiKey\" placeholder=\"ApiKey\" />\r\n                      <mat-error *ngIf=\"reportItem.get('apiKey').errors?.required\">ApiKey Name is required.\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</form>\r\n<!-- begin:: Error -->\r\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\">\r\n  <!--begin::Content-->\r\n  <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators, FormArray, FormGroupDirective } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\nimport { CompanyManagementService } from '../company-management.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\n\r\n@Component({\r\n  selector: 'app-new-company',\r\n  templateUrl: './new-company.component.html',\r\n  styleUrls: ['./new-company.component.scss']\r\n})\r\nexport class NewCompanyComponent implements OnInit {\r\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\r\n  companyFG: FormGroup;\r\n  hidden = false;\r\n\r\n  intialServerUrl = { adServerUrl: ['', Validators.required] } \r\n  intialReportProvider = { \r\n    reportingProvider: ['', Validators.required],\r\n    email: [''],\r\n    password: [''],\r\n    apiUrl: [''],\r\n    apiKey: [''],\r\n  } \r\n  reportingProviderList = [\r\n    { value : \"apptitude\", viewValue: \"Apptitude\"},\r\n    { value : \"bing-direct\", viewValue: \"Bing Direct\"},\r\n    { value : \"hopkins\", viewValue: \"Hopkins YHS\"},\r\n    { value : \"lyons\", viewValue: \"Lyons\"},\r\n    { value : \"media-net\", viewValue: \"Media.net\"},\r\n    { value : \"perion\", viewValue: \"Perion\"},\r\n    { value : \"rubi\", viewValue: \"Rubi\"},\r\n    { value : \"system1\", viewValue: \"System1\"},\r\n    { value : \"solex-bc\", viewValue: \"Solex BC\"},\r\n    { value : \"verizon-direct\", viewValue: \"Verizon Direct\"},\r\n  ]\r\n  reportingProviderHandleList = []\r\n  //Local Storage Company\r\n  localStorageCompany: any;\r\n\r\n  constructor(\r\n    private companyManagementService: CompanyManagementService,\r\n    private notification: NotificationService,\r\n    private fb: FormBuilder, \r\n    private userService: UsersService,\r\n  ) { \r\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //access page part\r\n    if(!this.localStorageCompany){\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.companyFG = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      adServerUrls: this.fb.array([]),\r\n      reportingProviders: this.fb.array([]),\r\n    });\r\n    this.adServerUrls.push(this.fb.group(this.intialServerUrl));\r\n    this.reportingProviders.push(this.fb.group(this.intialReportProvider));\r\n    this.reportingProviderHandleList = this.reportingProviderList.sort((a, b) => (a.viewValue > b.viewValue) ? 1 : -1)\r\n  }\r\n\r\n  save(): void {\r\n    this.companyFG.markAllAsTouched();\r\n    if (this.companyFG.valid) {\r\n      this.companyManagementService.addCompany(this.companyFG.value).subscribe(x => {\r\n        this.notification.showSuccess('Successfully added a new company.', \"\");\r\n        this.companyFG.reset();\r\n        this.formGroupDirective.resetForm();\r\n      }, (err) => {\r\n        this.notification.showError(err.error, \"\");\r\n      });\r\n    }\r\n  }\r\n  get reportingProviders() {\r\n    return this.companyFG.controls['reportingProviders'] as FormArray;\r\n  }\r\n  get adServerUrls() {\r\n    return this.companyFG.controls['adServerUrls'] as FormArray;\r\n  }\r\n  newAdServerUrls(): FormGroup {\r\n    return this.fb.group({\r\n      adServerUrl: ['', Validators.required],\r\n    })\r\n  }\r\n  addAdServerUrl(event) {\r\n    this.adServerUrls.push(this.newAdServerUrls());\r\n  }\r\n  removeAdServerUrl(i:number) {\r\n    this.adServerUrls.removeAt(i);\r\n  }\r\n  removeReportingProvider(i:number) {\r\n    this.reportingProviders.removeAt(i);\r\n  }\r\n  newReporingProvider(): FormGroup {\r\n    return this.fb.group({\r\n      reportingProvider: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      apiUrl: [''],\r\n      apiKey: [''],\r\n    })\r\n  }\r\n  handleReportingProvider() {\r\n    this.reportingProviders.push(this.newReporingProvider());\r\n  }\r\n  handleChangeProvider(event:any) {\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n}\r\n","<form class=\"example-container\" [formGroup]=\"companyFG\" (submit)=\"save()\" *ngIf=\"!hidden\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xl-6\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12\">\r\n                    <div class=\"card card-custom example example-compact gutter-b\">\r\n                        <div class=\"card-header\">\r\n                            <div class=\"card-title\">\r\n                                <h3 class=\"card-label\">Create New Company</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            {{companyFG.value | json}}\r\n                            <div class=\"row pb-2 pt-2\">\r\n                                <div class=\"col-md-12\">\r\n                                    <mat-form-field>\r\n                                        <input matInput formControlName=\"name\" placeholder=\"Company Name\" />\r\n                                        <mat-error *ngIf=\"companyFG.get('name').errors?.required\">Company Name is\r\n                                            required.\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-md-12\">\r\n                                    <button class=\"save-button\" mat-raised-button color=\"primary\"\r\n                                        type=\"submit\">Save</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-xl-6\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12\">\r\n                    <div class=\"card card-custom example example-compact gutter-b\">\r\n                        <div class=\"card-header\">\r\n                            <div class=\"card-title\">\r\n                                <h3 class=\"card-label\">Ad Server Url</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"row pb-2\">\r\n                                <div class=\"col-md-3\">\r\n                                    <button type=\"button\" class=\"\r\n                                            btn\r\n                                            btn-sm\r\n                                            btn-icon\r\n                                            btn-bg-light\r\n                                            btn-icon-primary\r\n                                            btn-hover-primary\r\n                                        \" (click)=\"addAdServerUrl($event)\">\r\n                                        <i class=\"flaticon-add-circular-button\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row pb-2\">\r\n                                <div class=\"col-md-12\">\r\n                                    <div formArrayName=\"adServerUrls\">\r\n                                        <div class=\"row\" *ngFor=\"let adUrlItem of adServerUrls.controls; let i=index\"\r\n                                            [formGroupName]=\"i\">\r\n                                            <div class=\"col-md-10\">\r\n                                                <mat-form-field>\r\n                                                    <input matInput placeholder=\"Ad Server Url\"\r\n                                                        formControlName=\"adServerUrl\" />\r\n                                                    <mat-error *ngIf=\"adUrlItem.get('adServerUrl').errors?.required\">\r\n                                                        AdServerURL is required.\r\n                                                    </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n                                            <div class=\"col-md-2\">\r\n                                                <button class=\"\r\n                                                    btn\r\n                                                    btn-sm\r\n                                                    btn-icon\r\n                                                    btn-bg-light\r\n                                                    btn-icon-danger\r\n                                                    btn-hover-danger\r\n                                                \" (click)=\"removeAdServerUrl(i)\">\r\n                                                    <i class=\"flaticon2-line\"></i>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-xl-3 mb-3\">\r\n            <button type=\"button\" class=\"\r\n                    btn\r\n                    btn-sm\r\n                    btn-icon\r\n                    btn-bg-light\r\n                    btn-icon-primary\r\n                    btn-hover-primary\r\n                \" (click)=\"handleReportingProvider()\">\r\n                <i class=\"flaticon-add-circular-button\"></i>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"col-xl-12\">\r\n            <div formArrayName=\"reportingProviders\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-4\" *ngFor=\"let reportItem of reportingProviders.controls; let i=index\"\r\n                        [formGroupName]=\"i\">\r\n                        <div class=\"card card-custom example example-compact gutter-b\">\r\n                            <div class=\"card-header\">\r\n                                <div class=\"card-title col-12\" style=\"justify-content: space-between;display:flex;\">\r\n                                    <h3 class=\"card-label\">Reporting Providers - {{i + 1}}</h3>\r\n                                    <button class=\"\r\n                                            btn\r\n                                            btn-sm\r\n                                            btn-icon\r\n                                            btn-bg-light\r\n                                            btn-icon-danger\r\n                                            btn-hover-danger\r\n                                        \" (click)=\"removeReportingProvider(i)\">\r\n                                        <i class=\"flaticon2-line\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card-body\">\r\n                                <div class=\"row pb-2\">\r\n                                    <div class=\"col-xl-12\">\r\n                                        <mat-form-field>\r\n                                            <mat-label>Reporting Providers</mat-label>\r\n                                            <mat-select matNativeControl formControlName=\"reportingProvider\"\r\n                                                (selectionChange)=\"handleChangeProvider($event.value)\">\r\n                                                <mat-option\r\n                                                    *ngFor=\"let reportingProvider of reportingProviderHandleList\"\r\n                                                    [value]=\"reportingProvider.value\">\r\n                                                    {{ reportingProvider.viewValue }}\r\n                                                </mat-option>\r\n                                            </mat-select>\r\n                                            <mat-error *ngIf=\"reportItem.get('reportingProvider').errors?.required\">\r\n                                                Reporting Provider is required.\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row pb-2\">\r\n                                    <div class=\"col-xl-6\">\r\n                                        <mat-form-field>\r\n                                            <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                                            <mat-error *ngIf=\"reportItem.get('email').errors?.email\">Email is not valid\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-xl-6\">\r\n                                        <mat-form-field>\r\n                                            <input matInput formControlName=\"password\" placeholder=\"Password\"\r\n                                                type=\"password\" autocomplete=\"off\" />\r\n                                            <mat-error *ngIf=\"reportItem.get('password').errors?.required\">Password is\r\n                                                required</mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row pb-2\">\r\n                                    <div class=\"col-xl-6\">\r\n                                        <mat-form-field>\r\n                                            <input matInput formControlName=\"apiUrl\" placeholder=\"ApiUrl\" />\r\n                                            <mat-error *ngIf=\"reportItem.get('apiUrl').errors?.required\">ApiUrl Name is\r\n                                                required.\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-xl-6\">\r\n                                        <mat-form-field>\r\n                                            <input matInput formControlName=\"apiKey\" placeholder=\"ApiKey\" />\r\n                                            <mat-error *ngIf=\"reportItem.get('apiKey').errors?.required\">ApiKey Name is\r\n                                                required.\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</form>\r\n<!-- begin:: Error -->\r\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\">\r\n    <!--begin::Content-->\r\n    <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\r\n        <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n            How did you get here\r\n        </p>\r\n        <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n            Sorry you can't access the page you're looking for.\r\n        </p>\r\n        <p class=\"font-size-h4 line-height-md\">\r\n            There may be a misspelling in the URL entered,<br />or the page you are\r\n            looking for may no longer exist.\r\n        </p>\r\n    </div>\r\n    <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->"]}