{"version":3,"sources":["./src/app/modules/google-sheet-reporting/all-sheets/all-sheets.component.ts","./src/app/modules/google-sheet-reporting/all-sheets/all-sheets.component.html","./src/app/modules/google-sheet-reporting/edit-sheet/edit-sheet.component.ts","./src/app/modules/google-sheet-reporting/edit-sheet/edit-sheet.component.html","./src/app/modules/google-sheet-reporting/google-sheet-reporting-routing.module.ts","./src/app/modules/google-sheet-reporting/google-sheet-reporting.component.ts","./src/app/modules/google-sheet-reporting/google-sheet-reporting.component.html","./src/app/modules/google-sheet-reporting/google-sheet-reporting.module.ts","./src/app/modules/google-sheet-reporting/new-sheet/new-sheet.component.ts","./src/app/modules/google-sheet-reporting/new-sheet/new-sheet.component.html","./src/app/modules/google-sheet-reporting/sheet/sheet.component.ts","./src/app/modules/google-sheet-reporting/sheet/sheet.component.html"],"names":[],"mappings":"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","file":"modules-google-sheet-reporting-google-sheet-reporting-module-es2015.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { SheetInterface } from 'src/app/shared/models/sheet.interface';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\nimport { UsersService } from 'src/app/shared/service/users.service';\nimport { GoogleSheetReportingService } from '../google-sheet-reporting.service';\nimport { Router } from '@angular/router';\nimport { ClipboardService } from 'ngx-clipboard';\n\n@Component({\n  selector: 'app-all-sheets',\n  templateUrl: './all-sheets.component.html',\n  styleUrls: ['./all-sheets.component.scss']\n})\nexport class AllSheetsComponent implements OnInit {\n  loadingIndicator = true;\n  rows: Array<SheetInterface>;\n  hidden = false;\n  //Local Storage Company\n  localStorageCompany: any;\n  constructor(\n    private googlesheetService: GoogleSheetReportingService,\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private userService: UsersService,\n    private notification: NotificationService,\n    private clipboardService: ClipboardService,\n  ) { }\n\n  ngOnInit(): void {\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\n    //access page part\n    if (!this.localStorageCompany) {\n      this.hidden = true;\n      this.notification.showError(\"Please select your Company!\", \"\")\n    } else {\n      this.hidden = false;\n    }\n\n    this.googlesheetService.getSheetList().subscribe((res) => {\n      this.rows = res;\n      this.loadingIndicator = false;\n      this.cdr.detectChanges();\n    }, (err) => {\n      this.notification.showError(err.error, \"\");\n    });\n  }\n\n  editSheet(sheetId: string) {\n    this.router.navigateByUrl('/google-sheet-reporting/edit/' + sheetId);\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  deleteSheet(id: any) {\n    if(window.confirm('Do you want to go ahead?')) {\n      this.googlesheetService.deleteSheet(id).subscribe((data) => {\n        this.router.navigate(['/google-sheet-reporting/all-sheets']).then(() => {\n          window.location.reload();\n        });\n        this.notification.showSuccess('Successfully deleted sheet.', \"\");\n      }, (error) => {\n        console.log(error)\n        this.notification.showError(`Error deleting sheet: ${error}`, \"\");\n      });\n    } \n  }\n\n  copyToGoogleSheetAPIClipboard(row: any) {\n    const sheetId = row.sheetUrl.split('/') && row.sheetUrl.split('/')[5] ? row.sheetUrl.split('/')[5] : '';\n    row.copy = true;\n    const googleSheetAPILink = `http://api.nextsys.io/api/googlesheet/${sheetId}/stats?startDate=MM/DD/YYYY&endDate=MM/DD/YYYY`;\n    this.clipboardService.copyFromContent(googleSheetAPILink);\n    setTimeout(()=>{    \n      row.copy = false;\n      this.cdr.detectChanges();\n    }, 3000);\n  }\n\n}\n","<div class=\"row\" *ngIf=\"!hidden\">\n    <div class=\"col-xl-12\">\n      <div class=\"card card-custom example example-compact gutter-b\">\n        <div class=\"card-header\">\n          <div class=\"card-title\">\n            <h3 class=\"card-label\">Google Sheet Reporting</h3>\n          </div>\n        </div>\n        <div class=\"card-body\">\n          <ngx-datatable class=\"material fullscreen\" [rows]=\"rows\" [columnMode]=\"'force'\"\n            [loadingIndicator]=\"loadingIndicator\" [footerHeight]=\"50\" [rowHeight]=\"50\" [scrollbarH]=\"true\"\n            [headerHeight]=\"50\" [limit]=\"10\">\n            <ngx-datatable-column name=\"SheetName\" [width]=\"150\">\n              <ng-template let-column=\"column\" ngx-datatable-header-template>\n                Sheet Name\n              </ng-template>\n              <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                {{ value }}\n              </ng-template>\n            </ngx-datatable-column>\n            \n            <ngx-datatable-column name=\"SheetUrl\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                  Sheet Url\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n              </ngx-datatable-column>\n\n            <ngx-datatable-column name=\"id\" [width]=\"100\">\n              <ng-template ngx-datatable-header-template>Action</ng-template>\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                <a title=\"Edit Sheet\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-2\"\n                  (click)=\"editSheet(row._key)\">\n                  <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\n                    class=\"svg-icon svg-icon-md svg-icon-primary\">\n                  </span>\n                </a>\n\n                <a title=\"Delete Sheet\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm mx-2\"\n                  (click)=\"deleteSheet(row._key)\">\n                  <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"false\"\n                    class=\"svg-icon svg-icon-md svg-icon-danger\">\n                  </span>\n                </a>\n\n                <a title=\"COPY GOOGLE SHEET API\" class=\"btn btn-icon btn-light btn-hover-info btn-sm mx-2\" (click)=\"copyToGoogleSheetAPIClipboard(row)\">\n                  <span [inlineSVG]=\"row.copy ? './assets/media/svg/icons/General/copied.svg' : './assets/media/svg/icons/General/Clipboard.svg'\" cacheSVG=\"false\"\n                    class=\"svg-icon svg-icon-md svg-icon-info\">\n                  </span>\n                </a>\n              </ng-template>\n            </ngx-datatable-column>\n          </ngx-datatable>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- begin:: Error -->\n  <div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\n    display: block;\n    min-height: 80vh;\n    font-size: 14px;\n    line-height: 1.4;\n    color: #0e1724;\">\n    <!--begin::Content-->\n    <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\n      <p class=\"display-4 font-weight-boldest text-white mb-12\">\n        How did you get here\n      </p>\n      <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\n        Sorry you can't access the page you're looking for.\n      </p>\n      <p class=\"font-size-h4 line-height-md\">\n        There may be a misspelling in the URL entered,<br />or the page you are\n        looking for may no longer exist.\n      </p>\n    </div>\n    <!--end::Content-->\n  </div>\n  <!-- end:: Error -->","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { GoogleSheetReportingService } from '../google-sheet-reporting.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UsersService } from 'src/app/shared/service/users.service';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\nimport { SheetInterface } from 'src/app/shared/models/sheet.interface';\n\n@Component({\n  selector: 'app-edit-sheet',\n  templateUrl: './edit-sheet.component.html',\n  styleUrls: ['./edit-sheet.component.scss']\n})\nexport class EditSheetComponent implements OnInit {\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\n  editSheetFG: FormGroup;\n  sheet: SheetInterface;\n  hidden = false;\n  localStorageCompany: any;\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UsersService,\n    private notification: NotificationService,\n    private googleSheetReportingServie: GoogleSheetReportingService,\n  ) {\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\n  }\n\n  ngOnInit(): void {\n    //access page part\n    if (!this.localStorageCompany) {\n      this.hidden = true;\n      this.notification.showError(\"Please select your Company!\", \"\")\n    } else {\n      this.hidden = false;\n    }\n\n    this.editSheetFG = new FormGroup({\n      sheetName: new FormControl('', Validators.required),\n      sheetUrl: new FormControl('', Validators.required),\n    });\n\n    if (this.route.snapshot.params.id) {\n      this.googleSheetReportingServie.getOneSheet(this.route.snapshot.params.id).subscribe(res => {\n        this.sheet = res;\n\n        this.editSheetFG.setValue({\n          sheetName: res['sheetName'],\n          sheetUrl: res['sheetUrl'],\n        });\n      })\n    }\n\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  submitHandle() {\n    this.editSheetFG.markAllAsTouched();\n    if (this.editSheetFG.valid) {\n      this.sheet = { ...this.sheet, ...this.editSheetFG.value };\n      this.googleSheetReportingServie.updateSheet(this.sheet).subscribe(res => {\n        this.notification.showSuccess('Successfully updated the Sheet.', \"\");\n      }, (err) => {\n        this.notification.showError(`Error updating sheet: ${err.statusText}`, \"\");\n      })\n    }\n  }\n\n}\n","<form class=\"example-container\" [formGroup]=\"editSheetFG\" (submit)=\"submitHandle()\" *ngIf=\"!hidden\">\n    <div class=\"row\">\n        <div class=\"col-xl-8\">\n            <div class=\"row\">\n                <div class=\"col-xl-12\">\n                    <div class=\"card card-custom example example-compact gutter-b\">\n                        <div class=\"card-header\">\n                            <div class=\"card-title\">\n                                <h3 class=\"card-label\">Edit Google Sheet</h3>\n                            </div>\n                        </div>\n                        <div class=\"card-body\">\n                            {{editSheetFG.value | json}}\n                            <div class=\"row pb-2 pt-2\">\n                                <div class=\"col-md-12\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"sheetName\" placeholder=\"Sheet Name\" />\n                                        <mat-error *ngIf=\"editSheetFG.get('sheetName').errors?.required\">Sheet Name is required.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row pb-2 pt-2\">\n                                <div class=\"col-md-12\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"sheetUrl\" placeholder=\"Sheet Url\" type=\"url\" />\n                                        <mat-hint align=\"start\">e.g. https://docs.google.com/spreadsheets/d/1taJZ7W-sds54</mat-hint>\n                                        <mat-error *ngIf=\"editSheetFG.get('sheetUrl').errors?.required\">Sheet Url is required.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row pt-2\">\n                                <div class=\"col-md-12\">\n                                    <button class=\"save-button\" mat-raised-button color=\"primary\"\n                                        type=\"submit\">Save</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</form>\n<!-- begin:: Error -->\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\n  display: block;\n  min-height: 80vh;\n  font-size: 14px;\n  line-height: 1.4;\n  color: #0e1724;\">\n    <!--begin::Content-->\n    <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\n        <p class=\"display-4 font-weight-boldest text-white mb-12\">\n            How did you get here\n        </p>\n        <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\n            Sorry you can't access the page you're looking for.\n        </p>\n        <p class=\"font-size-h4 line-height-md\">\n            There may be a misspelling in the URL entered,<br />or the page you are\n            looking for may no longer exist.\n        </p>\n    </div>\n    <!--end::Content-->\n</div>\n<!-- end:: Error -->","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllSheetsComponent } from './all-sheets/all-sheets.component';\nimport { GoogleSheetReportingComponent } from './google-sheet-reporting.component';\nimport { NewSheetComponent } from './new-sheet/new-sheet.component';\nimport { EditSheetComponent } from './edit-sheet/edit-sheet.component';\nimport { SheetComponent } from './sheet/sheet.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GoogleSheetReportingComponent,\n    children: [\n      {\n        path: 'all-sheets',\n        component: AllSheetsComponent,\n      },\n      {\n        path: 'new-sheet',\n        component: NewSheetComponent,\n      },\n      {\n        path: 'edit/:id',\n        component: EditSheetComponent,\n        pathMatch: 'full'\n      },\n      {\n        path: 'sheet/:sheetId',\n        component: SheetComponent,\n        pathMatch: 'full'\n      },\n      { path: '', redirectTo: '', pathMatch: 'full' },\n      { path: '**', redirectTo: '', pathMatch: 'full' },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GoogleSheetReportingRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-google-sheet-reporting',\n  templateUrl: './google-sheet-reporting.component.html',\n  styleUrls: ['./google-sheet-reporting.component.scss']\n})\nexport class GoogleSheetReportingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GoogleSheetReportingRoutingModule } from './google-sheet-reporting-routing.module';\nimport { GoogleSheetReportingComponent } from './google-sheet-reporting.component';\nimport { NewSheetComponent } from './new-sheet/new-sheet.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AllSheetsComponent } from './all-sheets/all-sheets.component';\nimport { EditSheetComponent } from './edit-sheet/edit-sheet.component';\nimport { SheetComponent } from './sheet/sheet.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\n\n\n@NgModule({\n  declarations: [GoogleSheetReportingComponent, NewSheetComponent, AllSheetsComponent, EditSheetComponent, SheetComponent],\n  imports: [\n    CommonModule,\n    GoogleSheetReportingRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatIconModule,\n    NgxDatatableModule,\n    SharedModule,\n    InlineSVGModule.forRoot()\n  ],\n  entryComponents: [],\n})\nexport class GoogleSheetReportingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\nimport { UsersService } from 'src/app/shared/service/users.service';\nimport { GoogleSheetReportingService } from '../google-sheet-reporting.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-sheet',\n  templateUrl: './new-sheet.component.html',\n  styleUrls: ['./new-sheet.component.scss']\n})\nexport class NewSheetComponent implements OnInit {\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\n  sheetFG: FormGroup;\n  hidden = false;\n  localStorageCompany: any;\n\n  constructor(\n    private userService: UsersService,\n    private googleSheetReportingServie: GoogleSheetReportingService,\n    private router: Router,\n    private notification: NotificationService,\n  ) {\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\n  }\n\n  ngOnInit(): void {\n    //access page part\n    if (!this.localStorageCompany) {\n      this.hidden = true;\n      this.notification.showError(\"Please select your Company!\", \"\")\n    } else {\n      this.hidden = false;\n    }\n\n    this.sheetFG = new FormGroup({\n      sheetName: new FormControl('', Validators.required),\n      sheetUrl: new FormControl('', Validators.required),\n    });\n  }\n\n  submitHandle() {\n    this.sheetFG.markAllAsTouched();\n    if (this.sheetFG.valid) {\n      this.googleSheetReportingServie.addSheet(this.sheetFG.value).subscribe(res => {\n        this.notification.showSuccess('Successfully added a new Sheet.', \"\");\n        this.router.navigate(['/google-sheet-reporting/all-sheets']);\n      }, (error) => {\n        this.notification.showError(JSON.stringify(error.error), \"\");\n      })\n    }\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n}\n","<form class=\"example-container\" [formGroup]=\"sheetFG\" (submit)=\"submitHandle()\" *ngIf=\"!hidden\">\n    <div class=\"row\">\n        <div class=\"col-xl-8\">\n            <div class=\"row\">\n                <div class=\"col-xl-12\">\n                    <div class=\"card card-custom example example-compact gutter-b\">\n                        <div class=\"card-header\">\n                            <div class=\"card-title\">\n                                <h3 class=\"card-label\">Create New Google Sheet</h3>\n                            </div>\n                        </div>\n                        <div class=\"card-body\">\n                            {{sheetFG.value | json}}\n                            <div class=\"row pb-2 pt-2\">\n                                <div class=\"col-md-12\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"sheetName\" placeholder=\"Sheet Name\" />\n                                        <mat-error *ngIf=\"sheetFG.get('sheetName').errors?.required\">Sheet Name is required.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row pb-2 pt-2\">\n                                <div class=\"col-md-12\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"sheetUrl\" placeholder=\"Sheet Url\" type=\"url\" />\n                                        <mat-hint align=\"start\">e.g. https://docs.google.com/spreadsheets/d/1taJZ7W-sds54</mat-hint>\n                                        <mat-error *ngIf=\"sheetFG.get('sheetUrl').errors?.required\">Sheet Url is required.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row pt-2\">\n                                <div class=\"col-md-12\">\n                                    <button class=\"save-button\" mat-raised-button color=\"primary\"\n                                        type=\"submit\">Save</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</form>\n<!-- begin:: Error -->\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\n  display: block;\n  min-height: 80vh;\n  font-size: 14px;\n  line-height: 1.4;\n  color: #0e1724;\">\n    <!--begin::Content-->\n    <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\n        <p class=\"display-4 font-weight-boldest text-white mb-12\">\n            How did you get here\n        </p>\n        <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\n            Sorry you can't access the page you're looking for.\n        </p>\n        <p class=\"font-size-h4 line-height-md\">\n            There may be a misspelling in the URL entered,<br />or the page you are\n            looking for may no longer exist.\n        </p>\n    </div>\n    <!--end::Content-->\n</div>\n<!-- end:: Error -->","import { ChangeDetectorRef, Component, AfterViewInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UsersService } from 'src/app/shared/service/users.service';\nimport { GoogleSheetReportingService } from '../google-sheet-reporting.service';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\n\n@Component({\n  selector: 'app-sheet',\n  templateUrl: './sheet.component.html',\n  styleUrls: ['./sheet.component.scss']\n})\nexport class SheetComponent implements AfterViewInit {\n  @ViewChild('expandableTable') table: any;\n  loadingIndicator = true;\n  selectedCompany: any;\n  sheetData: any = [];\n  googlesheetId: string;\n  range = {\n    startDate: '',\n    endDate: '',\n  };\n\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UsersService,\n    private cdr: ChangeDetectorRef,\n    private googleSheetReportingService: GoogleSheetReportingService,\n    private notification: NotificationService\n  ) {\n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\n   }\n\n   async ngAfterViewInit() {\n    this.loadingIndicator = true;\n    this.route.params.subscribe(async routeParams => {\n      this.googlesheetId = routeParams.sheetId;\n      this.sheetData = [];\n      this.sheetData = await this.getSheetInformation(this.googlesheetId, this.range.startDate, this.range.endDate);\n      this.cdr.markForCheck();\n    });\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  public async sheetFiltering(range: any) {\n    this.loadingIndicator = true;\n    this.range = range;\n    this.sheetData = [];\n    this.route.params.subscribe(async routeParams => {\n      this.sheetData = [];\n      this.sheetData = await this.getSheetInformation(routeParams.sheetId, this.range.startDate, this.range.endDate);\n      this.cdr.markForCheck();\n    })\n  }\n\n  getSheetInformation(googlesheetId, startDate, endDate) {\n    this.loadingIndicator = true;\n    return this.googleSheetReportingService.getSheetData(googlesheetId, startDate, endDate).toPromise().then((res) => {\n      this.loadingIndicator = false;\n      return res;\n    }).catch((error) => {\n      return error;\n    });\n  }\n\n}\n","<app-reporting-filtering (onDatesPicked)=\"sheetFiltering($event)\"></app-reporting-filtering>\n\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 10px; height: 500px\" [loadingIndicator]=\"loadingIndicator\"\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [scrollbarH]=\"true\"\n  [rows]=\"sheetData\">\n\n  <!-- Date -->\n  <ngx-datatable-column name=\"date\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Date\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | date }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Searches -->\n  <ngx-datatable-column name=\"searches\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Searches\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Clicks -->\n  <ngx-datatable-column name=\"clicks\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Clicks\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n       <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- CTR -->\n  <ngx-datatable-column name=\"ctr\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      CTR\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n        <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- RPC -->\n  <ngx-datatable-column name=\"rpc\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n        RPC\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n    <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- REVENUE -->\n  <ngx-datatable-column name=\"revenue\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Revenue\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- TQ -->\n  <ngx-datatable-column name=\"tq\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n        TQ\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n    <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n</ngx-datatable>"],"sourceRoot":"webpack:///"}