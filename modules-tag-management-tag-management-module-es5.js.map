{"version":3,"sources":["webpack:///src/app/modules/tag-management/edit-tag/edit-tag.component.ts","webpack:///src/app/modules/tag-management/edit-tag/edit-tag.component.html","webpack:///src/app/modules/tag-management/new-tag/new-tag.component.ts","webpack:///src/app/modules/tag-management/new-tag/new-tag.component.html","webpack:///src/app/modules/tag-management/tag-management-routing.module.ts","webpack:///src/app/modules/tag-management/tag-management.component.ts","webpack:///src/app/modules/tag-management/tag-management.component.html","webpack:///src/app/modules/tag-management/tag-management.module.ts","webpack:///src/app/modules/tag-management/tags/tags.component.ts","webpack:///src/app/modules/tag-management/tags/tags.component.html","webpack:///src/app/modules/tag-management/template-name/template-name.component.ts","webpack:///src/app/modules/tag-management/template-name/template-name.component.html","webpack:///src/app/modules/tag-management/template/template.component.ts","webpack:///src/app/modules/tag-management/template/template.component.html"],"names":["EditTagComponent","route","tagManagementService","fb","_snackBarService","notification","router","auth","userService","companyService","changeDetectorRefs","companyList","adServerUrlList","publisherList","publishertempList","advertiserList","companySelected","versionList","hidden","updateTagFG","group","name","required","publisher","advertiser","browserStatus","browser","deviceTypeStatus","deviceType","versionStatus","version","countryStatus","country","company","adServerUrl","statType","subids","array","rotationType","url","params","statTypes","getStatTypes","rotationTypes","getRotationTypes","paramTypes","getParamTypes","countries","getCountries","browserVersions","getVersions","getPublisherAll","getSelectedCompanyFromLocalStorage","showError","currentUserInfo","currentUserValue","getUserCompanies","companies","subscribe","companyResult","map","push","value","_id","viewValue","adServerUrls","reportingProviders","reporting","reportingProvider","snapshot","id","getOneTag","x","tag","browserVal","deviceTypeVal","versionVal","countryVal","initialURL","URL","toString","split","bval","dval","vval","cval","item","param","setValue","detectChanges","data","console","log","filter","userData","includes","_key","fullname","markAllAsTouched","valid","updateOneTag","res","info","err","error","subid","limit","filterTag","event","newSubids","i","removeAt","deleteValueOfFormControl","isValidURL","searchParams","keys","key","get","addParamsToUrlForm","controlName","clear","index","controls","createInitialURL","forEach","element","paramType","append","initialParam","decodeURI","paramForm","finalUrl","length","e","vTemp","filterdata","edgeVersions","operaVersions","internetExplorers","getChromeBrowserVersion","versionsChromeData","slice","edge","getFirefoxBrowserVersion","firefoxList","internet","opera","selector","templateUrl","styleUrls","formGroupDirective","NewTagComponent","dialog","templateList","templateData","initSubid","selectBrowserStatus","selectDeviceTypeStatus","selectVersionStatus","selectCountryStatus","newTagFG","getTemplate","dialogRef","open","width","templateName","afterClosed","result","getAllTemplates","response","template","addTag","reset","resetForm","getUrlParams","addControl","patchValue","addTemplate","removeControl","getOneTemplate","routes","path","component","children","pathMatch","redirectTo","TagManagementRoutingModule","forChild","imports","exports","TagManagementComponent","styles","TagManagementModule","declarations","providers","entryComponents","TagsComponent","tagService","cdr","loadingIndicator","tagList","localStorageCompany","getAllTags","tagID","navigateByUrl","window","confirm","deleteTag","rows","TemplateNameComponent","templateNameFormControl","close","onNoClick","store","TemplateComponent","templateID","deleteTemplate"],"mappings":"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","file":"modules-tag-management-tag-management-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { TagManagementService } from '../tag-management.service';\r\nimport { TagInterface } from 'src/app/shared/models/tag.interface';\r\nimport { CompanyService } from 'src/app/shared/service/companies.service';\r\nimport { CompanyInterface } from 'src/app/shared/models/company.interface';\r\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n  FormGroupDirective,\r\n} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit-tag',\r\n  templateUrl: './edit-tag.component.html',\r\n  styleUrls: ['./edit-tag.component.scss']\r\n})\r\nexport class EditTagComponent implements OnInit {\r\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\r\n\r\n  updateTagFG: FormGroup;\r\n  //User Companies\r\n  userCompanies: Array<CompanyInterface>;\r\n  companyList: any = []\r\n  adServerUrlList: any = []\r\n  publisherList: any = []\r\n  publishertempList: any = []\r\n  advertiserList: any = []\r\n  companySelected = \"\";\r\n  statTypes: any;\r\n  rotationTypes: any;\r\n  paramTypes: any;\r\n  url: String;\r\n  initialURL: URL;\r\n  company: String;\r\n  countries: any;\r\n  versions: any;\r\n  versionList: any = [];\r\n  edgeVersions : any;\r\n  operaVersions: any;\r\n  browserVersions: any;\r\n  internetExplorers: any;\r\n  tag: TagInterface;\r\n  selectBrowserStatus: any;\r\n  selectDeviceTypeStatus: any;\r\n  selectVersionStatus: any;\r\n  selectCountryStatus: any;\r\n  hidden = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private tagManagementService: TagManagementService,\r\n    private fb: FormBuilder, \r\n    private _snackBarService: SnackbarService,\r\n    private notification: NotificationService,\r\n    router: Router,\r\n    private auth: AuthService,\r\n    private userService: UsersService,\r\n    private companyService: CompanyService,\r\n    private changeDetectorRefs: ChangeDetectorRef\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.updateTagFG = this.fb.group({\r\n      name: ['', Validators.required],\r\n      publisher: ['', Validators.required],\r\n      advertiser: ['', Validators.required],\r\n      browserStatus: ['', Validators.required],\r\n      browser: ['', Validators.required],\r\n      deviceTypeStatus: ['', Validators.required],\r\n      deviceType: ['', Validators.required],\r\n      versionStatus: ['', Validators.required],\r\n      version: ['', Validators.required],\r\n      countryStatus: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      company: ['', Validators.required],\r\n      adServerUrl: ['', Validators.required],\r\n      statType: ['', Validators.required],\r\n      subids: this.fb.array([]),\r\n      rotationType: ['', Validators.required],\r\n      url: new FormControl('', [Validators.required]),\r\n      params: this.fb.array([]),\r\n    });\r\n    this.statTypes = this.getStatTypes();\r\n    this.rotationTypes = this.getRotationTypes();\r\n    this.paramTypes = this.getParamTypes();\r\n    this.countries = this.getCountries();\r\n    \r\n    this.browserVersions = this.getVersions();\r\n    \r\n    this.getPublisherAll();\r\n    //get Company\r\n    this.companySelected = this.getSelectedCompanyFromLocalStorage();\r\n    //access page part\r\n    if(!this.companySelected){\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    const currentUserInfo = this.auth.currentUserValue;\r\n    this.companyService.getUserCompanies(currentUserInfo.companies).subscribe(companyResult => {\r\n      companyResult.map(company => {\r\n        this.companyList.push({\r\n          value: company._id,\r\n          viewValue: company.name\r\n        });\r\n        if(company._id == this.companySelected) {\r\n          company.adServerUrls.map(url => {\r\n            this.adServerUrlList.push({\r\n              value: url['adServerUrl'],\r\n              viewValue: url['adServerUrl']\r\n            });\r\n          });\r\n          //advertiser GET\r\n          company.reportingProviders.map(reporting => {\r\n            this.advertiserList.push({\r\n              value: reporting.reportingProvider,\r\n              viewValue: reporting.reportingProvider\r\n            });\r\n          });\r\n        }\r\n      })\r\n    });\r\n    \r\n    //Get the current tag to edit\r\n    if (this.route.snapshot.params.id) {\r\n      this.tagManagementService.getOneTag(this.route.snapshot.params.id).subscribe(x => {\r\n        this.tag = x;\r\n        var browserVal = [];\r\n        var deviceTypeVal = [];\r\n        var versionVal = [];\r\n        var countryVal = [];\r\n        this.url = x['url'];\r\n        this.initialURL = new URL('https://adserver.com/search');\r\n        for(var bval of x['browser'].toString().split(\",\")){\r\n          browserVal.push(bval)\r\n        }\r\n        \r\n        for(var dval of x['deviceType'].toString().split(\",\")){\r\n          deviceTypeVal.push(dval)\r\n        }\r\n        for(var vval of x['version'].toString().split(\",\")){\r\n          versionVal.push(vval)\r\n        }\r\n        for(var cval of x['country'].toString().split(\",\")){\r\n          countryVal.push(cval)\r\n        }\r\n        x['subids'].map((item) => {\r\n          this.subids.push(this.fb.group(item));\r\n        });\r\n        x['params'].map((param) => {\r\n          this.params.push(this.fb.group(param));\r\n        });\r\n        // this.updateTagFG.patchValue(x);\r\n        this.updateTagFG.setValue({\r\n          name: x['name'],\r\n          company: x['company'],\r\n          advertiser: x['advertiser'],\r\n          publisher: x['publisher'],\r\n          browserStatus: x['browserStatus'],\r\n          browser: browserVal,\r\n          deviceTypeStatus: x['deviceTypeStatus'],\r\n          deviceType: deviceTypeVal,\r\n          countryStatus: x['countryStatus'],\r\n          country: countryVal,\r\n          versionStatus: x['versionStatus'],\r\n          version: versionVal,\r\n          adServerUrl: x['adServerUrl'],\r\n          statType: x['statType'],\r\n          subids: x['subids'],\r\n          rotationType: x['rotationType'],\r\n          url: x['url'],\r\n          params: x['params'],\r\n          \r\n        });\r\n      });\r\n    }\r\n    this.changeDetectorRefs.detectChanges();\r\n  }\r\n\r\n  getPublisherAll() {\r\n    this.userService.getPublisherAll().subscribe(data => {\r\n      console.log(data);\r\n      if(this.companySelected) {\r\n        this.publishertempList = data.filter(userData => userData.companies.includes(this.companySelected));\r\n      } else {\r\n        this.publishertempList = data;\r\n      }\r\n      this.publishertempList.map(publisher => {\r\n        this.publisherList.push({\r\n          value: publisher._key,\r\n          viewValue: publisher.fullname\r\n        })\r\n      })\r\n    });\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  //Update the tag onto the database\r\n  updateTag() {\r\n    this.updateTagFG.markAllAsTouched();\r\n    if (this.updateTagFG.valid) {\r\n      this.tag = {...this.tag, ...this.updateTagFG.value};\r\n      this.tagManagementService.updateOneTag(this.tag).subscribe(res => {\r\n        this._snackBarService.info('Updated a  tag');\r\n      }, (err) => {\r\n        this._snackBarService.info(err.error);\r\n      },\r\n      )\r\n    }\r\n  }\r\n  get subids() {\r\n    return this.updateTagFG.controls['subids'] as FormArray;\r\n  }\r\n  newSubids(): FormGroup {\r\n    return this.fb.group({\r\n      subid: ['', Validators.required],\r\n      limit: ['', Validators.required],\r\n      split: ['', Validators.required],\r\n      filterTag: [''],\r\n    })\r\n  }\r\n   \r\n  addSubid(event) {\r\n    this.subids.push(this.newSubids());\r\n  }\r\n  removeSubid(i:number) {\r\n    this.subids.removeAt(i);\r\n  }\r\n  //Detects when URL is pasted into the field\r\n  //https://us.search.yahoo.com/yhs/search?hspart=brandclick&hsimp=yhs-calm&p=flowers\r\n  getUrlParams(url) {\r\n    //Resets the URL params on every change\r\n    this.deleteValueOfFormControl('params');\r\n    if (this.isValidURL(url)) {\r\n      url = new URL(url);\r\n      for (var key of url.searchParams.keys()) {\r\n        let value = url.searchParams.get(key);\r\n        this.addParamsToUrlForm(key, value);\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  \r\n  //Gets the value of any form Array\r\n  //Returns a form array\r\n  get params() {\r\n    return this.updateTagFG.controls['params'] as FormArray;\r\n  }\r\n\r\n  //Deletes value of any given form control\r\n  deleteValueOfFormControl(controlName) {\r\n    this.params.clear();\r\n  }\r\n\r\n  //Updates the original parameters that will be received and sent on the first server request\r\n  //Example: domain.com/search?subid={{dynamic}}&q={{dynamic}}&search=[bing]\r\n  updateInitialParams(param, index) {\r\n    console.log('Updating Initial Params');\r\n    console.log(param, index);\r\n    if (param.value === 'static') {\r\n      console.log('static!');\r\n      this.params.controls[index]\r\n        .get('initialParam')\r\n        .setValue(this.params.controls[index].get('value').value);\r\n      this.createInitialURL();\r\n    } else {\r\n      // this.params.controls[index]\r\n      //   .get('initialParam')\r\n      //   .setValue(this.params.controls[index].get('key').value);\r\n    }\r\n  }\r\n\r\n  //Checks to see if initialParam mat input field has been touched and updates initial URL\r\n  updateInitialParamURL(value, index) {\r\n    if (this.params.controls[index].get('paramType').value === 'dynamic') {\r\n      this.createInitialURL();\r\n    }\r\n  }\r\n\r\n  //Builds the initial URL from the paramaters\r\n  createInitialURL() {\r\n    console.log('Updating URL');\r\n    this.initialURL = new URL('https://adserver.com/search');\r\n    this.params.controls.forEach((element, index) => {\r\n      if (element.value.paramType === 'dynamic') {\r\n        this.initialURL.searchParams.append(\r\n          element.value.key,\r\n          '{{' + element.value.initialParam + '}}'\r\n        );\r\n      } else if (element.value.paramType === 'static') {\r\n        // this.initialURL.searchParams.append(\r\n        //   element.value.key,\r\n        //   element.value.value\r\n        // );\r\n      } else {\r\n      }\r\n    });\r\n  }\r\n\r\n  //Decodes the URL for the Angular Template\r\n  decodeURL(url) {\r\n    return decodeURI(url);\r\n  }\r\n\r\n  //Adds key/valuew to FormArray 'Params'\r\n  addParamsToUrlForm(key, value) {\r\n    let paramForm = this.fb.group({\r\n      key: [key, Validators.required],\r\n      value: [value, Validators.required],\r\n      paramType: ['', Validators.required],\r\n      initialParam: ['', Validators.required],\r\n    });\r\n    this.params.push(paramForm);\r\n  }\r\n\r\n  //Checks to see if URL entered is valid\r\n  //If URL is valid return true\r\n  //Else if URL is invalid return false and throw mat-error\r\n  private isValidURL(url) {\r\n    try {\r\n      let finalUrl = new URL(url);\r\n      return true;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n  getBrowers(event) {\r\n    if (event.value.length > 0) {\r\n      let vTemp: any[] = [];\r\n      if(event.value.includes('Any')) {\r\n        this.browserVersions = this.versionList\r\n      } else {\r\n        for(var e of event.value) {\r\n          let filterdata = this.versionList.filter(function(version: any) {\r\n            return version.value.includes(e)\r\n          })\r\n          filterdata.map((filter: any) => {\r\n              vTemp.push(filter);\r\n          })\r\n        }\r\n        this.browserVersions = vTemp;\r\n      }\r\n      \r\n    } else {\r\n      this.browserVersions = []\r\n    }\r\n  }\r\n  //update the tag as a template\r\n  updateTemplate() {}\r\n\r\n  //Gets different ways a tag can display stats\r\n  private getStatTypes() {\r\n    return [\r\n      { value: 'rpm', viewValue: 'RPM Based' },\r\n      { value: 'subid', viewValue: 'Sub-ID Based' },\r\n    ];\r\n  }\r\n\r\n  //Gets Country List\r\n  private getCountries() {\r\n    return [\r\n      {value: 'Afghanistan', viewValue: 'Afghanistan'}, \r\n      {value: 'Åland Islands', viewValue: 'Åland Islands'}, \r\n      {value: 'Albania', viewValue: 'Albania'}, \r\n      {value: 'Algeria', viewValue: 'Algeria'}, \r\n      {value: 'American Samoa', viewValue: 'American Samoa'}, \r\n      {value: 'Andorra', viewValue: 'Andorra'}, \r\n      {value: 'Angola', viewValue: 'Angola'}, \r\n      {value: 'Anguilla', viewValue: 'Anguilla'}, \r\n      {value: 'Antarctica', viewValue: 'Antarctica'}, \r\n      {value: 'Antigua and Barbuda', viewValue: 'Antigua and Barbuda'}, \r\n      {value: 'Argentina', viewValue: 'Argentina'}, \r\n      {value: 'Armenia', viewValue: 'Armenia'}, \r\n      {value: 'Aruba', viewValue: 'Aruba'}, \r\n      {value: 'Australia', viewValue: 'Australia'}, \r\n      {value: 'Austria', viewValue: 'Austria'}, \r\n      {value: 'Azerbaijan', viewValue: 'Azerbaijan'}, \r\n      {value: 'Bahamas', viewValue: 'Bahamas'}, \r\n      {value: 'Bahrain', viewValue: 'Bahrain'}, \r\n      {value: 'Bangladesh', viewValue: 'Bangladesh'}, \r\n      {value: 'Barbados', viewValue: 'Barbados'}, \r\n      {value: 'Belarus', viewValue: 'Belarus'}, \r\n      {value: 'Belgium', viewValue: 'Belgium'}, \r\n      {value: 'Belize', viewValue: 'Belize'}, \r\n      {value: 'Benin', viewValue: 'Benin'}, \r\n      {value: 'Bermuda', viewValue: 'Bermuda'}, \r\n      {value: 'Bhutan', viewValue: 'Bhutan'}, \r\n      {value: 'Bolivia', viewValue: 'Bolivia'}, \r\n      {value: 'Bosnia and Herzegovina', viewValue: 'Bosnia and Herzegovina'}, \r\n      {value: 'Botswana', viewValue: 'Botswana'}, \r\n      {value: 'Bouvet Island', viewValue: 'Bouvet Island'}, \r\n      {value: 'Brazil', viewValue: 'Brazil'}, \r\n      {value: 'British Indian Ocean Territory', viewValue: 'British Indian Ocean Territory'}, \r\n      {value: 'Brunei Darussalam', viewValue: 'Brunei Darussala'}, \r\n      {value: 'Bulgaria', viewValue: 'Bulgaria'}, \r\n      {value: 'Burkina Faso', viewValue: 'Burkina Faso'}, \r\n      {value: 'Burundi', viewValue: 'Burundi'}, \r\n      {value: 'Cambodia', viewValue: 'Cambodia'}, \r\n      {value: 'Cameroon', viewValue: 'Cameroon'}, \r\n      {value: 'Canada', viewValue: 'Canada'}, \r\n      {value: 'Cape Verde', viewValue: 'Cape Verde'}, \r\n      {value: 'Cayman Islands', viewValue: 'Cayman Islands'}, \r\n      {value: 'Central African Republic', viewValue: 'Central African Republic'}, \r\n      {value: 'Chad', viewValue: 'Chad'}, \r\n      {value: 'Chile', viewValue: 'Chile'}, \r\n      {value: 'China', viewValue: 'China'}, \r\n      {value: 'Christmas Island', viewValue: 'Christmas Island'}, \r\n      {value: 'Cocos (Keeling) Islands', viewValue: 'Cocos (Keeling) Islands'}, \r\n      {value: 'Colombia', viewValue: 'Colombia'}, \r\n      {value: 'Comoros', viewValue: 'Comoros'}, \r\n      {value: 'Congo', viewValue: 'Congo'}, \r\n      {value: 'Congo, The Democratic Republic of the', viewValue: 'Congo, The Democratic Republic of the'}, \r\n      {value: 'Cook Islands', viewValue: 'Cook Islands'}, \r\n      {value: 'Costa Rica', viewValue: 'Costa Rica'}, \r\n      {value: 'Cote D\\'Ivoire', viewValue: 'Cote D\\'Ivoire'}, \r\n      {value: 'Croatia', viewValue: 'Croatia'}, \r\n      {value: 'Cuba', viewValue: 'Cuba'}, \r\n      {value: 'Cyprus', viewValue: 'Cyprus'}, \r\n      {value: 'Czech Republic', viewValue: 'Czech Republic'}, \r\n      {value: 'Denmark', viewValue: 'Denmark'}, \r\n      {value: 'Djibouti', viewValue: 'Djibouti'}, \r\n      {value: 'Dominica', viewValue: 'Dominica'}, \r\n      {value: 'Dominican Republic', viewValue: 'Dominican Republic'}, \r\n      {value: 'Ecuador', viewValue: 'Ecuador'}, \r\n      {value: 'Egypt', viewValue: 'Egypt'}, \r\n      {value: 'El Salvador', viewValue: 'El Salvador'}, \r\n      {value: 'Equatorial Guinea', viewValue: 'Equatorial Guinea'}, \r\n      {value: 'Eritrea', viewValue: 'Eritrea'}, \r\n      {value: 'Estonia', viewValue: 'Estonia'}, \r\n      {value: 'Ethiopia', viewValue: 'Ethiopia'}, \r\n      {value: 'Falkland Islands (Malvinas)', viewValue: 'Falkland Islands (Malvinas)'}, \r\n      {value: 'Faroe Islands', viewValue: 'Faroe Islands'}, \r\n      {value: 'Fiji', viewValue: 'Fiji'}, \r\n      {value: 'Finland', viewValue: 'Finland'}, \r\n      {value: 'France', viewValue: 'France'}, \r\n      {value: 'French Guiana', viewValue: 'French Guiana'}, \r\n      {value: 'French Polynesia', viewValue: 'French Polynesia'}, \r\n      {value: 'French Southern Territories', viewValue: 'French Southern Territories'}, \r\n      {value: 'Gabon', viewValue: 'Gabon'}, \r\n      {value: 'Gambia', viewValue: 'Gambia'}, \r\n      {value: 'Georgia', viewValue: 'Georgia'}, \r\n      {value: 'Germany', viewValue: 'Germany'}, \r\n      {value: 'Ghana', viewValue: 'Ghana'}, \r\n      {value: 'Gibraltar', viewValue: 'Gibraltar'}, \r\n      {value: 'Greece', viewValue: 'Greece'}, \r\n      {value: 'Greenland', viewValue: 'Greenland'}, \r\n      {value: 'Grenada', viewValue: 'Grenada'}, \r\n      {value: 'Guadeloupe', viewValue: 'Guadeloupe'}, \r\n      {value: 'Guam', viewValue: 'Guam'}, \r\n      {value: 'Guatemala', viewValue: 'Guatemala'}, \r\n      {value: 'Guernsey', viewValue: 'Guernsey'}, \r\n      {value: 'Guinea', viewValue: 'Guinea'}, \r\n      {value: 'Guinea-Bissau', viewValue: 'Guinea-Bissau'}, \r\n      {value: 'Guyana', viewValue: 'Guyana'}, \r\n      {value: 'Haiti', viewValue: 'Haiti'}, \r\n      {value: 'Heard Island and Mcdonald Islands', viewValue: 'Heard Island and Mcdonald Islands'}, \r\n      {value: 'Holy See (Vatican City State)', viewValue: 'Holy See (Vatican City State)'}, \r\n      {value: 'Honduras', viewValue: 'Honduras'}, \r\n      {value: 'Hong Kong', viewValue: 'Hong Kong'}, \r\n      {value: 'Hungary', viewValue: 'Hungary'}, \r\n      {value: 'Iceland', viewValue: 'Iceland'}, \r\n      {value: 'India', viewValue: 'India'}, \r\n      {value: 'Indonesia', viewValue: 'Indonesia'}, \r\n      {value: 'Iran, Islamic Republic Of', viewValue: 'Iran, Islamic Republic Of'}, \r\n      {value: 'Iraq', viewValue: 'Iraq'}, \r\n      {value: 'Ireland', viewValue: 'Ireland'}, \r\n      {value: 'Isle of Man', viewValue: 'Isle of Man'}, \r\n      {value: 'Israel', viewValue: 'Israel'}, \r\n      {value: 'Italy', viewValue: 'Italy'}, \r\n      {value: 'Jamaica', viewValue: 'Jamaica'}, \r\n      {value: 'Japan', viewValue: 'Japan'}, \r\n      {value: 'Jersey', viewValue: 'Jersey'}, \r\n      {value: 'Jordan', viewValue: 'Jordan'}, \r\n      {value: 'Kazakhstan', viewValue: 'Kazakhstan'}, \r\n      {value: 'Kenya', viewValue: 'Kenya'}, \r\n      {value: 'Kiribati', viewValue: 'Kiribati'}, \r\n      {value: 'Korea, Democratic People\\'S Republic of', viewValue: 'Korea, Democratic People\\'S Republic o'}, \r\n      {value: 'Korea, Republic of', viewValue: 'Korea, Republic of'}, \r\n      {value: 'Kuwait', viewValue: 'Kuwait'}, \r\n      {value: 'Kyrgyzstan', viewValue: 'Kyrgyzstan'}, \r\n      {value: 'Lao People\\'S Democratic Republic', viewValue: 'Lao People\\'S Democratic Republic'}, \r\n      {value: 'Latvia', viewValue: 'Latvia'}, \r\n      {value: 'Lebanon', viewValue: 'Lebanon'}, \r\n      {value: 'Lesotho', viewValue: 'Lesotho'}, \r\n      {value: 'Liberia', viewValue: 'Liberia'}, \r\n      {value: 'Libyan Arab Jamahiriya', viewValue: 'Libyan Arab Jamahiriya'}, \r\n      {value: 'Liechtenstein', viewValue: 'Liechtenstein'}, \r\n      {value: 'Lithuania', viewValue: 'Lithuania'}, \r\n      {value: 'Luxembourg', viewValue: 'Luxembourg'}, \r\n      {value: 'Macao', viewValue: 'Macao'}, \r\n      {value: 'Macedonia, The Former Yugoslav Republic of', viewValue: 'Macedonia, The Former Yugoslav Republic of'}, \r\n      {value: 'Madagascar', viewValue: 'Madagascar'}, \r\n      {value: 'Malawi', viewValue: 'Malawi'}, \r\n      {value: 'Malaysia', viewValue: 'Malaysia'}, \r\n      {value: 'Maldives', viewValue: 'Maldives'}, \r\n      {value: 'Mali', viewValue: 'Mali'}, \r\n      {value: 'Malta', viewValue: 'Malta'}, \r\n      {value: 'Marshall Islands', viewValue: 'Marshall Islands'}, \r\n      {value: 'Martinique', viewValue: 'Martinique'}, \r\n      {value: 'Mauritania', viewValue: 'Mauritania'}, \r\n      {value: 'Mauritius', viewValue: 'Mauritius'}, \r\n      {value: 'Mayotte', viewValue: 'Mayotte'}, \r\n      {value: 'Mexico', viewValue: 'Mexico'}, \r\n      {value: 'Micronesia, Federated States of', viewValue: 'Micronesia, Federated States of'}, \r\n      {value: 'Moldova, Republic of', viewValue: 'Moldova, Republic of'}, \r\n      {value: 'Monaco', viewValue: 'Monaco'}, \r\n      {value: 'Mongolia', viewValue: 'Mongolia'}, \r\n      {value: 'Montserrat', viewValue: 'Montserrat'}, \r\n      {value: 'Morocco', viewValue: 'Morocco'}, \r\n      {value: 'Mozambique', viewValue: 'Mozambique'}, \r\n      {value: 'Myanmar', viewValue: 'Myanmar'}, \r\n      {value: 'Namibia', viewValue: 'Namibia'}, \r\n      {value: 'Nauru', viewValue: 'Nauru'}, \r\n      {value: 'Nepal', viewValue: 'Nepal'}, \r\n      {value: 'Netherlands', viewValue: 'Netherlands'}, \r\n      {value: 'Netherlands Antilles', viewValue: 'Netherlands Antilles'}, \r\n      {value: 'New Caledonia', viewValue: 'New Caledonia'}, \r\n      {value: 'New Zealand', viewValue: 'New Zealand'}, \r\n      {value: 'Nicaragua', viewValue: 'Nicaragua'}, \r\n      {value: 'Niger', viewValue: 'Niger'}, \r\n      {value: 'Nigeria', viewValue: 'Nigeria'}, \r\n      {value: 'Niue', viewValue: 'Niue'}, \r\n      {value: 'Norfolk Island', viewValue: 'Norfolk Island'}, \r\n      {value: 'Northern Mariana Islands', viewValue: 'Northern Mariana Islands'}, \r\n      {value: 'Norway', viewValue: 'Norway'}, \r\n      {value: 'Oman', viewValue: 'Oman'}, \r\n      {value: 'Pakistan', viewValue: 'Pakistan'}, \r\n      {value: 'Palau', viewValue: 'Palau'}, \r\n      {value: 'Palestinian Territory, Occupied', viewValue: 'Palestinian Territory, Occupied'}, \r\n      {value: 'Panama', viewValue: 'Panama'}, \r\n      {value: 'Papua New Guinea', viewValue: 'Papua New Guinea'}, \r\n      {value: 'Paraguay', viewValue: 'Paraguay'}, \r\n      {value: 'Peru', viewValue: 'Peru'}, \r\n      {value: 'Philippines', viewValue: 'Philippines'}, \r\n      {value: 'Pitcairn', viewValue: 'Pitcairn'}, \r\n      {value: 'Poland', viewValue: 'Poland'}, \r\n      {value: 'Portugal', viewValue: 'Portugal'}, \r\n      {value: 'Puerto Rico', viewValue: 'Puerto Rico'}, \r\n      {value: 'Qatar', viewValue: 'Qatar'}, \r\n      {value: 'Reunion', viewValue: 'Reunion'}, \r\n      {value: 'Romania', viewValue: 'Romania'}, \r\n      {value: 'Russian Federation', viewValue: 'Russian Federatio'}, \r\n      {value: 'RWANDA', viewValue: 'RWANDA'}, \r\n      {value: 'Saint Helena', viewValue: 'Saint Helena'}, \r\n      {value: 'Saint Kitts and Nevis', viewValue: 'Saint Kitts and Nevis'}, \r\n      {value: 'Saint Lucia', viewValue: 'Saint Lucia'}, \r\n      {value: 'Saint Pierre and Miquelon', viewValue: 'Saint Pierre and Miquelon'}, \r\n      {value: 'Saint Vincent and the Grenadines', viewValue: 'Saint Vincent and the Grenadines'}, \r\n      {value: 'Samoa', viewValue: 'Samoa'}, \r\n      {value: 'San Marino', viewValue: 'San Marino'}, \r\n      {value: 'Sao Tome and Principe', viewValue: 'Sao Tome and Principe'}, \r\n      {value: 'Saudi Arabia', viewValue: 'Saudi Arabia'}, \r\n      {value: 'Senegal', viewValue: 'Senegal'}, \r\n      {value: 'Serbia and Montenegro', viewValue: 'Serbia and Montenegro'}, \r\n      {value: 'Seychelles', viewValue: 'Seychelles'}, \r\n      {value: 'Sierra Leone', viewValue: 'Sierra Leone'}, \r\n      {value: 'Singapore', viewValue: 'Singapore'}, \r\n      {value: 'Slovakia', viewValue: 'Slovakia'}, \r\n      {value: 'Slovenia', viewValue: 'Slovenia'}, \r\n      {value: 'Solomon Islands', viewValue: 'Solomon Islands'}, \r\n      {value: 'Somalia', viewValue: 'Somalia'}, \r\n      {value: 'South Africa', viewValue: 'South Africa'}, \r\n      {value: 'South Georgia and the South Sandwich Islands', viewValue: 'South Georgia and the South Sandwich Isla'}, \r\n      {value: 'Spain', viewValue: 'Spain'}, \r\n      {value: 'Sri Lanka', viewValue: 'Sri Lanka'}, \r\n      {value: 'Sudan', viewValue: 'Sudan'}, \r\n      {value: 'Surivalue', viewValue: 'Surivalue'}, \r\n      {value: 'Svalbard and Jan Mayen', viewValue: 'Svalbard and Jan Mayen'}, \r\n      {value: 'Swaziland', viewValue: 'Swaziland'}, \r\n      {value: 'Sweden', viewValue: 'Sweden'}, \r\n      {value: 'Switzerland', viewValue: 'Switzerland'}, \r\n      {value: 'Syrian Arab Republic', viewValue: 'Syrian Arab Republic'}, \r\n      {value: 'Taiwan, Province of China', viewValue: 'Taiwan, Province of China'}, \r\n      {value: 'Tajikistan', viewValue: 'Tajikistan'}, \r\n      {value: 'Tanzania, United Republic of', viewValue: 'Tanzania, United Republic of'}, \r\n      {value: 'Thailand', viewValue: 'Thailand'}, \r\n      {value: 'Timor-Leste', viewValue: 'Timor-Leste'}, \r\n      {value: 'Togo', viewValue: 'Togo'}, \r\n      {value: 'Tokelau', viewValue: 'Tokelau'}, \r\n      {value: 'Tonga', viewValue: 'Tonga'}, \r\n      {value: 'TrinviewValuead and Tobago', viewValue: 'TrinviewValuead and Tobago'}, \r\n      {value: 'Tunisia', viewValue: 'Tunisia'}, \r\n      {value: 'Turkey', viewValue: 'Turkey'}, \r\n      {value: 'Turkmenistan', viewValue: 'Turkmenistan'}, \r\n      {value: 'Turks and Caicos Islands', viewValue: 'Turks and Caicos Islands'}, \r\n      {value: 'Tuvalu', viewValue: 'Tuvalu'}, \r\n      {value: 'Uganda', viewValue: 'Uganda'}, \r\n      {value: 'Ukraine', viewValue: 'Ukraine'}, \r\n      {value: 'United Arab Emirates', viewValue: 'United Arab Emirates'}, \r\n      {value: 'United Kingdom', viewValue: 'United Kingdom'}, \r\n      {value: 'United States', viewValue: 'United States'}, \r\n      {value: 'United States Minor Outlying Islands', viewValue: 'United States Minor Outlying Islands'}, \r\n      {value: 'Uruguay', viewValue: 'Uruguay'}, \r\n      {value: 'Uzbekistan', viewValue: 'Uzbekistan'}, \r\n      {value: 'Vanuatu', viewValue: 'Vanuatu'}, \r\n      {value: 'Venezuela', viewValue: 'Venezuela'}, \r\n      {value: 'Viet Nam', viewValue: 'Viet Nam'}, \r\n      {value: 'Virgin Islands, British', viewValue: 'Virgin Islands, British'}, \r\n      {value: 'Virgin Islands, U.S.', viewValue: 'Virgin Islands, U.S.'}, \r\n      {value: 'Wallis and Futuna', viewValue: 'Wallis and Futuna'}, \r\n      {value: 'Western Sahara', viewValue: 'Western Sahara'}, \r\n      {value: 'Yemen', viewValue: 'Yemen'}, \r\n      {value: 'Zambia', viewValue: 'Zambia'}, \r\n      {value: 'Zimbabwe', viewValue: 'Zimbabwe'} \r\n    ]\r\n  }\r\n  //Gets Browser Versions\r\n  private getVersions() {\r\n    this.edgeVersions = [\r\n      {value: \"Edge - 102.0.1245.7\", viewValue: \"Edge - 102.0.1245.7\"},\r\n      {value: \"Edge - 101.0.1210.10\", viewValue: \"Edge - 101.0.1210.10\"},\r\n      {value: \"Edge - 100.0.1185.10\", viewValue: \"Edge - 100.0.1185.10\"},\r\n      {value: \"Edge - 99.0.1150.11\", viewValue: \"Edge - 99.0.1150.11\"},\r\n      {value: \"Edge - 98.0.1108.23\", viewValue: \"Edge - 98.0.1108.23\"},\r\n      {value: \"Edge - 97.0.1072.21\", viewValue: \"Edge - 97.0.1072.21\"},\r\n      {value: \"Edge - 96.0.1054.8\", viewValue: \"Edge - 96.0.1054.8\"},\r\n      {value: \"Edge - 95.0.1020.9\", viewValue: \"Edge - 95.0.1020.9\"},\r\n      {value: \"Edge - 94.0.992.9\", viewValue: \"Edge - 94.0.992.9\"},\r\n      {value: \"Edge - 93.0.961.11\", viewValue: \"Edge - 93.0.961.11\"},\r\n      {value: \"Edge - 92.0.902.9\", viewValue: \"Edge - 92.0.902.9\"},\r\n      {value: \"Edge - 91.0.864.11\", viewValue: \"Edge - 91.0.864.11\"},\r\n      {value: \"Edge - 90.0.818.8\", viewValue: \"Edge - 90.0.818.8\"},\r\n      {value: \"Edge - 89.0.774.18\", viewValue: \"Edge - 89.0.774.18\"},\r\n      {value: \"Edge - 88.0.705.18\", viewValue: \"Edge - 88.0.705.18\"},\r\n    ];\r\n    this.operaVersions = [\r\n      {value: \"Opera - 12.15\", viewValue: \"Opera - 12.15\"},\r\n      {value: \"Opera - 12.14\", viewValue: \"Opera - 12.14\"},\r\n      {value: \"Opera - 12.13\", viewValue: \"Opera - 12.13\"},\r\n      {value: \"Opera - 12.12\", viewValue: \"Opera - 12.12\"},\r\n      {value: \"Opera - 12.11\", viewValue: \"Opera - 12.11\"},\r\n      {value: \"Opera - 12.10\", viewValue: \"Opera - 12.10\"},\r\n      {value: \"Opera - 12.10b\", viewValue: \"Opera - 12.10b\"},\r\n      {value: \"Opera - 12.02\",  viewValue: \"Opera - 12.02\"},\r\n      {value: \"Opera - 12.01\",  viewValue: \"Opera - 12.01\"},\r\n      {value: \"Opera - 12.00\",  viewValue: \"Opera - 12.00\"},\r\n      {value: \"Opera - 12.00b\", viewValue: \"Opera - 12.00b\"},\r\n      {value: \"Opera - 12.00a\", viewValue: \"Opera - 12.00a\"},\r\n      {value: \"Opera - 11.64\",  viewValue: \"Opera - 11.64\"},\r\n      {value: \"Opera - 11.62\", viewValue: \"Opera - 11.62\"},\r\n      {value: \"Opera - 11.61\", viewValue: \"Opera - 11.61\"},\r\n      {value: \"Opera - 11.60\", viewValue: \"Opera - 11.60\"},\r\n      {value: \"Opera - 11.60b\", viewValue: \"Opera - 11.60b\"},\r\n      {value: \"Opera - 11.52\", viewValue: \"Opera - 11.52\"},\r\n      {value: \"Opera - 11.51\", viewValue: \"Opera - 11.51\"},\r\n      {value: \"Opera - 11.50\", viewValue: \"Opera - 11.50\"},\r\n    ];\r\n    this.internetExplorers = [\r\n      {value: \"Internet Explorer - 11.0.220\", viewValue: \"Internet Explorer - 11.0.220\"},\r\n      {value: \"Internet Explorer - 9.0.195\", viewValue: \"Internet Explorer - 9.0.195\"},\r\n      {value: \"Internet Explorer - 8.0.6001.18702\", viewValue: \"Internet Explorer - 8.0.6001.18702\"},\r\n      {value: \"Internet Explorer - 6.0 SP1\", viewValue: \"Internet Explorer - 6.0 SP1\"},\r\n      {value: \"Internet Explorer - 5.5 SP2\", viewValue: \"Internet Explorer - 5.5 SP2\"},\r\n      {value: \"Internet Explorer - 5.01 SP2\", viewValue: \"Internet Explorer - 5.01 SP2\"},\r\n      {value: \"Internet Explorer - 5.2.3\", viewValue: \"Internet Explorer - 5.2.3\"},\r\n      {value: \"Internet Explorer - 5.1.7\", viewValue: \"Internet Explorer - 5.1.7\"},\r\n      {value: \"Internet Explorer - 4.0.1\", viewValue: \"Internet Explorer - 4.0.1\"},\r\n      {value: \"Internet Explorer - 2.0.1\", viewValue: \"Internet Explorer - 2.0.1\"},\r\n    ]\r\n    this.versionList.push(\r\n      {value: \"Any\", viewValue: \"Any\"}\r\n    );\r\n    //Chrome Version List Get\r\n    this.tagManagementService.getChromeBrowserVersion().subscribe((res: any) => {\r\n      let versionsChromeData = res.slice(0, 30);\r\n      versionsChromeData.map((version: { version: string; }) => {\r\n        this.versionList.push(\r\n            {\r\n                value: \"Chrome - \" + version.version,\r\n                viewValue: \"Chrome - \" + version.version\r\n            }\r\n        )\r\n      });    \r\n    }); \r\n    this.edgeVersions.map((edge: any) => {\r\n      this.versionList.push(edge);\r\n    });\r\n\r\n    //FireFox Version List Get\r\n    this.tagManagementService.getFirefoxBrowserVersion().subscribe(res => {\r\n      var firefoxList = [];\r\n      for(var i in res){\r\n        firefoxList.push(\r\n            {\r\n                value: \"Firefox - \" + i,\r\n                viewValue: \"Firefox - \" + i\r\n            }\r\n        )\r\n      }\r\n      firefoxList.slice(firefoxList['length'] - 30, firefoxList['length']).map((version: { version: string; }) => {\r\n        this.versionList.push(\r\n            {\r\n                value: version['value'],\r\n                viewValue: version['viewValue']\r\n            }\r\n        )\r\n      });\r\n    });  \r\n    \r\n    \r\n    this.internetExplorers.map((internet: any) => {\r\n      this.versionList.push(internet);\r\n    });\r\n    this.operaVersions.map((opera: any) => {\r\n      this.versionList.push(opera);\r\n    });\r\n\r\n    return this.versionList;\r\n  }\r\n  //Gets different ways a tag can display stats\r\n  private getRotationTypes() {\r\n    return [\r\n      { value: 'roundRobin', viewValue: 'Round Robin' },\r\n      { value: 'percentage', viewValue: 'Percentage' },\r\n    ];\r\n  }\r\n\r\n  private getParamTypes() {\r\n    return [\r\n      { value: 'static', viewValue: 'Static' },\r\n      { value: 'dynamic', viewValue: 'Dynamic' },\r\n    ];\r\n  }\r\n  handleBrowserStatus(event) {\r\n  }\r\n  handleDeviceTypeStatus(event) {\r\n  }\r\n  handleVersionStatus(event) {\r\n  }\r\n  handleCountryStatus(event) {\r\n  }\r\n}\r\n","<form class=\"example-container\" [formGroup]=\"updateTagFG\" (submit)=\"updateTag()\" *ngIf=\"!hidden\">\r\n    <div class=\"row\">\r\n      <div class=\"col-xl-6\">\r\n        <div class=\"card card-custom example example-compact gutter-b\">\r\n          <div class=\"card-header\">\r\n            <div class=\"card-title\">\r\n              <h3 class=\"card-label\">Create New Tag</h3>\r\n            </div>\r\n            {{ updateTagFG.value | json }}\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <mat-form-field>\r\n              <input\r\n                matInput\r\n                formControlName=\"name\"\r\n                placeholder=\"Name\"\r\n              />\r\n              <mat-error *ngIf=\"updateTagFG.get('name').errors?.required\"\r\n                >Name is required.\r\n              </mat-error>\r\n            </mat-form-field>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-4\">\r\n                <mat-form-field>\r\n                  <mat-label>Advertiser</mat-label>\r\n                  <mat-select matNativeControl formControlName=\"advertiser\">\r\n                    <mat-option\r\n                      *ngFor=\"let advertiserItem of advertiserList\"\r\n                      [value]=\"advertiserItem.value\"\r\n                    >\r\n                      {{ advertiserItem.viewValue }}\r\n                    </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-xl-4\">\r\n                <mat-form-field>\r\n                  <mat-label>Publisher</mat-label>\r\n                    <mat-select matNativeControl formControlName=\"publisher\">\r\n                      <mat-option\r\n                      *ngFor=\"let publisherItem of publisherList\"\r\n                      [value]=\"publisherItem.value\"\r\n                    >\r\n                      {{ publisherItem.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-xl-4\">\r\n                <mat-form-field>\r\n                  <mat-label>Company</mat-label>\r\n                  <mat-select formControlName=\"company\" [disabled]=\"true\">\r\n                    <mat-option\r\n                      *ngFor=\"let comItem of companyList\"\r\n                      [value]=\"comItem.value\"\r\n                    >\r\n                      {{ comItem.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              \r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n              <div class=\"col-xl-3\">\r\n                <mat-form-field>\r\n                  <mat-label>Browsers Status</mat-label>\r\n                  <mat-select matNativeControl (selectionChange)=\"handleBrowserStatus($event)\" [(ngModel)]=\"selectBrowserStatus\" formControlName=\"browserStatus\">\r\n                    <mat-option value=\"true\">Allowed</mat-option>\r\n                    <mat-option value=\"false\">Not Allowed</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-xl-9\">\r\n                <mat-form-field>\r\n                  <mat-label>Browsers</mat-label>\r\n                  <mat-select matNativeControl (selectionChange)=\"getBrowers($event)\" formControlName=\"browser\" multiple>\r\n                    <mat-option value=\"Any\">Any</mat-option>\r\n                    <mat-option value=\"Chrome\">Chrome</mat-option>\r\n                    <mat-option value=\"Firefox\">Firefox</mat-option>\r\n                    <mat-option value=\"Edge\">Edge</mat-option>\r\n                    <mat-option value=\"Internet Explorer\">Internet Explorer</mat-option>\r\n                    <mat-option value=\"Opera\">Opera</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-3\">\r\n                <mat-form-field>\r\n                  <mat-label>Device Type Status</mat-label>\r\n                  <mat-select matNativeControl (selectionChange)=\"handleDeviceTypeStatus($event)\" [(ngModel)]=\"selectDeviceTypeStatus\" formControlName=\"deviceTypeStatus\">\r\n                    <mat-option value=\"true\">Allowed</mat-option>\r\n                    <mat-option value=\"false\">Not Allowed</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-xl-9\">\r\n                <mat-form-field>\r\n                  <mat-label>Device Type</mat-label>\r\n                  <mat-select matNativeControl formControlName=\"deviceType\" multiple>\r\n                    <mat-option value=\"Any\">Any</mat-option>\r\n                    <mat-option value=\"Desktop\">Desktop</mat-option>\r\n                    <mat-option value=\"Mobile\">Mobile</mat-option>              \r\n                    <mat-option value=\"Tablet\">Tablet</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-3\">\r\n                <mat-form-field>\r\n                  <mat-label>Browser Version Status</mat-label>\r\n                  <mat-select matNativeControl (selectionChange)=\"handleVersionStatus($event)\" [(ngModel)]=\"selectVersionStatus\" formControlName=\"versionStatus\">\r\n                    <mat-option value=\"true\">Allowed</mat-option>\r\n                    <mat-option value=\"false\">Not Allowed</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-xl-9\">\r\n                <mat-form-field>\r\n                  <mat-label>Browser Version</mat-label>\r\n                  <mat-select matNativeControl formControlName=\"version\" multiple>\r\n                    <mat-option\r\n                      *ngFor=\"let browserVersion of browserVersions\"\r\n                      [value]=\"browserVersion.value\"\r\n                    >\r\n                      {{ browserVersion.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-3\">\r\n                <mat-form-field>\r\n                  <mat-label>Country Status</mat-label>\r\n                  <mat-select matNativeControl (selectionChange)=\"handleCountryStatus($event)\" [(ngModel)]=\"selectCountryStatus\" formControlName=\"countryStatus\">\r\n                    <mat-option value=\"true\">Allowed</mat-option>\r\n                    <mat-option value=\"false\">Not Allowed</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-xl-9\">\r\n                <mat-form-field>\r\n                  <mat-label>Country Allowed</mat-label>\r\n                  <mat-select matNativeControl formControlName=\"country\" multiple>\r\n                    <mat-option value=\"Any\">Any</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"let country of countries\"\r\n                      [value]=\"country.value\"\r\n                    >\r\n                      {{ country.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <mat-form-field>\r\n              <mat-label>Ad Server URL</mat-label>\r\n              <mat-select formControlName=\"adServerUrl\">\r\n                <mat-option\r\n                *ngFor=\"let serverUrl of adServerUrlList\"\r\n                [value]=\"serverUrl.value\"\r\n              >\r\n                {{ serverUrl.viewValue }}\r\n              </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-6\">\r\n                <mat-form-field>\r\n                  <mat-label>Stat Type</mat-label>\r\n                  <mat-select formControlName=\"statType\">\r\n                    <mat-option\r\n                      *ngFor=\"let statType of statTypes\"\r\n                      [value]=\"statType.value\"\r\n                    >\r\n                      {{ statType.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-xl-6\">\r\n                <mat-form-field>\r\n                  <mat-label>Rotation Type</mat-label>\r\n                  <mat-select formControlName=\"rotationType\">\r\n                    <mat-option\r\n                      *ngFor=\"let rotationType of rotationTypes\"\r\n                      [value]=\"rotationType.value\"\r\n                    >\r\n                      {{ rotationType.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xl-6\">\r\n        <div class=\"card card-custom example example-compact gutter-b\">\r\n          <div class=\"card-header\">\r\n            <div class=\"card-title\">\r\n              <h3 class=\"card-label\">Tag URLs</h3>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <!-- URL INPUT START -->\r\n            <mat-form-field>\r\n              <input\r\n                matInput\r\n                [(ngModel)]=\"url\"\r\n                formControlName=\"url\"\r\n                placeholder=\"Final URL\"\r\n                (ngModelChange)=\"getUrlParams($event)\"\r\n              />\r\n              <mat-error *ngIf=\"updateTagFG.get('url').errors?.required\"\r\n                >Final URL is required.\r\n              </mat-error>\r\n            </mat-form-field>\r\n            <!-- URL INPUT END -->\r\n  \r\n            <!-- FORM ARRAY PARAMS START -->\r\n            <div formArrayName=\"params\">\r\n              <div *ngFor=\"let p of params.controls; index as i\" class=\"params row\" [formGroupName]=\"i\">\r\n                <div class=\"col-md-3\">\r\n                  <mat-form-field>\r\n                    <input\r\n                      matInput\r\n                      formControlName=\"key\"\r\n                      placeholder=\"Final Key\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <mat-form-field>\r\n                    <input\r\n                      matInput\r\n                      formControlName=\"value\"\r\n                      placeholder=\"Final Value\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <mat-form-field>\r\n                    <mat-label>Param Type</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"paramType\"\r\n                      (selectionChange)=\"updateInitialParams($event, i)\"\r\n                    >\r\n                      <mat-option\r\n                        *ngFor=\"let paramType of paramTypes\"\r\n                        [value]=\"paramType.value\"\r\n                      >\r\n                        {{ paramType.viewValue }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <mat-form-field>\r\n                    <input\r\n                      matInput\r\n                      formControlName=\"initialParam\"\r\n                      placeholder=\"Inital Value\"\r\n                      (keyup)=\"updateInitialParamURL($event, i)\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n                \r\n              </div>\r\n            </div>\r\n            <p>Inital URL: <br />{{ decodeURL(initialURL) }}</p>\r\n            <!-- FORM ARRAY PARAMS END -->\r\n          </div>\r\n        </div>\r\n        <div class=\"card card-custom example example-compact gutter-b\">\r\n          <div class=\"card-header\">\r\n            <div class=\"card-title\">\r\n              <h3 class=\"card-label\">SubIds</h3>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"row pb-4\">\r\n              <div class=\"col-md-3\">\r\n                <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"addSubid($event)\">\r\n                  Add\r\n                </button>\r\n              </div>           \r\n            </div>\r\n            <div formArrayName=\"subids\">\r\n              <div class=\"row\" *ngFor=\"let subItem of subids.controls; let i=index\" [formGroupName]=\"i\">\r\n                <div class=\"col-xl-3\">\r\n                  <mat-form-field>\r\n                    <mat-label>Filter Tag</mat-label>\r\n                    <mat-select matNativeControl formControlName=\"filterTag\">\r\n                      <mat-option value=\"StartsWith\">Starts With</mat-option>\r\n                      <mat-option value=\"EndsWith\">Ends With</mat-option>\r\n                      <mat-option value=\"Contains\">Contains</mat-option>              \r\n                      <mat-option value=\"ExactValue\">Exact Value</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"subItem.get('filterTag').errors?.required\">\r\n                      Filter Tag is required.\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-4\">\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Subid(Numeric Range: example 1-10 input)\" formControlName=\"subid\" />\r\n                    <mat-error *ngIf=\"subItem.get('subid').errors?.required\">\r\n                      Subid is required.\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-2\">\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Limit\" formControlName=\"limit\" />\r\n                    <mat-error *ngIf=\"subItem.get('limit').errors?.required\">\r\n                      Limit is required.\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-2\">\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Split\" formControlName=\"split\" />\r\n                    <mat-error *ngIf=\"subItem.get('split').errors?.required\">\r\n                      Split is required.\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                \r\n                <div class=\"col-xl-1\">\r\n                  <a title=\"Delete Tag\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\" (click)=\"removeSubid(i)\">\r\n                    <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"false\"\r\n                      class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n                    </span>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n    <!-- SAVING TAG -->\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" type=\"submit\">Update</button>\r\n      </div>\r\n      <!-- <div class=\"col-md-6\">\r\n        <button\r\n          mat-raised-button\r\n          color=\"primary\"\r\n          type=\"button\"\r\n          (click)=\"updateTag()\"\r\n        >\r\n          Update as Template\r\n        </button>\r\n      </div> -->\r\n    </div>\r\n  </form>\r\n<!-- begin:: Error -->\r\n<div\r\n*ngIf=\"hidden\"\r\n  class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\"\r\n  style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\"\r\n>\r\n  <!--begin::Content-->\r\n  <div\r\n    class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\"\r\n  >\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->\r\n  ","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { TagManagementService } from '../tag-management.service';\r\nimport { CompanyService } from 'src/app/shared/service/companies.service';\r\nimport { CompanyInterface } from 'src/app/shared/models/company.interface';\r\nimport { AuthService } from 'src/app/modules/auth/_services/auth.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport {TemplateNameComponent} from '../template-name/template-name.component';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n  FormGroupDirective,\r\n} from '@angular/forms';\r\n\r\ninterface StatType {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-new-tag',\r\n  templateUrl: './new-tag.component.html',\r\n  styleUrls: ['./new-tag.component.scss'],\r\n})\r\nexport class NewTagComponent implements OnInit {\r\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\r\n  newTagFG: FormGroup;\r\n  templateName:string;\r\n  //User Companies\r\n  userCompanies: Array<CompanyInterface>;\r\n  companyList: any = []\r\n  adServerUrlList: any = []\r\n  advertiserList: any = []\r\n  templateList: any = []\r\n  publisherList: any = []\r\n  publishertempList: any = []\r\n  templateData: any = []\r\n  statTypes: any;\r\n  rotationTypes: any;\r\n  paramTypes: any;\r\n  url: String;\r\n  initialURL: URL;\r\n  companySelected = \"\";\r\n  countries: any;\r\n  versions: any;\r\n  versionList: any = [];\r\n  edgeVersions : any;\r\n  operaVersions: any;\r\n  internetExplorers: any;\r\n  browserVersions: any;\r\n  selectBrowserStatus: any;\r\n  selectDeviceTypeStatus: any;\r\n  selectVersionStatus: any;\r\n  selectCountryStatus: any;\r\n  hidden = false;\r\n  initSubid = [\r\n    {\r\n      subid: \"1\",\r\n      limit: \"1000\",\r\n      split: \"70\",\r\n      filterTag: \"\"\r\n    },\r\n    {\r\n      subid: \"2\",\r\n      limit: \"1000\",\r\n      split: \"70\",\r\n      filterTag: \"\"\r\n    }\r\n  ]\r\n  \r\n  constructor(\r\n    private tagManagementService: TagManagementService,\r\n    private fb: FormBuilder, \r\n    private _snackBarService: SnackbarService,\r\n    private companyService: CompanyService,\r\n    private auth: AuthService,\r\n    private userService: UsersService,\r\n    public dialog: MatDialog,\r\n    private notification: NotificationService,\r\n    private changeDetectorRefs: ChangeDetectorRef\r\n  ) {\r\n    //get Company\r\n    this.companySelected = this.getSelectedCompanyFromLocalStorage();\r\n    \r\n    //access page part\r\n    if(!this.companySelected){\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    const currentUserInfo = this.auth.currentUserValue;\r\n    this.companyService.getUserCompanies(currentUserInfo.companies).subscribe(companyResult => {\r\n      companyResult.map(company => {\r\n        this.companyList.push({\r\n          value: company._id,\r\n          viewValue: company.name\r\n        });\r\n        if(company._id == this.companySelected) {\r\n          company.adServerUrls.map(url => {\r\n            this.adServerUrlList.push({\r\n              value: url['adServerUrl'],\r\n              viewValue: url['adServerUrl']\r\n            });\r\n          });\r\n          //advertiser GET\r\n          company.reportingProviders.map(reporting => {\r\n            this.advertiserList.push({\r\n              value: reporting.reportingProvider,\r\n              viewValue: reporting.reportingProvider\r\n            });\r\n          });\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.url =\r\n      'https://us.search.yahoo.com/yhs/search?hspart=brandclick&hsimp=yhs-calm&p=flowers';\r\n    this.initialURL = new URL('https://adserver.com/search');\r\n    \r\n    this.selectBrowserStatus = \"true\";\r\n    this.selectDeviceTypeStatus = \"true\";\r\n    this.selectVersionStatus = \"true\";\r\n    this.selectCountryStatus = \"true\";\r\n\r\n    this.newTagFG = this.fb.group({\r\n      name: ['', Validators.required],\r\n      publisher: ['', Validators.required],\r\n      advertiser: ['', Validators.required],\r\n      browserStatus: ['', Validators.required],\r\n      browser: ['', Validators.required],\r\n      deviceTypeStatus: ['', Validators.required],\r\n      deviceType: ['', Validators.required],\r\n      versionStatus: ['', Validators.required],\r\n      version: ['', Validators.required],\r\n      countryStatus: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      company: ['', Validators.required],\r\n      adServerUrl: ['', Validators.required],\r\n      statType: ['', Validators.required],\r\n      subids: this.fb.array([]),\r\n      rotationType: ['', Validators.required],\r\n      url: new FormControl('', [Validators.required]),\r\n      params: this.fb.array([]),\r\n    });\r\n    this.statTypes = this.getStatTypes();\r\n    this.rotationTypes = this.getRotationTypes();\r\n    this.paramTypes = this.getParamTypes();\r\n    this.countries = this.getCountries();\r\n    this.getVersions();\r\n    this.browserVersions = [];\r\n    this.initSubid.map((item) => {\r\n      this.subids.push(this.fb.group(item));\r\n    });\r\n    this.getTemplate();\r\n    this.getPublisherAll();\r\n    this.changeDetectorRefs.detectChanges();\r\n  }\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(TemplateNameComponent, {\r\n      width: '250px',\r\n      data: {name: this.templateName},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.templateName = result;\r\n    });\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n  //Detects when URL is pasted into the field\r\n  //https://us.search.yahoo.com/yhs/search?hspart=brandclick&hsimp=yhs-calm&p=flowers\r\n  getUrlParams(url) {\r\n    //Resets the URL params on every change\r\n    this.deleteValueOfFormControl('params');\r\n    if (this.isValidURL(url)) {\r\n      url = new URL(url);\r\n      for (var key of url.searchParams.keys()) {\r\n        let value = url.searchParams.get(key);\r\n        this.addParamsToUrlForm(key, value);\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  getTemplate() {\r\n    this.tagManagementService.getAllTemplates().subscribe((response) => {\r\n      this.templateList = response.filter(template => template.company[0]['_id'] == this.companySelected)\r\n      this.templateList.map(template => {\r\n        this.templateData.push({\r\n          value : template._key,\r\n          viewValue:  template.templateName\r\n        });\r\n      })\r\n    });\r\n  }\r\n  getPublisherAll() {\r\n    this.userService.getPublisherAll().subscribe(data => {\r\n      console.log(data);\r\n      if(this.companySelected) {\r\n        this.publishertempList = data.filter(userData => userData.companies.includes(this.companySelected));\r\n      } else {\r\n        this.publishertempList = data;\r\n      }\r\n      this.publishertempList.map(publisher => {\r\n        this.publisherList.push({\r\n          value: publisher._key,\r\n          viewValue: publisher.fullname\r\n        })\r\n      })\r\n    });\r\n  }\r\n  \r\n  //Gets the value of any form Array\r\n  //Returns a form array\r\n  get params() {\r\n    return this.newTagFG.controls['params'] as FormArray;\r\n  }\r\n  \r\n  get subids() {\r\n    return this.newTagFG.controls['subids'] as FormArray;\r\n  }\r\n  newSubids(): FormGroup {\r\n    return this.fb.group({\r\n      subid: ['', Validators.required],\r\n      limit: ['', Validators.required],\r\n      split: ['', Validators.required],\r\n      filterTag: [''],\r\n    })\r\n  }\r\n   \r\n  addSubid(event) {\r\n    this.subids.push(this.newSubids());\r\n  }\r\n  removeSubid(i:number) {\r\n    this.subids.removeAt(i);\r\n  }\r\n  \r\n  //Deletes value of any given form control\r\n  deleteValueOfFormControl(controlName) {\r\n    this.params.clear();\r\n  }\r\n\r\n  //Updates the original parameters that will be received and sent on the first server request\r\n  //Example: domain.com/search?subid={{dynamic}}&q={{dynamic}}&search=[bing]\r\n  updateInitialParams(param, index) {\r\n    console.log('Updating Initial Params');\r\n    console.log(param, index);\r\n    if (param.value === 'static') {\r\n      console.log('static!');\r\n      this.params.controls[index]\r\n        .get('initialParam')\r\n        .setValue(this.params.controls[index].get('value').value);\r\n      this.createInitialURL();\r\n    } else {\r\n      // this.params.controls[index]\r\n      //   .get('initialParam')\r\n      //   .setValue(this.params.controls[index].get('key').value);\r\n    }\r\n  }\r\n\r\n  //Checks to see if initialParam mat input field has been touched and updates initial URL\r\n  updateInitialParamURL(value, index) {\r\n    if (this.params.controls[index].get('paramType').value === 'dynamic') {\r\n      this.createInitialURL();\r\n    }\r\n  }\r\n\r\n  //Builds the initial URL from the paramaters\r\n  createInitialURL() {\r\n    console.log('Updating URL');\r\n    this.initialURL = new URL('https://adserver.com/search');\r\n    this.params.controls.forEach((element, index) => {\r\n      if (element.value.paramType === 'dynamic') {\r\n        this.initialURL.searchParams.append(\r\n          element.value.key,\r\n          '{{' + element.value.initialParam + '}}'\r\n        );\r\n      } else if (element.value.paramType === 'static') {\r\n        // this.initialURL.searchParams.append(\r\n        //   element.value.key,\r\n        //   element.value.value\r\n        // );\r\n      } else {\r\n      }\r\n    });\r\n  }\r\n\r\n  //Decodes the URL for the Angular Template\r\n  decodeURL(url) {\r\n    return decodeURI(url);\r\n  }\r\n\r\n  //Adds key/valuew to FormArray 'Params'\r\n  addParamsToUrlForm(key, value) {\r\n    let paramForm = this.fb.group({\r\n      key: [key, Validators.required],\r\n      value: [value, Validators.required],\r\n      paramType: ['', Validators.required],\r\n      initialParam: ['', Validators.required],\r\n    });\r\n    this.params.push(paramForm);\r\n  }\r\n\r\n  //Checks to see if URL entered is valid\r\n  //If URL is valid return true\r\n  //Else if URL is invalid return false and throw mat-error\r\n  private isValidURL(url) {\r\n    try {\r\n      let finalUrl = new URL(url);\r\n      return true;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  //Saves the tag onto the database\r\n  saveTag() {\r\n    //this.newTagFG.markAllAsTouched();\r\n    if (this.newTagFG.valid) {\r\n      this.tagManagementService.addTag(this.newTagFG.value).subscribe(res => {\r\n        this._snackBarService.info('Added a new tag');\r\n        this.newTagFG.reset();\r\n        this.formGroupDirective.resetForm();\r\n        this.url ='https://us.search.yahoo.com/yhs/search?hspart=brandclick&hsimp=yhs-calm&p=flowers';\r\n        this.initialURL = new URL('https://adserver.com/search');\r\n        this.getUrlParams(this.url);\r\n      }, (err) => {\r\n        this._snackBarService.info(err.error);\r\n      },\r\n      )\r\n      \r\n    }\r\n  }\r\n  getBrowers(event) {\r\n    if (event.value.length > 0) {\r\n      let vTemp: any[] = [];\r\n      if(event.value.includes('Any')) {\r\n        this.browserVersions = this.versionList\r\n      } else {\r\n        for(var e of event.value) {\r\n          let filterdata = this.versionList.filter(function(version: any) {\r\n            return version.value.includes(e)\r\n          })\r\n          filterdata.map((filter: any) => {\r\n              vTemp.push(filter);\r\n          })\r\n        }\r\n        this.browserVersions = vTemp;\r\n      }\r\n      \r\n    } else {\r\n      this.browserVersions = [];\r\n    }\r\n  }\r\n\r\n  //Saves the tag as a template\r\n  saveTemplate() {\r\n    this.newTagFG.markAllAsTouched();\r\n    if (this.newTagFG.valid) {\r\n      const dialogRef = this.dialog.open(TemplateNameComponent, {\r\n        width: '300px',\r\n        data: {templateName: this.templateName},\r\n      });\r\n      \r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('dialog closed!');\r\n        \r\n        if(result && result.templateName) {\r\n          this.templateName = result.templateName;\r\n          this.newTagFG.addControl('templateName',new FormControl('', Validators.required));\r\n          this.newTagFG.patchValue({\r\n            templateName: this.templateName,\r\n          });\r\n          this.tagManagementService.addTemplate(this.newTagFG.value).subscribe(res => {\r\n            this.templateData.push({\r\n              value : res._key,\r\n              viewValue:  res.templateName\r\n            });\r\n            this.newTagFG.removeControl('templateName');\r\n            this._snackBarService.info('Added a new template');\r\n            this.newTagFG.reset();\r\n            this.formGroupDirective.resetForm();\r\n            this.url ='https://us.search.yahoo.com/yhs/search?hspart=brandclick&hsimp=yhs-calm&p=flowers';\r\n            this.initialURL = new URL('https://adserver.com/search');\r\n            this.getUrlParams(this.url);\r\n          }, (err) => {\r\n            this.newTagFG.markAllAsTouched();\r\n            this._snackBarService.info(err.error);\r\n          },\r\n          )\r\n        } \r\n      });\r\n    } else {\r\n      this._snackBarService.info('Please fill data!');\r\n    }\r\n    \r\n    \r\n  }\r\n  handleTemplate(event) {\r\n    if(event) {\r\n      this.tagManagementService.getOneTemplate(event).subscribe(response => {\r\n        var browserVal = [];\r\n        var deviceTypeVal = [];\r\n        var versionVal = [];\r\n        var countryVal = [];\r\n        this.url = response['url'];\r\n        this.subids.controls = []\r\n        this.params.controls = []\r\n        this.initialURL = new URL('https://adserver.com/search');\r\n        for(var bval of response['browser'].toString().split(\",\")){\r\n          browserVal.push(bval);\r\n        }\r\n        this.browserVersions = this.versionList;\r\n        for(var dval of response['deviceType'].toString().split(\",\")){\r\n          deviceTypeVal.push(dval)\r\n        }\r\n        for(var vval of response['version'].toString().split(\",\")){\r\n          versionVal.push(vval)\r\n        }\r\n        for(var cval of response['country'].toString().split(\",\")){\r\n          countryVal.push(cval)\r\n        }\r\n        response['subids'].map((item) => {\r\n          this.subids.push(this.fb.group(item));\r\n        });\r\n        response['params'].map((param) => {\r\n          this.params.push(this.fb.group(param));\r\n        });\r\n\r\n        this.newTagFG.reset();\r\n        this.formGroupDirective.resetForm();\r\n        this.newTagFG.setValue({\r\n          name: response['name'],\r\n          company: response['company'],\r\n          advertiser: response['advertiser'],\r\n          publisher: response['publisher'],\r\n          browserStatus: response['browserStatus'],\r\n          browser: browserVal,\r\n          deviceTypeStatus: response['deviceTypeStatus'],\r\n          deviceType: deviceTypeVal,\r\n          countryStatus: response['countryStatus'],\r\n          country: countryVal,\r\n          versionStatus: response['versionStatus'],\r\n          version: versionVal,\r\n          adServerUrl: response['adServerUrl'],\r\n          statType: response['statType'],\r\n          subids: response['subids'],\r\n          rotationType: response['rotationType'],\r\n          url: response['url'],\r\n          params: response['params'],\r\n        });\r\n      });\r\n    }\r\n    \r\n\r\n  }\r\n  //Gets different ways a tag can display stats\r\n  private getStatTypes() {\r\n    return [\r\n      { value: 'rpm', viewValue: 'RPM Based' },\r\n      { value: 'subid', viewValue: 'Sub-ID Based' },\r\n    ];\r\n  }\r\n  handleBrowserStatus(event) {\r\n  }\r\n  handleDeviceTypeStatus(event) {\r\n  }\r\n  handleVersionStatus(event) {\r\n  }\r\n  handleCountryStatus(event) {\r\n  }\r\n  //Gets Country List\r\n  private getCountries() {\r\n    return [\r\n      {value: 'Afghanistan', viewValue: 'Afghanistan'}, \r\n      {value: 'Åland Islands', viewValue: 'Åland Islands'}, \r\n      {value: 'Albania', viewValue: 'Albania'}, \r\n      {value: 'Algeria', viewValue: 'Algeria'}, \r\n      {value: 'American Samoa', viewValue: 'American Samoa'}, \r\n      {value: 'Andorra', viewValue: 'Andorra'}, \r\n      {value: 'Angola', viewValue: 'Angola'}, \r\n      {value: 'Anguilla', viewValue: 'Anguilla'}, \r\n      {value: 'Antarctica', viewValue: 'Antarctica'}, \r\n      {value: 'Antigua and Barbuda', viewValue: 'Antigua and Barbuda'}, \r\n      {value: 'Argentina', viewValue: 'Argentina'}, \r\n      {value: 'Armenia', viewValue: 'Armenia'}, \r\n      {value: 'Aruba', viewValue: 'Aruba'}, \r\n      {value: 'Australia', viewValue: 'Australia'}, \r\n      {value: 'Austria', viewValue: 'Austria'}, \r\n      {value: 'Azerbaijan', viewValue: 'Azerbaijan'}, \r\n      {value: 'Bahamas', viewValue: 'Bahamas'}, \r\n      {value: 'Bahrain', viewValue: 'Bahrain'}, \r\n      {value: 'Bangladesh', viewValue: 'Bangladesh'}, \r\n      {value: 'Barbados', viewValue: 'Barbados'}, \r\n      {value: 'Belarus', viewValue: 'Belarus'}, \r\n      {value: 'Belgium', viewValue: 'Belgium'}, \r\n      {value: 'Belize', viewValue: 'Belize'}, \r\n      {value: 'Benin', viewValue: 'Benin'}, \r\n      {value: 'Bermuda', viewValue: 'Bermuda'}, \r\n      {value: 'Bhutan', viewValue: 'Bhutan'}, \r\n      {value: 'Bolivia', viewValue: 'Bolivia'}, \r\n      {value: 'Bosnia and Herzegovina', viewValue: 'Bosnia and Herzegovina'}, \r\n      {value: 'Botswana', viewValue: 'Botswana'}, \r\n      {value: 'Bouvet Island', viewValue: 'Bouvet Island'}, \r\n      {value: 'Brazil', viewValue: 'Brazil'}, \r\n      {value: 'British Indian Ocean Territory', viewValue: 'British Indian Ocean Territory'}, \r\n      {value: 'Brunei Darussalam', viewValue: 'Brunei Darussala'}, \r\n      {value: 'Bulgaria', viewValue: 'Bulgaria'}, \r\n      {value: 'Burkina Faso', viewValue: 'Burkina Faso'}, \r\n      {value: 'Burundi', viewValue: 'Burundi'}, \r\n      {value: 'Cambodia', viewValue: 'Cambodia'}, \r\n      {value: 'Cameroon', viewValue: 'Cameroon'}, \r\n      {value: 'Canada', viewValue: 'Canada'}, \r\n      {value: 'Cape Verde', viewValue: 'Cape Verde'}, \r\n      {value: 'Cayman Islands', viewValue: 'Cayman Islands'}, \r\n      {value: 'Central African Republic', viewValue: 'Central African Republic'}, \r\n      {value: 'Chad', viewValue: 'Chad'}, \r\n      {value: 'Chile', viewValue: 'Chile'}, \r\n      {value: 'China', viewValue: 'China'}, \r\n      {value: 'Christmas Island', viewValue: 'Christmas Island'}, \r\n      {value: 'Cocos (Keeling) Islands', viewValue: 'Cocos (Keeling) Islands'}, \r\n      {value: 'Colombia', viewValue: 'Colombia'}, \r\n      {value: 'Comoros', viewValue: 'Comoros'}, \r\n      {value: 'Congo', viewValue: 'Congo'}, \r\n      {value: 'Congo, The Democratic Republic of the', viewValue: 'Congo, The Democratic Republic of the'}, \r\n      {value: 'Cook Islands', viewValue: 'Cook Islands'}, \r\n      {value: 'Costa Rica', viewValue: 'Costa Rica'}, \r\n      {value: 'Cote D\\'Ivoire', viewValue: 'Cote D\\'Ivoire'}, \r\n      {value: 'Croatia', viewValue: 'Croatia'}, \r\n      {value: 'Cuba', viewValue: 'Cuba'}, \r\n      {value: 'Cyprus', viewValue: 'Cyprus'}, \r\n      {value: 'Czech Republic', viewValue: 'Czech Republic'}, \r\n      {value: 'Denmark', viewValue: 'Denmark'}, \r\n      {value: 'Djibouti', viewValue: 'Djibouti'}, \r\n      {value: 'Dominica', viewValue: 'Dominica'}, \r\n      {value: 'Dominican Republic', viewValue: 'Dominican Republic'}, \r\n      {value: 'Ecuador', viewValue: 'Ecuador'}, \r\n      {value: 'Egypt', viewValue: 'Egypt'}, \r\n      {value: 'El Salvador', viewValue: 'El Salvador'}, \r\n      {value: 'Equatorial Guinea', viewValue: 'Equatorial Guinea'}, \r\n      {value: 'Eritrea', viewValue: 'Eritrea'}, \r\n      {value: 'Estonia', viewValue: 'Estonia'}, \r\n      {value: 'Ethiopia', viewValue: 'Ethiopia'}, \r\n      {value: 'Falkland Islands (Malvinas)', viewValue: 'Falkland Islands (Malvinas)'}, \r\n      {value: 'Faroe Islands', viewValue: 'Faroe Islands'}, \r\n      {value: 'Fiji', viewValue: 'Fiji'}, \r\n      {value: 'Finland', viewValue: 'Finland'}, \r\n      {value: 'France', viewValue: 'France'}, \r\n      {value: 'French Guiana', viewValue: 'French Guiana'}, \r\n      {value: 'French Polynesia', viewValue: 'French Polynesia'}, \r\n      {value: 'French Southern Territories', viewValue: 'French Southern Territories'}, \r\n      {value: 'Gabon', viewValue: 'Gabon'}, \r\n      {value: 'Gambia', viewValue: 'Gambia'}, \r\n      {value: 'Georgia', viewValue: 'Georgia'}, \r\n      {value: 'Germany', viewValue: 'Germany'}, \r\n      {value: 'Ghana', viewValue: 'Ghana'}, \r\n      {value: 'Gibraltar', viewValue: 'Gibraltar'}, \r\n      {value: 'Greece', viewValue: 'Greece'}, \r\n      {value: 'Greenland', viewValue: 'Greenland'}, \r\n      {value: 'Grenada', viewValue: 'Grenada'}, \r\n      {value: 'Guadeloupe', viewValue: 'Guadeloupe'}, \r\n      {value: 'Guam', viewValue: 'Guam'}, \r\n      {value: 'Guatemala', viewValue: 'Guatemala'}, \r\n      {value: 'Guernsey', viewValue: 'Guernsey'}, \r\n      {value: 'Guinea', viewValue: 'Guinea'}, \r\n      {value: 'Guinea-Bissau', viewValue: 'Guinea-Bissau'}, \r\n      {value: 'Guyana', viewValue: 'Guyana'}, \r\n      {value: 'Haiti', viewValue: 'Haiti'}, \r\n      {value: 'Heard Island and Mcdonald Islands', viewValue: 'Heard Island and Mcdonald Islands'}, \r\n      {value: 'Holy See (Vatican City State)', viewValue: 'Holy See (Vatican City State)'}, \r\n      {value: 'Honduras', viewValue: 'Honduras'}, \r\n      {value: 'Hong Kong', viewValue: 'Hong Kong'}, \r\n      {value: 'Hungary', viewValue: 'Hungary'}, \r\n      {value: 'Iceland', viewValue: 'Iceland'}, \r\n      {value: 'India', viewValue: 'India'}, \r\n      {value: 'Indonesia', viewValue: 'Indonesia'}, \r\n      {value: 'Iran, Islamic Republic Of', viewValue: 'Iran, Islamic Republic Of'}, \r\n      {value: 'Iraq', viewValue: 'Iraq'}, \r\n      {value: 'Ireland', viewValue: 'Ireland'}, \r\n      {value: 'Isle of Man', viewValue: 'Isle of Man'}, \r\n      {value: 'Israel', viewValue: 'Israel'}, \r\n      {value: 'Italy', viewValue: 'Italy'}, \r\n      {value: 'Jamaica', viewValue: 'Jamaica'}, \r\n      {value: 'Japan', viewValue: 'Japan'}, \r\n      {value: 'Jersey', viewValue: 'Jersey'}, \r\n      {value: 'Jordan', viewValue: 'Jordan'}, \r\n      {value: 'Kazakhstan', viewValue: 'Kazakhstan'}, \r\n      {value: 'Kenya', viewValue: 'Kenya'}, \r\n      {value: 'Kiribati', viewValue: 'Kiribati'}, \r\n      {value: 'Korea, Democratic People\\'S Republic of', viewValue: 'Korea, Democratic People\\'S Republic o'}, \r\n      {value: 'Korea, Republic of', viewValue: 'Korea, Republic of'}, \r\n      {value: 'Kuwait', viewValue: 'Kuwait'}, \r\n      {value: 'Kyrgyzstan', viewValue: 'Kyrgyzstan'}, \r\n      {value: 'Lao People\\'S Democratic Republic', viewValue: 'Lao People\\'S Democratic Republic'}, \r\n      {value: 'Latvia', viewValue: 'Latvia'}, \r\n      {value: 'Lebanon', viewValue: 'Lebanon'}, \r\n      {value: 'Lesotho', viewValue: 'Lesotho'}, \r\n      {value: 'Liberia', viewValue: 'Liberia'}, \r\n      {value: 'Libyan Arab Jamahiriya', viewValue: 'Libyan Arab Jamahiriya'}, \r\n      {value: 'Liechtenstein', viewValue: 'Liechtenstein'}, \r\n      {value: 'Lithuania', viewValue: 'Lithuania'}, \r\n      {value: 'Luxembourg', viewValue: 'Luxembourg'}, \r\n      {value: 'Macao', viewValue: 'Macao'}, \r\n      {value: 'Macedonia, The Former Yugoslav Republic of', viewValue: 'Macedonia, The Former Yugoslav Republic of'}, \r\n      {value: 'Madagascar', viewValue: 'Madagascar'}, \r\n      {value: 'Malawi', viewValue: 'Malawi'}, \r\n      {value: 'Malaysia', viewValue: 'Malaysia'}, \r\n      {value: 'Maldives', viewValue: 'Maldives'}, \r\n      {value: 'Mali', viewValue: 'Mali'}, \r\n      {value: 'Malta', viewValue: 'Malta'}, \r\n      {value: 'Marshall Islands', viewValue: 'Marshall Islands'}, \r\n      {value: 'Martinique', viewValue: 'Martinique'}, \r\n      {value: 'Mauritania', viewValue: 'Mauritania'}, \r\n      {value: 'Mauritius', viewValue: 'Mauritius'}, \r\n      {value: 'Mayotte', viewValue: 'Mayotte'}, \r\n      {value: 'Mexico', viewValue: 'Mexico'}, \r\n      {value: 'Micronesia, Federated States of', viewValue: 'Micronesia, Federated States of'}, \r\n      {value: 'Moldova, Republic of', viewValue: 'Moldova, Republic of'}, \r\n      {value: 'Monaco', viewValue: 'Monaco'}, \r\n      {value: 'Mongolia', viewValue: 'Mongolia'}, \r\n      {value: 'Montserrat', viewValue: 'Montserrat'}, \r\n      {value: 'Morocco', viewValue: 'Morocco'}, \r\n      {value: 'Mozambique', viewValue: 'Mozambique'}, \r\n      {value: 'Myanmar', viewValue: 'Myanmar'}, \r\n      {value: 'Namibia', viewValue: 'Namibia'}, \r\n      {value: 'Nauru', viewValue: 'Nauru'}, \r\n      {value: 'Nepal', viewValue: 'Nepal'}, \r\n      {value: 'Netherlands', viewValue: 'Netherlands'}, \r\n      {value: 'Netherlands Antilles', viewValue: 'Netherlands Antilles'}, \r\n      {value: 'New Caledonia', viewValue: 'New Caledonia'}, \r\n      {value: 'New Zealand', viewValue: 'New Zealand'}, \r\n      {value: 'Nicaragua', viewValue: 'Nicaragua'}, \r\n      {value: 'Niger', viewValue: 'Niger'}, \r\n      {value: 'Nigeria', viewValue: 'Nigeria'}, \r\n      {value: 'Niue', viewValue: 'Niue'}, \r\n      {value: 'Norfolk Island', viewValue: 'Norfolk Island'}, \r\n      {value: 'Northern Mariana Islands', viewValue: 'Northern Mariana Islands'}, \r\n      {value: 'Norway', viewValue: 'Norway'}, \r\n      {value: 'Oman', viewValue: 'Oman'}, \r\n      {value: 'Pakistan', viewValue: 'Pakistan'}, \r\n      {value: 'Palau', viewValue: 'Palau'}, \r\n      {value: 'Palestinian Territory, Occupied', viewValue: 'Palestinian Territory, Occupied'}, \r\n      {value: 'Panama', viewValue: 'Panama'}, \r\n      {value: 'Papua New Guinea', viewValue: 'Papua New Guinea'}, \r\n      {value: 'Paraguay', viewValue: 'Paraguay'}, \r\n      {value: 'Peru', viewValue: 'Peru'}, \r\n      {value: 'Philippines', viewValue: 'Philippines'}, \r\n      {value: 'Pitcairn', viewValue: 'Pitcairn'}, \r\n      {value: 'Poland', viewValue: 'Poland'}, \r\n      {value: 'Portugal', viewValue: 'Portugal'}, \r\n      {value: 'Puerto Rico', viewValue: 'Puerto Rico'}, \r\n      {value: 'Qatar', viewValue: 'Qatar'}, \r\n      {value: 'Reunion', viewValue: 'Reunion'}, \r\n      {value: 'Romania', viewValue: 'Romania'}, \r\n      {value: 'Russian Federation', viewValue: 'Russian Federatio'}, \r\n      {value: 'RWANDA', viewValue: 'RWANDA'}, \r\n      {value: 'Saint Helena', viewValue: 'Saint Helena'}, \r\n      {value: 'Saint Kitts and Nevis', viewValue: 'Saint Kitts and Nevis'}, \r\n      {value: 'Saint Lucia', viewValue: 'Saint Lucia'}, \r\n      {value: 'Saint Pierre and Miquelon', viewValue: 'Saint Pierre and Miquelon'}, \r\n      {value: 'Saint Vincent and the Grenadines', viewValue: 'Saint Vincent and the Grenadines'}, \r\n      {value: 'Samoa', viewValue: 'Samoa'}, \r\n      {value: 'San Marino', viewValue: 'San Marino'}, \r\n      {value: 'Sao Tome and Principe', viewValue: 'Sao Tome and Principe'}, \r\n      {value: 'Saudi Arabia', viewValue: 'Saudi Arabia'}, \r\n      {value: 'Senegal', viewValue: 'Senegal'}, \r\n      {value: 'Serbia and Montenegro', viewValue: 'Serbia and Montenegro'}, \r\n      {value: 'Seychelles', viewValue: 'Seychelles'}, \r\n      {value: 'Sierra Leone', viewValue: 'Sierra Leone'}, \r\n      {value: 'Singapore', viewValue: 'Singapore'}, \r\n      {value: 'Slovakia', viewValue: 'Slovakia'}, \r\n      {value: 'Slovenia', viewValue: 'Slovenia'}, \r\n      {value: 'Solomon Islands', viewValue: 'Solomon Islands'}, \r\n      {value: 'Somalia', viewValue: 'Somalia'}, \r\n      {value: 'South Africa', viewValue: 'South Africa'}, \r\n      {value: 'South Georgia and the South Sandwich Islands', viewValue: 'South Georgia and the South Sandwich Isla'}, \r\n      {value: 'Spain', viewValue: 'Spain'}, \r\n      {value: 'Sri Lanka', viewValue: 'Sri Lanka'}, \r\n      {value: 'Sudan', viewValue: 'Sudan'}, \r\n      {value: 'Surivalue', viewValue: 'Surivalue'}, \r\n      {value: 'Svalbard and Jan Mayen', viewValue: 'Svalbard and Jan Mayen'}, \r\n      {value: 'Swaziland', viewValue: 'Swaziland'}, \r\n      {value: 'Sweden', viewValue: 'Sweden'}, \r\n      {value: 'Switzerland', viewValue: 'Switzerland'}, \r\n      {value: 'Syrian Arab Republic', viewValue: 'Syrian Arab Republic'}, \r\n      {value: 'Taiwan, Province of China', viewValue: 'Taiwan, Province of China'}, \r\n      {value: 'Tajikistan', viewValue: 'Tajikistan'}, \r\n      {value: 'Tanzania, United Republic of', viewValue: 'Tanzania, United Republic of'}, \r\n      {value: 'Thailand', viewValue: 'Thailand'}, \r\n      {value: 'Timor-Leste', viewValue: 'Timor-Leste'}, \r\n      {value: 'Togo', viewValue: 'Togo'}, \r\n      {value: 'Tokelau', viewValue: 'Tokelau'}, \r\n      {value: 'Tonga', viewValue: 'Tonga'}, \r\n      {value: 'TrinviewValuead and Tobago', viewValue: 'TrinviewValuead and Tobago'}, \r\n      {value: 'Tunisia', viewValue: 'Tunisia'}, \r\n      {value: 'Turkey', viewValue: 'Turkey'}, \r\n      {value: 'Turkmenistan', viewValue: 'Turkmenistan'}, \r\n      {value: 'Turks and Caicos Islands', viewValue: 'Turks and Caicos Islands'}, \r\n      {value: 'Tuvalu', viewValue: 'Tuvalu'}, \r\n      {value: 'Uganda', viewValue: 'Uganda'}, \r\n      {value: 'Ukraine', viewValue: 'Ukraine'}, \r\n      {value: 'United Arab Emirates', viewValue: 'United Arab Emirates'}, \r\n      {value: 'United Kingdom', viewValue: 'United Kingdom'}, \r\n      {value: 'United States', viewValue: 'United States'}, \r\n      {value: 'United States Minor Outlying Islands', viewValue: 'United States Minor Outlying Islands'}, \r\n      {value: 'Uruguay', viewValue: 'Uruguay'}, \r\n      {value: 'Uzbekistan', viewValue: 'Uzbekistan'}, \r\n      {value: 'Vanuatu', viewValue: 'Vanuatu'}, \r\n      {value: 'Venezuela', viewValue: 'Venezuela'}, \r\n      {value: 'Viet Nam', viewValue: 'Viet Nam'}, \r\n      {value: 'Virgin Islands, British', viewValue: 'Virgin Islands, British'}, \r\n      {value: 'Virgin Islands, U.S.', viewValue: 'Virgin Islands, U.S.'}, \r\n      {value: 'Wallis and Futuna', viewValue: 'Wallis and Futuna'}, \r\n      {value: 'Western Sahara', viewValue: 'Western Sahara'}, \r\n      {value: 'Yemen', viewValue: 'Yemen'}, \r\n      {value: 'Zambia', viewValue: 'Zambia'}, \r\n      {value: 'Zimbabwe', viewValue: 'Zimbabwe'} \r\n    ]\r\n  }\r\n  //Gets Browser Versions\r\n  private getVersions() {\r\n    this.edgeVersions = [\r\n      {value: \"Edge - 102.0.1245.7\", viewValue: \"Edge - 102.0.1245.7\"},\r\n      {value: \"Edge - 101.0.1210.10\", viewValue: \"Edge - 101.0.1210.10\"},\r\n      {value: \"Edge - 100.0.1185.10\", viewValue: \"Edge - 100.0.1185.10\"},\r\n      {value: \"Edge - 99.0.1150.11\", viewValue: \"Edge - 99.0.1150.11\"},\r\n      {value: \"Edge - 98.0.1108.23\", viewValue: \"Edge - 98.0.1108.23\"},\r\n      {value: \"Edge - 97.0.1072.21\", viewValue: \"Edge - 97.0.1072.21\"},\r\n      {value: \"Edge - 96.0.1054.8\", viewValue: \"Edge - 96.0.1054.8\"},\r\n      {value: \"Edge - 95.0.1020.9\", viewValue: \"Edge - 95.0.1020.9\"},\r\n      {value: \"Edge - 94.0.992.9\", viewValue: \"Edge - 94.0.992.9\"},\r\n      {value: \"Edge - 93.0.961.11\", viewValue: \"Edge - 93.0.961.11\"},\r\n      {value: \"Edge - 92.0.902.9\", viewValue: \"Edge - 92.0.902.9\"},\r\n      {value: \"Edge - 91.0.864.11\", viewValue: \"Edge - 91.0.864.11\"},\r\n      {value: \"Edge - 90.0.818.8\", viewValue: \"Edge - 90.0.818.8\"},\r\n      {value: \"Edge - 89.0.774.18\", viewValue: \"Edge - 89.0.774.18\"},\r\n      {value: \"Edge - 88.0.705.18\", viewValue: \"Edge - 88.0.705.18\"},\r\n    ];\r\n    this.operaVersions = [\r\n      {value: \"Opera - 12.15\", viewValue: \"Opera - 12.15\"},\r\n      {value: \"Opera - 12.14\", viewValue: \"Opera - 12.14\"},\r\n      {value: \"Opera - 12.13\", viewValue: \"Opera - 12.13\"},\r\n      {value: \"Opera - 12.12\", viewValue: \"Opera - 12.12\"},\r\n      {value: \"Opera - 12.11\", viewValue: \"Opera - 12.11\"},\r\n      {value: \"Opera - 12.10\", viewValue: \"Opera - 12.10\"},\r\n      {value: \"Opera - 12.10b\", viewValue: \"Opera - 12.10b\"},\r\n      {value: \"Opera - 12.02\",  viewValue: \"Opera - 12.02\"},\r\n      {value: \"Opera - 12.01\",  viewValue: \"Opera - 12.01\"},\r\n      {value: \"Opera - 12.00\",  viewValue: \"Opera - 12.00\"},\r\n      {value: \"Opera - 12.00b\", viewValue: \"Opera - 12.00b\"},\r\n      {value: \"Opera - 12.00a\", viewValue: \"Opera - 12.00a\"},\r\n      {value: \"Opera - 11.64\",  viewValue: \"Opera - 11.64\"},\r\n      {value: \"Opera - 11.62\", viewValue: \"Opera - 11.62\"},\r\n      {value: \"Opera - 11.61\", viewValue: \"Opera - 11.61\"},\r\n      {value: \"Opera - 11.60\", viewValue: \"Opera - 11.60\"},\r\n      {value: \"Opera - 11.60b\", viewValue: \"Opera - 11.60b\"},\r\n      {value: \"Opera - 11.52\", viewValue: \"Opera - 11.52\"},\r\n      {value: \"Opera - 11.51\", viewValue: \"Opera - 11.51\"},\r\n      {value: \"Opera - 11.50\", viewValue: \"Opera - 11.50\"},\r\n    ];\r\n    this.internetExplorers = [\r\n      {value: \"Internet Explorer - 11.0.220\", viewValue: \"Internet Explorer - 11.0.220\"},\r\n      {value: \"Internet Explorer - 9.0.195\", viewValue: \"Internet Explorer - 9.0.195\"},\r\n      {value: \"Internet Explorer - 8.0.6001.18702\", viewValue: \"Internet Explorer - 8.0.6001.18702\"},\r\n      {value: \"Internet Explorer - 6.0 SP1\", viewValue: \"Internet Explorer - 6.0 SP1\"},\r\n      {value: \"Internet Explorer - 5.5 SP2\", viewValue: \"Internet Explorer - 5.5 SP2\"},\r\n      {value: \"Internet Explorer - 5.01 SP2\", viewValue: \"Internet Explorer - 5.01 SP2\"},\r\n      {value: \"Internet Explorer - 5.2.3\", viewValue: \"Internet Explorer - 5.2.3\"},\r\n      {value: \"Internet Explorer - 5.1.7\", viewValue: \"Internet Explorer - 5.1.7\"},\r\n      {value: \"Internet Explorer - 4.0.1\", viewValue: \"Internet Explorer - 4.0.1\"},\r\n      {value: \"Internet Explorer - 2.0.1\", viewValue: \"Internet Explorer - 2.0.1\"},\r\n    ]\r\n    this.versionList.push(\r\n      {value: \"Any\", viewValue: \"Any\"}\r\n    );\r\n    //Chrome Version List Get\r\n    this.tagManagementService.getChromeBrowserVersion().subscribe((res: any) => {\r\n      let versionsChromeData = res.slice(0, 30);\r\n      versionsChromeData.map((version: { version: string; }) => {\r\n        this.versionList.push(\r\n            {\r\n                value: \"Chrome - \" + version.version,\r\n                viewValue: \"Chrome - \" + version.version\r\n            }\r\n        )\r\n      });    \r\n    }); \r\n    this.edgeVersions.map((edge: any) => {\r\n      this.versionList.push(edge);\r\n    });\r\n\r\n    //FireFox Version List Get\r\n    this.tagManagementService.getFirefoxBrowserVersion().subscribe(res => {\r\n      var firefoxList = [];\r\n      for(var i in res){\r\n        firefoxList.push(\r\n            {\r\n                value: \"Firefox - \" + i,\r\n                viewValue: \"Firefox - \" + i\r\n            }\r\n        )\r\n      }\r\n      firefoxList.slice(firefoxList['length'] - 30, firefoxList['length']).map((version: { version: string; }) => {\r\n        this.versionList.push(\r\n            {\r\n                value: version['value'],\r\n                viewValue: version['viewValue']\r\n            }\r\n        )\r\n      });\r\n    });  \r\n    \r\n    \r\n    this.internetExplorers.map((internet: any) => {\r\n      this.versionList.push(internet);\r\n    });\r\n    this.operaVersions.map((opera: any) => {\r\n      this.versionList.push(opera);\r\n    });\r\n\r\n    return this.versionList;\r\n  }\r\n  //Gets different ways a tag can display stats\r\n  private getRotationTypes() {\r\n    return [\r\n      { value: 'roundRobin', viewValue: 'Round Robin' },\r\n      { value: 'percentage', viewValue: 'Percentage' },\r\n    ];\r\n  }\r\n\r\n  private getParamTypes() {\r\n    return [\r\n      { value: 'static', viewValue: 'Static' },\r\n      { value: 'dynamic', viewValue: 'Dynamic' },\r\n    ];\r\n  }\r\n}\r\n","<div class=\"container\" *ngIf=\"!hidden\">\r\n<div class=\"row\">\r\n  <div class=\"col-xl-2\">\r\n    <mat-form-field>\r\n      <mat-label>Template</mat-label>\r\n      <mat-select matNativeControl (selectionChange)=\"handleTemplate($event.value)\" placeholder=\"Select Template\">\r\n        <mat-option\r\n          *ngFor=\"let templateItem of templateData\"\r\n          [value]=\"templateItem.value\"\r\n        >\r\n          {{ templateItem.viewValue }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n</div>\r\n\r\n<form class=\"example-container\" id=\"newTagForm\" [formGroup]=\"newTagFG\" (ngSubmit)=\"saveTag()\" #formGroupDirective=\"ngForm\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Create New Tag</h3>\r\n          </div>\r\n          {{ newTagFG.value | json }}\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <mat-form-field>\r\n            <input\r\n              matInput\r\n              formControlName=\"name\"\r\n              placeholder=\"Name\"\r\n            />\r\n            <mat-error *ngIf=\"newTagFG.get('name').errors?.required\"\r\n              >Name is required.\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-4\">\r\n              <mat-form-field>\r\n                <mat-label>Advertiser</mat-label>\r\n                <mat-select matNativeControl formControlName=\"advertiser\">\r\n                  <mat-option\r\n                    *ngFor=\"let advertiserItem of advertiserList\"\r\n                    [value]=\"advertiserItem.value\"\r\n                  >\r\n                    {{ advertiserItem.viewValue }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-xl-4\">\r\n              <mat-form-field>\r\n                <mat-label>Publisher</mat-label>\r\n                <mat-select matNativeControl formControlName=\"publisher\">\r\n                  <mat-option\r\n                    *ngFor=\"let publisherItem of publisherList\"\r\n                    [value]=\"publisherItem.value\"\r\n                  >\r\n                    {{ publisherItem.viewValue }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-xl-4\">\r\n              <mat-form-field>\r\n                <mat-label>Company</mat-label>\r\n                <mat-select formControlName=\"company\" [(ngModel)]=\"companySelected\" [disabled]=\"true\">\r\n                  <mat-option\r\n                    *ngFor=\"let comItem of companyList\"\r\n                    [value]=\"comItem.value\"\r\n                  >\r\n                    {{ comItem.viewValue }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"row\">\r\n            <div class=\"col-xl-3\">\r\n              <mat-form-field>\r\n                <mat-label>Browsers Status</mat-label>\r\n                <mat-select matNativeControl (selectionChange)=\"handleBrowserStatus($event)\" [(ngModel)]=\"selectBrowserStatus\" formControlName=\"browserStatus\">\r\n                  <mat-option value=\"true\">Allowed</mat-option>\r\n                  <mat-option value=\"false\">Not Allowed</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-xl-9\">\r\n              <mat-form-field>\r\n                <mat-label>Browsers</mat-label>\r\n                <mat-select matNativeControl (selectionChange)=\"getBrowers($event)\" formControlName=\"browser\" multiple>\r\n                  <mat-option value=\"Any\">Any</mat-option>\r\n                  <mat-option value=\"Chrome\">Chrome</mat-option>\r\n                  <mat-option value=\"Firefox\">Firefox</mat-option>\r\n                  <mat-option value=\"Edge\">Edge</mat-option>\r\n                  <mat-option value=\"Internet Explorer\">Internet Explorer</mat-option>\r\n                  <mat-option value=\"Opera\">Opera</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-3\">\r\n              <mat-form-field>\r\n                <mat-label>Device Type Status</mat-label>\r\n                <mat-select matNativeControl (selectionChange)=\"handleDeviceTypeStatus($event)\" [(ngModel)]=\"selectDeviceTypeStatus\" formControlName=\"deviceTypeStatus\">\r\n                  <mat-option value=\"true\">Allowed</mat-option>\r\n                  <mat-option value=\"false\">Not Allowed</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-xl-9\">\r\n              <mat-form-field>\r\n                <mat-label>Device Type</mat-label>\r\n                <mat-select matNativeControl formControlName=\"deviceType\" multiple>\r\n                  <mat-option value=\"Any\">Any</mat-option>\r\n                  <mat-option value=\"Desktop\">Desktop</mat-option>\r\n                  <mat-option value=\"Mobile\">Mobile</mat-option>              \r\n                  <mat-option value=\"Tablet\">Tablet</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-3\">\r\n              <mat-form-field>\r\n                <mat-label>Browser Version Status</mat-label>\r\n                <mat-select matNativeControl (selectionChange)=\"handleVersionStatus($event)\" [(ngModel)]=\"selectVersionStatus\" formControlName=\"versionStatus\">\r\n                  <mat-option value=\"true\">Allowed</mat-option>\r\n                  <mat-option value=\"false\">Not Allowed</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-xl-9\">\r\n              <mat-form-field>\r\n                <mat-label>Browser Version</mat-label>\r\n                <mat-select matNativeControl formControlName=\"version\" multiple>\r\n                  <mat-option\r\n                    *ngFor=\"let browserVersion of browserVersions\"\r\n                    [value]=\"browserVersion.value\"\r\n                  >\r\n                    {{ browserVersion.viewValue }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-3\">\r\n              <mat-form-field>\r\n                <mat-label>Country Status</mat-label>\r\n                <mat-select matNativeControl (selectionChange)=\"handleCountryStatus($event)\" [(ngModel)]=\"selectCountryStatus\" formControlName=\"countryStatus\">\r\n                  <mat-option value=\"true\">Allowed</mat-option>\r\n                  <mat-option value=\"false\">Not Allowed</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-xl-9\">\r\n              <mat-form-field>\r\n                <mat-label>Country Allowed</mat-label>\r\n                <mat-select matNativeControl formControlName=\"country\" multiple>\r\n                  <mat-option value=\"Any\">Any</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let country of countries\"\r\n                    [value]=\"country.value\"\r\n                  >\r\n                    {{ country.viewValue }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          \r\n          <mat-form-field>\r\n            <mat-label>Ad Server URL</mat-label>\r\n            <mat-select formControlName=\"adServerUrl\">\r\n              <mat-option\r\n                *ngFor=\"let serverUrl of adServerUrlList\"\r\n                [value]=\"serverUrl.value\"\r\n              >\r\n                {{ serverUrl.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-6\">\r\n              <mat-form-field>\r\n                <mat-label>Stat Type</mat-label>\r\n                <mat-select formControlName=\"statType\">\r\n                  <mat-option\r\n                    *ngFor=\"let statType of statTypes\"\r\n                    [value]=\"statType.value\"\r\n                  >\r\n                    {{ statType.viewValue }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-xl-6\">\r\n              <mat-form-field>\r\n                <mat-label>Rotation Type</mat-label>\r\n                <mat-select formControlName=\"rotationType\">\r\n                  <mat-option\r\n                    *ngFor=\"let rotationType of rotationTypes\"\r\n                    [value]=\"rotationType.value\"\r\n                  >\r\n                    {{ rotationType.viewValue }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Tag URLs</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <!-- URL INPUT START -->\r\n          <mat-form-field>\r\n            <input\r\n              matInput\r\n              [(ngModel)]=\"url\"\r\n              formControlName=\"url\"\r\n              placeholder=\"Final URL\"\r\n              (ngModelChange)=\"getUrlParams($event)\"\r\n            />\r\n            <mat-error *ngIf=\"newTagFG.get('url').errors?.required\"\r\n              >Final URL is required.\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <!-- URL INPUT END -->\r\n\r\n          <!-- FORM ARRAY PARAMS START -->\r\n          <ng-container formArrayName=\"params\">\r\n            <div *ngFor=\"let p of params.controls; index as i\">\r\n              <div class=\"params\" [formGroup]=\"p\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"key\"\r\n                    placeholder=\"Final Key\"\r\n                  />\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"value\"\r\n                    placeholder=\"Final Value\"\r\n                  />\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                  <mat-label>Param Type</mat-label>\r\n                  <mat-select\r\n                    formControlName=\"paramType\"\r\n                    (selectionChange)=\"updateInitialParams($event, i)\"\r\n                  >\r\n                    <mat-option\r\n                      *ngFor=\"let paramType of paramTypes\"\r\n                      [value]=\"paramType.value\"\r\n                    >\r\n                      {{ paramType.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"initialParam\"\r\n                    placeholder=\"Inital Value\"\r\n                    (keyup)=\"updateInitialParamURL($event, i)\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <p>Inital URL: <br />{{ decodeURL(initialURL) }}</p>\r\n          </ng-container>\r\n          <!-- FORM ARRAY PARAMS END -->\r\n        </div>\r\n      </div>\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n          <div class=\"card-header\">\r\n            <div class=\"card-title\">\r\n              <h3 class=\"card-label\">SubIds</h3>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"row pb-4\">\r\n              <div class=\"col-md-3\">\r\n                <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"addSubid($event)\">\r\n                  Add\r\n                </button>\r\n              </div>           \r\n            </div>\r\n            <div formArrayName=\"subids\">\r\n              <div class=\"row\" *ngFor=\"let subItem of subids.controls; let i=index\" [formGroupName]=\"i\">\r\n                <div class=\"col-xl-3\">\r\n                  <mat-form-field>\r\n                    <mat-label>Filter Tag</mat-label>\r\n                    <mat-select matNativeControl formControlName=\"filterTag\">\r\n                      <mat-option value=\"StartsWith\">Starts With</mat-option>\r\n                      <mat-option value=\"EndsWith\">Ends With</mat-option>\r\n                      <mat-option value=\"Contains\">Contains</mat-option>              \r\n                      <mat-option value=\"ExactValue\">Exact Value</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"subItem.get('filterTag').errors?.required\">\r\n                      Filter Tag is required.\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-4\">\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Subid(Numeric Range: example 1-10 input)\" formControlName=\"subid\" />\r\n                    <mat-error *ngIf=\"subItem.get('subid').errors?.required\">\r\n                      Subid is required.\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-2\">\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Limit\" formControlName=\"limit\" />\r\n                    <mat-error *ngIf=\"subItem.get('limit').errors?.required\">\r\n                      Limit is required.\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-2\">\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Split\" formControlName=\"split\" />\r\n                    <mat-error *ngIf=\"subItem.get('split').errors?.required\">\r\n                      Split is required.\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                \r\n                <div class=\"col-xl-1\">\r\n                  \r\n                  <a title=\"Delete Tag\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\" (click)=\"removeSubid(i)\">\r\n                    <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"false\"\r\n                      class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n                    </span>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- SAVING TAG -->\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <button mat-raised-button color=\"primary\" type=\"submit\">Save</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <button \r\n        type=\"submit\"\r\n        form=\"newTagForm\"\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        type=\"button\"\r\n        (click)=\"saveTemplate()\"\r\n      >\r\n        Save as Template\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n</div>\r\n<!-- begin:: Error -->\r\n<div\r\n*ngIf=\"hidden\"\r\n  class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\"\r\n  style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\"\r\n>\r\n  <!--begin::Content-->\r\n  <div\r\n    class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\"\r\n  >\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NewTagComponent } from './new-tag/new-tag.component';\r\nimport { EditTagComponent } from './edit-tag/edit-tag.component';\r\nimport { TagsComponent } from './tags/tags.component';\r\nimport { TagManagementComponent } from './tag-management.component';\r\nimport { TemplateComponent } from './template/template.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TagManagementComponent,\r\n    children: [\r\n      {\r\n        path: 'tags',\r\n        component: TagsComponent\r\n      },\r\n      {\r\n        path: 'templates',\r\n        component: TemplateComponent\r\n      },\r\n      {\r\n        path: 'new',\r\n        component: NewTagComponent\r\n      },\r\n      {\r\n        path: 'edit/:id',\r\n        component: EditTagComponent,\r\n        pathMatch: 'full'\r\n      },\r\n      { path: '', redirectTo: '', pathMatch: 'full' },\r\n      { path: '**', redirectTo: '', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TagManagementRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tag-management',\r\n  templateUrl: './tag-management.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class TagManagementComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TagManagementRoutingModule } from './tag-management-routing.module';\r\nimport { TagManagementComponent } from './tag-management.component';\r\nimport { NewTagComponent } from './new-tag/new-tag.component';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TagsComponent } from './tags/tags.component';\r\nimport { EditTagComponent } from './edit-tag/edit-tag.component';\r\nimport { TemplateNameComponent } from './template-name/template-name.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { TemplateComponent } from './template/template.component';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\n\r\n@NgModule({\r\n  declarations: [TagManagementComponent, NewTagComponent, TagsComponent, EditTagComponent, TemplateNameComponent, TemplateComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TagManagementRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    NgxDatatableModule,\r\n    MatDialogModule,\r\n    InlineSVGModule,\r\n  ],\r\n  providers: [SnackbarService],\r\n  entryComponents: [NewTagComponent],\r\n})\r\nexport class TagManagementModule {}\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TagManagementService } from '../tag-management.service';\r\nimport { TagInterface } from 'src/app/shared/models/tag.interface';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { UsersService } from 'src/app/shared/service/users.service';\r\nimport { NotificationService } from 'src/app/shared/service/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-tags',\r\n  templateUrl: './tags.component.html',\r\n  styleUrls: ['./tags.component.scss']\r\n})\r\nexport class TagsComponent implements OnInit {\r\n  loadingIndicator = true;\r\n  rows: Array<TagInterface>;\r\n  //Local Storage Company\r\n  localStorageCompany: any;\r\n  hidden = false;\r\n\r\n  tagList = [];\r\n  constructor(\r\n    private tagService: TagManagementService,\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router,\r\n    private _snackBarService: SnackbarService,\r\n    private userService: UsersService,\r\n    private notification: NotificationService\r\n  ) {\r\n   }\r\n   \r\n  ngOnInit(): void {\r\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\r\n    //access page part\r\n    if(!this.localStorageCompany){\r\n      this.hidden = true;\r\n      this.notification.showError(\"Please select your Company!\", \"\")\r\n    } else {\r\n      this.hidden = false;\r\n    }\r\n    this.getAllTags();\r\n  }\r\n  editTag(tagID:any) {\r\n    this.router.navigateByUrl('/tag-management/edit/' + tagID);\r\n  }\r\n  deleteTag(id: any) {\r\n    if(window.confirm('Do you want to go ahead?')) {\r\n      this.tagService.deleteTag(id).subscribe((res) => {\r\n        this.getAllTags();\r\n        this._snackBarService.info('Deleted a tag');\r\n      })\r\n    } \r\n  }\r\n  getAllTags() {\r\n    this.tagService.getAllTags().subscribe((x) => {\r\n      this.tagList = x\r\n      console.log(x);\r\n      this.rows = this.tagList.filter(tag => tag.company[0]['_id'] == this.localStorageCompany)\r\n      this.loadingIndicator = false;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n  //Gets the Selected Company from Local Storage\r\n  getSelectedCompanyFromLocalStorage() {\r\n    return this.userService.getSelectedCompanyFromLocalStorage();\r\n  }\r\n\r\n}\r\n","<div class=\"row\" *ngIf=\"!hidden\">\r\n    <div class=\"col-xl-12\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">View Tags</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n                   \r\n          <ngx-datatable\r\n            class=\"material fullscreen\"\r\n            [rows]=\"rows\"\r\n            [columnMode]=\"'force'\"\r\n            [loadingIndicator]=\"loadingIndicator\"\r\n            [footerHeight]=\"50\"\r\n            [rowHeight]=\"50\"\r\n            [scrollbarH]=\"true\"\r\n            [headerHeight]=\"50\"\r\n            [limit]=\"10\"\r\n          >\r\n            <ngx-datatable-column name=\"Name\">\r\n              <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n                Name\r\n              </ng-template>\r\n              <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n                {{ value }}\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Company\">\r\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n                    Company\r\n                </ng-template>\r\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n                  {{ value ? value[0].name : \"\" }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Advertiser\">\r\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n                    Advertiser\r\n                </ng-template>\r\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n                  {{ value }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Publisher\">\r\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n                    Publisher\r\n                </ng-template>\r\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n                  {{ value ? value[0].fullname : \"\" }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Browser\">\r\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n                    Browser\r\n                </ng-template>\r\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n                  {{ value }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Device Type\">\r\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n                    Device Type\r\n                </ng-template>\r\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n                  {{ value }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Version\">\r\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n                    Browser Version\r\n                </ng-template>\r\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n                  {{ value }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Country\">\r\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\r\n                    Country\r\n                </ng-template>\r\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n                  {{ value }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"id\">\r\n              <ng-template ngx-datatable-header-template>Action</ng-template>\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <a title=\"Edit Tag\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\" (click)=\"editTag(row._key)\">\r\n                  <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                  class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n                  </span>\r\n                </a>\r\n                \r\n                <a title=\"Delete Tag\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\" (click)=\"deleteTag(row._key)\">\r\n                  <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"false\"\r\n                    class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n                  </span>\r\n                </a>\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n          </ngx-datatable>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- begin:: Error -->\r\n<div\r\n  *ngIf=\"hidden\"\r\n  class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\"\r\n  style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\r\n  display: block;\r\n  min-height: 80vh;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  color: #0e1724;\"\r\n>\r\n  <!--begin::Content-->\r\n  <div\r\n    class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\"\r\n  >\r\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\r\n      How did you get here\r\n    </p>\r\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\r\n      Sorry you can't access the page you're looking for.\r\n    </p>\r\n    <p class=\"font-size-h4 line-height-md\">\r\n      There may be a misspelling in the URL entered,<br />or the page you are\r\n      looking for may no longer exist.\r\n    </p>\r\n  </div>\r\n  <!--end::Content-->\r\n</div>\r\n<!-- end:: Error -->\r\n\r\n  ","import { Component,Inject, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-template-name',\n  templateUrl: './template-name.component.html',\n  styleUrls: ['./template-name.component.scss']\n})\n\nexport class TemplateNameComponent implements OnInit {\n  templateNameFormControl: any;\n  constructor(\n    public dialogRef: MatDialogRef<TemplateNameComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n  ) { }\n\n  ngOnInit(): void {\n    this.templateNameFormControl = new FormControl('', [\n      Validators.required,   \n      ]);\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  store() {\n    this.templateNameFormControl.markAllAsTouched();\n    if(this.templateNameFormControl.valid) {\n      this.dialogRef.close({ templateName: this.data.templateName });\n    }\n  }\n\n}\n","<h1 mat-dialog-title>Template Name</h1>\n<form>\n    <div mat-dialog-content>\n    \n        <mat-form-field appearance=\"fill\">\n            <mat-label>Template Name</mat-label>\n            <input matInput [formControl]=\"templateNameFormControl\" [(ngModel)]=\"data.templateName\" required=\"true\">\n            <mat-error *ngIf=\"templateNameFormControl.hasError('required')\">\n                Template Name is <strong>required</strong>\n            </mat-error>\n        </mat-form-field>\n  \n    </div>\n    <div mat-dialog-actions style=\"justify-content: end;\">\n        <button mat-raised-button color=\"secondary\" (click)=\"onNoClick()\">No</button>\n        <button mat-raised-button color=\"primary\" (click)=\"store()\">Ok</button>\n    </div>\n</form>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TagManagementService } from '../tag-management.service';\nimport { TemplateInterface } from 'src/app/shared/models/template.interface';\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\nimport { UsersService } from 'src/app/shared/service/users.service';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.scss']\n})\nexport class TemplateComponent implements OnInit {\n  loadingIndicator = true;\n  rows: Array<TemplateInterface>;\n  //Local Storage Company\n  localStorageCompany: any;\n  hidden = false;\n  templateList = [];\n  constructor(\n    private tagService: TagManagementService,\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private _snackBarService: SnackbarService,\n    private userService: UsersService,\n    private notification: NotificationService\n  ) { }\n\n  ngOnInit(): void {\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\n    //access page part\n    if(!this.localStorageCompany){\n      this.hidden = true;\n      this.notification.showError(\"Please select your Company!\", \"\")\n    } else {\n      this.hidden = false;\n    }\n    this.getAllTemplates();\n  }\n  editTemplate(templateID:any) {\n    //this.router.navigateByUrl('/tag-management/edit/' + tagID);\n  }\n  deleteTemplate(id: any) {\n    if(window.confirm('Do you want to go ahead?')) {\n      this.tagService.deleteTemplate(id).subscribe((res) => {\n        this.getAllTemplates();\n        this._snackBarService.info('Deleted a Template');\n      })\n    } \n  }\n  getAllTemplates() {\n    this.tagService.getAllTemplates().subscribe((x) => {\n      this.templateList = x\n      console.log(x);\n      this.rows = this.templateList.filter(template => template.company[0]['_id'] == this.localStorageCompany)\n      this.loadingIndicator = false;\n      this.cdr.detectChanges();\n    });\n  }\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n}\n","<div class=\"row\" *ngIf=\"!hidden\">\n    <div class=\"col-xl-12\">\n      <div class=\"card card-custom example example-compact gutter-b\">\n        <div class=\"card-header\">\n          <div class=\"card-title\">\n            <h3 class=\"card-label\">View Templates</h3>\n          </div>\n        </div>\n        <div class=\"card-body\">\n                   \n          <ngx-datatable\n            class=\"material fullscreen\"\n            [rows]=\"rows\"\n            [columnMode]=\"'force'\"\n            [loadingIndicator]=\"loadingIndicator\"\n            [footerHeight]=\"50\"\n            [rowHeight]=\"50\"\n            [scrollbarH]=\"true\"\n            [headerHeight]=\"50\"\n            [limit]=\"10\"\n          >\n            <ngx-datatable-column name=\"TemplateName\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Template Name\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                    {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Name\">\n              <ng-template let-column=\"column\" ngx-datatable-header-template>\n                Tag Name\n              </ng-template>\n              <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                {{ value }}\n              </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Company\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Company\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value[0].name }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Advertiser\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Advertiser\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Publisher\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Publisher\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Browser\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Browser\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Device Type\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Device Type\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Version\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Browser Version\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Country\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Country\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"id\">\n              <ng-template ngx-datatable-header-template>Action</ng-template>\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                <!--button class=\"btn btn-sm btn-icon btn-icon-white btn-bg-primary m-1\" (click)=\"editTemplate(row._key)\">\n                    <i class=\"flaticon2-pen\"></i>\n                </button-->\n                <a title=\"Delete Template\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\" (click)=\"deleteTemplate(row._key)\">\n                  <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"false\"\n                    class=\"svg-icon svg-icon-md svg-icon-danger\">\n                  </span>\n                </a>\n              </ng-template>\n            </ngx-datatable-column>\n          </ngx-datatable>\n        </div>\n      </div>\n    </div>\n</div>\n<!-- begin:: Error -->\n<div\n*ngIf=\"hidden\"\n  class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\"\n  style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\n  display: block;\n  min-height: 80vh;\n  font-size: 14px;\n  line-height: 1.4;\n  color: #0e1724;\"\n>\n  <!--begin::Content-->\n  <div\n    class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\"\n  >\n    <p class=\"display-4 font-weight-boldest text-white mb-12\">\n      How did you get here\n    </p>\n    <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\n      Sorry you can't access the page you're looking for.\n    </p>\n    <p class=\"font-size-h4 line-height-md\">\n      There may be a misspelling in the URL entered,<br />or the page you are\n      looking for may no longer exist.\n    </p>\n  </div>\n  <!--end::Content-->\n</div>\n<!-- end:: Error -->\n  "]}