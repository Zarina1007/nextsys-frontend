{"version":3,"sources":["webpack:///src/app/modules/tag-management/edit-tag/edit-tag.component.ts","webpack:///src/app/modules/tag-management/edit-tag/edit-tag.component.html","webpack:///src/app/modules/tag-management/new-tag/new-tag.component.ts","webpack:///src/app/modules/tag-management/new-tag/new-tag.component.html","webpack:///src/app/modules/tag-management/tag-management-routing.module.ts","webpack:///src/app/modules/tag-management/tag-management.component.ts","webpack:///src/app/modules/tag-management/tag-management.component.html","webpack:///src/app/modules/tag-management/tag-management.module.ts","webpack:///src/app/modules/tag-management/tag-management.service.ts","webpack:///src/app/modules/tag-management/tags/tags.component.ts","webpack:///src/app/modules/tag-management/tags/tags.component.html"],"names":["EditTagComponent","route","tagManagementService","fb","_snackBarService","router","versionList","snapshot","params","id","getOneTag","subscribe","x","tag","browserVal","deviceTypeVal","versionVal","countryVal","url","initialURL","URL","toString","split","bval","push","dval","vval","cval","updateTagFG","setValue","name","company","advertiser","publisher","browser","deviceType","country","version","adServerUrl","statType","subid","limit","rotationType","group","required","array","statTypes","getStatTypes","rotationTypes","getRotationTypes","paramTypes","getParamTypes","countries","getCountries","browserVersions","getVersions","markAllAsTouched","valid","value","updateOneTag","res","info","err","error","deleteValueOfFormControl","isValidURL","searchParams","keys","key","get","addParamsToUrlForm","controlName","clear","param","index","console","log","controls","createInitialURL","forEach","element","paramType","append","initialParam","decodeURI","paramForm","finalUrl","event","length","e","vTemp","filterdata","filter","includes","map","viewValue","edgeVersions","operaVersions","edge","opera","getChromeBrowserVersion","versionsChromeData","slice","getFirefoxBrowserVersion","firefoxList","i","updateTag","getBrowers","getUrlParams","selector","templateUrl","styleUrls","formGroupDirective","NewTagComponent","newTagFG","addTag","reset","resetForm","saveTag","routes","path","component","children","pathMatch","redirectTo","TagManagementRoutingModule","forChild","imports","exports","TagManagementComponent","styles","TagManagementModule","declarations","providers","entryComponents","TagManagementService","tagsService","getChrome","getFirefox","add","getAllTags","tagKey","deleteTag","providedIn","TagsComponent","tagService","cdr","loadingIndicator","tagID","navigateByUrl","window","confirm","rows","detectChanges"],"mappings":"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","file":"modules-tag-management-tag-management-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\nimport { TagManagementService } from '../tag-management.service';\nimport { TagInterface } from 'src/app/shared/models/tag.interface';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n  FormGroupDirective,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-tag',\n  templateUrl: './edit-tag.component.html',\n  styleUrls: ['./edit-tag.component.scss']\n})\nexport class EditTagComponent implements OnInit {\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\n\n  updateTagFG: FormGroup;\n  statTypes: any;\n  rotationTypes: any;\n  paramTypes: any;\n  url: String;\n  initialURL: URL;\n  company: String;\n  countries: any;\n  versions: any;\n  versionList: any = [];\n  edgeVersions : any;\n  operaVersions: any;\n  browserVersions: any;\n  tag: TagInterface;\n  constructor(\n    private route: ActivatedRoute,\n    private tagManagementService: TagManagementService,\n    private fb: FormBuilder, \n    private _snackBarService: SnackbarService,\n    router: Router\n  ) {\n    //Get the current tag to edit\n    if (this.route.snapshot.params.id) {\n      this.tagManagementService.getOneTag(this.route.snapshot.params.id).subscribe(x => {\n        this.tag = x;\n        var browserVal = [];\n        var deviceTypeVal = [];\n        var versionVal = [];\n        var countryVal = [];\n        this.url = x['url'];\n        this.initialURL = new URL('https://adserver.com/search');\n        for(var bval of x['browser'].toString().split(\",\")){\n          browserVal.push(bval)\n        }\n        for(var dval of x['deviceType'].toString().split(\",\")){\n          deviceTypeVal.push(dval)\n        }\n        for(var vval of x['version'].toString().split(\",\")){\n          versionVal.push(vval)\n        }\n        for(var cval of x['country'].toString().split(\",\")){\n          countryVal.push(cval)\n        }\n        // this.updateTagFG.patchValue(x);\n        this.updateTagFG.setValue({\n          name: x['name'],\n          company: x['name'],\n          advertiser: x['advertiser'],\n          publisher: x['publisher'],\n          browser: browserVal,\n          deviceType: deviceTypeVal,\n          country: countryVal,\n          version: versionVal,\n          adServerUrl: x['adServerUrl'],\n          statType: x['statType'],\n          subid: x['subid'],\n          limit: x['limited'],\n          rotationType: x['rotationType'],\n          url: x['url'],\n          params: x['params']\n        });\n      });\n    }\n   }\n\n  ngOnInit(): void {\n    this.updateTagFG = this.fb.group({\n      name: ['', Validators.required],\n      publisher: ['', Validators.required],\n      advertiser: ['', Validators.required],\n      browser: ['', Validators.required],\n      deviceType: ['', Validators.required],\n      version: ['', Validators.required],\n      country: ['', Validators.required],\n      company: ['', Validators.required],\n      adServerUrl: ['', Validators.required],\n      statType: ['', Validators.required],\n      subid: ['', Validators.required],\n      limit: ['', Validators.required],\n      rotationType: ['', Validators.required],\n      url: new FormControl('', [Validators.required]),\n      params: this.fb.array([]),\n    });\n    this.statTypes = this.getStatTypes();\n    this.rotationTypes = this.getRotationTypes();\n    this.paramTypes = this.getParamTypes();\n    this.countries = this.getCountries();\n    this.browserVersions = this.getVersions();\n    \n  }\n  //Update the tag onto the database\n  updateTag() {\n    this.updateTagFG.markAllAsTouched();\n    if (this.updateTagFG.valid) {\n      this.tag = {...this.tag, ...this.updateTagFG.value};\n      this.tagManagementService.updateOneTag(this.tag).subscribe(res => {\n        this._snackBarService.info('Updated a  tag');\n      }, (err) => {\n        this._snackBarService.info(err.error);\n      },\n      )\n      \n    }\n  }\n  //Detects when URL is pasted into the field\n  //https://us.search.yahoo.com/yhs/search?hspart=brandclick&hsimp=yhs-calm&p=flowers\n  getUrlParams(url) {\n    //Resets the URL params on every change\n    this.deleteValueOfFormControl('params');\n    if (this.isValidURL(url)) {\n      url = new URL(url);\n      for (var key of url.searchParams.keys()) {\n        let value = url.searchParams.get(key);\n        this.addParamsToUrlForm(key, value);\n      }\n    } else {\n      return;\n    }\n  }\n  \n  //Gets the value of any form Array\n  //Returns a form array\n  get params() {\n    return this.updateTagFG.controls['params'] as FormArray;\n  }\n\n  //Deletes value of any given form control\n  deleteValueOfFormControl(controlName) {\n    this.params.clear();\n  }\n\n  //Updates the original parameters that will be received and sent on the first server request\n  //Example: domain.com/search?subid={{dynamic}}&q={{dynamic}}&search=[bing]\n  updateInitialParams(param, index) {\n    console.log('Updating Initial Params');\n    console.log(param, index);\n    if (param.value === 'static') {\n      console.log('static!');\n      this.params.controls[index]\n        .get('initialParam')\n        .setValue(this.params.controls[index].get('value').value);\n      this.createInitialURL();\n    } else {\n      // this.params.controls[index]\n      //   .get('initialParam')\n      //   .setValue(this.params.controls[index].get('key').value);\n    }\n  }\n\n  //Checks to see if initialParam mat input field has been touched and updates initial URL\n  updateInitialParamURL(value, index) {\n    if (this.params.controls[index].get('paramType').value === 'dynamic') {\n      this.createInitialURL();\n    }\n  }\n\n  //Builds the initial URL from the paramaters\n  createInitialURL() {\n    console.log('Updating URL');\n    this.initialURL = new URL('https://adserver.com/search');\n    this.params.controls.forEach((element, index) => {\n      if (element.value.paramType === 'dynamic') {\n        this.initialURL.searchParams.append(\n          element.value.key,\n          '{{' + element.value.initialParam + '}}'\n        );\n      } else if (element.value.paramType === 'static') {\n        // this.initialURL.searchParams.append(\n        //   element.value.key,\n        //   element.value.value\n        // );\n      } else {\n      }\n    });\n  }\n\n  //Decodes the URL for the Angular Template\n  decodeURL(url) {\n    return decodeURI(url);\n  }\n\n  //Adds key/valuew to FormArray 'Params'\n  addParamsToUrlForm(key, value) {\n    let paramForm = this.fb.group({\n      key: [key, Validators.required],\n      value: [value, Validators.required],\n      paramType: ['', Validators.required],\n      initialParam: ['', Validators.required],\n    });\n    console.log(this.updateTagFG);\n    this.params.push(paramForm);\n  }\n\n  //Checks to see if URL entered is valid\n  //If URL is valid return true\n  //Else if URL is invalid return false and throw mat-error\n  private isValidURL(url) {\n    console.log(url);\n    try {\n      let finalUrl = new URL(url);\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n  getBrowers(event) {\n    if (event.value.length > 0) {\n      let vTemp: any[] = [];\n      for(var e of event.value) {\n        let filterdata = this.versionList.filter(function(version: any) {\n          return version.value.includes(e)\n        })\n        filterdata.map((filter: any) => {\n            vTemp.push(filter);\n        })\n      }\n      this.browserVersions = vTemp;\n    }\n  }\n  //update the tag as a template\n  updateTemplate() {}\n\n  //Gets different ways a tag can display stats\n  private getStatTypes() {\n    return [\n      { value: 'rpm', viewValue: 'RPM Based' },\n      { value: 'subid', viewValue: 'Sub-ID Based' },\n    ];\n  }\n\n  //Gets Country List\n  private getCountries() {\n    return [\n      {value: 'Afghanistan', viewValue: 'Afghanistan'}, \n      {value: 'Åland Islands', viewValue: 'Åland Islands'}, \n      {value: 'Albania', viewValue: 'Albania'}, \n      {value: 'Algeria', viewValue: 'Algeria'}, \n      {value: 'American Samoa', viewValue: 'American Samoa'}, \n      {value: 'Andorra', viewValue: 'Andorra'}, \n      {value: 'Angola', viewValue: 'Angola'}, \n      {value: 'Anguilla', viewValue: 'Anguilla'}, \n      {value: 'Antarctica', viewValue: 'Antarctica'}, \n      {value: 'Antigua and Barbuda', viewValue: 'Antigua and Barbuda'}, \n      {value: 'Argentina', viewValue: 'Argentina'}, \n      {value: 'Armenia', viewValue: 'Armenia'}, \n      {value: 'Aruba', viewValue: 'Aruba'}, \n      {value: 'Australia', viewValue: 'Australia'}, \n      {value: 'Austria', viewValue: 'Austria'}, \n      {value: 'Azerbaijan', viewValue: 'Azerbaijan'}, \n      {value: 'Bahamas', viewValue: 'Bahamas'}, \n      {value: 'Bahrain', viewValue: 'Bahrain'}, \n      {value: 'Bangladesh', viewValue: 'Bangladesh'}, \n      {value: 'Barbados', viewValue: 'Barbados'}, \n      {value: 'Belarus', viewValue: 'Belarus'}, \n      {value: 'Belgium', viewValue: 'Belgium'}, \n      {value: 'Belize', viewValue: 'Belize'}, \n      {value: 'Benin', viewValue: 'Benin'}, \n      {value: 'Bermuda', viewValue: 'Bermuda'}, \n      {value: 'Bhutan', viewValue: 'Bhutan'}, \n      {value: 'Bolivia', viewValue: 'Bolivia'}, \n      {value: 'Bosnia and Herzegovina', viewValue: 'Bosnia and Herzegovina'}, \n      {value: 'Botswana', viewValue: 'Botswana'}, \n      {value: 'Bouvet Island', viewValue: 'Bouvet Island'}, \n      {value: 'Brazil', viewValue: 'Brazil'}, \n      {value: 'British Indian Ocean Territory', viewValue: 'British Indian Ocean Territory'}, \n      {value: 'Brunei Darussalam', viewValue: 'Brunei Darussala'}, \n      {value: 'Bulgaria', viewValue: 'Bulgaria'}, \n      {value: 'Burkina Faso', viewValue: 'Burkina Faso'}, \n      {value: 'Burundi', viewValue: 'Burundi'}, \n      {value: 'Cambodia', viewValue: 'Cambodia'}, \n      {value: 'Cameroon', viewValue: 'Cameroon'}, \n      {value: 'Canada', viewValue: 'Canada'}, \n      {value: 'Cape Verde', viewValue: 'Cape Verde'}, \n      {value: 'Cayman Islands', viewValue: 'Cayman Islands'}, \n      {value: 'Central African Republic', viewValue: 'Central African Republic'}, \n      {value: 'Chad', viewValue: 'Chad'}, \n      {value: 'Chile', viewValue: 'Chile'}, \n      {value: 'China', viewValue: 'China'}, \n      {value: 'Christmas Island', viewValue: 'Christmas Island'}, \n      {value: 'Cocos (Keeling) Islands', viewValue: 'Cocos (Keeling) Islands'}, \n      {value: 'Colombia', viewValue: 'Colombia'}, \n      {value: 'Comoros', viewValue: 'Comoros'}, \n      {value: 'Congo', viewValue: 'Congo'}, \n      {value: 'Congo, The Democratic Republic of the', viewValue: 'Congo, The Democratic Republic of the'}, \n      {value: 'Cook Islands', viewValue: 'Cook Islands'}, \n      {value: 'Costa Rica', viewValue: 'Costa Rica'}, \n      {value: 'Cote D\\'Ivoire', viewValue: 'Cote D\\'Ivoire'}, \n      {value: 'Croatia', viewValue: 'Croatia'}, \n      {value: 'Cuba', viewValue: 'Cuba'}, \n      {value: 'Cyprus', viewValue: 'Cyprus'}, \n      {value: 'Czech Republic', viewValue: 'Czech Republic'}, \n      {value: 'Denmark', viewValue: 'Denmark'}, \n      {value: 'Djibouti', viewValue: 'Djibouti'}, \n      {value: 'Dominica', viewValue: 'Dominica'}, \n      {value: 'Dominican Republic', viewValue: 'Dominican Republic'}, \n      {value: 'Ecuador', viewValue: 'Ecuador'}, \n      {value: 'Egypt', viewValue: 'Egypt'}, \n      {value: 'El Salvador', viewValue: 'El Salvador'}, \n      {value: 'Equatorial Guinea', viewValue: 'Equatorial Guinea'}, \n      {value: 'Eritrea', viewValue: 'Eritrea'}, \n      {value: 'Estonia', viewValue: 'Estonia'}, \n      {value: 'Ethiopia', viewValue: 'Ethiopia'}, \n      {value: 'Falkland Islands (Malvinas)', viewValue: 'Falkland Islands (Malvinas)'}, \n      {value: 'Faroe Islands', viewValue: 'Faroe Islands'}, \n      {value: 'Fiji', viewValue: 'Fiji'}, \n      {value: 'Finland', viewValue: 'Finland'}, \n      {value: 'France', viewValue: 'France'}, \n      {value: 'French Guiana', viewValue: 'French Guiana'}, \n      {value: 'French Polynesia', viewValue: 'French Polynesia'}, \n      {value: 'French Southern Territories', viewValue: 'French Southern Territories'}, \n      {value: 'Gabon', viewValue: 'Gabon'}, \n      {value: 'Gambia', viewValue: 'Gambia'}, \n      {value: 'Georgia', viewValue: 'Georgia'}, \n      {value: 'Germany', viewValue: 'Germany'}, \n      {value: 'Ghana', viewValue: 'Ghana'}, \n      {value: 'Gibraltar', viewValue: 'Gibraltar'}, \n      {value: 'Greece', viewValue: 'Greece'}, \n      {value: 'Greenland', viewValue: 'Greenland'}, \n      {value: 'Grenada', viewValue: 'Grenada'}, \n      {value: 'Guadeloupe', viewValue: 'Guadeloupe'}, \n      {value: 'Guam', viewValue: 'Guam'}, \n      {value: 'Guatemala', viewValue: 'Guatemala'}, \n      {value: 'Guernsey', viewValue: 'Guernsey'}, \n      {value: 'Guinea', viewValue: 'Guinea'}, \n      {value: 'Guinea-Bissau', viewValue: 'Guinea-Bissau'}, \n      {value: 'Guyana', viewValue: 'Guyana'}, \n      {value: 'Haiti', viewValue: 'Haiti'}, \n      {value: 'Heard Island and Mcdonald Islands', viewValue: 'Heard Island and Mcdonald Islands'}, \n      {value: 'Holy See (Vatican City State)', viewValue: 'Holy See (Vatican City State)'}, \n      {value: 'Honduras', viewValue: 'Honduras'}, \n      {value: 'Hong Kong', viewValue: 'Hong Kong'}, \n      {value: 'Hungary', viewValue: 'Hungary'}, \n      {value: 'Iceland', viewValue: 'Iceland'}, \n      {value: 'India', viewValue: 'India'}, \n      {value: 'Indonesia', viewValue: 'Indonesia'}, \n      {value: 'Iran, Islamic Republic Of', viewValue: 'Iran, Islamic Republic Of'}, \n      {value: 'Iraq', viewValue: 'Iraq'}, \n      {value: 'Ireland', viewValue: 'Ireland'}, \n      {value: 'Isle of Man', viewValue: 'Isle of Man'}, \n      {value: 'Israel', viewValue: 'Israel'}, \n      {value: 'Italy', viewValue: 'Italy'}, \n      {value: 'Jamaica', viewValue: 'Jamaica'}, \n      {value: 'Japan', viewValue: 'Japan'}, \n      {value: 'Jersey', viewValue: 'Jersey'}, \n      {value: 'Jordan', viewValue: 'Jordan'}, \n      {value: 'Kazakhstan', viewValue: 'Kazakhstan'}, \n      {value: 'Kenya', viewValue: 'Kenya'}, \n      {value: 'Kiribati', viewValue: 'Kiribati'}, \n      {value: 'Korea, Democratic People\\'S Republic of', viewValue: 'Korea, Democratic People\\'S Republic o'}, \n      {value: 'Korea, Republic of', viewValue: 'Korea, Republic of'}, \n      {value: 'Kuwait', viewValue: 'Kuwait'}, \n      {value: 'Kyrgyzstan', viewValue: 'Kyrgyzstan'}, \n      {value: 'Lao People\\'S Democratic Republic', viewValue: 'Lao People\\'S Democratic Republic'}, \n      {value: 'Latvia', viewValue: 'Latvia'}, \n      {value: 'Lebanon', viewValue: 'Lebanon'}, \n      {value: 'Lesotho', viewValue: 'Lesotho'}, \n      {value: 'Liberia', viewValue: 'Liberia'}, \n      {value: 'Libyan Arab Jamahiriya', viewValue: 'Libyan Arab Jamahiriya'}, \n      {value: 'Liechtenstein', viewValue: 'Liechtenstein'}, \n      {value: 'Lithuania', viewValue: 'Lithuania'}, \n      {value: 'Luxembourg', viewValue: 'Luxembourg'}, \n      {value: 'Macao', viewValue: 'Macao'}, \n      {value: 'Macedonia, The Former Yugoslav Republic of', viewValue: 'Macedonia, The Former Yugoslav Republic of'}, \n      {value: 'Madagascar', viewValue: 'Madagascar'}, \n      {value: 'Malawi', viewValue: 'Malawi'}, \n      {value: 'Malaysia', viewValue: 'Malaysia'}, \n      {value: 'Maldives', viewValue: 'Maldives'}, \n      {value: 'Mali', viewValue: 'Mali'}, \n      {value: 'Malta', viewValue: 'Malta'}, \n      {value: 'Marshall Islands', viewValue: 'Marshall Islands'}, \n      {value: 'Martinique', viewValue: 'Martinique'}, \n      {value: 'Mauritania', viewValue: 'Mauritania'}, \n      {value: 'Mauritius', viewValue: 'Mauritius'}, \n      {value: 'Mayotte', viewValue: 'Mayotte'}, \n      {value: 'Mexico', viewValue: 'Mexico'}, \n      {value: 'Micronesia, Federated States of', viewValue: 'Micronesia, Federated States of'}, \n      {value: 'Moldova, Republic of', viewValue: 'Moldova, Republic of'}, \n      {value: 'Monaco', viewValue: 'Monaco'}, \n      {value: 'Mongolia', viewValue: 'Mongolia'}, \n      {value: 'Montserrat', viewValue: 'Montserrat'}, \n      {value: 'Morocco', viewValue: 'Morocco'}, \n      {value: 'Mozambique', viewValue: 'Mozambique'}, \n      {value: 'Myanmar', viewValue: 'Myanmar'}, \n      {value: 'Namibia', viewValue: 'Namibia'}, \n      {value: 'Nauru', viewValue: 'Nauru'}, \n      {value: 'Nepal', viewValue: 'Nepal'}, \n      {value: 'Netherlands', viewValue: 'Netherlands'}, \n      {value: 'Netherlands Antilles', viewValue: 'Netherlands Antilles'}, \n      {value: 'New Caledonia', viewValue: 'New Caledonia'}, \n      {value: 'New Zealand', viewValue: 'New Zealand'}, \n      {value: 'Nicaragua', viewValue: 'Nicaragua'}, \n      {value: 'Niger', viewValue: 'Niger'}, \n      {value: 'Nigeria', viewValue: 'Nigeria'}, \n      {value: 'Niue', viewValue: 'Niue'}, \n      {value: 'Norfolk Island', viewValue: 'Norfolk Island'}, \n      {value: 'Northern Mariana Islands', viewValue: 'Northern Mariana Islands'}, \n      {value: 'Norway', viewValue: 'Norway'}, \n      {value: 'Oman', viewValue: 'Oman'}, \n      {value: 'Pakistan', viewValue: 'Pakistan'}, \n      {value: 'Palau', viewValue: 'Palau'}, \n      {value: 'Palestinian Territory, Occupied', viewValue: 'Palestinian Territory, Occupied'}, \n      {value: 'Panama', viewValue: 'Panama'}, \n      {value: 'Papua New Guinea', viewValue: 'Papua New Guinea'}, \n      {value: 'Paraguay', viewValue: 'Paraguay'}, \n      {value: 'Peru', viewValue: 'Peru'}, \n      {value: 'Philippines', viewValue: 'Philippines'}, \n      {value: 'Pitcairn', viewValue: 'Pitcairn'}, \n      {value: 'Poland', viewValue: 'Poland'}, \n      {value: 'Portugal', viewValue: 'Portugal'}, \n      {value: 'Puerto Rico', viewValue: 'Puerto Rico'}, \n      {value: 'Qatar', viewValue: 'Qatar'}, \n      {value: 'Reunion', viewValue: 'Reunion'}, \n      {value: 'Romania', viewValue: 'Romania'}, \n      {value: 'Russian Federation', viewValue: 'Russian Federatio'}, \n      {value: 'RWANDA', viewValue: 'RWANDA'}, \n      {value: 'Saint Helena', viewValue: 'Saint Helena'}, \n      {value: 'Saint Kitts and Nevis', viewValue: 'Saint Kitts and Nevis'}, \n      {value: 'Saint Lucia', viewValue: 'Saint Lucia'}, \n      {value: 'Saint Pierre and Miquelon', viewValue: 'Saint Pierre and Miquelon'}, \n      {value: 'Saint Vincent and the Grenadines', viewValue: 'Saint Vincent and the Grenadines'}, \n      {value: 'Samoa', viewValue: 'Samoa'}, \n      {value: 'San Marino', viewValue: 'San Marino'}, \n      {value: 'Sao Tome and Principe', viewValue: 'Sao Tome and Principe'}, \n      {value: 'Saudi Arabia', viewValue: 'Saudi Arabia'}, \n      {value: 'Senegal', viewValue: 'Senegal'}, \n      {value: 'Serbia and Montenegro', viewValue: 'Serbia and Montenegro'}, \n      {value: 'Seychelles', viewValue: 'Seychelles'}, \n      {value: 'Sierra Leone', viewValue: 'Sierra Leone'}, \n      {value: 'Singapore', viewValue: 'Singapore'}, \n      {value: 'Slovakia', viewValue: 'Slovakia'}, \n      {value: 'Slovenia', viewValue: 'Slovenia'}, \n      {value: 'Solomon Islands', viewValue: 'Solomon Islands'}, \n      {value: 'Somalia', viewValue: 'Somalia'}, \n      {value: 'South Africa', viewValue: 'South Africa'}, \n      {value: 'South Georgia and the South Sandwich Islands', viewValue: 'South Georgia and the South Sandwich Isla'}, \n      {value: 'Spain', viewValue: 'Spain'}, \n      {value: 'Sri Lanka', viewValue: 'Sri Lanka'}, \n      {value: 'Sudan', viewValue: 'Sudan'}, \n      {value: 'Surivalue', viewValue: 'Surivalue'}, \n      {value: 'Svalbard and Jan Mayen', viewValue: 'Svalbard and Jan Mayen'}, \n      {value: 'Swaziland', viewValue: 'Swaziland'}, \n      {value: 'Sweden', viewValue: 'Sweden'}, \n      {value: 'Switzerland', viewValue: 'Switzerland'}, \n      {value: 'Syrian Arab Republic', viewValue: 'Syrian Arab Republic'}, \n      {value: 'Taiwan, Province of China', viewValue: 'Taiwan, Province of China'}, \n      {value: 'Tajikistan', viewValue: 'Tajikistan'}, \n      {value: 'Tanzania, United Republic of', viewValue: 'Tanzania, United Republic of'}, \n      {value: 'Thailand', viewValue: 'Thailand'}, \n      {value: 'Timor-Leste', viewValue: 'Timor-Leste'}, \n      {value: 'Togo', viewValue: 'Togo'}, \n      {value: 'Tokelau', viewValue: 'Tokelau'}, \n      {value: 'Tonga', viewValue: 'Tonga'}, \n      {value: 'TrinviewValuead and Tobago', viewValue: 'TrinviewValuead and Tobago'}, \n      {value: 'Tunisia', viewValue: 'Tunisia'}, \n      {value: 'Turkey', viewValue: 'Turkey'}, \n      {value: 'Turkmenistan', viewValue: 'Turkmenistan'}, \n      {value: 'Turks and Caicos Islands', viewValue: 'Turks and Caicos Islands'}, \n      {value: 'Tuvalu', viewValue: 'Tuvalu'}, \n      {value: 'Uganda', viewValue: 'Uganda'}, \n      {value: 'Ukraine', viewValue: 'Ukraine'}, \n      {value: 'United Arab Emirates', viewValue: 'United Arab Emirates'}, \n      {value: 'United Kingdom', viewValue: 'United Kingdom'}, \n      {value: 'United States', viewValue: 'United States'}, \n      {value: 'United States Minor Outlying Islands', viewValue: 'United States Minor Outlying Islands'}, \n      {value: 'Uruguay', viewValue: 'Uruguay'}, \n      {value: 'Uzbekistan', viewValue: 'Uzbekistan'}, \n      {value: 'Vanuatu', viewValue: 'Vanuatu'}, \n      {value: 'Venezuela', viewValue: 'Venezuela'}, \n      {value: 'Viet Nam', viewValue: 'Viet Nam'}, \n      {value: 'Virgin Islands, British', viewValue: 'Virgin Islands, British'}, \n      {value: 'Virgin Islands, U.S.', viewValue: 'Virgin Islands, U.S.'}, \n      {value: 'Wallis and Futuna', viewValue: 'Wallis and Futuna'}, \n      {value: 'Western Sahara', viewValue: 'Western Sahara'}, \n      {value: 'Yemen', viewValue: 'Yemen'}, \n      {value: 'Zambia', viewValue: 'Zambia'}, \n      {value: 'Zimbabwe', viewValue: 'Zimbabwe'} \n    ]\n  }\n  //Gets Browser Versions\n  private getVersions() {\n    this.edgeVersions = [\n      {value: \"Edge - 102.0.1245.7\", viewValue: \"Edge - 102.0.1245.7\"},\n      {value: \"Edge - 101.0.1210.10\", viewValue: \"Edge - 101.0.1210.10\"},\n      {value: \"Edge - 100.0.1185.10\", viewValue: \"Edge - 100.0.1185.10\"},\n      {value: \"Edge - 99.0.1150.11\", viewValue: \"Edge - 99.0.1150.11\"},\n      {value: \"Edge - 98.0.1108.23\", viewValue: \"Edge - 98.0.1108.23\"},\n      {value: \"Edge - 97.0.1072.21\", viewValue: \"Edge - 97.0.1072.21\"},\n      \n    ];\n    this.operaVersions = [\n      {value: \"Opera - 12.15\", viewValue: \"Opera - 12.15\"},\n      {value: \"Opera - 12.14\", viewValue: \"Opera - 12.14\"},\n      {value: \"Opera - 12.13\", viewValue: \"Opera - 12.13\"},\n      {value: \"Opera - 12.12\", viewValue: \"Opera - 12.12\"},\n      {value: \"Opera - 12.11\", viewValue: \"Opera - 12.11\"},\n      {value: \"Opera - 12.10\", viewValue: \"Opera - 12.10\"}\n    ];\n    this.edgeVersions.map((edge: any) => {\n      this.versionList.push(edge);\n    });\n    this.operaVersions.map((opera: any) => {\n      this.versionList.push(opera);\n    });\n\n    //Chrome Version List Get\n    this.tagManagementService.getChromeBrowserVersion().subscribe((res: any) => {\n      let versionsChromeData = res.slice(0, 6);\n      versionsChromeData.map((version: { version: string; }) => {\n        this.versionList.push(\n            {\n                value: \"Chrome - \" + version.version,\n                viewValue: \"Chrome - \" + version.version\n            }\n        )\n      });    \n    }); \n    //FireFox Version List Get\n    this.tagManagementService.getFirefoxBrowserVersion().subscribe(res => {\n      var firefoxList = [];\n      for(var i in res){\n        firefoxList.push(\n            {\n                value: \"Firefox - \" + i,\n                viewValue: \"Firefox - \" + i\n            }\n        )\n      }\n      firefoxList.slice(firefoxList['length'] - 6, firefoxList['length']).map((version: { version: string; }) => {\n        this.versionList.push(\n            {\n                value: version['value'],\n                viewValue: version['viewValue']\n            }\n        )\n      });\n    });  \n\n    return this.versionList;\n  }\n  //Gets different ways a tag can display stats\n  private getRotationTypes() {\n    return [\n      { value: 'roundRobin', viewValue: 'Round Robin' },\n      { value: 'percentage', viewValue: 'Percentage' },\n    ];\n  }\n\n  private getParamTypes() {\n    return [\n      { value: 'static', viewValue: 'Static' },\n      { value: 'dynamic', viewValue: 'Dynamic' },\n    ];\n  }\n}\n","<form class=\"example-container\" [formGroup]=\"updateTagFG\" (submit)=\"updateTag()\">\n    <div class=\"row\">\n      <div class=\"col-xl-6\">\n        <div class=\"card card-custom example example-compact gutter-b\">\n          <div class=\"card-header\">\n            <div class=\"card-title\">\n              <h3 class=\"card-label\">Create New Tag</h3>\n            </div>\n            {{ updateTagFG.value | json }}\n          </div>\n          <div class=\"card-body\">\n            <mat-form-field>\n              <input\n                matInput\n                formControlName=\"name\"\n                placeholder=\"Name\"\n              />\n              <mat-error *ngIf=\"updateTagFG.get('name').errors?.required\"\n                >Name is required.\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Advertiser</mat-label>\n              <mat-select matNativeControl formControlName=\"advertiser\">\n                <mat-option value=\"Perion\">Perion</mat-option>\n                <mat-option value=\"Apptitude\">Apptitude</mat-option>\n                <mat-option value=\"Hopkins\">Hopkins</mat-option>\n                <mat-option value=\"Third Party\">Third Party</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Publisher</mat-label>\n              <mat-select matNativeControl formControlName=\"publisher\">\n                <mat-option value=\"Pub 1\">Pub 1</mat-option>\n                <mat-option value=\"Pub 2\">Pub 2</mat-option>\n                <mat-option value=\"Pub 3\">Pub 3</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <input\n                matInput\n                formControlName=\"company\"\n                placeholder=\"Company\"\n                [(ngModel)]=\"company\"\n              />\n              <mat-error *ngIf=\"updateTagFG.get('company').errors?.required\"\n                >Company name is required.\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Browsers Allowed</mat-label>\n              <mat-select matNativeControl (selectionChange)=\"getBrowers($event)\" formControlName=\"browser\" multiple>\n                <mat-option value=\"Chrome\">Chrome</mat-option>\n                <mat-option value=\"Firefox\">Firefox</mat-option>\n                <mat-option value=\"Edge\">Edge</mat-option>\n                <mat-option value=\"Internet Explorer\">Internet Explorer</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Device Type Allowed</mat-label>\n              <mat-select matNativeControl formControlName=\"deviceType\" multiple>\n                <mat-option value=\"Desktop\">Desktop</mat-option>\n                <mat-option value=\"Mobile\">Mobile</mat-option>              \n                <mat-option value=\"Tablet\">Tablet</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Browser Version Allowed</mat-label>\n              <mat-select matNativeControl formControlName=\"version\" multiple>\n                <mat-option\n                  *ngFor=\"let browserVersion of browserVersions\"\n                  [value]=\"browserVersion.value\"\n                >\n                  {{ browserVersion.viewValue }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Country Allowed</mat-label>\n              <mat-select matNativeControl formControlName=\"country\" multiple>\n                <mat-option\n                  *ngFor=\"let country of countries\"\n                  [value]=\"country.value\"\n                >\n                  {{ country.viewValue }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Ad Server URL</mat-label>\n              <mat-select formControlName=\"adServerUrl\">\n                <mat-option value=\"devisedata.com\">devisedata.com</mat-option>\n                <mat-option value=\"search.monarchdigital.com\">search.monarchdigital.com</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Stat Type</mat-label>\n              <mat-select formControlName=\"statType\">\n                <mat-option\n                  *ngFor=\"let statType of statTypes\"\n                  [value]=\"statType.value\"\n                >\n                  {{ statType.viewValue }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <input matInput placeholder=\"Subid (Separated by commas)\" formControlName=\"subid\" />\n              <mat-error *ngIf=\"updateTagFG.get('subid').errors?.required\"\n                >SUBID is required.\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <input matInput placeholder=\"Limit (Separated by commas)\" formControlName=\"limit\" />\n              <mat-error *ngIf=\"updateTagFG.get('limit').errors?.required\"\n                >Limit is required.\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Rotation Type</mat-label>\n              <mat-select formControlName=\"rotationType\">\n                <mat-option\n                  *ngFor=\"let rotationType of rotationTypes\"\n                  [value]=\"rotationType.value\"\n                >\n                  {{ rotationType.viewValue }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-xl-6\">\n        <div class=\"card card-custom example example-compact gutter-b\">\n          <div class=\"card-header\">\n            <div class=\"card-title\">\n              <h3 class=\"card-label\">Tag URLs</h3>\n            </div>\n          </div>\n          <div class=\"card-body\">\n            <!-- URL INPUT START -->\n            <mat-form-field>\n              <input\n                matInput\n                [(ngModel)]=\"url\"\n                formControlName=\"url\"\n                placeholder=\"Final URL\"\n                (ngModelChange)=\"getUrlParams($event)\"\n              />\n              <mat-error *ngIf=\"updateTagFG.get('url').errors?.required\"\n                >Final URL is required.\n              </mat-error>\n            </mat-form-field>\n            <!-- URL INPUT END -->\n  \n            <!-- FORM ARRAY PARAMS START -->\n            <ng-container formArrayName=\"params\">\n              <div *ngFor=\"let p of params.controls; index as i\">\n                <div class=\"params\" [formGroup]=\"p\">\n                  <mat-form-field>\n                    <input\n                      matInput\n                      formControlName=\"key\"\n                      placeholder=\"Final Key\"\n                    />\n                  </mat-form-field>\n                  <mat-form-field>\n                    <input\n                      matInput\n                      formControlName=\"value\"\n                      placeholder=\"Final Value\"\n                    />\n                  </mat-form-field>\n                  <mat-form-field>\n                    <mat-label>Param Type</mat-label>\n                    <mat-select\n                      formControlName=\"paramType\"\n                      (selectionChange)=\"updateInitialParams($event, i)\"\n                    >\n                      <mat-option\n                        *ngFor=\"let paramType of paramTypes\"\n                        [value]=\"paramType.value\"\n                      >\n                        {{ paramType.viewValue }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                  <mat-form-field>\n                    <input\n                      matInput\n                      formControlName=\"initialParam\"\n                      placeholder=\"Inital Value\"\n                      (keyup)=\"updateInitialParamURL($event, i)\"\n                    />\n                  </mat-form-field>\n                </div>\n              </div>\n              <p>Inital URL: <br />{{ decodeURL(initialURL) }}</p>\n            </ng-container>\n            <!-- FORM ARRAY PARAMS END -->\n          </div>\n        </div>\n      </div>\n    </div>\n  \n    <!-- SAVING TAG -->\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <button mat-raised-button color=\"primary\" type=\"submit\">Update</button>\n      </div>\n      <div class=\"col-md-6\">\n        <button\n          mat-raised-button\n          color=\"primary\"\n          type=\"button\"\n          (click)=\"updateTag()\"\n        >\n          Update as Template\n        </button>\n      </div>\n    </div>\n  </form>\n  ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Params } from '@angular/router';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { TagManagementService } from '../tag-management.service';\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n  FormGroupDirective,\r\n} from '@angular/forms';\r\n\r\ninterface StatType {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-new-tag',\r\n  templateUrl: './new-tag.component.html',\r\n  styleUrls: ['./new-tag.component.scss'],\r\n})\r\nexport class NewTagComponent implements OnInit {\r\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\r\n  newTagFG: FormGroup;\r\n  statTypes: any;\r\n  rotationTypes: any;\r\n  paramTypes: any;\r\n  url: String;\r\n  initialURL: URL;\r\n  company: String;\r\n  countries: any;\r\n  versions: any;\r\n  versionList: any = [];\r\n  edgeVersions : any;\r\n  operaVersions: any;\r\n  browserVersions: any;\r\n  \r\n  constructor(\r\n    private tagManagementService: TagManagementService,\r\n    private fb: FormBuilder, \r\n    private _snackBarService: SnackbarService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.company = 'Manic Traffic';\r\n    this.url =\r\n      'https://us.search.yahoo.com/yhs/search?hspart=brandclick&hsimp=yhs-calm&p=flowers';\r\n    this.initialURL = new URL('https://adserver.com/search');\r\n\r\n    this.newTagFG = this.fb.group({\r\n      name: ['', Validators.required],\r\n      publisher: ['', Validators.required],\r\n      advertiser: ['', Validators.required],\r\n      browser: ['', Validators.required],\r\n      deviceType: ['', Validators.required],\r\n      version: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      company: ['', Validators.required],\r\n      adServerUrl: ['', Validators.required],\r\n      statType: ['', Validators.required],\r\n      subid: ['', Validators.required],\r\n      limit: ['', Validators.required],\r\n      rotationType: ['', Validators.required],\r\n      url: new FormControl('', [Validators.required]),\r\n      params: this.fb.array([]),\r\n    });\r\n\r\n    this.statTypes = this.getStatTypes();\r\n    this.rotationTypes = this.getRotationTypes();\r\n    this.paramTypes = this.getParamTypes();\r\n    this.countries = this.getCountries();\r\n    this.browserVersions = this.getVersions();\r\n  }\r\n\r\n  //Detects when URL is pasted into the field\r\n  //https://us.search.yahoo.com/yhs/search?hspart=brandclick&hsimp=yhs-calm&p=flowers\r\n  getUrlParams(url) {\r\n    //Resets the URL params on every change\r\n    this.deleteValueOfFormControl('params');\r\n    if (this.isValidURL(url)) {\r\n      url = new URL(url);\r\n      for (var key of url.searchParams.keys()) {\r\n        let value = url.searchParams.get(key);\r\n        this.addParamsToUrlForm(key, value);\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  \r\n  //Gets the value of any form Array\r\n  //Returns a form array\r\n  get params() {\r\n    return this.newTagFG.controls['params'] as FormArray;\r\n  }\r\n\r\n  //Deletes value of any given form control\r\n  deleteValueOfFormControl(controlName) {\r\n    this.params.clear();\r\n  }\r\n\r\n  //Updates the original parameters that will be received and sent on the first server request\r\n  //Example: domain.com/search?subid={{dynamic}}&q={{dynamic}}&search=[bing]\r\n  updateInitialParams(param, index) {\r\n    console.log('Updating Initial Params');\r\n    console.log(param, index);\r\n    if (param.value === 'static') {\r\n      console.log('static!');\r\n      this.params.controls[index]\r\n        .get('initialParam')\r\n        .setValue(this.params.controls[index].get('value').value);\r\n      this.createInitialURL();\r\n    } else {\r\n      // this.params.controls[index]\r\n      //   .get('initialParam')\r\n      //   .setValue(this.params.controls[index].get('key').value);\r\n    }\r\n  }\r\n\r\n  //Checks to see if initialParam mat input field has been touched and updates initial URL\r\n  updateInitialParamURL(value, index) {\r\n    if (this.params.controls[index].get('paramType').value === 'dynamic') {\r\n      this.createInitialURL();\r\n    }\r\n  }\r\n\r\n  //Builds the initial URL from the paramaters\r\n  createInitialURL() {\r\n    console.log('Updating URL');\r\n    this.initialURL = new URL('https://adserver.com/search');\r\n    this.params.controls.forEach((element, index) => {\r\n      if (element.value.paramType === 'dynamic') {\r\n        this.initialURL.searchParams.append(\r\n          element.value.key,\r\n          '{{' + element.value.initialParam + '}}'\r\n        );\r\n      } else if (element.value.paramType === 'static') {\r\n        // this.initialURL.searchParams.append(\r\n        //   element.value.key,\r\n        //   element.value.value\r\n        // );\r\n      } else {\r\n      }\r\n    });\r\n  }\r\n\r\n  //Decodes the URL for the Angular Template\r\n  decodeURL(url) {\r\n    return decodeURI(url);\r\n  }\r\n\r\n  //Adds key/valuew to FormArray 'Params'\r\n  addParamsToUrlForm(key, value) {\r\n    let paramForm = this.fb.group({\r\n      key: [key, Validators.required],\r\n      value: [value, Validators.required],\r\n      paramType: ['', Validators.required],\r\n      initialParam: ['', Validators.required],\r\n    });\r\n    console.log(this.newTagFG);\r\n    this.params.push(paramForm);\r\n  }\r\n\r\n  //Checks to see if URL entered is valid\r\n  //If URL is valid return true\r\n  //Else if URL is invalid return false and throw mat-error\r\n  private isValidURL(url) {\r\n    console.log(url);\r\n    try {\r\n      let finalUrl = new URL(url);\r\n      return true;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  //Saves the tag onto the database\r\n  saveTag() {\r\n    this.newTagFG.markAllAsTouched();\r\n    if (this.newTagFG.valid) {\r\n      this.tagManagementService.addTag(this.newTagFG.value).subscribe(res => {\r\n        this._snackBarService.info('Added a new tag');\r\n        this.newTagFG.reset();\r\n        this.formGroupDirective.resetForm();\r\n        this.url ='https://us.search.yahoo.com/yhs/search?hspart=brandclick&hsimp=yhs-calm&p=flowers';\r\n        this.initialURL = new URL('https://adserver.com/search');\r\n        this.getUrlParams(this.url);\r\n      }, (err) => {\r\n        this._snackBarService.info(err.error);\r\n      },\r\n      )\r\n      \r\n    }\r\n  }\r\n  getBrowers(event) {\r\n    if (event.value.length > 0) {\r\n      let vTemp: any[] = [];\r\n      for(var e of event.value) {\r\n        let filterdata = this.versionList.filter(function(version: any) {\r\n          return version.value.includes(e)\r\n        })\r\n        filterdata.map((filter: any) => {\r\n            vTemp.push(filter);\r\n        })\r\n      }\r\n      this.browserVersions = vTemp;\r\n    }\r\n  }\r\n\r\n  //Saves the tag as a template\r\n  saveTemplate() {}\r\n\r\n  //Gets different ways a tag can display stats\r\n  private getStatTypes() {\r\n    return [\r\n      { value: 'rpm', viewValue: 'RPM Based' },\r\n      { value: 'subid', viewValue: 'Sub-ID Based' },\r\n    ];\r\n  }\r\n\r\n  //Gets Country List\r\n  private getCountries() {\r\n    return [\r\n      {value: 'Afghanistan', viewValue: 'Afghanistan'}, \r\n      {value: 'Åland Islands', viewValue: 'Åland Islands'}, \r\n      {value: 'Albania', viewValue: 'Albania'}, \r\n      {value: 'Algeria', viewValue: 'Algeria'}, \r\n      {value: 'American Samoa', viewValue: 'American Samoa'}, \r\n      {value: 'Andorra', viewValue: 'Andorra'}, \r\n      {value: 'Angola', viewValue: 'Angola'}, \r\n      {value: 'Anguilla', viewValue: 'Anguilla'}, \r\n      {value: 'Antarctica', viewValue: 'Antarctica'}, \r\n      {value: 'Antigua and Barbuda', viewValue: 'Antigua and Barbuda'}, \r\n      {value: 'Argentina', viewValue: 'Argentina'}, \r\n      {value: 'Armenia', viewValue: 'Armenia'}, \r\n      {value: 'Aruba', viewValue: 'Aruba'}, \r\n      {value: 'Australia', viewValue: 'Australia'}, \r\n      {value: 'Austria', viewValue: 'Austria'}, \r\n      {value: 'Azerbaijan', viewValue: 'Azerbaijan'}, \r\n      {value: 'Bahamas', viewValue: 'Bahamas'}, \r\n      {value: 'Bahrain', viewValue: 'Bahrain'}, \r\n      {value: 'Bangladesh', viewValue: 'Bangladesh'}, \r\n      {value: 'Barbados', viewValue: 'Barbados'}, \r\n      {value: 'Belarus', viewValue: 'Belarus'}, \r\n      {value: 'Belgium', viewValue: 'Belgium'}, \r\n      {value: 'Belize', viewValue: 'Belize'}, \r\n      {value: 'Benin', viewValue: 'Benin'}, \r\n      {value: 'Bermuda', viewValue: 'Bermuda'}, \r\n      {value: 'Bhutan', viewValue: 'Bhutan'}, \r\n      {value: 'Bolivia', viewValue: 'Bolivia'}, \r\n      {value: 'Bosnia and Herzegovina', viewValue: 'Bosnia and Herzegovina'}, \r\n      {value: 'Botswana', viewValue: 'Botswana'}, \r\n      {value: 'Bouvet Island', viewValue: 'Bouvet Island'}, \r\n      {value: 'Brazil', viewValue: 'Brazil'}, \r\n      {value: 'British Indian Ocean Territory', viewValue: 'British Indian Ocean Territory'}, \r\n      {value: 'Brunei Darussalam', viewValue: 'Brunei Darussala'}, \r\n      {value: 'Bulgaria', viewValue: 'Bulgaria'}, \r\n      {value: 'Burkina Faso', viewValue: 'Burkina Faso'}, \r\n      {value: 'Burundi', viewValue: 'Burundi'}, \r\n      {value: 'Cambodia', viewValue: 'Cambodia'}, \r\n      {value: 'Cameroon', viewValue: 'Cameroon'}, \r\n      {value: 'Canada', viewValue: 'Canada'}, \r\n      {value: 'Cape Verde', viewValue: 'Cape Verde'}, \r\n      {value: 'Cayman Islands', viewValue: 'Cayman Islands'}, \r\n      {value: 'Central African Republic', viewValue: 'Central African Republic'}, \r\n      {value: 'Chad', viewValue: 'Chad'}, \r\n      {value: 'Chile', viewValue: 'Chile'}, \r\n      {value: 'China', viewValue: 'China'}, \r\n      {value: 'Christmas Island', viewValue: 'Christmas Island'}, \r\n      {value: 'Cocos (Keeling) Islands', viewValue: 'Cocos (Keeling) Islands'}, \r\n      {value: 'Colombia', viewValue: 'Colombia'}, \r\n      {value: 'Comoros', viewValue: 'Comoros'}, \r\n      {value: 'Congo', viewValue: 'Congo'}, \r\n      {value: 'Congo, The Democratic Republic of the', viewValue: 'Congo, The Democratic Republic of the'}, \r\n      {value: 'Cook Islands', viewValue: 'Cook Islands'}, \r\n      {value: 'Costa Rica', viewValue: 'Costa Rica'}, \r\n      {value: 'Cote D\\'Ivoire', viewValue: 'Cote D\\'Ivoire'}, \r\n      {value: 'Croatia', viewValue: 'Croatia'}, \r\n      {value: 'Cuba', viewValue: 'Cuba'}, \r\n      {value: 'Cyprus', viewValue: 'Cyprus'}, \r\n      {value: 'Czech Republic', viewValue: 'Czech Republic'}, \r\n      {value: 'Denmark', viewValue: 'Denmark'}, \r\n      {value: 'Djibouti', viewValue: 'Djibouti'}, \r\n      {value: 'Dominica', viewValue: 'Dominica'}, \r\n      {value: 'Dominican Republic', viewValue: 'Dominican Republic'}, \r\n      {value: 'Ecuador', viewValue: 'Ecuador'}, \r\n      {value: 'Egypt', viewValue: 'Egypt'}, \r\n      {value: 'El Salvador', viewValue: 'El Salvador'}, \r\n      {value: 'Equatorial Guinea', viewValue: 'Equatorial Guinea'}, \r\n      {value: 'Eritrea', viewValue: 'Eritrea'}, \r\n      {value: 'Estonia', viewValue: 'Estonia'}, \r\n      {value: 'Ethiopia', viewValue: 'Ethiopia'}, \r\n      {value: 'Falkland Islands (Malvinas)', viewValue: 'Falkland Islands (Malvinas)'}, \r\n      {value: 'Faroe Islands', viewValue: 'Faroe Islands'}, \r\n      {value: 'Fiji', viewValue: 'Fiji'}, \r\n      {value: 'Finland', viewValue: 'Finland'}, \r\n      {value: 'France', viewValue: 'France'}, \r\n      {value: 'French Guiana', viewValue: 'French Guiana'}, \r\n      {value: 'French Polynesia', viewValue: 'French Polynesia'}, \r\n      {value: 'French Southern Territories', viewValue: 'French Southern Territories'}, \r\n      {value: 'Gabon', viewValue: 'Gabon'}, \r\n      {value: 'Gambia', viewValue: 'Gambia'}, \r\n      {value: 'Georgia', viewValue: 'Georgia'}, \r\n      {value: 'Germany', viewValue: 'Germany'}, \r\n      {value: 'Ghana', viewValue: 'Ghana'}, \r\n      {value: 'Gibraltar', viewValue: 'Gibraltar'}, \r\n      {value: 'Greece', viewValue: 'Greece'}, \r\n      {value: 'Greenland', viewValue: 'Greenland'}, \r\n      {value: 'Grenada', viewValue: 'Grenada'}, \r\n      {value: 'Guadeloupe', viewValue: 'Guadeloupe'}, \r\n      {value: 'Guam', viewValue: 'Guam'}, \r\n      {value: 'Guatemala', viewValue: 'Guatemala'}, \r\n      {value: 'Guernsey', viewValue: 'Guernsey'}, \r\n      {value: 'Guinea', viewValue: 'Guinea'}, \r\n      {value: 'Guinea-Bissau', viewValue: 'Guinea-Bissau'}, \r\n      {value: 'Guyana', viewValue: 'Guyana'}, \r\n      {value: 'Haiti', viewValue: 'Haiti'}, \r\n      {value: 'Heard Island and Mcdonald Islands', viewValue: 'Heard Island and Mcdonald Islands'}, \r\n      {value: 'Holy See (Vatican City State)', viewValue: 'Holy See (Vatican City State)'}, \r\n      {value: 'Honduras', viewValue: 'Honduras'}, \r\n      {value: 'Hong Kong', viewValue: 'Hong Kong'}, \r\n      {value: 'Hungary', viewValue: 'Hungary'}, \r\n      {value: 'Iceland', viewValue: 'Iceland'}, \r\n      {value: 'India', viewValue: 'India'}, \r\n      {value: 'Indonesia', viewValue: 'Indonesia'}, \r\n      {value: 'Iran, Islamic Republic Of', viewValue: 'Iran, Islamic Republic Of'}, \r\n      {value: 'Iraq', viewValue: 'Iraq'}, \r\n      {value: 'Ireland', viewValue: 'Ireland'}, \r\n      {value: 'Isle of Man', viewValue: 'Isle of Man'}, \r\n      {value: 'Israel', viewValue: 'Israel'}, \r\n      {value: 'Italy', viewValue: 'Italy'}, \r\n      {value: 'Jamaica', viewValue: 'Jamaica'}, \r\n      {value: 'Japan', viewValue: 'Japan'}, \r\n      {value: 'Jersey', viewValue: 'Jersey'}, \r\n      {value: 'Jordan', viewValue: 'Jordan'}, \r\n      {value: 'Kazakhstan', viewValue: 'Kazakhstan'}, \r\n      {value: 'Kenya', viewValue: 'Kenya'}, \r\n      {value: 'Kiribati', viewValue: 'Kiribati'}, \r\n      {value: 'Korea, Democratic People\\'S Republic of', viewValue: 'Korea, Democratic People\\'S Republic o'}, \r\n      {value: 'Korea, Republic of', viewValue: 'Korea, Republic of'}, \r\n      {value: 'Kuwait', viewValue: 'Kuwait'}, \r\n      {value: 'Kyrgyzstan', viewValue: 'Kyrgyzstan'}, \r\n      {value: 'Lao People\\'S Democratic Republic', viewValue: 'Lao People\\'S Democratic Republic'}, \r\n      {value: 'Latvia', viewValue: 'Latvia'}, \r\n      {value: 'Lebanon', viewValue: 'Lebanon'}, \r\n      {value: 'Lesotho', viewValue: 'Lesotho'}, \r\n      {value: 'Liberia', viewValue: 'Liberia'}, \r\n      {value: 'Libyan Arab Jamahiriya', viewValue: 'Libyan Arab Jamahiriya'}, \r\n      {value: 'Liechtenstein', viewValue: 'Liechtenstein'}, \r\n      {value: 'Lithuania', viewValue: 'Lithuania'}, \r\n      {value: 'Luxembourg', viewValue: 'Luxembourg'}, \r\n      {value: 'Macao', viewValue: 'Macao'}, \r\n      {value: 'Macedonia, The Former Yugoslav Republic of', viewValue: 'Macedonia, The Former Yugoslav Republic of'}, \r\n      {value: 'Madagascar', viewValue: 'Madagascar'}, \r\n      {value: 'Malawi', viewValue: 'Malawi'}, \r\n      {value: 'Malaysia', viewValue: 'Malaysia'}, \r\n      {value: 'Maldives', viewValue: 'Maldives'}, \r\n      {value: 'Mali', viewValue: 'Mali'}, \r\n      {value: 'Malta', viewValue: 'Malta'}, \r\n      {value: 'Marshall Islands', viewValue: 'Marshall Islands'}, \r\n      {value: 'Martinique', viewValue: 'Martinique'}, \r\n      {value: 'Mauritania', viewValue: 'Mauritania'}, \r\n      {value: 'Mauritius', viewValue: 'Mauritius'}, \r\n      {value: 'Mayotte', viewValue: 'Mayotte'}, \r\n      {value: 'Mexico', viewValue: 'Mexico'}, \r\n      {value: 'Micronesia, Federated States of', viewValue: 'Micronesia, Federated States of'}, \r\n      {value: 'Moldova, Republic of', viewValue: 'Moldova, Republic of'}, \r\n      {value: 'Monaco', viewValue: 'Monaco'}, \r\n      {value: 'Mongolia', viewValue: 'Mongolia'}, \r\n      {value: 'Montserrat', viewValue: 'Montserrat'}, \r\n      {value: 'Morocco', viewValue: 'Morocco'}, \r\n      {value: 'Mozambique', viewValue: 'Mozambique'}, \r\n      {value: 'Myanmar', viewValue: 'Myanmar'}, \r\n      {value: 'Namibia', viewValue: 'Namibia'}, \r\n      {value: 'Nauru', viewValue: 'Nauru'}, \r\n      {value: 'Nepal', viewValue: 'Nepal'}, \r\n      {value: 'Netherlands', viewValue: 'Netherlands'}, \r\n      {value: 'Netherlands Antilles', viewValue: 'Netherlands Antilles'}, \r\n      {value: 'New Caledonia', viewValue: 'New Caledonia'}, \r\n      {value: 'New Zealand', viewValue: 'New Zealand'}, \r\n      {value: 'Nicaragua', viewValue: 'Nicaragua'}, \r\n      {value: 'Niger', viewValue: 'Niger'}, \r\n      {value: 'Nigeria', viewValue: 'Nigeria'}, \r\n      {value: 'Niue', viewValue: 'Niue'}, \r\n      {value: 'Norfolk Island', viewValue: 'Norfolk Island'}, \r\n      {value: 'Northern Mariana Islands', viewValue: 'Northern Mariana Islands'}, \r\n      {value: 'Norway', viewValue: 'Norway'}, \r\n      {value: 'Oman', viewValue: 'Oman'}, \r\n      {value: 'Pakistan', viewValue: 'Pakistan'}, \r\n      {value: 'Palau', viewValue: 'Palau'}, \r\n      {value: 'Palestinian Territory, Occupied', viewValue: 'Palestinian Territory, Occupied'}, \r\n      {value: 'Panama', viewValue: 'Panama'}, \r\n      {value: 'Papua New Guinea', viewValue: 'Papua New Guinea'}, \r\n      {value: 'Paraguay', viewValue: 'Paraguay'}, \r\n      {value: 'Peru', viewValue: 'Peru'}, \r\n      {value: 'Philippines', viewValue: 'Philippines'}, \r\n      {value: 'Pitcairn', viewValue: 'Pitcairn'}, \r\n      {value: 'Poland', viewValue: 'Poland'}, \r\n      {value: 'Portugal', viewValue: 'Portugal'}, \r\n      {value: 'Puerto Rico', viewValue: 'Puerto Rico'}, \r\n      {value: 'Qatar', viewValue: 'Qatar'}, \r\n      {value: 'Reunion', viewValue: 'Reunion'}, \r\n      {value: 'Romania', viewValue: 'Romania'}, \r\n      {value: 'Russian Federation', viewValue: 'Russian Federatio'}, \r\n      {value: 'RWANDA', viewValue: 'RWANDA'}, \r\n      {value: 'Saint Helena', viewValue: 'Saint Helena'}, \r\n      {value: 'Saint Kitts and Nevis', viewValue: 'Saint Kitts and Nevis'}, \r\n      {value: 'Saint Lucia', viewValue: 'Saint Lucia'}, \r\n      {value: 'Saint Pierre and Miquelon', viewValue: 'Saint Pierre and Miquelon'}, \r\n      {value: 'Saint Vincent and the Grenadines', viewValue: 'Saint Vincent and the Grenadines'}, \r\n      {value: 'Samoa', viewValue: 'Samoa'}, \r\n      {value: 'San Marino', viewValue: 'San Marino'}, \r\n      {value: 'Sao Tome and Principe', viewValue: 'Sao Tome and Principe'}, \r\n      {value: 'Saudi Arabia', viewValue: 'Saudi Arabia'}, \r\n      {value: 'Senegal', viewValue: 'Senegal'}, \r\n      {value: 'Serbia and Montenegro', viewValue: 'Serbia and Montenegro'}, \r\n      {value: 'Seychelles', viewValue: 'Seychelles'}, \r\n      {value: 'Sierra Leone', viewValue: 'Sierra Leone'}, \r\n      {value: 'Singapore', viewValue: 'Singapore'}, \r\n      {value: 'Slovakia', viewValue: 'Slovakia'}, \r\n      {value: 'Slovenia', viewValue: 'Slovenia'}, \r\n      {value: 'Solomon Islands', viewValue: 'Solomon Islands'}, \r\n      {value: 'Somalia', viewValue: 'Somalia'}, \r\n      {value: 'South Africa', viewValue: 'South Africa'}, \r\n      {value: 'South Georgia and the South Sandwich Islands', viewValue: 'South Georgia and the South Sandwich Isla'}, \r\n      {value: 'Spain', viewValue: 'Spain'}, \r\n      {value: 'Sri Lanka', viewValue: 'Sri Lanka'}, \r\n      {value: 'Sudan', viewValue: 'Sudan'}, \r\n      {value: 'Surivalue', viewValue: 'Surivalue'}, \r\n      {value: 'Svalbard and Jan Mayen', viewValue: 'Svalbard and Jan Mayen'}, \r\n      {value: 'Swaziland', viewValue: 'Swaziland'}, \r\n      {value: 'Sweden', viewValue: 'Sweden'}, \r\n      {value: 'Switzerland', viewValue: 'Switzerland'}, \r\n      {value: 'Syrian Arab Republic', viewValue: 'Syrian Arab Republic'}, \r\n      {value: 'Taiwan, Province of China', viewValue: 'Taiwan, Province of China'}, \r\n      {value: 'Tajikistan', viewValue: 'Tajikistan'}, \r\n      {value: 'Tanzania, United Republic of', viewValue: 'Tanzania, United Republic of'}, \r\n      {value: 'Thailand', viewValue: 'Thailand'}, \r\n      {value: 'Timor-Leste', viewValue: 'Timor-Leste'}, \r\n      {value: 'Togo', viewValue: 'Togo'}, \r\n      {value: 'Tokelau', viewValue: 'Tokelau'}, \r\n      {value: 'Tonga', viewValue: 'Tonga'}, \r\n      {value: 'TrinviewValuead and Tobago', viewValue: 'TrinviewValuead and Tobago'}, \r\n      {value: 'Tunisia', viewValue: 'Tunisia'}, \r\n      {value: 'Turkey', viewValue: 'Turkey'}, \r\n      {value: 'Turkmenistan', viewValue: 'Turkmenistan'}, \r\n      {value: 'Turks and Caicos Islands', viewValue: 'Turks and Caicos Islands'}, \r\n      {value: 'Tuvalu', viewValue: 'Tuvalu'}, \r\n      {value: 'Uganda', viewValue: 'Uganda'}, \r\n      {value: 'Ukraine', viewValue: 'Ukraine'}, \r\n      {value: 'United Arab Emirates', viewValue: 'United Arab Emirates'}, \r\n      {value: 'United Kingdom', viewValue: 'United Kingdom'}, \r\n      {value: 'United States', viewValue: 'United States'}, \r\n      {value: 'United States Minor Outlying Islands', viewValue: 'United States Minor Outlying Islands'}, \r\n      {value: 'Uruguay', viewValue: 'Uruguay'}, \r\n      {value: 'Uzbekistan', viewValue: 'Uzbekistan'}, \r\n      {value: 'Vanuatu', viewValue: 'Vanuatu'}, \r\n      {value: 'Venezuela', viewValue: 'Venezuela'}, \r\n      {value: 'Viet Nam', viewValue: 'Viet Nam'}, \r\n      {value: 'Virgin Islands, British', viewValue: 'Virgin Islands, British'}, \r\n      {value: 'Virgin Islands, U.S.', viewValue: 'Virgin Islands, U.S.'}, \r\n      {value: 'Wallis and Futuna', viewValue: 'Wallis and Futuna'}, \r\n      {value: 'Western Sahara', viewValue: 'Western Sahara'}, \r\n      {value: 'Yemen', viewValue: 'Yemen'}, \r\n      {value: 'Zambia', viewValue: 'Zambia'}, \r\n      {value: 'Zimbabwe', viewValue: 'Zimbabwe'} \r\n    ]\r\n  }\r\n  //Gets Browser Versions\r\n  private getVersions() {\r\n    this.edgeVersions = [\r\n      {value: \"Edge - 102.0.1245.7\", viewValue: \"Edge - 102.0.1245.7\"},\r\n      {value: \"Edge - 101.0.1210.10\", viewValue: \"Edge - 101.0.1210.10\"},\r\n      {value: \"Edge - 100.0.1185.10\", viewValue: \"Edge - 100.0.1185.10\"},\r\n      {value: \"Edge - 99.0.1150.11\", viewValue: \"Edge - 99.0.1150.11\"},\r\n      {value: \"Edge - 98.0.1108.23\", viewValue: \"Edge - 98.0.1108.23\"},\r\n      {value: \"Edge - 97.0.1072.21\", viewValue: \"Edge - 97.0.1072.21\"},\r\n      \r\n    ];\r\n    this.operaVersions = [\r\n      {value: \"Opera - 12.15\", viewValue: \"Opera - 12.15\"},\r\n      {value: \"Opera - 12.14\", viewValue: \"Opera - 12.14\"},\r\n      {value: \"Opera - 12.13\", viewValue: \"Opera - 12.13\"},\r\n      {value: \"Opera - 12.12\", viewValue: \"Opera - 12.12\"},\r\n      {value: \"Opera - 12.11\", viewValue: \"Opera - 12.11\"},\r\n      {value: \"Opera - 12.10\", viewValue: \"Opera - 12.10\"}\r\n    ];\r\n    this.edgeVersions.map((edge: any) => {\r\n      this.versionList.push(edge);\r\n    });\r\n    this.operaVersions.map((opera: any) => {\r\n      this.versionList.push(opera);\r\n    });\r\n\r\n    //Chrome Version List Get\r\n    this.tagManagementService.getChromeBrowserVersion().subscribe((res: any) => {\r\n      let versionsChromeData = res.slice(0, 6);\r\n      versionsChromeData.map((version: { version: string; }) => {\r\n        this.versionList.push(\r\n            {\r\n                value: \"Chrome - \" + version.version,\r\n                viewValue: \"Chrome - \" + version.version\r\n            }\r\n        )\r\n      });    \r\n    }); \r\n    //FireFox Version List Get\r\n    this.tagManagementService.getFirefoxBrowserVersion().subscribe(res => {\r\n      var firefoxList = [];\r\n      for(var i in res){\r\n        firefoxList.push(\r\n            {\r\n                value: \"Firefox - \" + i,\r\n                viewValue: \"Firefox - \" + i\r\n            }\r\n        )\r\n      }\r\n      firefoxList.slice(firefoxList['length'] - 6, firefoxList['length']).map((version: { version: string; }) => {\r\n        this.versionList.push(\r\n            {\r\n                value: version['value'],\r\n                viewValue: version['viewValue']\r\n            }\r\n        )\r\n      });\r\n    });  \r\n\r\n    return this.versionList;\r\n  }\r\n  //Gets different ways a tag can display stats\r\n  private getRotationTypes() {\r\n    return [\r\n      { value: 'roundRobin', viewValue: 'Round Robin' },\r\n      { value: 'percentage', viewValue: 'Percentage' },\r\n    ];\r\n  }\r\n\r\n  private getParamTypes() {\r\n    return [\r\n      { value: 'static', viewValue: 'Static' },\r\n      { value: 'dynamic', viewValue: 'Dynamic' },\r\n    ];\r\n  }\r\n}\r\n","<form class=\"example-container\" [formGroup]=\"newTagFG\" (submit)=\"saveTag()\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Create New Tag</h3>\r\n          </div>\r\n          {{ newTagFG.value | json }}\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <mat-form-field>\r\n            <input\r\n              matInput\r\n              formControlName=\"name\"\r\n              placeholder=\"Name\"\r\n            />\r\n            <mat-error *ngIf=\"newTagFG.get('name').errors?.required\"\r\n              >Name is required.\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Advertiser</mat-label>\r\n            <mat-select matNativeControl formControlName=\"advertiser\">\r\n              <mat-option value=\"Perion\">Perion</mat-option>\r\n              <mat-option value=\"Apptitude\">Apptitude</mat-option>\r\n              <mat-option value=\"Hopkins\">Hopkins</mat-option>\r\n              <mat-option value=\"Third Party\">Third Party</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Publisher</mat-label>\r\n            <mat-select matNativeControl formControlName=\"publisher\">\r\n              <mat-option value=\"Pub 1\">Pub 1</mat-option>\r\n              <mat-option value=\"Pub 2\">Pub 2</mat-option>\r\n              <mat-option value=\"Pub 3\">Pub 3</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <input\r\n              matInput\r\n              formControlName=\"company\"\r\n              placeholder=\"Company\"\r\n              [(ngModel)]=\"company\"\r\n            />\r\n            <mat-error *ngIf=\"newTagFG.get('company').errors?.required\"\r\n              >Company name is required.\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Browsers Allowed</mat-label>\r\n            <mat-select matNativeControl (selectionChange)=\"getBrowers($event)\" formControlName=\"browser\" multiple>\r\n              <mat-option value=\"Chrome\">Chrome</mat-option>\r\n              <mat-option value=\"Firefox\">Firefox</mat-option>\r\n              <mat-option value=\"Edge\">Edge</mat-option>\r\n              <mat-option value=\"Internet Explorer\">Internet Explorer</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Device Type Allowed</mat-label>\r\n            <mat-select matNativeControl formControlName=\"deviceType\" multiple>\r\n              <mat-option value=\"Desktop\">Desktop</mat-option>\r\n              <mat-option value=\"Mobile\">Mobile</mat-option>              \r\n              <mat-option value=\"Tablet\">Tablet</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Browser Version Allowed</mat-label>\r\n            <mat-select matNativeControl formControlName=\"version\" multiple>\r\n              <mat-option\r\n                *ngFor=\"let browserVersion of browserVersions\"\r\n                [value]=\"browserVersion.value\"\r\n              >\r\n                {{ browserVersion.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Country Allowed</mat-label>\r\n            <mat-select matNativeControl formControlName=\"country\" multiple>\r\n              <mat-option\r\n                *ngFor=\"let country of countries\"\r\n                [value]=\"country.value\"\r\n              >\r\n                {{ country.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Ad Server URL</mat-label>\r\n            <mat-select formControlName=\"adServerUrl\">\r\n              <mat-option value=\"devisedata.com\">devisedata.com</mat-option>\r\n              <mat-option value=\"search.monarchdigital.com\">search.monarchdigital.com</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Stat Type</mat-label>\r\n            <mat-select formControlName=\"statType\">\r\n              <mat-option\r\n                *ngFor=\"let statType of statTypes\"\r\n                [value]=\"statType.value\"\r\n              >\r\n                {{ statType.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Subid (Separated by commas)\" formControlName=\"subid\" />\r\n            <mat-error *ngIf=\"newTagFG.get('subid').errors?.required\"\r\n              >SUBID is required.\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Limit (Separated by commas)\" formControlName=\"limit\" />\r\n            <mat-error *ngIf=\"newTagFG.get('limit').errors?.required\"\r\n              >Limit is required.\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Rotation Type</mat-label>\r\n            <mat-select formControlName=\"rotationType\">\r\n              <mat-option\r\n                *ngFor=\"let rotationType of rotationTypes\"\r\n                [value]=\"rotationType.value\"\r\n              >\r\n                {{ rotationType.viewValue }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n      <div class=\"card card-custom example example-compact gutter-b\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-title\">\r\n            <h3 class=\"card-label\">Tag URLs</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <!-- URL INPUT START -->\r\n          <mat-form-field>\r\n            <input\r\n              matInput\r\n              [(ngModel)]=\"url\"\r\n              formControlName=\"url\"\r\n              placeholder=\"Final URL\"\r\n              (ngModelChange)=\"getUrlParams($event)\"\r\n            />\r\n            <mat-error *ngIf=\"newTagFG.get('url').errors?.required\"\r\n              >Final URL is required.\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <!-- URL INPUT END -->\r\n\r\n          <!-- FORM ARRAY PARAMS START -->\r\n          <ng-container formArrayName=\"params\">\r\n            <div *ngFor=\"let p of params.controls; index as i\">\r\n              <div class=\"params\" [formGroup]=\"p\">\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"key\"\r\n                    placeholder=\"Final Key\"\r\n                  />\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"value\"\r\n                    placeholder=\"Final Value\"\r\n                  />\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                  <mat-label>Param Type</mat-label>\r\n                  <mat-select\r\n                    formControlName=\"paramType\"\r\n                    (selectionChange)=\"updateInitialParams($event, i)\"\r\n                  >\r\n                    <mat-option\r\n                      *ngFor=\"let paramType of paramTypes\"\r\n                      [value]=\"paramType.value\"\r\n                    >\r\n                      {{ paramType.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"initialParam\"\r\n                    placeholder=\"Inital Value\"\r\n                    (keyup)=\"updateInitialParamURL($event, i)\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <p>Inital URL: <br />{{ decodeURL(initialURL) }}</p>\r\n          </ng-container>\r\n          <!-- FORM ARRAY PARAMS END -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- SAVING TAG -->\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <button mat-raised-button color=\"primary\" type=\"submit\">Save</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <button\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        type=\"button\"\r\n        (click)=\"saveTag()\"\r\n      >\r\n        Save as Template\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NewTagComponent } from './new-tag/new-tag.component';\r\nimport { EditTagComponent } from './edit-tag/edit-tag.component';\r\nimport { TagsComponent } from './tags/tags.component';\r\nimport { TagManagementComponent } from './tag-management.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TagManagementComponent,\r\n    children: [\r\n      {\r\n        path: 'tags',\r\n        component: TagsComponent\r\n      },\r\n      {\r\n        path: 'new',\r\n        component: NewTagComponent\r\n      },\r\n      {\r\n        path: 'edit/:id',\r\n        component: EditTagComponent,\r\n        pathMatch: 'full'\r\n      },\r\n      { path: '', redirectTo: '', pathMatch: 'full' },\r\n      { path: '**', redirectTo: '', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TagManagementRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tag-management',\r\n  templateUrl: './tag-management.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class TagManagementComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TagManagementRoutingModule } from './tag-management-routing.module';\r\nimport { TagManagementComponent } from './tag-management.component';\r\nimport { NewTagComponent } from './new-tag/new-tag.component';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { MatIconModule } from '@angular/material/icon';\nimport { TagsComponent } from './tags/tags.component';\nimport { EditTagComponent } from './edit-tag/edit-tag.component';\r\n\r\n@NgModule({\r\n  declarations: [TagManagementComponent, NewTagComponent, TagsComponent, EditTagComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TagManagementRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    NgxDatatableModule,\r\n  ],\r\n  providers: [SnackbarService],\r\n  entryComponents: [NewTagComponent],\r\n})\r\nexport class TagManagementModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { TagsService } from './../../shared/service/tags.service';\r\nimport { TagInterface } from './../../shared/models/tag.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TagManagementService {\r\n\r\n  constructor(\r\n    private tagsService: TagsService,\r\n  ) { }\r\n\r\n  // Get all Chrome objects\r\n  getChromeBrowserVersion() {\r\n    return this.tagsService.getChrome();\r\n  }\r\n  // Get all Chrome objects\r\n  getFirefoxBrowserVersion() {\r\n    return this.tagsService.getFirefox();\r\n  }\r\n  addTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.add(tag);\r\n  }\r\n  getAllTags(): Observable<TagInterface[]> {\r\n    return this.tagsService.getAllTags();\r\n  }\r\n  deleteTag(tagKey: any) {\r\n    return this.tagsService.deleteTag(tagKey);\r\n  }\r\n\r\n  getOneTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.getOneTag(tag);\r\n  }\r\n  updateOneTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.updateOneTag(tag);\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TagManagementService } from '../tag-management.service';\nimport { TagInterface } from 'src/app/shared/models/tag.interface';\nimport { SnackbarService } from 'src/app/shared/service/snackbar.service';\n\n@Component({\n  selector: 'app-tags',\n  templateUrl: './tags.component.html',\n  styleUrls: ['./tags.component.scss']\n})\nexport class TagsComponent implements OnInit {\n  loadingIndicator = true;\n  rows: Array<TagInterface>;\n  constructor(\n    private tagService: TagManagementService,\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private _snackBarService: SnackbarService\n  ) {\n    this.getAllTags();\n   }\n   \n  ngOnInit(): void {\n  }\n  editTag(tagID:any) {\n    this.router.navigateByUrl('/tag-management/edit/' + tagID);\n  }\n  deleteTag(id: any) {\n    if(window.confirm('Do you want to go ahead?')) {\n      this.tagService.deleteTag(id).subscribe((res) => {\n        this.getAllTags();\n        this._snackBarService.info('Deleted a tag');\n      })\n    }\n  }\n  getAllTags() {\n    this.tagService.getAllTags().subscribe((x) => {\n      this.rows = x;\n      console.log(this.rows);\n      this.loadingIndicator = false;\n      this.cdr.detectChanges();\n    });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xl-12\">\n      <div class=\"card card-custom example example-compact gutter-b\">\n        <div class=\"card-header\">\n          <div class=\"card-title\">\n            <h3 class=\"card-label\">View Tags</h3>\n          </div>\n        </div>\n        <div class=\"card-body\">\n          <ngx-datatable\n            class=\"material fullscreen\"\n            [rows]=\"rows\"\n            [columnMode]=\"'force'\"\n            [loadingIndicator]=\"loadingIndicator\"\n            [footerHeight]=\"50\"\n            [rowHeight]=\"50\"\n            [scrollbarH]=\"true\"\n            [headerHeight]=\"50\"\n            [limit]=\"10\"\n          >\n            <ngx-datatable-column name=\"Name\">\n              <ng-template let-column=\"column\" ngx-datatable-header-template>\n                Name\n              </ng-template>\n              <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                {{ value }}\n              </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Company\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Company\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Advertiser\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Advertiser\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Publisher\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Publisher\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Browser\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Browser\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Device Type\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Device Type\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Version\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Browser Version\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Country\">\n                <ng-template let-column=\"column\" ngx-datatable-header-template>\n                    Country\n                </ng-template>\n                <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                  {{ value }}\n                </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"id\">\n              <ng-template ngx-datatable-header-template>Edit</ng-template>\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                <button class=\"btn btn-sm btn-icon btn-icon-white btn-bg-primary m-1\" (click)=\"editTag(row._key)\">\n                    <i class=\"flaticon2-pen\"></i>\n                  </button>\n                  <button class=\"btn btn-sm btn-icon btn-bg-light btn-icon-danger m-1 btn-hover-danger\" (click)=\"deleteTag(row._key)\">\n                    <i class=\"flaticon2-line\"></i>\n                  </button>\n              </ng-template>\n            </ngx-datatable-column>\n          </ngx-datatable>\n        </div>\n      </div>\n    </div>\n</div>\n  "]}