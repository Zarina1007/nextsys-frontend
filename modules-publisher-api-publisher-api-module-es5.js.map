{"version":3,"sources":["webpack:///src/app/modules/publisher-api/publisher-api-routing.module.ts","webpack:///src/app/modules/publisher-api/publisher-api.component.ts","webpack:///src/app/modules/publisher-api/publisher-api.component.html","webpack:///src/app/modules/publisher-api/publisher-api.module.ts","webpack:///src/app/modules/publisher-api/tag-api/tag-api.component.html","webpack:///src/app/modules/publisher-api/tag-api/tag-api.component.ts","webpack:///src/app/modules/tag-management/tag-management.service.ts","webpack:///src/app/shared/service/admin-stats/publisher-api.service.ts"],"names":["routes","path","component","children","pathMatch","redirectTo","PublisherApiRoutingModule","forChild","imports","exports","PublisherApiComponent","selector","templateUrl","styleUrls","PublisherApiModule","declarations","providers","entryComponents","TagApiComponent","route","cdr","userService","publisherApiService","exportDataService","datePipe","currencyPipe","percentPipe","tagManagementService","loadingIndicator","statData","range","startDate","endDate","selectedCompany","getSelectedCompanyFromLocalStorage","params","subscribe","routeParams","paramTagId","tagId","paramApiKey","apiKey","getTagInformation","tagRows","getPublisherAPIData","markForCheck","id","getOneTag","toPromise","then","response","error","exportCsv","statOne","stat","date","transform","subid","country","clicks","searches","cpc","ctr","revenue","push","exportToCsv","nickName","name","company","getPublisherAPIStats","slice","sort","a","b","row","table","rowDetail","toggleExpandRow","event","updateReportingFiltering","TagManagementService","tagsService","getChrome","getFirefox","tag","add","companyId","publisherId","addPublisherTag","getAllTags","companyKey","getCompanyTags","tagKey","deleteTag","updateOneTag","template","addTemplate","getAllTemplates","templateKey","deleteTemplate","getOneTemplate","providedIn","API_PUBLISHER_URL","apiUrl","PublisherAPIService","http","get"],"mappings":"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","file":"modules-publisher-api-publisher-api-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PublisherApiComponent } from './publisher-api.component';\nimport { TagApiComponent } from './tag-api/tag-api.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PublisherApiComponent,\n    children: [\n      {\n        path: ':fullname/:apiKey/:tagId',\n        component: TagApiComponent,\n        pathMatch: 'full',\n      },\n\n      { path: '', redirectTo: '', pathMatch: 'full' },\n      { path: '**', redirectTo: '', pathMatch: 'full' },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PublisherApiRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-publisher-api',\n  templateUrl: './publisher-api.component.html',\n  styleUrls: ['./publisher-api.component.scss']\n})\nexport class PublisherApiComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule, CurrencyPipe, DatePipe, PercentPipe } from '@angular/common';\n\nimport { PublisherApiRoutingModule } from './publisher-api-routing.module';\nimport { PublisherApiComponent } from './publisher-api.component';\nimport { TagApiComponent } from './tag-api/tag-api.component';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\n\n@NgModule({\n  declarations: [PublisherApiComponent, TagApiComponent],\n  imports: [\n    RouterModule,\n    CommonModule,\n    PublisherApiRoutingModule,\n    SharedModule,\n    NgxDatatableModule\n  ],\n  providers: [DatePipe, PercentPipe, CurrencyPipe],\n  entryComponents: [],\n})\nexport class PublisherApiModule { }\n","<app-reporting-filtering (onDatesPicked)=\"updateReportingFiltering($event)\"></app-reporting-filtering>\n\n<div class=\"row py-6\">\n    <button class=\"btn btn-sm btn-primary mx-3\"\n      (click)=\"exportToCsv()\"\n    >\n      Export Stats\n    </button>\n</div>\n\n<ngx-datatable #expandableTable class=\"material fullscreen expandable\" style=\"top: 10px; height: 500px\" [loadingIndicator]=\"loadingIndicator\"\n  [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"50\" [scrollbarV]=\"true\" [scrollbarH]=\"true\"\n  [rows]=\"statData\">\n  \n  <!-- Date -->\n  <ngx-datatable-column name=\"date\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Date\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | date }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- SubID -->\n  <ngx-datatable-column name=\"subid\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Subid\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Searches -->\n  <ngx-datatable-column name=\"clicks\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Clicks\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | number }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Searches -->\n  <ngx-datatable-column name=\"searches\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Searches\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- Country -->\n  <ngx-datatable-column name=\"country\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Country\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- CPC -->\n  <ngx-datatable-column name=\"cpc\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      CPC\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ (value | currency: 'USD') || (0 | currency: 'USD') }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- CTR -->\n  <ngx-datatable-column name=\"ctr\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      CTR\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ (value | percent:'1.2-2') || (0 | percent:'1.2-2') }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <!-- REVENUE -->\n  <ngx-datatable-column name=\"revenue\">\n    <ng-template let-column=\"column\" ngx-datatable-header-template>\n      Revenue\n    </ng-template>\n    <ng-template let-value=\"value\" ngx-datatable-cell-template>\n      <strong>{{ value | currency: 'USD' }}</strong>\n    </ng-template>\n  </ngx-datatable-column>\n</ngx-datatable>","import { CurrencyPipe, DatePipe, PercentPipe } from '@angular/common';\nimport { AfterViewInit, ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PublisherAPIService } from 'src/app/shared/service/admin-stats/publisher-api.service';\nimport { ExportDataService } from 'src/app/shared/service/export-data.service';\nimport { UsersService } from 'src/app/shared/service/users.service';\nimport { TagManagementService } from '../../tag-management/tag-management.service';\n\n@Component({\n  selector: 'app-tag-api',\n  templateUrl: './tag-api.component.html',\n  styleUrls: ['./tag-api.component.scss']\n})\nexport class TagApiComponent implements AfterViewInit {\n  @ViewChild('expandableTable') table: any;\n  loadingIndicator = true;\n  paramTagId: string;\n  paramApiKey: string;\n  selectedCompany: any;\n  statData: any = [];\n  range = {\n    startDate: '',\n    endDate: '',\n  };\n  tagRows: any;\n  constructor(\n    private route: ActivatedRoute,\n    private cdr: ChangeDetectorRef,\n    private userService: UsersService,\n    private publisherApiService: PublisherAPIService,\n    private exportDataService: ExportDataService,\n    private datePipe: DatePipe,\n    private currencyPipe: CurrencyPipe,\n    private percentPipe: PercentPipe,\n    private tagManagementService: TagManagementService,\n  ) { \n    this.selectedCompany = this.getSelectedCompanyFromLocalStorage();\n  }\n\n  async ngAfterViewInit() {\n    this.route.params.subscribe(async routeParams => {\n      this.paramTagId = routeParams.tagId;\n      this.paramApiKey = routeParams.apiKey;\n      this.tagRows = await this.getTagInformation(routeParams.tagId);\n      this.statData = [];\n      this.statData = await this.getPublisherAPIData(this.selectedCompany, this.paramApiKey, this.paramTagId, this.range.startDate, this.range.endDate);\n      this.loadingIndicator = false;\n      this.cdr.markForCheck();\n    });\n  }\n\n  getTagInformation(id: any) {\n    return this.tagManagementService.getOneTag(id).toPromise().then((response) => {\n      return response;\n    }).catch((error) => {\n      return error;\n    })\n  }\n\n  exportToCsv(): void {\n    let exportCsv = [];\n    for (var statOne of this.statData) {\n      let stat = {\n        date: this.datePipe.transform(statOne.date, \"dd MMM yyyy\"),\n        subid: statOne.subid,\n        country: statOne.country,\n        clicks: statOne.clicks,\n        searches: statOne.searches,\n        cpc: this.currencyPipe.transform(statOne.cpc ? statOne.cpc : 0),\n        ctr: this.percentPipe.transform(statOne.ctr, \"1.2-2\"),\n        revenue: statOne.revenue,\n      };\n      exportCsv.push(stat);\n    }\n    this.exportDataService.exportToCsv(exportCsv, this.tagRows.nickName ? this.tagRows.nickName : this.tagRows.name, ['date', 'subid', 'country', 'clicks', 'searches', 'cpc', 'ctr', 'revenue']);\n  }\n\n  public async updateReportingFiltering(range) {\n    this.range = range;\n    this.loadingIndicator = true;\n    this.statData = [];\n    if (this.paramApiKey && this.paramTagId) {\n      this.statData = await this.getPublisherAPIData(this.selectedCompany, this.paramApiKey, this.paramTagId, this.range.startDate, this.range.endDate);\n      this.loadingIndicator = false;\n      this.cdr.markForCheck();\n    }\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  getPublisherAPIData(company: any, apiKey: string, tagId: string, startDate: string, endDate: string) {\n    return this.publisherApiService.getPublisherAPIStats(company, apiKey, tagId, startDate, endDate).toPromise().then((response: any) => {\n      return response.slice().sort((a, b) => b.date - a.date);\n    }).catch((error) => {\n      return error;\n    })\n  }\n\n  toggleExpandRow(row) {\n    // console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event) {\n    // console.log('Detail Toggled', event);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { TagsService } from './../../shared/service/tags.service';\r\nimport { TagInterface } from './../../shared/models/tag.interface';\r\nimport { TemplateInterface } from './../../shared/models/template.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TagManagementService {\r\n\r\n  constructor(\r\n    private tagsService: TagsService,\r\n  ) { }\r\n\r\n  // Get all Chrome objects\r\n  getChromeBrowserVersion() {\r\n    return this.tagsService.getChrome();\r\n  }\r\n  // Get all Chrome objects\r\n  getFirefoxBrowserVersion() {\r\n    return this.tagsService.getFirefox();\r\n  }\r\n  addTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.add(tag);\r\n  }\r\n\r\n  addPublisherTag(tagId: string, companyId: string, publisherId: string) {\r\n    return this.tagsService.addPublisherTag(tagId, companyId, publisherId);\r\n  }\r\n  getAllTags(): Observable<TagInterface[]> {\r\n    return this.tagsService.getAllTags();\r\n  }\r\n  getCompanyTags(companyKey: any) {\r\n    return this.tagsService.getCompanyTags(companyKey);\r\n  }\r\n  \r\n  deleteTag(tagKey: any) {\r\n    return this.tagsService.deleteTag(tagKey);\r\n  }\r\n\r\n  getOneTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.getOneTag(tag);\r\n  }\r\n  updateOneTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.updateOneTag(tag);\r\n  }\r\n  addTemplate(template: TemplateInterface): Observable<TemplateInterface> {\r\n    return this.tagsService.addTemplate(template);\r\n  }\r\n  getAllTemplates(): Observable<TemplateInterface[]> {\r\n    return this.tagsService.getAllTemplates();\r\n  }\r\n  deleteTemplate(templateKey: any) {\r\n    return this.tagsService.deleteTemplate(templateKey);\r\n  }\r\n  getOneTemplate(template: TemplateInterface): Observable<TemplateInterface> {\r\n    return this.tagsService.getOneTemplate(template);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst API_PUBLISHER_URL = `${environment.apiUrl}/publisher-api`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PublisherAPIService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPublisherAPIStats(company, apiKey, tagId, startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_PUBLISHER_URL + '/', {\r\n      params: { company: company, apiKey: apiKey, tag: tagId, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getSummaryMetrics(company, startDate, endDate) {\r\n    return this.http.get<any>(API_PUBLISHER_URL + '/summary_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n}\r\n"]}