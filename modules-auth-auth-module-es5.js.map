{"version":3,"sources":["webpack:///src/app/modules/auth/_models/auth.model.ts","webpack:///src/app/modules/auth/_models/user.model.ts","webpack:///src/app/modules/auth/auth-routing.module.ts","webpack:///src/app/modules/auth/auth.component.ts","webpack:///src/app/modules/auth/auth.component.html","webpack:///src/app/modules/auth/auth.module.ts","webpack:///src/app/modules/auth/forgot-password/forgot-password.component.ts","webpack:///src/app/modules/auth/forgot-password/forgot-password.component.html","webpack:///src/app/modules/auth/login/login.component.ts","webpack:///src/app/modules/auth/login/login.component.html","webpack:///src/app/modules/auth/logout/logout.component.ts","webpack:///src/app/modules/auth/logout/logout.component.html","webpack:///src/app/modules/auth/registration/registration.component.ts","webpack:///src/app/modules/auth/registration/registration.component.html"],"names":["AuthModel","auth","accessToken","refreshToken","expiresIn","UserModel","user","id","username","password","fullname","email","pic","roles","test","occupation","companyName","phone","address","socialNetworks","role","companies","tagsId","advertisers","_key","routes","path","component","children","redirectTo","pathMatch","data","returnUrl","window","location","pathname","AuthRoutingModule","forChild","imports","exports","AuthComponent","today","Date","selector","templateUrl","styleUrls","AuthModule","declarations","ErrorStates","ForgotPasswordComponent","fb","authService","errorState","NotSubmitted","errorStates","unsubscribe","isLoading$","initForm","forgotPasswordForm","group","compose","required","minLength","maxLength","forgotPasswordSubscr","forgotPassword","f","value","pipe","subscribe","result","NoError","HasError","push","controls","submit","LoginComponent","route","router","defaultAuth","currentUserValue","navigate","snapshot","queryParams","toString","loginForm","hasError","loginSubscr","login","length","localStorage","setItem","removeItem","forEach","sb","LogoutComponent","logout","RegistrationComponent","registrationForm","cPassword","agree","validator","MatchPassword","Object","keys","key","newUser","setUser","registrationSubscr","registration"],"mappings":"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","file":"modules-auth-auth-module-es5.js","sourcesContent":["export class AuthModel {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  expiresIn: Date;\r\n\r\n  setAuth(auth: any) {\r\n    this.accessToken = auth.accessToken;\r\n    this.refreshToken = auth.refreshToken;\r\n    this.expiresIn = auth.expiresIn;\r\n  }\r\n}\r\n","import { AuthModel } from './auth.model';\r\nimport { AddressModel } from './address.model';\r\nimport { SocialNetworksModel } from './social-networks.model';\r\nimport { TagInterface } from 'src/app/shared/models/tag.interface';\r\n\r\nexport class UserModel extends AuthModel {\r\n  id: number;\r\n  username: string;\r\n  password: string;\r\n  fullname: string;\r\n  email: string;\r\n  pic: string;\r\n  roles: number[];\r\n  occupation: string;\r\n  companyName: string;\r\n  test: string[];\r\n  phone: string;\r\n  address?: AddressModel;\r\n  socialNetworks?: SocialNetworksModel;\r\n  role: number;\r\n  tags: TagInterface[];\r\n  companies: string[];\r\n  permission: string;\r\n  advertisers?: string[];\r\n  tagsId?: string[];\r\n  _key: string;\r\n\r\n  setUser(user: any) {\r\n    this.id = user.id;\r\n    this.username = user.username || '';\r\n    this.password = user.password || '';\r\n    this.fullname = user.fullname || '';\r\n    this.email = user.email || '';\r\n    this.pic = user.pic || './assets/media/users/default.jpg';\r\n    this.roles = user.roles || [];\r\n    this.test = ['hello', 'world'];\r\n    this.occupation = user.occupation || '';\r\n    this.companyName = user.companyName || '';\r\n    this.phone = user.phone || '';\r\n    this.address = user.address;\r\n    this.socialNetworks = user.socialNetworks;\r\n    this.role = 0;\r\n    this.companies = [];\r\n    this.tagsId = [];\r\n    this.advertisers = [];\r\n    this._key = user._key;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthComponent } from './auth.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'login',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n        data: { returnUrl: window.location.pathname }\r\n      },\r\n      // {\r\n      //   path: 'registration',\r\n      //   component: RegistrationComponent\r\n      // },\r\n      {\r\n        path: 'forgot-password',\r\n        component: ForgotPasswordComponent\r\n      },\r\n      {\r\n        path: 'logout',\r\n        component: LogoutComponent\r\n      },\r\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n      { path: '**', redirectTo: 'login', pathMatch: 'full' },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  today: Date = new Date();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex flex-column flex-root h-100\" id=\"kt_login_wrapper\">\r\n  <!--begin::Login-->\r\n  <div class=\"\r\n      login login-1 login-signin-on\r\n      d-flex\r\n      flex-column flex-lg-row flex-column-fluid\r\n      bg-white\r\n    \" id=\"kt_login\">\r\n    <!--begin::Aside-->\r\n    <div class=\"login-aside d-flex flex-column flex-row-auto\" style=\"background-color: #1b3665\">\r\n      <!--begin::Aside Top-->\r\n      <div class=\"d-flex flex-column-auto flex-column pt-lg-40 pt-15\">\r\n        <!--begin::Aside header-->\r\n        <a href=\"#\" class=\"text-center mb-10\">\r\n          <img src=\"https://nextsys.io/wp-content/uploads/2021/01/logo-NextSys2-symbol@2x.png\" class=\"max-h-70px\"\r\n            alt=\"\" />\r\n        </a>\r\n        <!--end::Aside header-->\r\n\r\n        <!--begin::Aside title-->\r\n        <h3 class=\"font-weight-bolder text-center font-size-h4 font-size-h1-lg\" style=\"color: #ffffff\">\r\n          Platform NextSys<br />\r\n          The Ultimate Traffic Platform\r\n        </h3>\r\n        <!--end::Aside title-->\r\n      </div>\r\n      <!--end::Aside Top-->\r\n\r\n      <!--begin::Aside Bottom-->\r\n      <div class=\"\r\n          aside-img\r\n          d-flex\r\n          flex-row-fluid\r\n          bgi-no-repeat bgi-position-y-bottom bgi-position-x-center\r\n        \"></div>\r\n\r\n      <!-- OLD\r\n      <div\r\n      class=\"\r\n        aside-img\r\n        d-flex\r\n        flex-row-fluid\r\n        bgi-no-repeat bgi-position-y-bottom bgi-position-x-center\r\n      \"\r\n      style=\"\r\n        background-image: url('./assets/media/svg/illustrations/login-visual-1.svg');\r\n      \"\r\n    ></div>\r\n    OLD -->\r\n\r\n      <!--end::Aside Bottom-->\r\n    </div>\r\n    <!--begin::Aside-->\r\n\r\n    <!--begin::Content-->\r\n    <div class=\"\r\n        login-content\r\n        flex-row-fluid\r\n        d-flex\r\n        flex-column\r\n        justify-content-center\r\n        position-relative\r\n        overflow-hidden\r\n        p-7\r\n        mx-auto\r\n      \">\r\n      <!--begin::Content body-->\r\n      <div class=\"d-flex flex-column-fluid flex-center\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n      <!--end::Content body-->\r\n\r\n      <!--begin::Content footer-->\r\n      <div class=\"\r\n          d-flex\r\n          justify-content-lg-start justify-content-center\r\n          align-items-end\r\n          py-7 py-lg-0\r\n        \">\r\n        <a href=\"#\" class=\"text-primary font-weight-bolder font-size-h5\">Terms</a>\r\n        <a href=\"#\" class=\"text-primary ml-10 font-weight-bolder font-size-h5\">Plans</a>\r\n        <a href=\"#\" class=\"text-primary ml-10 font-weight-bolder font-size-h5\">Contact Us</a>\r\n      </div>\r\n      <!--end::Content footer-->\r\n    </div>\r\n    <!--end::Content-->\r\n  </div>\r\n  <!--end::Login-->\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { AuthComponent } from './auth.component';\r\nimport {TranslationModule} from '../i18n/translation.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    RegistrationComponent,\r\n    ForgotPasswordComponent,\r\n    LogoutComponent,\r\n    AuthComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TranslationModule,\r\n    AuthRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n  ]\r\n})\r\nexport class AuthModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { first } from 'rxjs/operators';\r\n\r\nenum ErrorStates {\r\n  NotSubmitted,\r\n  HasError,\r\n  NoError,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  forgotPasswordForm: FormGroup;\r\n  errorState: ErrorStates = ErrorStates.NotSubmitted;\r\n  errorStates = ErrorStates;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService\r\n  ) {\r\n    this.isLoading$ = this.authService.isLoading$;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.forgotPasswordForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.forgotPasswordForm = this.fb.group({\r\n      email: [\r\n        'admin@demo.com',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.errorState = ErrorStates.NotSubmitted;\r\n    const forgotPasswordSubscr = this.authService\r\n      .forgotPassword(this.f.email.value)\r\n      .pipe(first())\r\n      .subscribe((result: boolean) => {\r\n        this.errorState = result ? ErrorStates.NoError : ErrorStates.HasError;\r\n      });\r\n    this.unsubscribe.push(forgotPasswordSubscr);\r\n  }\r\n}\r\n","<div class=\"login-form login-forgot\">\r\n  <!--begin::Form-->\r\n  <form\r\n    class=\"form fv-plugins-bootstrap fv-plugins-framework\"\r\n    novalidate=\"novalidate\"\r\n    [formGroup]=\"forgotPasswordForm\"\r\n    (ngSubmit)=\"submit()\"\r\n    id=\"kt_login_forgot_form\"\r\n    [ngStyle]=\"{\r\n      display: errorState === errorStates.NoError ? 'none' : 'block'\r\n    }\"\r\n  >\r\n    <!--begin::Title-->\r\n    <div class=\"pb-13 pt-lg-0 pt-5\">\r\n      <h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\r\n        Forgotten Password ?\r\n      </h3>\r\n      <p class=\"text-muted font-weight-bold font-size-h4\">\r\n        Enter your email to reset your password\r\n      </p>\r\n    </div>\r\n    <!--end::Title-->\r\n\r\n    <!-- begin::Alert error-->\r\n    <ng-container *ngIf=\"errorState === errorStates.HasError\">\r\n      <div\r\n        class=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\"\r\n      >\r\n        <div class=\"alert-text\">The email detail is incorrect</div>\r\n      </div>\r\n    </ng-container>\r\n    <!-- end::Alert error-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group fv-plugins-icon-container has-danger\">\r\n      <input\r\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\r\n        type=\"email\"\r\n        formControlName=\"email\"\r\n        placeholder=\"Email\"\r\n        name=\"email\"\r\n        autocomplete=\"off\"\r\n        [ngClass]=\"{\r\n          'is-invalid': forgotPasswordForm.controls['email'].invalid\r\n        }\"\r\n      />\r\n\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Email is required',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'email',\r\n          message: 'Email is invalid',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minLength',\r\n          message: 'Email should have at least 3 symbols',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Email should have maximum 360 symbols',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group d-flex flex-wrap pb-lg-0\">\r\n      <button\r\n        type=\"submit\"\r\n        id=\"kt_login_forgot_submit\"\r\n        class=\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-4\"\r\n      >\r\n        Submit\r\n      </button>\r\n      <a\r\n        routerLink=\"/auth/login\"\r\n        id=\"kt_login_forgot_cancel\"\r\n        class=\"btn btn-light-primary font-weight-bolder font-size-h6 px-8 py-4 my-3\"\r\n      >\r\n        Cancel\r\n      </a>\r\n\r\n      <ng-container *ngIf=\"isLoading$ | async\">\r\n        <span class=\"spinner spinner-primary ml-5\"></span>\r\n      </ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n    <div></div>\r\n  </form>\r\n  <!--end::Form-->\r\n\r\n  <ng-container *ngIf=\"errorState === errorStates.NoError\">\r\n    <div\r\n      class=\"card card-custom bgi-no-repeat gutter-b\"\r\n      style=\"\r\n        height: 175px;\r\n        background-color: #4ab58e;\r\n        background-position: calc(100% + 1rem) bottom;\r\n        background-size: 25% auto;\r\n        background-image: url(assets/media/svg/humans/custom-1.svg);\r\n      \"\r\n    >\r\n      <!--begin::Body-->\r\n      <div class=\"card-body d-flex align-items-center\">\r\n        <div class=\"py-2\">\r\n          <h3 class=\"text-white font-weight-bolder mb-3\">Email is correct!</h3>\r\n          <p class=\"text-white font-size-lg\">\r\n            Message with 'recovery' instruction<br />\r\n            has been sent<br />\r\n          </p>\r\n          <a\r\n            routerLink=\"/auth/login\"\r\n            class=\"swal2-confirm btn font-weight-bold btn-light-primary\"\r\n          >\r\n            Ok, got it!\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!--end::Body-->\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n\r\n<ng-template\r\n  #formError\r\n  let-control=\"control\"\r\n  let-message=\"message\"\r\n  let-validation=\"validation\"\r\n>\r\n  <ng-container\r\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\r\n  >\r\n    <div class=\"fv-plugins-message-container\">\r\n      <div class=\"fv-help-block\">\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>\r\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { UserModel } from '../_models/user.model';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  // KeenThemes mock, change it to:\r\n  // defaultAuth = {\r\n  //   email: '',\r\n  //   password: '',\r\n  // };\r\n  defaultAuth: any = {\r\n    email: 'admin@demo.com',\r\n    password: 'demo',\r\n  };\r\n  loginForm: FormGroup;\r\n  hasError: boolean;\r\n  returnUrl: string;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.isLoading$ = this.authService.isLoading$;\r\n    // redirect to home if already logged in\r\n    if (this.authService.currentUserValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl =\r\n      this.route.snapshot.queryParams['returnUrl'.toString()] || '/';\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.loginForm = this.fb.group({\r\n      email: [\r\n        this.defaultAuth.email,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n        ]),\r\n      ],\r\n      password: [\r\n        this.defaultAuth.password,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(100),\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.hasError = false;\r\n    const loginSubscr = this.authService\r\n      .login(this.f.email.value, this.f.password.value)\r\n      .pipe(first())\r\n      .subscribe((user: UserModel) => {\r\n        if (user) {\r\n          if(user.companies.length > 0) {\r\n            localStorage.setItem('company', user.companies[0]);\r\n          } else  {\r\n            localStorage.removeItem('company');\r\n          }\r\n          this.router.navigate([this.returnUrl]);\r\n        } else {\r\n          this.hasError = true;\r\n        }\r\n      });\r\n    this.unsubscribe.push(loginSubscr);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n  }\r\n}\r\n","<!--begin::Signin-->\r\n<div class=\"login-form login-signin\">\r\n  <!--begin::Form-->\r\n  <form\r\n    class=\"form\"\r\n    [formGroup]=\"loginForm\"\r\n    novalidate=\"novalidate\"\r\n    id=\"kt_login_signin_form\"\r\n    (ngSubmit)=\"submit()\"\r\n  >\r\n    <!--begin::Title-->\r\n    <div class=\"pb-13 pt-lg-0 pt-5\">\r\n      <h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\r\n        Welcome to NextSys\r\n      </h3>\r\n      <!-- <span class=\"text-muted font-weight-bold font-size-h4\"\r\n        >New Here?\r\n        <a\r\n          routerLink=\"/auth/registration\"\r\n          id=\"kt_login_signup\"\r\n          class=\"text-primary font-weight-bolder\"\r\n          >{{ 'AUTH.GENERAL.SIGNUP_BUTTON' | translate }}</a\r\n        >\r\n      </span> -->\r\n    </div>\r\n    <!--end::Title-->\r\n\r\n    <!-- begin::Alert info-->\r\n    <!-- <ng-container *ngIf=\"!hasError\">\r\n      <div class=\"mb-10 alert alert-custom alert-light-info alert-dismissible\">\r\n        <div class=\"alert-text\">\r\n          Use account <strong>{{ defaultAuth.email }}</strong> and password\r\n          <strong>{{ defaultAuth.password }}</strong> to continue.\r\n        </div>\r\n      </div>\r\n    </ng-container> -->\r\n    <!-- end::Alert info-->\r\n\r\n    <!-- begin::Alert error-->\r\n    <ng-container *ngIf=\"hasError\">\r\n      <div\r\n        class=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\"\r\n      >\r\n        <div class=\"alert-text\">The login details are incorrect</div>\r\n      </div>\r\n    </ng-container>\r\n    <!-- end::Alert error-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"font-size-h6 font-weight-bolder text-dark\">Email</label>\r\n      <input\r\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        formControlName=\"email\"\r\n        autocomplete=\"off\"\r\n        [ngClass]=\"{ 'is-invalid': loginForm.controls['email'].invalid }\"\r\n      />\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Email is required',\r\n          control: loginForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'email',\r\n          message: 'Email is invalid',\r\n          control: loginForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minLength',\r\n          message: 'Email should have at least 3 symbols',\r\n          control: loginForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Email should have maximum 360 symbols',\r\n          control: loginForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <div class=\"d-flex justify-content-between mt-n5\">\r\n        <label class=\"font-size-h6 font-weight-bolder text-dark pt-5\"\r\n          >Password</label\r\n        >\r\n        <a\r\n          routerLink=\"/auth/forgot-password\"\r\n          class=\"\r\n            text-primary\r\n            font-size-h6 font-weight-bolder\r\n            text-hover-primary\r\n            pt-5\r\n          \"\r\n          id=\"kt_login_forgot\"\r\n        >\r\n          Forgot Password ?\r\n        </a>\r\n      </div>\r\n\r\n      <input\r\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        autocomplete=\"off\"\r\n        formControlName=\"password\"\r\n        [ngClass]=\"{ 'is-invalid': loginForm.controls['password'].invalid }\"\r\n      />\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Password is required',\r\n          control: loginForm.controls['password']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minlength',\r\n          message: 'Password should have at least 3 symbols',\r\n          control: loginForm.controls['password']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Password should have maximum 100 symbols',\r\n          control: loginForm.controls['password']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Action-->\r\n    <div class=\"pb-lg-0 pb-5\">\r\n      <button\r\n        type=\"submit\"\r\n        id=\"kt_login_signin_submit\"\r\n        class=\"\r\n          btn btn-primary\r\n          font-weight-bolder font-size-h6\r\n          px-8\r\n          py-4\r\n          my-3\r\n          mr-3\r\n          w-100\r\n        \"\r\n        [disabled]=\"loginForm.invalid\"\r\n      >\r\n        Sign In\r\n      </button>\r\n\r\n      <ng-container *ngIf=\"isLoading$ | async\">\r\n        <span class=\"spinner spinner-primary ml-5\"></span>\r\n      </ng-container>\r\n    </div>\r\n    <!--end::Action-->\r\n  </form>\r\n  <!--end::Form-->\r\n</div>\r\n<!--end::Signin-->\r\n\r\n<ng-template\r\n  #formError\r\n  let-control=\"control\"\r\n  let-message=\"message\"\r\n  let-validation=\"validation\"\r\n>\r\n  <ng-container\r\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\r\n  >\r\n    <div class=\"fv-plugins-message-container\">\r\n      <div class=\"fv-help-block\">\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.scss'],\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n  constructor(private authService: AuthService) {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>logout works!</p>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmPasswordValidator } from './confirm-password.validator';\r\nimport { UserModel } from '../_models/user.model';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.scss'],\r\n})\r\nexport class RegistrationComponent implements OnInit, OnDestroy {\r\n  registrationForm: FormGroup;\r\n  hasError: boolean;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.isLoading$ = this.authService.isLoading$;\r\n    // redirect to home if already logged in\r\n    if (this.authService.currentUserValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.registrationForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.registrationForm = this.fb.group(\r\n      {\r\n        fullname: [\r\n          '',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(100),\r\n          ]),\r\n        ],\r\n        email: [\r\n          'email@example.com',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.email,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n          ]),\r\n        ],\r\n        password: [\r\n          '',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(100),\r\n          ]),\r\n        ],\r\n        cPassword: [\r\n          '',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(100),\r\n          ]),\r\n        ],\r\n        agree: [false, Validators.compose([Validators.required])],\r\n      },\r\n      {\r\n        validator: ConfirmPasswordValidator.MatchPassword,\r\n      }\r\n    );\r\n  }\r\n\r\n  submit() {\r\n    this.hasError = false;\r\n    const result = {};\r\n    Object.keys(this.f).forEach(key => {\r\n      result[key] = this.f[key].value;\r\n    });\r\n    const newUser = new UserModel();\r\n    newUser.setUser(result);\r\n    const registrationSubscr = this.authService\r\n      .registration(newUser)\r\n      .pipe(first())\r\n      .subscribe((user: UserModel) => {\r\n        if (user) {\r\n          this.router.navigate(['/']);\r\n        } else {\r\n          this.hasError = true;\r\n        }\r\n      });\r\n    this.unsubscribe.push(registrationSubscr);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n  }\r\n}\r\n","<!--begin::Signup-->\r\n<div class=\"login-form login-signup\">\r\n  <!--begin::Form-->\r\n  <form class=\"form\" novalidate=\"novalidate\" id=\"kt_login_signup_form\" [formGroup]=\"registrationForm\"\r\n    (ngSubmit)=\"submit()\">\r\n    <!--begin::Title-->\r\n    <div class=\"pb-13 pt-lg-0 pt-5\">\r\n      <h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\r\n        Sign Up\r\n      </h3>\r\n      <p class=\"text-muted font-weight-bold font-size-h4\">\r\n        Enter your details to create your account\r\n      </p>\r\n    </div>\r\n    <!--end::Title-->\r\n\r\n    <!-- begin::Alert error-->\r\n    <ng-container *ngIf=\"hasError\">\r\n      <div class=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\">\r\n        <div class=\"alert-text\">The registration details are incorrect</div>\r\n      </div>\r\n    </ng-container>\r\n    <!-- end::Alert error-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"font-size-h6 font-weight-bolder text-dark\">Fullname</label>\r\n      <input class=\"\r\n          form-control form-control-solid\r\n          h-auto\r\n          py-7\r\n          px-6\r\n          rounded-lg\r\n          font-size-h6\r\n        \" type=\"text\" name=\"fullname\" formControlName=\"fullname\" placeholder=\"Fullname\" autocomplete=\"off\" [ngClass]=\"{\r\n          'is-invalid': registrationForm.controls['fullname'].invalid\r\n        }\" />\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Fullname is required',\r\n          control: registrationForm.controls['fullname']\r\n        }\"></ng-container>\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'minlength',\r\n          message: 'Fullname should have at least 3 symbols',\r\n          control: registrationForm.controls['fullname']\r\n        }\"></ng-container>\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Fullname should have maximum 100 symbols',\r\n          control: registrationForm.controls['fullname']\r\n        }\"></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"font-size-h6 font-weight-bolder text-dark\">Email</label>\r\n      <input class=\"\r\n          form-control form-control-solid\r\n          h-auto\r\n          py-7\r\n          px-6\r\n          rounded-lg\r\n          font-size-h6\r\n        \" type=\"email\" placeholder=\"Email\" name=\"email\" formControlName=\"email\" autocomplete=\"off\"\r\n        [ngClass]=\"{ 'is-invalid': registrationForm.controls['email'].invalid }\" />\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Email is required',\r\n          control: registrationForm.controls['email']\r\n        }\"></ng-container>\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'email',\r\n          message: 'Email is invalid',\r\n          control: registrationForm.controls['email']\r\n        }\"></ng-container>\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'minlength',\r\n          message: 'Email should have at least 3 symbols',\r\n          control: registrationForm.controls['email']\r\n        }\"></ng-container>\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Email should have maximum 360 symbols',\r\n          control: registrationForm.controls['email']\r\n        }\"></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"font-size-h6 font-weight-bolder text-dark pt-5\">Password</label>\r\n      <input class=\"\r\n          form-control form-control-solid\r\n          h-auto\r\n          py-7\r\n          px-6\r\n          rounded-lg\r\n          font-size-h6\r\n        \" type=\"password\" placeholder=\"Password\" name=\"password\" formControlName=\"password\" autocomplete=\"off\"\r\n        [ngClass]=\"{\r\n          'is-invalid': registrationForm.controls['password'].invalid\r\n        }\" />\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Password is required',\r\n          control: registrationForm.controls['password']\r\n        }\"></ng-container>\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'minlength',\r\n          message: 'Password should have at least 3 symbols',\r\n          control: registrationForm.controls['password']\r\n        }\"></ng-container>\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Password should have maximum 100 symbols',\r\n          control: registrationForm.controls['password']\r\n        }\"></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"font-size-h6 font-weight-bolder text-dark pt-5\">Confirm Password</label>\r\n      <input class=\"\r\n          form-control form-control-solid\r\n          h-auto\r\n          py-7\r\n          px-6\r\n          rounded-lg\r\n          font-size-h6\r\n        \" type=\"password\" placeholder=\"Confirm password\" name=\"cPassword\" autocomplete=\"off\"\r\n        formControlName=\"cPassword\" [ngClass]=\"{\r\n          'is-invalid': registrationForm.controls['cPassword'].invalid\r\n        }\" />\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Confirm Password is required',\r\n          control: registrationForm.controls['cPassword']\r\n        }\"></ng-container>\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'minlength',\r\n          message: 'Confirm Password should have at least 3 symbols',\r\n          control: registrationForm.controls['cPassword']\r\n        }\"></ng-container>\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Confirm Password should have maximum 100 symbols',\r\n          control: registrationForm.controls['cPassword']\r\n        }\"></ng-container>\r\n      <ng-container *ngIf=\"\r\n          registrationForm.controls['cPassword'].errors &&\r\n          registrationForm.controls['cPassword'].errors.ConfirmPassword\r\n        \">\r\n        <div class=\"fv-plugins-message-container\">\r\n          <div class=\"fv-help-block\">\r\n            'Passsword' and 'Confirm Password' didn't match.\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"checkbox mb-0\">\r\n        <input type=\"checkbox\" formControlName=\"agree\" name=\"agree\" />&nbsp;I\r\n        Agree the&nbsp;<a href=\"https://brandclick.com/terms-of-service/\" target=\"_blank\">terms and\r\n          conditions</a>.&nbsp;\r\n        <span></span>\r\n      </label>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group d-flex flex-wrap pb-lg-0 pb-3\">\r\n      <button type=\"submit\" id=\"kt_login_signup_submit\" [disabled]=\"\r\n          registrationForm.invalid || !registrationForm.controls['agree'].value\r\n        \" class=\"\r\n          btn btn-primary\r\n          font-weight-bolder font-size-h6\r\n          px-8\r\n          py-4\r\n          my-3\r\n          mr-4\r\n        \">\r\n        Submit\r\n      </button>\r\n      <a routerLink=\"/auth/login\" type=\"button\" id=\"kt_login_signup_cancel\" class=\"\r\n          btn btn-light-primary\r\n          font-weight-bolder font-size-h6\r\n          px-8\r\n          py-4\r\n          my-3\r\n        \">\r\n        Cancel\r\n      </a>\r\n\r\n      <ng-container *ngIf=\"isLoading$ | async\">\r\n        <span class=\"spinner spinner-primary ml-5\"></span>\r\n      </ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n  </form>\r\n  <!--end::Form-->\r\n</div>\r\n<!--end::Signup-->\r\n\r\n<ng-template #formError let-control=\"control\" let-message=\"message\" let-validation=\"validation\">\r\n  <ng-container *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\">\r\n    <div class=\"fv-plugins-message-container\">\r\n      <div class=\"fv-help-block\">\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>"]}