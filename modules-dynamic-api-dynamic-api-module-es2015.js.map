{"version":3,"sources":["./src/app/modules/dynamic-api/all-dynamic-api/all-dynamic-api.component.ts","./src/app/modules/dynamic-api/all-dynamic-api/all-dynamic-api.component.html","./src/app/modules/dynamic-api/dynamic-api-create/dynamic-api-create.component.ts","./src/app/modules/dynamic-api/dynamic-api-create/dynamic-api-create.component.html","./src/app/modules/dynamic-api/dynamic-api-routing.module.ts","./src/app/modules/dynamic-api/dynamic-api-update/dynamic-api-update.component.ts","./src/app/modules/dynamic-api/dynamic-api-update/dynamic-api-update.component.html","./src/app/modules/dynamic-api/dynamic-api.module.ts","./src/app/shared/service/dynamicApi.service.ts"],"names":[],"mappings":"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","file":"modules-dynamic-api-dynamic-api-module-es2015.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ClipboardService } from 'ngx-clipboard';\nimport { DynamicAPIInterface } from 'src/app/shared/models/dynamicAPI.interface';\nimport { DynamicAPIService } from 'src/app/shared/service/dynamicApi.service';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\nimport { UsersService } from 'src/app/shared/service/users.service';\n\n@Component({\n  selector: 'app-all-dynamic-api',\n  templateUrl: './all-dynamic-api.component.html',\n  styleUrls: ['./all-dynamic-api.component.scss']\n})\nexport class AllDynamicAPIComponent implements OnInit {\n  loadingIndicator = true;\n  rows: Array<DynamicAPIInterface>;\n  hidden = false;\n  //Local Storage Company\n  localStorageCompany: any;\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private router: Router,\n    private userService: UsersService,\n    private notification: NotificationService,\n    private clipboardService: ClipboardService,\n    private dynamicAPIService: DynamicAPIService\n  ) { }\n\n  ngOnInit(): void {\n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\n\n    //access page part\n    if (!this.localStorageCompany) {\n      this.hidden = true;\n      this.notification.showError(\"Please select your Company!\", \"\")\n    } else {\n      this.hidden = false;\n    }\n\n    this.getDynamicApis();\n  }\n\n  getDynamicApis() {\n    this.dynamicAPIService.getDynamicAPIs().subscribe((res) => {\n      this.rows = res;\n      this.loadingIndicator = false;\n      this.cdr.detectChanges();\n    }, (err) => {\n      this.notification.showError(err.error, \"\");\n    });\n  }\n\n  handleAddDynamicAPI() {\n    this.router.navigateByUrl('/dynamicAPI/create');\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  editDynamicAPI(dynamicAPIId: string) {\n    this.router.navigateByUrl('/dynamicAPI/edit/' + dynamicAPIId);\n  }\n\n  deleteDynamicAPI(id: any) {\n    if(window.confirm('Do you want to go ahead?')) {\n      this.dynamicAPIService.deleteDynamicAPI(id).subscribe((data) => {\n        this.getDynamicApis();\n        this.notification.showSuccess('Successfully deleted Dynamic Api.', \"\");\n      }, (error) => {\n        console.log(error)\n        this.notification.showError(`Error deleting deleteDynamicAPI: ${error}`, \"\");\n      });\n    } \n  }\n\n  copyToDynamicAPIClipboard(row: any) {\n    const apiId = row.urlKey;\n    row.copy = true;\n    const dynamicAPILink = `http://api.nextsys.io/api/dynamicAPI/uri/${apiId}?startDate=${row.startDate}&endDate=${row.endDate}`;\n    \n    this.clipboardService.copyFromContent(dynamicAPILink);\n    setTimeout(()=>{    \n      row.copy = false;\n      this.cdr.detectChanges();\n    }, 3000);\n  }\n\n}\n","<div class=\"row\" *ngIf=\"!hidden\">\n    <div class=\"col-xl-12\">\n        <div class=\"card card-custom example example-compact gutter-b\">\n            <div class=\"card-header\">\n                <div class=\"card-title\">\n                    <h3 class=\"card-label\">Dynamic API</h3>\n                </div>\n            </div>\n            <div class=\"card-body\">\n                <div class=\"row pb-3\">\n                    <div class=\"col-md-12\">\n                        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"handleAddDynamicAPI()\">\n                            Create\n                        </button>\n                    </div>\n                </div>\n                <ngx-datatable class=\"material fullscreen\" [rows]=\"rows\" [columnMode]=\"'force'\"\n                    [loadingIndicator]=\"loadingIndicator\" [footerHeight]=\"50\" [rowHeight]=\"50\" [scrollbarH]=\"true\"\n                    [headerHeight]=\"50\" [limit]=\"10\">\n                    <ngx-datatable-column name=\"apiName\" [width]=\"50\">\n                        <ng-template let-column=\"column\" ngx-datatable-header-template>\n                            API Name\n                        </ng-template>\n                        <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                            {{ value }}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"advertiserProvider\" [width]=\"50\">\n                        <ng-template let-column=\"column\" ngx-datatable-header-template>\n                            Advertiser Provider\n                        </ng-template>\n                        <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                            {{ value }}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"dynamicApiUri\" [width]=\"150\">\n                        <ng-template let-column=\"column\" ngx-datatable-header-template>\n                            DynamicAPIUri\n                        </ng-template>\n                        <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                            {{ value }}\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                    <ngx-datatable-column name=\"startDate\" [width]=\"50\">\n                        <ng-template let-column=\"column\" ngx-datatable-header-template>\n                            Start Date\n                        </ng-template>\n                        <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                            {{ value }}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"endDate\" [width]=\"50\">\n                        <ng-template let-column=\"column\" ngx-datatable-header-template>\n                            End Date\n                        </ng-template>\n                        <ng-template let-value=\"value\" ngx-datatable-cell-template>\n                            {{ value }}\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                    <ngx-datatable-column name=\"id\" [width]=\"100\">\n                        <ng-template ngx-datatable-header-template>Action</ng-template>\n                        <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                            <a title=\"Edit Sheet\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-2\"\n                                (click)=\"editDynamicAPI(row._key)\">\n                                <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\n                                    class=\"svg-icon svg-icon-md svg-icon-primary\">\n                                </span>\n                            </a>\n\n                            <a title=\"Delete Sheet\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm mx-2\"\n                                (click)=\"deleteDynamicAPI(row._key)\">\n                                <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"false\"\n                                    class=\"svg-icon svg-icon-md svg-icon-danger\">\n                                </span>\n                            </a>\n\n                            <a title=\"COPY Dynamic API\" class=\"btn btn-icon btn-light btn-hover-info btn-sm mx-2\"\n                                (click)=\"copyToDynamicAPIClipboard(row)\">\n                                <span\n                                    [inlineSVG]=\"row.copy ? './assets/media/svg/icons/General/copied.svg' : './assets/media/svg/icons/General/Clipboard.svg'\"\n                                    cacheSVG=\"false\" class=\"svg-icon svg-icon-md svg-icon-info\">\n                                </span>\n                            </a>\n                        </ng-template>\n                    </ngx-datatable-column>\n                </ngx-datatable>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- begin:: Error -->\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\n    display: block;\n    min-height: 80vh;\n    font-size: 14px;\n    line-height: 1.4;\n    color: #0e1724;\">\n    <!--begin::Content-->\n    <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\n        <p class=\"display-4 font-weight-boldest text-white mb-12\">\n            How did you get here\n        </p>\n        <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\n            Sorry you can't access the page you're looking for.\n        </p>\n        <p class=\"font-size-h4 line-height-md\">\n            There may be a misspelling in the URL entered,<br />or the page you are\n            looking for may no longer exist.\n        </p>\n    </div>\n    <!--end::Content-->\n</div>\n<!-- end:: Error -->","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DynamicAPIService } from 'src/app/shared/service/dynamicApi.service';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\nimport { UsersService } from 'src/app/shared/service/users.service';\n\n@Component({\n  selector: 'app-dynamic-api-create',\n  templateUrl: './dynamic-api-create.component.html',\n  styleUrls: ['./dynamic-api-create.component.scss']\n})\nexport class DynamicApiCreateComponent implements OnInit {\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\n  dynamicAPIFG: FormGroup;\n  hidden = false;\n  localStorageCompany: any;\n\n  options = [\n    { label: 'One Date', value: 'one' },\n    { label: 'Two Date', value: 'two' },\n  ];\n\n  initResponseFields = [\n    {\n      originalApi: ['', Validators.required],\n      returnApi: ['', Validators.required],\n    },\n  ];\n  startDate: Date;\n  endDate: Date;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private notification: NotificationService,\n    private userService: UsersService,\n    private dynamicAPIService: DynamicAPIService,\n  ) { \n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\n  }\n\n  ngOnInit(): void {\n    if (!this.localStorageCompany) {\n      this.hidden = true;\n      this.notification.showError(\"Please select your Company!\", \"\")\n    } else {\n      this.hidden = false;\n    }\n\n    this.dynamicAPIFG = this.fb.group({\n      apiName: new FormControl('', [Validators.required]),\n      advertiserProvider: new FormControl('', [Validators.required]),\n      dynamicApiUri: new FormControl('', [Validators.required, Validators.pattern(/^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$/)]),\n      responseFields: this.fb.array([]),\n      startDate: new FormControl('', [Validators.required]),\n      endDate: new FormControl('', [Validators.required, this.endDateValidator]),\n      filteredCondition: new FormControl(''),\n      subid: new FormControl({ value: '', disabled: true }),\n      split: new FormControl(''),\n      subidField: new FormControl(''),\n    });\n\n    this.initResponseFields.map((item) => {\n      this.responseFields.push(this.fb.group(item));\n    });\n  }\n\n  get startDateControl() {\n    return this.dynamicAPIFG.get('startDate');\n  }\n\n  get endDateControl() {\n    return this.dynamicAPIFG.get('endDate');\n  }\n\n  endDateValidator(control: AbstractControl) {\n    const startDate = new Date(control.parent?.get('startDate').value);\n    const endDate = new Date(control.value);\n\n    if (startDate && endDate && endDate < startDate) {\n      return { invalidRange: true };\n    }\n\n    return null;\n  }\n\n  onFilteredConditionChange(event: any) {\n    const subidControl = this.dynamicAPIFG.get('subid')\n    if (event.value) {\n      subidControl.enable();\n    } else {\n      subidControl.disable();\n    }\n  }\n\n  removeResponseField(i: number) {\n    this.responseFields.removeAt(i);\n  }\n\n  addResponse(event) {\n    this.responseFields.push(this.newResponseFields());\n  }\n\n  newResponseFields(): FormGroup {\n    return this.fb.group({\n      originalApi: ['', Validators.required],\n      returnApi: ['', Validators.required],\n    })\n  }\n\n  get responseFields() {\n    return this.dynamicAPIFG.controls['responseFields'] as FormArray;\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  submitHandle() {\n    this.dynamicAPIFG.markAllAsTouched();\n    if (this.dynamicAPIFG.valid) {\n      const formattedStartDate = this.startDateControl.value.toISOString().slice(0, 10);\n      const formattedEndDate = this.endDateControl.value.toISOString().slice(0, 10);\n      this.dynamicAPIFG.patchValue({\n        startDate: formattedStartDate,\n        endDate: formattedEndDate\n      });\n      this.dynamicAPIService.createDynamicAPI(this.dynamicAPIFG.value).subscribe(res => {\n        this.notification.showSuccess('Successfully added a new Dynamic API.', \"\");\n        this.router.navigate(['/dynamicAPI/all-dynamic-api']);\n      }, (error) => {\n        this.notification.showError(JSON.stringify(error.error), \"\");\n      });\n    }\n  }\n\n}\n","<form class=\"example-container\" [formGroup]=\"dynamicAPIFG\" (submit)=\"submitHandle()\" *ngIf=\"!hidden\">\n    <div class=\"row\">\n        <div class=\"col-xl-8\">\n            <div class=\"row\">\n                <div class=\"col-xl-12\">\n                    <div class=\"card card-custom example example-compact gutter-b\">\n                        <div class=\"card-header\">\n                            <div class=\"card-title\">\n                                <h3 class=\"card-label\">Create Dynamic API</h3>\n                            </div>\n                        </div>\n                        <div class=\"card-body\">\n                            {{dynamicAPIFG.value | json}}\n                            <div class=\"row py-3\">\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"apiName\" placeholder=\"API Name\" />\n                                        <mat-error *ngIf=\"dynamicAPIFG.get('apiName').errors?.required\">API Name is\n                                            required.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"advertiserProvider\"\n                                            placeholder=\"Advertiser Provider\" />\n                                        <mat-error\n                                            *ngIf=\"dynamicAPIFG.get('advertiserProvider').errors?.required\">Advertiser\n                                            Provider is required.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row py-3\">\n                                <div class=\"col-xl-12\">\n                                    <mat-form-field>\n                                        <input type=\"url\" matInput formControlName=\"dynamicApiUri\"\n                                            placeholder=\"DynamicAPIURI\" />\n                                        <mat-error\n                                            *ngIf=\"dynamicAPIFG.get('dynamicApiUri').invalid && (dynamicAPIFG.get('dynamicApiUri').dirty || dynamicAPIFG.get('dynamicApiUri').touched)\">\n                                            <span\n                                                *ngIf=\"dynamicAPIFG.get('dynamicApiUri').errors?.required\">DynamicAPIURI\n                                                is required.</span>\n                                            <span *ngIf=\"dynamicAPIFG.get('dynamicApiUri').errors?.pattern\">Invalid URL\n                                                format.</span>\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row py-3\">\n                                <div class=\"col-xl-3\">\n                                    <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"addResponse($event)\">\n                                        Add Response Fields\n                                    </button>\n                                </div>\n                            </div>\n                            <div formArrayName=\"responseFields\">\n                                <div class=\"row py-2\" *ngFor=\"let subItem of responseFields.controls; let i=index\"\n                                    [formGroupName]=\"i\">\n                                    <div class=\"col-xl-5\">\n                                        <mat-form-field>\n                                            <input matInput placeholder=\"Original API\" formControlName=\"originalApi\" />\n                                            <mat-error *ngIf=\"subItem.get('originalApi').errors?.required\">\n                                                Original API is required.\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-xl-5\">\n                                        <mat-form-field>\n                                            <input matInput placeholder=\"Return API\" formControlName=\"returnApi\" />\n                                            <mat-error *ngIf=\"subItem.get('returnApi').errors?.required\">\n                                                Return API is required.\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-xl-2\">\n                                        <a title=\"Delete Response Field\"\n                                            class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n                                            (click)=\"removeResponseField(i)\">\n                                            <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\"\n                                                cacheSVG=\"false\" class=\"svg-icon svg-icon-md svg-icon-danger\">\n                                            </span>\n                                        </a>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div class=\"row py-2\">\n                                <div class=\"col-xl-4\">\n                                    <mat-form-field>\n                                        <mat-label>Filtered Condition</mat-label>\n                                        <mat-select matNativeControl formControlName=\"filteredCondition\"\n                                            (selectionChange)=\"onFilteredConditionChange($event)\">\n                                            <mat-option value=\"StartsWith\">StartsWith</mat-option>\n                                            <mat-option value=\"EndsWith\">EndsWith</mat-option>\n                                            <mat-option value=\"Contains\">Contains</mat-option>\n                                            <mat-option value=\"Equal\">Equal</mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-4\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"subid\" placeholder=\"Subid\" />\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-4\">\n                                    <mat-form-field>\n                                        <input type=\"number\" matInput formControlName=\"split\" placeholder=\"Split\" />\n                                    </mat-form-field>\n                                </div>\n                            </div>\n\n                            <div class=\"row py-2\">\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <input matInput [matDatepicker]=\"startDatePicker\" placeholder=\"Start Date\"\n                                            formControlName=\"startDate\">\n                                        <mat-datepicker-toggle matSuffix\n                                            [for]=\"startDatePicker\"></mat-datepicker-toggle>\n                                        <mat-datepicker #startDatePicker></mat-datepicker>\n                                        <mat-error *ngIf=\"startDateControl.hasError('required')\">Start Date is\n                                            required</mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <input matInput [matDatepicker]=\"endDatePicker\" placeholder=\"End Date\"\n                                            formControlName=\"endDate\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\n                                        <mat-datepicker #endDatePicker></mat-datepicker>\n                                        <mat-error *ngIf=\"endDateControl.hasError('required')\">End Date is\n                                            required</mat-error>\n                                        <mat-error *ngIf=\"endDateControl.hasError('invalidRange')\">End Date must be\n                                            greater than Start Date</mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row pt-2\">\n                                <div class=\"col-xl-12\">\n                                    <button class=\"save-button\" mat-raised-button color=\"primary\"\n                                        type=\"submit\">Save</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</form>\n<!-- begin:: Error -->\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\n  display: block;\n  min-height: 80vh;\n  font-size: 14px;\n  line-height: 1.4;\n  color: #0e1724;\">\n    <!--begin::Content-->\n    <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\n        <p class=\"display-4 font-weight-boldest text-white mb-12\">\n            How did you get here\n        </p>\n        <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\n            Sorry you can't access the page you're looking for.\n        </p>\n        <p class=\"font-size-h4 line-height-md\">\n            There may be a misspelling in the URL entered,<br />or the page you are\n            looking for may no longer exist.\n        </p>\n    </div>\n    <!--end::Content-->\n</div>\n<!-- end:: Error -->","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllDynamicAPIComponent } from './all-dynamic-api/all-dynamic-api.component';\nimport { DynamicApiCreateComponent } from './dynamic-api-create/dynamic-api-create.component';\nimport { DynamicApiUpdateComponent } from './dynamic-api-update/dynamic-api-update.component';\nimport { DynamicAPIComponent } from './dynamic-api.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DynamicAPIComponent,\n    children: [\n      {\n        path: 'all-dynamic-api',\n        component: AllDynamicAPIComponent,\n      },\n      {\n        path: 'create',\n        component: DynamicApiCreateComponent,\n      },\n      {\n        path: 'edit/:id',\n        component: DynamicApiUpdateComponent,\n        pathMatch: 'full'\n      },\n      { path: '', redirectTo: '', pathMatch: 'full' },\n      { path: '**', redirectTo: '', pathMatch: 'full' },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DynamicAPIRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DynamicAPIInterface } from 'src/app/shared/models/dynamicAPI.interface';\nimport { DynamicAPIService } from 'src/app/shared/service/dynamicApi.service';\nimport { NotificationService } from 'src/app/shared/service/notification.service';\nimport { UsersService } from 'src/app/shared/service/users.service';\n\n@Component({\n  selector: 'app-dynamic-api-update',\n  templateUrl: './dynamic-api-update.component.html',\n  styleUrls: ['./dynamic-api-update.component.scss']\n})\nexport class DynamicApiUpdateComponent implements OnInit {\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\n  dynamicAPIEditFG: FormGroup;\n  hidden = false;\n  localStorageCompany: any;\n  dyanmicAPIData: DynamicAPIInterface;\n  options = [\n    { label: 'One Date', value: 'one' },\n    { label: 'Two Date', value: 'two' },\n  ];\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private notification: NotificationService,\n    private userService: UsersService,\n    private dynamicAPIService: DynamicAPIService,\n  ) { \n    this.localStorageCompany = this.getSelectedCompanyFromLocalStorage();\n  }\n\n  ngOnInit(): void {\n    if (!this.localStorageCompany) {\n      this.hidden = true;\n      this.notification.showError(\"Please select your Company!\", \"\")\n    } else {\n      this.hidden = false;\n    }\n\n    this.dynamicAPIEditFG = this.fb.group({\n      apiName: new FormControl('', [Validators.required]),\n      advertiserProvider: new FormControl('', [Validators.required]),\n      dynamicApiUri: new FormControl('', [Validators.required, Validators.pattern(/^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$/)]),\n      responseFields: this.fb.array([]),\n      startDate: new FormControl('', [Validators.required]),\n      endDate: new FormControl('', [Validators.required, this.endDateValidator]),\n      filteredCondition: new FormControl(''),\n      subid: new FormControl({ value: '', disabled: true }),\n      split: new FormControl(''),\n      subidField: new FormControl(''),\n    });\n\n    if (this.route.snapshot.params.id) {\n      this.dynamicAPIService.getOneDynamicAPI(this.route.snapshot.params.id).subscribe(res => {\n        this.dyanmicAPIData = res;\n        res['responseFields'].map((item) => {\n          this.responseFields.push(this.fb.group(item));\n        });\n        this.dynamicAPIEditFG.patchValue({\n          apiName: res['apiName'],\n          advertiserProvider: res['advertiserProvider'],\n          dynamicApiUri: res['dynamicApiUri'],\n          responseFields: res['responseFields'],\n          startDate: res['startDate'],\n          endDate: res['endDate'],\n          filteredCondition: res['filteredCondition'] !== 'empty' ? res['filteredCondition'] : '',\n          subid: res['subid'] !== 'empty' ? res['subid'] : '',\n          split: res['split'] !== 0 ? res['split'] : '',\n        });\n\n        const subidKeyControl = this.dynamicAPIEditFG.get('subid');\n        if (res['subid']) {\n          subidKeyControl.enable();\n        } else {\n          subidKeyControl.disable();\n        }\n      })\n    }\n  }\n\n  //Gets the Selected Company from Local Storage\n  getSelectedCompanyFromLocalStorage() {\n    return this.userService.getSelectedCompanyFromLocalStorage();\n  }\n\n  onFilteredConditionChange(event: any) {\n    const subidControl = this.dynamicAPIEditFG.get('subid')\n    if (event.value) {\n      subidControl.enable();\n    } else {\n      subidControl.disable();\n    }\n  }\n\n  get startDateControl() {\n    return this.dynamicAPIEditFG.get('startDate');\n  }\n\n  get endDateControl() {\n    return this.dynamicAPIEditFG.get('endDate');\n  }\n\n  endDateValidator(control: AbstractControl) {\n    const startDate = new Date(control.parent?.get('startDate').value);\n    const endDate = new Date(control.value);\n\n    if (startDate && endDate && endDate < startDate) {\n      return { invalidRange: true };\n    }\n\n    return null;\n  }\n\n  removeResponseField(i: number) {\n    this.responseFields.removeAt(i);\n  }\n\n  addResponse(event) {\n    this.responseFields.push(this.newResponseFields());\n  }\n\n  newResponseFields(): FormGroup {\n    return this.fb.group({\n      originalApi: ['', Validators.required],\n      returnApi: ['', Validators.required],\n    })\n  }\n\n  get responseFields() {\n    return this.dynamicAPIEditFG.controls['responseFields'] as FormArray;\n  }\n\n  submitHandle() {\n    this.dynamicAPIEditFG.markAllAsTouched();\n    if (this.dynamicAPIEditFG.valid) {\n      this.dyanmicAPIData = { ...this.dyanmicAPIData, ...this.dynamicAPIEditFG.value };\n      this.dynamicAPIService.updateDynamicAPI(this.dyanmicAPIData).subscribe(res => {\n        this.notification.showSuccess('Successfully updated a new Dynamic API.', \"\");\n        this.router.navigate(['/dynamicAPI/all-dynamic-api']);\n      }, (error) => {\n        this.notification.showError(JSON.stringify(error.error), \"\");\n      })\n    }\n  }\n\n}\n","<form class=\"example-container\" [formGroup]=\"dynamicAPIEditFG\" (submit)=\"submitHandle()\" *ngIf=\"!hidden\">\n    <div class=\"row\">\n        <div class=\"col-xl-8\">\n            <div class=\"row\">\n                <div class=\"col-xl-12\">\n                    <div class=\"card card-custom example example-compact gutter-b\">\n                        <div class=\"card-header\">\n                            <div class=\"card-title\">\n                                <h3 class=\"card-label\">Edit Dynamic API</h3>\n                            </div>\n                        </div>\n                        <div class=\"card-body\">\n                            {{dynamicAPIEditFG.value | json}}\n                            <div class=\"row py-3\">\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"apiName\" placeholder=\"API Name\" />\n                                        <mat-error *ngIf=\"dynamicAPIEditFG.get('apiName').errors?.required\">API Name is\n                                            required.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"advertiserProvider\"\n                                            placeholder=\"Advertiser Provider\" />\n                                        <mat-error\n                                            *ngIf=\"dynamicAPIEditFG.get('advertiserProvider').errors?.required\">Advertiser\n                                            Provider is required.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row py-3\">\n                                <div class=\"col-md-12\">\n                                    <mat-form-field>\n                                        <input type=\"url\" matInput formControlName=\"dynamicApiUri\"\n                                            placeholder=\"DynamicAPIURI\" />\n                                        <mat-error\n                                            *ngIf=\"dynamicAPIEditFG.get('dynamicApiUri').invalid && (dynamicAPIEditFG.get('dynamicApiUri').dirty || dynamicAPIEditFG.get('dynamicApiUri').touched)\">\n                                            <span\n                                                *ngIf=\"dynamicAPIEditFG.get('dynamicApiUri').errors?.required\">DynamicAPIURI\n                                                is required.</span>\n                                            <span *ngIf=\"dynamicAPIEditFG.get('dynamicApiUri').errors?.pattern\">Invalid\n                                                URL format.</span>\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n\n                            <div class=\"row py-3\">\n                                <div class=\"col-xl-3\">\n                                    <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"addResponse($event)\">\n                                        Add Response Fields\n                                    </button>\n                                </div>\n                            </div>\n                            <div formArrayName=\"responseFields\">\n                                <div class=\"row py-2\" *ngFor=\"let subItem of responseFields.controls; let i=index\"\n                                    [formGroupName]=\"i\">\n                                    <div class=\"col-xl-5\">\n                                        <mat-form-field>\n                                            <input matInput placeholder=\"Original API\" formControlName=\"originalApi\" />\n                                            <mat-error *ngIf=\"subItem.get('originalApi').errors?.required\">\n                                                Original API is required.\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-xl-5\">\n                                        <mat-form-field>\n                                            <input matInput placeholder=\"Return API\" formControlName=\"returnApi\" />\n                                            <mat-error *ngIf=\"subItem.get('returnApi').errors?.required\">\n                                                Return API is required.\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-xl-2\">\n                                        <a title=\"Delete Response Field\"\n                                            class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n                                            (click)=\"removeResponseField(i)\">\n                                            <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\"\n                                                cacheSVG=\"false\" class=\"svg-icon svg-icon-md svg-icon-danger\">\n                                            </span>\n                                        </a>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div class=\"row py-2\">\n                                <div class=\"col-xl-4\">\n                                    <mat-form-field>\n                                        <mat-label>Filtered Condition</mat-label>\n                                        <mat-select matNativeControl formControlName=\"filteredCondition\"\n                                            (selectionChange)=\"onFilteredConditionChange($event)\">\n                                            <mat-option value=\"StartsWith\">StartsWith</mat-option>\n                                            <mat-option value=\"EndsWith\">EndsWith</mat-option>\n                                            <mat-option value=\"Contains\">Contains</mat-option>\n                                            <mat-option value=\"Equal\">Equal</mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-4\">\n                                    <mat-form-field>\n                                        <input matInput formControlName=\"subid\" placeholder=\"Subid\" />\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-4\">\n                                    <mat-form-field>\n                                        <input type=\"number\" matInput formControlName=\"split\" placeholder=\"Split\" />\n                                    </mat-form-field>\n                                </div>\n                            </div>\n\n                            <div class=\"row py-2\">\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <input matInput [matDatepicker]=\"startDatePicker\" placeholder=\"Start Date\"\n                                            formControlName=\"startDate\">\n                                        <mat-datepicker-toggle matSuffix\n                                            [for]=\"startDatePicker\"></mat-datepicker-toggle>\n                                        <mat-datepicker #startDatePicker></mat-datepicker>\n                                        <mat-error *ngIf=\"startDateControl.hasError('required')\">Start Date is\n                                            required</mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6\">\n                                    <mat-form-field>\n                                        <input matInput [matDatepicker]=\"endDatePicker\" placeholder=\"End Date\"\n                                            formControlName=\"endDate\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\n                                        <mat-datepicker #endDatePicker></mat-datepicker>\n                                        <mat-error *ngIf=\"endDateControl.hasError('required')\">End Date is\n                                            required</mat-error>\n                                        <mat-error *ngIf=\"endDateControl.hasError('invalidRange')\">End Date must be\n                                            greater than Start Date</mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row pt-2\">\n                                <div class=\"col-md-12\">\n                                    <button class=\"save-button\" mat-raised-button color=\"primary\"\n                                        type=\"submit\">Save</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</form>\n<!-- begin:: Error -->\n<div *ngIf=\"hidden\" class=\"error error-3 d-flex flex-row-fluid bgi-size-cover bgi-position-center\" style=\"background-image: url('./assets/media/error/bg3.jpg'); height: 100%;zoom: 1;\n  display: block;\n  min-height: 80vh;\n  font-size: 14px;\n  line-height: 1.4;\n  color: #0e1724;\">\n    <!--begin::Content-->\n    <div class=\"px-10 px-md-30 py-10 py-md-0 d-flex flex-column justify-content-md-center\">\n        <p class=\"display-4 font-weight-boldest text-white mb-12\">\n            How did you get here\n        </p>\n        <p class=\"font-size-h1 font-weight-boldest text-dark-75\">\n            Sorry you can't access the page you're looking for.\n        </p>\n        <p class=\"font-size-h4 line-height-md\">\n            There may be a misspelling in the URL entered,<br />or the page you are\n            looking for may no longer exist.\n        </p>\n    </div>\n    <!--end::Content-->\n</div>\n<!-- end:: Error -->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DynamicAPIRoutingModule } from './dynamic-api-routing.module';\nimport { AllDynamicAPIComponent } from './all-dynamic-api/all-dynamic-api.component';\nimport { DynamicApiCreateComponent } from './dynamic-api-create/dynamic-api-create.component';\nimport { DynamicApiUpdateComponent } from './dynamic-api-update/dynamic-api-update.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\n\n@NgModule({\n  declarations: [AllDynamicAPIComponent, DynamicApiCreateComponent, DynamicApiUpdateComponent],\n  imports: [\n    CommonModule,\n    DynamicAPIRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatIconModule,\n    MatRadioModule,\n    MatSelectModule,\n    NgxDatatableModule,\n    SharedModule,\n    InlineSVGModule.forRoot()\n  ]\n})\nexport class DynamicAPIModule { }\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { DynamicAPIInterface } from '../models/dynamicAPI.interface';\r\n\r\nconst API_DYNAMICAPI_URL = `${environment.apiUrl}/dynamicAPI`;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class DynamicAPIService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    createDynamicAPI(dynamicAPI: DynamicAPIInterface): Observable<DynamicAPIInterface> {\r\n        return this.http.post<DynamicAPIInterface>(`${API_DYNAMICAPI_URL}/create`, dynamicAPI);\r\n    }\r\n\r\n    getDynamicAPIs(): Observable<DynamicAPIInterface[]> {\r\n        return this.http.get<DynamicAPIInterface[]>(`${API_DYNAMICAPI_URL}/all-dynamicApis`);\r\n    }\r\n\r\n    getOneDynamicAPI(dynamicAPI: DynamicAPIInterface): Observable<DynamicAPIInterface> {\r\n        return this.http.get<DynamicAPIInterface>(\r\n            API_DYNAMICAPI_URL + `/get-dynamicApi/${dynamicAPI}`\r\n        );\r\n    }\r\n\r\n    updateDynamicAPI(dynamicAPI: DynamicAPIInterface): Observable<DynamicAPIInterface> {\r\n        return this.http.put<DynamicAPIInterface>(\r\n            `${API_DYNAMICAPI_URL}/update/${dynamicAPI._key}`,\r\n            dynamicAPI\r\n        );\r\n    }\r\n\r\n    deleteDynamicAPI(dynamicAPI: string) {\r\n        return this.http.delete(API_DYNAMICAPI_URL + `/delete/${dynamicAPI}`);\r\n    }\r\n}"],"sourceRoot":"webpack:///"}