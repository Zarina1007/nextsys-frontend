{"version":3,"sources":["webpack:///src/app/modules/tag-management/tag-management.service.ts","webpack:///src/app/shared/service/admin-stats/apptitude.service.ts","webpack:///src/app/shared/service/admin-stats/lyon.service.ts","webpack:///src/app/shared/service/admin-stats/perion.service.ts","webpack:///src/app/shared/service/admin-stats/rubi.service.ts","webpack:///src/app/shared/service/admin-stats/solexbc.service.ts","webpack:///src/app/shared/service/admin-stats/system1.service.ts","webpack:///src/app/shared/service/admin-stats/verizon.service.ts"],"names":["TagManagementService","tagsService","getChrome","getFirefox","tag","add","tagId","companyId","publisherId","addPublisherTag","getAllTags","companyKey","getCompanyTags","tagKey","deleteTag","getOneTag","updateOneTag","template","addTemplate","getAllTemplates","templateKey","deleteTemplate","getOneTemplate","providedIn","API_APPTITDE_URL","apiUrl","ApptitudeService","http","company","startDate","endDate","get","params","API_LYON_URL","LyonService","set","put","API_PERION_URL","PerionService","console","log","data","API_RUBI_URL","RubiService","API_SOLEXBC_URL","SolexBCService","API_SYSTEM1_URL","System1Service","API_VERIZON_URL","VerizonService"],"mappings":"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","file":"default~dashboard-dashboard-module~modules-admin-reporting-admin-reporting-module~modules-publisher-~bcf54901-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { TagsService } from './../../shared/service/tags.service';\r\nimport { TagInterface } from './../../shared/models/tag.interface';\r\nimport { TemplateInterface } from './../../shared/models/template.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TagManagementService {\r\n\r\n  constructor(\r\n    private tagsService: TagsService,\r\n  ) { }\r\n\r\n  // Get all Chrome objects\r\n  getChromeBrowserVersion() {\r\n    return this.tagsService.getChrome();\r\n  }\r\n  // Get all Chrome objects\r\n  getFirefoxBrowserVersion() {\r\n    return this.tagsService.getFirefox();\r\n  }\r\n  addTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.add(tag);\r\n  }\r\n\r\n  addPublisherTag(tagId: string, companyId: string, publisherId: string) {\r\n    return this.tagsService.addPublisherTag(tagId, companyId, publisherId);\r\n  }\r\n  getAllTags(): Observable<TagInterface[]> {\r\n    return this.tagsService.getAllTags();\r\n  }\r\n  getCompanyTags(companyKey: any) {\r\n    return this.tagsService.getCompanyTags(companyKey);\r\n  }\r\n  \r\n  deleteTag(tagKey: any) {\r\n    return this.tagsService.deleteTag(tagKey);\r\n  }\r\n\r\n  getOneTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.getOneTag(tag);\r\n  }\r\n  updateOneTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.updateOneTag(tag);\r\n  }\r\n  addTemplate(template: TemplateInterface): Observable<TemplateInterface> {\r\n    return this.tagsService.addTemplate(template);\r\n  }\r\n  getAllTemplates(): Observable<TemplateInterface[]> {\r\n    return this.tagsService.getAllTemplates();\r\n  }\r\n  deleteTemplate(templateKey: any) {\r\n    return this.tagsService.deleteTemplate(templateKey);\r\n  }\r\n  getOneTemplate(template: TemplateInterface): Observable<TemplateInterface> {\r\n    return this.tagsService.getOneTemplate(template);\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ChartDataInterface } from '../../models/chartData.interface';\r\n\r\nconst API_APPTITDE_URL = `${environment.apiUrl}/stats/admin/apptitude`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class ApptitudeService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getChartMetrics(company, startDate, endDate): Observable<ChartDataInterface> {\r\n    return this.http.get<any>(API_APPTITDE_URL + '/chart_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n  getPublisherApptitudeStats(company, startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_APPTITDE_URL + '/all-publishers', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getApptitudeStats(company, startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_APPTITDE_URL + '/', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getSummaryMetrics(company, startDate, endDate) {\r\n    return this.http.get<any>(API_APPTITDE_URL + '/summary_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n  getAllDashboardStats(): Observable<any> {\r\n    return this.http.get<any>(API_APPTITDE_URL + '/all-stat');\r\n  }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ChartDataInterface } from '../../models/chartData.interface';\r\n\r\nconst API_LYON_URL = `${environment.apiUrl}/stats/admin/lyon`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LyonService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllStats(startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_LYON_URL + '/all', {\r\n      params: { startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getAllPublisherStats(startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_LYON_URL + '/all-publishers', {\r\n      params: { startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getAllDashboardStats(): Observable<any> {\r\n    return this.http.get<any>(API_LYON_URL + '/all-stat');\r\n  }\r\n\r\n  updateAllLyonStats(company, startDate, endDate): Observable<any> {\r\n    let params = new HttpParams()\r\n      .set('company', company)\r\n      .set('startDate', startDate)\r\n      .set('endDate', endDate);\r\n    return this.http.put<any>(API_LYON_URL + '/', { params });\r\n  }\r\n\r\n  getSummaryMetrics(company, startDate, endDate) {\r\n    return this.http.get<any>(API_LYON_URL + '/summary_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getChartMetrics(company, startDate, endDate): Observable<ChartDataInterface> {\r\n    return this.http.get<any>(API_LYON_URL + '/chart_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ChartDataInterface } from '../../models/chartData.interface';\r\n\r\nconst API_PERION_URL = `${environment.apiUrl}/stats/admin/perion`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PerionService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  testingRoute() {\r\n    console.log('being tested');\r\n    console.log(API_PERION_URL);\r\n    return this.http.get<any>(`${environment.apiUrl}/stats/admin/perion/asd`);\r\n  }\r\n\r\n  getAllPerionStats(company, startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_PERION_URL + '/', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n  getPerTagPerionStats(company, startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_PERION_URL + '/per-tag-stat', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n  getAllDashboardStats(company): Observable<any> {\r\n    return this.http.get<any>(API_PERION_URL + '/all-stat', { params: { company: company } });\r\n  }\r\n  updateAllPerionStats(company, startDate, endDate): Observable<any> {\r\n    var data = {\r\n      \"company\": company,\r\n      'startDate': startDate,\r\n      'endDate': endDate\r\n    }\r\n    return this.http.put<any>(API_PERION_URL + '/', data);\r\n  }\r\n\r\n  getSummaryMetrics(company, startDate, endDate) {\r\n    return this.http.get<any>(API_PERION_URL + '/summary_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getChartMetrics(company, startDate, endDate): Observable<ChartDataInterface> {\r\n    return this.http.get<any>(API_PERION_URL + '/chart_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getPerionChart(company) {\r\n    return this.http.get<any>(API_PERION_URL + '/chart_perion_stat', {\r\n      params: { company: company },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ChartDataInterface } from '../../models/chartData.interface';\r\n\r\nconst API_RUBI_URL = `${environment.apiUrl}/stats/admin/rubi`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class RubiService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getChartMetrics(company, startDate, endDate): Observable<ChartDataInterface> {\r\n    return this.http.get<any>(API_RUBI_URL + '/chart_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n  getAllRubiStats(company, startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_RUBI_URL + '/all-publishers', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getRubiStats(company, startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_RUBI_URL + '/', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getSummaryMetrics(company, startDate, endDate) {\r\n    return this.http.get<any>(API_RUBI_URL + '/summary_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n  updateAllPerionStats(company, startDate, endDate): Observable<any> {\r\n    var data = {\r\n      \"company\": company,\r\n      'startDate': startDate,\r\n      'endDate': endDate\r\n    }\r\n    return this.http.put<any>(API_RUBI_URL + '/', data);\r\n  }\r\n  getAllDashboardStats(): Observable<any> {\r\n    return this.http.get<any>(API_RUBI_URL + '/all-stat');\r\n  }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ChartDataInterface } from '../../models/chartData.interface';\r\n\r\nconst API_SOLEXBC_URL = `${environment.apiUrl}/stats/admin/solexbc`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class SolexBCService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getChartMetrics(company, startDate, endDate): Observable<ChartDataInterface> {\r\n    return this.http.get<any>(API_SOLEXBC_URL + '/chart_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n  getAllSolexBCStats(company, startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_SOLEXBC_URL + '/all-publishers', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getSolexBCStats(company, startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_SOLEXBC_URL + '/', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getSummaryMetrics(company, startDate, endDate) {\r\n    return this.http.get<any>(API_SOLEXBC_URL + '/summary_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n  getAllDashboardStats(): Observable<any> {\r\n    return this.http.get<any>(API_SOLEXBC_URL + '/all-stat');\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst API_SYSTEM1_URL = `${environment.apiUrl}/stats/admin/system1`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class System1Service {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllSystem1Stats(company, startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_SYSTEM1_URL + '/', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getAllDashboardStats(): Observable<any> {\r\n    return this.http.get<any>(API_SYSTEM1_URL + '/all-stat');\r\n  }\r\n\r\n  getSystem1PublisherStats(company, startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_SYSTEM1_URL + '/all-publishers', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getSummaryMetrics(company, startDate, endDate) {\r\n    return this.http.get<any>(API_SYSTEM1_URL + '/summary_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ChartDataInterface } from '../../models/chartData.interface';\r\n\r\nconst API_VERIZON_URL = `${environment.apiUrl}/stats/admin/verizon`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class VerizonService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getChartMetrics(company, startDate, endDate): Observable<ChartDataInterface> {\r\n    return this.http.get<any>(API_VERIZON_URL + '/chart_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n  getAllVerizonStats(company, startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_VERIZON_URL + '/', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getAllPublisherVerizonStats(company, startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_VERIZON_URL + '/all-publishers', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getSummaryMetrics(company, startDate, endDate) {\r\n    return this.http.get<any>(API_VERIZON_URL + '/summary_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n  updateAllPerionStats(company, startDate, endDate): Observable<any> {\r\n    var data = {\r\n      \"company\": company,\r\n      'startDate': startDate,\r\n      'endDate': endDate\r\n    }\r\n    return this.http.put<any>(API_VERIZON_URL + '/', data);\r\n  }\r\n  getAllDashboardStats(): Observable<any> {\r\n    return this.http.get<any>(API_VERIZON_URL + '/all-stat');\r\n  }\r\n}"]}