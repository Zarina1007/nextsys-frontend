{"version":3,"sources":["webpack:///src/app/modules/tag-management/tag-management.service.ts","webpack:///src/app/shared/service/admin-stats/lyon.service.ts","webpack:///src/app/shared/service/admin-stats/perion.service.ts","webpack:///src/app/shared/service/admin-stats/rubi.service.ts","webpack:///src/app/shared/service/admin-stats/solexbc.service.ts","webpack:///src/app/shared/service/admin-stats/verizon.service.ts"],"names":["TagManagementService","tagsService","getChrome","getFirefox","tag","add","getAllTags","companyKey","getCompanyTags","tagKey","deleteTag","getOneTag","updateOneTag","template","addTemplate","getAllTemplates","templateKey","deleteTemplate","getOneTemplate","providedIn","API_LYON_URL","apiUrl","LyonService","http","console","log","get","startDate","endDate","params","company","set","put","API_COMPANY_URL","PerionService","data","API_RUBI_URL","RubiService","API_SOLEXBC_URL","SolexBCService","API_VERIZON_URL","VerizonService"],"mappings":"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","file":"default~dashboard-dashboard-module~modules-admin-reporting-admin-reporting-module~modules-publisher-~bcf54901-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { TagsService } from './../../shared/service/tags.service';\r\nimport { TagInterface } from './../../shared/models/tag.interface';\r\nimport { TemplateInterface } from './../../shared/models/template.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TagManagementService {\r\n\r\n  constructor(\r\n    private tagsService: TagsService,\r\n  ) { }\r\n\r\n  // Get all Chrome objects\r\n  getChromeBrowserVersion() {\r\n    return this.tagsService.getChrome();\r\n  }\r\n  // Get all Chrome objects\r\n  getFirefoxBrowserVersion() {\r\n    return this.tagsService.getFirefox();\r\n  }\r\n  addTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.add(tag);\r\n  }\r\n  getAllTags(): Observable<TagInterface[]> {\r\n    return this.tagsService.getAllTags();\r\n  }\r\n  getCompanyTags(companyKey: any) {\r\n    return this.tagsService.getCompanyTags(companyKey);\r\n  }\r\n  \r\n  deleteTag(tagKey: any) {\r\n    return this.tagsService.deleteTag(tagKey);\r\n  }\r\n\r\n  getOneTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.getOneTag(tag);\r\n  }\r\n  updateOneTag(tag: TagInterface): Observable<TagInterface> {\r\n    return this.tagsService.updateOneTag(tag);\r\n  }\r\n  addTemplate(template: TemplateInterface): Observable<TemplateInterface> {\r\n    return this.tagsService.addTemplate(template);\r\n  }\r\n  getAllTemplates(): Observable<TagInterface[]> {\r\n    return this.tagsService.getAllTemplates();\r\n  }\r\n  deleteTemplate(templateKey: any) {\r\n    return this.tagsService.deleteTemplate(templateKey);\r\n  }\r\n  getOneTemplate(template: TemplateInterface): Observable<TemplateInterface> {\r\n    return this.tagsService.getOneTemplate(template);\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ChartDataInterface } from '../../models/chartData.interface';\r\n\r\nconst API_LYON_URL = `${environment.apiUrl}/stats/admin/lyon`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LyonService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  testingRoute() {\r\n    console.log('being tested');\r\n    console.log(API_LYON_URL);\r\n    return this.http.get<any>('http://localhost:3000/stats/admin/lyon/asd');\r\n  }\r\n\r\n  // getAllLyonStats(company, startDate, endDate): Observable<any> {\r\n  //   return this.http.get<any>(API_LYON_URL + '/all', {\r\n  //     params: { company: company, startDate: startDate, endDate: endDate },\r\n  //   });\r\n  // }\r\n\r\n  getAllStats(startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_LYON_URL + '/all', {\r\n      params: { startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getAllDashboardStats(): Observable<any> {\r\n    return this.http.get<any>(API_LYON_URL + '/all-stat');\r\n  }\r\n\r\n  updateAllLyonStats(company, startDate, endDate): Observable<any> {\r\n    let params = new HttpParams()\r\n      .set('company', company)\r\n      .set('startDate', startDate)\r\n      .set('endDate', endDate);\r\n    return this.http.put<any>(API_LYON_URL + '/', { params });\r\n  }\r\n\r\n  getSummaryMetrics(company) {\r\n    return this.http.get<any>(API_LYON_URL + '/summary_metrics', {\r\n      params: { company: company },\r\n    });\r\n  }\r\n\r\n  getChartMetrics(company, startDate, endDate): Observable<ChartDataInterface> {\r\n    return this.http.get<any>(API_LYON_URL + '/chart_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ChartDataInterface } from '../../models/chartData.interface';\r\n\r\nconst API_COMPANY_URL = `${environment.apiUrl}/stats/admin/perion`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PerionService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  testingRoute() {\r\n    console.log('being tested');\r\n    console.log(API_COMPANY_URL);\r\n    return this.http.get<any>(`${environment.apiUrl}/stats/admin/perion/asd`);\r\n  }\r\n\r\n  getAllPerionStats(company, startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_COMPANY_URL + '/', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n  getPerTagPerionStats(company, startDate, endDate): Observable<any> {\r\n    return this.http.get<any>(API_COMPANY_URL + '/per-tag-stat', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n  getAllDashboardStats(company): Observable<any> {\r\n    return this.http.get<any>(API_COMPANY_URL + '/all-stat', {params: {company: company}});\r\n  }\r\n  updateAllPerionStats(company, startDate, endDate): Observable<any> {\r\n    // let params = new HttpParams()\r\n    //   .set('company', company)\r\n    //   .set('startDate', startDate)\r\n    //   .set('endDate', endDate);\r\n    //   console.log(\"===============\", params)\r\n    var data = {\r\n      \"company\": company,\r\n      'startDate': startDate,\r\n      'endDate': endDate\r\n    }\r\n    return this.http.put<any>(API_COMPANY_URL + '/', data);\r\n  }\r\n\r\n  getSummaryMetrics(company) {\r\n    return this.http.get<any>(API_COMPANY_URL + '/summary_metrics', {\r\n      params: { company: company },\r\n    });\r\n  }\r\n\r\n  getChartMetrics(company, startDate, endDate): Observable<ChartDataInterface> {\r\n    return this.http.get<any>(API_COMPANY_URL + '/chart_metrics', {\r\n      params: { company: company, startDate: startDate, endDate: endDate },\r\n    });\r\n  }\r\n\r\n  getPerionChart(company) {\r\n    return this.http.get<any>(API_COMPANY_URL + '/chart_perion_stat', {\r\n      params: { company: company },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ChartDataInterface } from '../../models/chartData.interface';\r\n\r\nconst API_RUBI_URL = `${environment.apiUrl}/stats/admin/rubi`;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class RubiService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    testingRoute() {\r\n        console.log('being tested');\r\n        console.log(API_RUBI_URL);\r\n        return this.http.get<any>(`${environment.apiUrl}/stats/admin/rubi/test`);\r\n    }\r\n\r\n    getChartMetrics(company, startDate, endDate): Observable<ChartDataInterface> {\r\n        return this.http.get<any>(API_RUBI_URL + '/chart_metrics', {\r\n          params: { company: company, startDate: startDate, endDate: endDate },\r\n        });\r\n    }\r\n    getAllRubiStats(company, startDate, endDate): Observable<any> {\r\n        return this.http.get<any>(API_RUBI_URL + '/all-publishers', {\r\n          params: { company: company, startDate: startDate, endDate: endDate },\r\n        });\r\n    }\r\n\r\n    getRubiStats(company, startDate, endDate): Observable<any> {\r\n      return this.http.get<any>(API_RUBI_URL + '/', {\r\n        params: { company: company, startDate: startDate, endDate: endDate },\r\n      });\r\n  }\r\n\r\n    getSummaryMetrics(company) {\r\n        return this.http.get<any>(API_RUBI_URL + '/summary_metrics', {\r\n          params: { company: company },\r\n        });\r\n    }\r\n    updateAllPerionStats(company, startDate, endDate): Observable<any> {\r\n        var data = {\r\n          \"company\": company,\r\n          'startDate': startDate,\r\n          'endDate': endDate\r\n        }\r\n        return this.http.put<any>(API_RUBI_URL + '/', data);\r\n    }\r\n    getAllDashboardStats(): Observable<any> {\r\n      return this.http.get<any>(API_RUBI_URL + '/all-stat');\r\n    }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ChartDataInterface } from '../../models/chartData.interface';\r\n\r\nconst API_SOLEXBC_URL = `${environment.apiUrl}/stats/admin/solexbc`;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class SolexBCService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    getChartMetrics(company, startDate, endDate): Observable<ChartDataInterface> {\r\n        return this.http.get<any>(API_SOLEXBC_URL + '/chart_metrics', {\r\n          params: { company: company, startDate: startDate, endDate: endDate },\r\n        });\r\n    }\r\n    getAllSolexBCStats(company, startDate, endDate): Observable<any> {\r\n        return this.http.get<any>(API_SOLEXBC_URL + '/all-publishers', {\r\n          params: { company: company, startDate: startDate, endDate: endDate },\r\n        });\r\n    }\r\n\r\n    getSolexBCStats(company, startDate, endDate): Observable<any> {\r\n      return this.http.get<any>(API_SOLEXBC_URL + '/', {\r\n        params: { company: company, startDate: startDate, endDate: endDate },\r\n      });\r\n  }\r\n\r\n    getSummaryMetrics(company) {\r\n        return this.http.get<any>(API_SOLEXBC_URL + '/summary_metrics', {\r\n          params: { company: company },\r\n        });\r\n    }\r\n    getAllDashboardStats(): Observable<any> {\r\n      return this.http.get<any>(API_SOLEXBC_URL + '/all-stat');\r\n    }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ChartDataInterface } from '../../models/chartData.interface';\r\n\r\nconst API_VERIZON_URL = `${environment.apiUrl}/stats/admin/verizon`;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class VerizonService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    getChartMetrics(company, startDate, endDate): Observable<ChartDataInterface> {\r\n        return this.http.get<any>(API_VERIZON_URL + '/chart_metrics', {\r\n          params: { company: company, startDate: startDate, endDate: endDate },\r\n        });\r\n    }\r\n    getAllVerizonStats(company, startDate, endDate): Observable<any> {\r\n        return this.http.get<any>(API_VERIZON_URL + '/', {\r\n          params: { company: company, startDate: startDate, endDate: endDate },\r\n        });\r\n    }\r\n\r\n    getAllPublisherVerizonStats(company, startDate, endDate): Observable<any> {\r\n      return this.http.get<any>(API_VERIZON_URL + '/all-publishers', {\r\n        params: { company: company, startDate: startDate, endDate: endDate },\r\n      });\r\n  }\r\n\r\n    getSummaryMetrics(company) {\r\n        return this.http.get<any>(API_VERIZON_URL + '/summary_metrics', {\r\n          params: { company: company },\r\n        });\r\n    }\r\n    updateAllPerionStats(company, startDate, endDate): Observable<any> {\r\n        var data = {\r\n          \"company\": company,\r\n          'startDate': startDate,\r\n          'endDate': endDate\r\n        }\r\n        return this.http.put<any>(API_VERIZON_URL + '/', data);\r\n    }\r\n    getAllDashboardStats(): Observable<any> {\r\n      return this.http.get<any>(API_VERIZON_URL + '/all-stat');\r\n    }\r\n}"]}