{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tooltip.js"],"names":["MatProgressSpinner__svg_circle_1_Template","rf","ctx","ctx_r0","_spinnerAnimationLabel","_getStrokeDashOffset","_getStrokeCircumference","_getCircleStrokeWidth","_getCircleRadius","MatProgressSpinner__svg_circle_2_Template","ctx_r1","MatSpinner__svg_circle_1_Template","MatSpinner__svg_circle_2_Template","_c0","BASE_SIZE","BASE_STROKE_WIDTH","MatProgressSpinnerBase","_elementRef","_MatProgressSpinnerMixinBase","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","providedIn","factory","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","INDETERMINATE_ANIMATION_TEMPLATE","MatProgressSpinner","platform","_document","animationMode","defaults","_diameter","_value","_fallbackAnimation","mode","trackedDiameters","_diameters","_getSpinnerAnimationLabel","has","head","set","Set","EDGE","TRIDENT","_noopAnimations","_forceAnimations","strokeWidth","element","nativeElement","_styleRoot","_attachStyleNode","animationClass","classList","add","viewBox","Math","PI","styleRoot","currentDiameter","diameters","diametersForElement","get","styleTag","createElement","setAttribute","textContent","_getAnimationText","appendChild","strokeCircumference","replace","toString","size","_strokeWidth","value","newValue","max","min","ɵfac","MatProgressSpinner_Factory","t","ɵcmp","type","selectors","hostAttrs","hostVars","hostBindings","MatProgressSpinner_HostBindings","inputs","color","exportAs","features","decls","vars","consts","template","MatProgressSpinner_Template","_getViewBox","directives","styles","encapsulation","changeDetection","WeakMap","ctorParameters","undefined","decorators","args","String","propDecorators","selector","host","OnPush","None","MatSpinner","elementRef","document","MatSpinner_Factory","MatSpinner_HostBindings","MatSpinner_Template","MatProgressSpinnerModule","ɵmod","ɵinj","MatProgressSpinnerModule_Factory","imports","ngJitMode","declarations","exports","matTooltipAnimations","tooltipState","opacity","transform","offset","SCROLL_THROTTLE_MS","TOOLTIP_PANEL_CLASS","passiveListenerOptions","passive","LONGPRESS_DELAY","getMatTooltipInvalidPositionError","position","Error","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","useFactory","MAT_TOOLTIP_DEFAULT_OPTIONS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","MatTooltip","_overlay","_scrollDispatcher","_viewContainerRef","_ngZone","_platform","_ariaDescriber","_focusMonitor","scrollStrategy","_dir","_defaultOptions","_position","_disabled","_viewInitialized","_pointerExitEventsInitialized","touchGestures","_message","_passiveListeners","_destroyed","_handleKeydown","event","_isTooltipVisible","keyCode","preventDefault","stopPropagation","run","hide","_scrollStrategy","runOutsideAngular","addEventListener","_setupPointerEnterEventsIfNeeded","monitor","pipe","subscribe","origin","show","clearTimeout","_touchstartTimeout","_overlayRef","dispose","_tooltipInstance","removeEventListener","forEach","listener","length","next","complete","removeDescription","message","stopMonitoring","delay","disabled","_showTimeoutId","_hideTimeoutId","overlayRef","_createOverlay","_detach","_portal","TooltipComponent","attach","instance","afterHidden","_setTooltipClass","_tooltipClass","_updateTooltipMessage","isVisible","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","change","scrollableViewProperties","isOverlayClipped","create","direction","positionStrategy","panelClass","_updatePosition","detachments","hasAttached","detach","getConfig","_getOrigin","_getOverlayPosition","withPositions","Object","assign","main","fallback","isLtr","originPosition","originX","originY","ngDevMode","_invertPosition","x","y","overlayPosition","overlayX","overlayY","_markForCheck","onMicrotaskEmpty","updatePosition","tooltipClass","_platformSupportsMouseEvents","push","_setupPointerExitEventsIfNeeded","_disableNativeGesturesIfNecessary","setTimeout","_addListeners","exitListeners","touchendListener","listeners","IOS","ANDROID","gestures","style","nodeName","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","trim","Promise","resolve","then","describe","MatTooltip_Factory","ɵdir","_changeDetectorRef","_breakpointObserver","_visibility","_closeOnInteraction","_onHide","_isHandset","observe","Handset","toState","markForCheck","TooltipComponent_Factory","TooltipComponent_HostBindings","TooltipComponent_click_HostBindingHandler","_handleBodyInteraction","TooltipComponent_Template","TooltipComponent_Template_div_animation_state_start_0_listener","_animationStart","TooltipComponent_Template_div_animation_state_done_0_listener","$event","_animationDone","tmp_0_0","matches","pipes","data","animation","animations","MatTooltipModule","MatTooltipModule_Factory","providers","entryComponents"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAOA;;;;;;;;AAOA;;;;;;AAQA,eAASA,yCAAT,CAAmDC,EAAnD,EAAuDC,GAAvD,EAA4D;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtE;;AACA,kEAAiB,CAAjB,EAAoB,QAApB,EAA8B,CAA9B;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAME,MAAM,GAAG,6DAAf;;AACA,oEAAmB,gBAAnB,EAAqC,wCAAwCA,MAAM,CAACC,sBAApF,EAA4G,mBAA5G,EAAiID,MAAM,CAACE,oBAAP,EAAjI,EAAgK,IAAhK,EAAsK,kBAAtK,EAA0LF,MAAM,CAACG,uBAAP,EAA1L,EAA4N,IAA5N,EAAkO,cAAlO,EAAkPH,MAAM,CAACI,qBAAP,EAAlP,EAAkR,GAAlR;;AACA,oEAAmB,GAAnB,EAAwBJ,MAAM,CAACK,gBAAP,EAAxB;AACH;AAAE;;AACH,eAASC,yCAAT,CAAmDR,EAAnD,EAAuDC,GAAvD,EAA4D;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtE;;AACA,kEAAiB,CAAjB,EAAoB,QAApB,EAA8B,CAA9B;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMS,MAAM,GAAG,6DAAf;;AACA,oEAAmB,mBAAnB,EAAwCA,MAAM,CAACL,oBAAP,EAAxC,EAAuE,IAAvE,EAA6E,kBAA7E,EAAiGK,MAAM,CAACJ,uBAAP,EAAjG,EAAmI,IAAnI,EAAyI,cAAzI,EAAyJI,MAAM,CAACH,qBAAP,EAAzJ,EAAyL,GAAzL;;AACA,oEAAmB,GAAnB,EAAwBG,MAAM,CAACF,gBAAP,EAAxB;AACH;AAAE;;AACH,eAASG,iCAAT,CAA2CV,EAA3C,EAA+CC,GAA/C,EAAoD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC9D;;AACA,kEAAiB,CAAjB,EAAoB,QAApB,EAA8B,CAA9B;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAME,MAAM,GAAG,6DAAf;;AACA,oEAAmB,gBAAnB,EAAqC,wCAAwCA,MAAM,CAACC,sBAApF,EAA4G,mBAA5G,EAAiID,MAAM,CAACE,oBAAP,EAAjI,EAAgK,IAAhK,EAAsK,kBAAtK,EAA0LF,MAAM,CAACG,uBAAP,EAA1L,EAA4N,IAA5N,EAAkO,cAAlO,EAAkPH,MAAM,CAACI,qBAAP,EAAlP,EAAkR,GAAlR;;AACA,oEAAmB,GAAnB,EAAwBJ,MAAM,CAACK,gBAAP,EAAxB;AACH;AAAE;;AACH,eAASI,iCAAT,CAA2CX,EAA3C,EAA+CC,GAA/C,EAAoD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC9D;;AACA,kEAAiB,CAAjB,EAAoB,QAApB,EAA8B,CAA9B;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMS,MAAM,GAAG,6DAAf;;AACA,oEAAmB,mBAAnB,EAAwCA,MAAM,CAACL,oBAAP,EAAxC,EAAuE,IAAvE,EAA6E,kBAA7E,EAAiGK,MAAM,CAACJ,uBAAP,EAAjG,EAAmI,IAAnI,EAAyI,cAAzI,EAAyJI,MAAM,CAACH,qBAAP,EAAzJ,EAAyL,GAAzL;;AACA,oEAAmB,GAAnB,EAAwBG,MAAM,CAACF,gBAAP,EAAxB;AACH;AAAE;;AACH,UAAMK,GAAG,GAAG,2tGAAZ;AACA,UAAMC,SAAS,GAAG,GAAlB;AACA;;;;;AAIA,UAAMC,iBAAiB,GAAG,EAA1B,C,CACA;;AACA;;UACMC,sB,GACF,gCAAYC,WAAZ,EAAyB;AAAA;;AACrB,aAAKA,WAAL,GAAmBA,WAAnB;AACH,O;;AAEL,UAAMC,4BAA4B,GAAG,0EAAWF,sBAAX,EAAmC,SAAnC,CAArC;AACA;;;AACA,UAAMG,oCAAoC,GAAG,IAAI,4DAAJ,CAAmB,sCAAnB,EAA2D;AACpGC,kBAAU,EAAE,MADwF;AAEpGC,eAAO,EAAEC;AAF2F,OAA3D,CAA7C;AAIA;;AACA,eAASA,4CAAT,GAAwD;AACpD,eAAO;AAAEC,kBAAQ,EAAET;AAAZ,SAAP;AACH,O,CACD;AACA;AACA;AACA;;;AACA,UAAMU,gCAAgC,86CAAtC;AAuBA;;;;UAGMC,kB;;;;;AACF,oCAAYR,WAAZ,EAAyBS,QAAzB,EAAmCC,SAAnC,EAA8CC,aAA9C,EAA6DC,QAA7D,EAAuE;AAAA;;AAAA;;AACnE,oCAAMZ,WAAN;AACA,gBAAKA,WAAL,GAAmBA,WAAnB;AACA,gBAAKU,SAAL,GAAiBA,SAAjB;AACA,gBAAKG,SAAL,GAAiBhB,SAAjB;AACA,gBAAKiB,MAAL,GAAc,CAAd;AACA,gBAAKC,kBAAL,GAA0B,KAA1B;AACA;;AACA,gBAAKC,IAAL,GAAY,aAAZ;AACA,cAAMC,gBAAgB,GAAGT,kBAAkB,CAACU,UAA5C;AACA,gBAAK/B,sBAAL,GAA8B,MAAKgC,yBAAL,EAA9B,CAVmE,CAWnE;AACA;;AACA,cAAI,CAACF,gBAAgB,CAACG,GAAjB,CAAqBV,SAAS,CAACW,IAA/B,CAAL,EAA2C;AACvCJ,4BAAgB,CAACK,GAAjB,CAAqBZ,SAAS,CAACW,IAA/B,EAAqC,IAAIE,GAAJ,CAAQ,CAAC1B,SAAD,CAAR,CAArC;AACH;;AACD,gBAAKkB,kBAAL,GAA0BN,QAAQ,CAACe,IAAT,IAAiBf,QAAQ,CAACgB,OAApD;AACA,gBAAKC,eAAL,GAAuBf,aAAa,KAAK,gBAAlB,IAClB,CAAC,CAACC,QAAF,IAAc,CAACA,QAAQ,CAACe,gBAD7B;;AAEA,cAAIf,QAAJ,EAAc;AACV,gBAAIA,QAAQ,CAACN,QAAb,EAAuB;AACnB,oBAAKA,QAAL,GAAgBM,QAAQ,CAACN,QAAzB;AACH;;AACD,gBAAIM,QAAQ,CAACgB,WAAb,EAA0B;AACtB,oBAAKA,WAAL,GAAmBhB,QAAQ,CAACgB,WAA5B;AACH;AACJ;;AA1BkE;AA2BtE;AACD;;;;;qCAwBW;AACP,gBAAMC,OAAO,GAAG,KAAK7B,WAAL,CAAiB8B,aAAjC,CADO,CAEP;AACA;AACA;;AACA,iBAAKC,UAAL,GAAkB,6EAAeF,OAAf,KAA2B,KAAKnB,SAAL,CAAeW,IAA5D;;AACA,iBAAKW,gBAAL,GANO,CAOP;AACA;;;AACA,gBAAMC,cAAc,+CAAwC,KAAKlB,kBAAL,GAA0B,WAA1B,GAAwC,EAAhF,eAApB;AACAc,mBAAO,CAACK,SAAR,CAAkBC,GAAlB,CAAsBF,cAAtB;AACH;AACD;;;;6CACmB;AACf,mBAAO,CAAC,KAAK3B,QAAL,GAAgBR,iBAAjB,IAAsC,CAA7C;AACH;AACD;;;;wCACc;AACV,gBAAMsC,OAAO,GAAG,KAAK7C,gBAAL,KAA0B,CAA1B,GAA8B,KAAKqC,WAAnD;AACA,iCAAcQ,OAAd,cAAyBA,OAAzB;AACH;AACD;;;;oDAC0B;AACtB,mBAAO,IAAIC,IAAI,CAACC,EAAT,GAAc,KAAK/C,gBAAL,EAArB;AACH;AACD;;;;iDACuB;AACnB,gBAAI,KAAKyB,IAAL,KAAc,aAAlB,EAAiC;AAC7B,qBAAO,KAAK3B,uBAAL,MAAkC,MAAM,KAAKyB,MAA7C,IAAuD,GAA9D;AACH,aAHkB,CAInB;;;AACA,gBAAI,KAAKC,kBAAL,IAA2B,KAAKC,IAAL,KAAc,eAA7C,EAA8D;AAC1D,qBAAO,KAAK3B,uBAAL,KAAiC,GAAxC;AACH;;AACD,mBAAO,IAAP;AACH;AACD;;;;kDACwB;AACpB,mBAAO,KAAKuC,WAAL,GAAmB,KAAKtB,QAAxB,GAAmC,GAA1C;AACH;AACD;;;;6CACmB;AACf,gBAAMiC,SAAS,GAAG,KAAKR,UAAvB;AACA,gBAAMS,eAAe,GAAG,KAAK3B,SAA7B;AACA,gBAAM4B,SAAS,GAAGjC,kBAAkB,CAACU,UAArC;AACA,gBAAIwB,mBAAmB,GAAGD,SAAS,CAACE,GAAV,CAAcJ,SAAd,CAA1B;;AACA,gBAAI,CAACG,mBAAD,IAAwB,CAACA,mBAAmB,CAACtB,GAApB,CAAwBoB,eAAxB,CAA7B,EAAuE;AACnE,kBAAMI,QAAQ,GAAG,KAAKlC,SAAL,CAAemC,aAAf,CAA6B,OAA7B,CAAjB;;AACAD,sBAAQ,CAACE,YAAT,CAAsB,uBAAtB,EAA+C,KAAK3D,sBAApD;AACAyD,sBAAQ,CAACG,WAAT,GAAuB,KAAKC,iBAAL,EAAvB;AACAT,uBAAS,CAACU,WAAV,CAAsBL,QAAtB;;AACA,kBAAI,CAACF,mBAAL,EAA0B;AACtBA,mCAAmB,GAAG,IAAInB,GAAJ,EAAtB;AACAkB,yBAAS,CAACnB,GAAV,CAAciB,SAAd,EAAyBG,mBAAzB;AACH;;AACDA,iCAAmB,CAACP,GAApB,CAAwBK,eAAxB;AACH;AACJ;AACD;;;;8CACoB;AAChB,gBAAMU,mBAAmB,GAAG,KAAK7D,uBAAL,EAA5B;;AACA,mBAAOkB,gCAAgC,CACnC;AADmC,aAElC4C,OAFE,CAEM,cAFN,YAEyB,OAAOD,mBAFhC,GAGFC,OAHE,CAGM,YAHN,YAGuB,MAAMD,mBAH7B,GAIFC,OAJE,CAIM,WAJN,YAIsB,KAAKhE,sBAJ3B,EAAP;AAKH;AACD;;;;sDAC4B;AACxB;AACA;AACA,mBAAO,KAAKmB,QAAL,CAAc8C,QAAd,GAAyBD,OAAzB,CAAiC,GAAjC,EAAsC,GAAtC,CAAP;AACH;;;8BA/Fc;AAAE,mBAAO,KAAKtC,SAAZ;AAAwB,W;4BAC5BwC,I,EAAM;AACf,iBAAKxC,SAAL,GAAiB,mFAAqBwC,IAArB,CAAjB;AACA,iBAAKlE,sBAAL,GAA8B,KAAKgC,yBAAL,EAA9B,CAFe,CAGf;;AACA,gBAAI,CAAC,KAAKJ,kBAAN,IAA4B,KAAKgB,UAArC,EAAiD;AAC7C,mBAAKC,gBAAL;AACH;AACJ;AACD;;;;8BACkB;AACd,mBAAO,KAAKsB,YAAL,IAAqB,KAAKhD,QAAL,GAAgB,EAA5C;AACH,W;4BACeiD,K,EAAO;AACnB,iBAAKD,YAAL,GAAoB,mFAAqBC,KAArB,CAApB;AACH;AACD;;;;8BACY;AACR,mBAAO,KAAKvC,IAAL,KAAc,aAAd,GAA8B,KAAKF,MAAnC,GAA4C,CAAnD;AACH,W;4BACS0C,Q,EAAU;AAChB,iBAAK1C,MAAL,GAAcuB,IAAI,CAACoB,GAAL,CAAS,CAAT,EAAYpB,IAAI,CAACqB,GAAL,CAAS,GAAT,EAAc,mFAAqBF,QAArB,CAAd,CAAZ,CAAd;AACH;;;;QApD4BvD,4B;;AA+HjCO,wBAAkB,CAACmD,IAAnB,GAA0B,SAASC,0BAAT,CAAoCC,CAApC,EAAuC;AAAE,eAAO,KAAKA,CAAC,IAAIrD,kBAAV,EAA8B,gEAAyB,wDAAzB,CAA9B,EAA2E,gEAAyB,8DAAzB,CAA3E,EAAsH,gEAAyB,wDAAzB,EAAmC,CAAnC,CAAtH,EAA6J,gEAAyB,0FAAzB,EAAgD,CAAhD,CAA7J,EAAiN,gEAAyBN,oCAAzB,CAAjN,CAAP;AAA0R,OAA7V;;AACAM,wBAAkB,CAACsD,IAAnB,GAA0B,gEAAyB;AAAEC,YAAI,EAAEvD,kBAAR;AAA4BwD,iBAAS,EAAE,CAAC,CAAC,sBAAD,CAAD,CAAvC;AAAmEC,iBAAS,EAAE,CAAC,MAAD,EAAS,aAAT,EAAwB,CAAxB,EAA2B,sBAA3B,CAA9E;AAAkIC,gBAAQ,EAAE,EAA5I;AAAgJC,oBAAY,EAAE,SAASC,+BAAT,CAAyCpF,EAAzC,EAA6CC,GAA7C,EAAkD;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACzQ,sEAAmB,eAAnB,EAAoCC,GAAG,CAAC+B,IAAJ,KAAa,aAAb,GAA6B,CAA7B,GAAiC,IAArE,EAA2E,eAA3E,EAA4F/B,GAAG,CAAC+B,IAAJ,KAAa,aAAb,GAA6B,GAA7B,GAAmC,IAA/H,EAAqI,eAArI,EAAsJ/B,GAAG,CAAC+B,IAAJ,KAAa,aAAb,GAA6B/B,GAAG,CAACsE,KAAjC,GAAyC,IAA/L,EAAqM,MAArM,EAA6MtE,GAAG,CAAC+B,IAAjN;;AACA,sEAAmB,OAAnB,EAA4B/B,GAAG,CAACqB,QAAhC,EAA0C,IAA1C,EAAgD,QAAhD,EAA0DrB,GAAG,CAACqB,QAA9D,EAAwE,IAAxE;;AACA,sEAAmB,yBAAnB,EAA8CrB,GAAG,CAACyC,eAAlD;AACH;AAAE,SAJ4C;AAI1C2C,cAAM,EAAE;AAAEC,eAAK,EAAE,OAAT;AAAkBtD,cAAI,EAAE,MAAxB;AAAgCV,kBAAQ,EAAE,UAA1C;AAAsDsB,qBAAW,EAAE,aAAnE;AAAkF2B,eAAK,EAAE;AAAzF,SAJkC;AAIkEgB,gBAAQ,EAAE,CAAC,oBAAD,CAJ5E;AAIoGC,gBAAQ,EAAE,CAAC,wEAAD,CAJ9G;AAImJC,aAAK,EAAE,CAJ1J;AAI6JC,YAAI,EAAE,CAJnK;AAIsKC,cAAM,EAAE,CAAC,CAAC,qBAAD,EAAwB,eAAxB,EAAyC,WAAzC,EAAsD,OAAtD,EAA+D,CAA/D,EAAkE,UAAlE,CAAD,EAAgF,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,KAApB,EAA2B,CAA3B,EAA8B,gBAA9B,EAAgD,mBAAhD,EAAqE,kBAArE,EAAyF,cAAzF,EAAyG,CAAzG,EAA4G,cAA5G,CAAhF,EAA6M,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,KAApB,EAA2B,CAA3B,EAA8B,mBAA9B,EAAmD,kBAAnD,EAAuE,cAAvE,EAAuF,CAAvF,EAA0F,cAA1F,CAA7M,EAAwT,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,KAApB,CAAxT,CAJ9K;AAImgBC,gBAAQ,EAAE,SAASC,2BAAT,CAAqC7F,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACpnB;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,qEAAkB,CAAlB,EAAqBD,yCAArB,EAAgE,CAAhE,EAAmE,CAAnE,EAAsE,QAAtE,EAAgF,CAAhF;;AACA,qEAAkB,CAAlB,EAAqBS,yCAArB,EAAgE,CAAhE,EAAmE,CAAnE,EAAsE,QAAtE,EAAgF,CAAhF;;AACA;AACH;;AAAC,cAAIR,EAAE,GAAG,CAAT,EAAY;AACV,sEAAmB,OAAnB,EAA4BC,GAAG,CAACqB,QAAhC,EAA0C,IAA1C,EAAgD,QAAhD,EAA0DrB,GAAG,CAACqB,QAA9D,EAAwE,IAAxE;;AACA,qEAAkB,UAAlB,EAA8BrB,GAAG,CAAC+B,IAAJ,KAAa,eAA3C;;AACA,sEAAmB,SAAnB,EAA8B/B,GAAG,CAAC6F,WAAJ,EAA9B;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,cAAlB,EAAkC,IAAlC;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,cAAlB,EAAkC,KAAlC;AACH;AAAE,SAlB4C;AAkB1CC,kBAAU,EAAE,CAAC,wDAAD,EAAkB,4DAAlB,CAlB8B;AAkBUC,cAAM,EAAE,CAACpF,GAAD,CAlBlB;AAkByBqF,qBAAa,EAAE,CAlBxC;AAkB2CC,uBAAe,EAAE;AAlB5D,OAAzB,CAA1B;AAmBA;;;;;;;AAMA1E,wBAAkB,CAACU,UAAnB,GAAgC,IAAIiE,OAAJ,EAAhC;;AACA3E,wBAAkB,CAAC4E,cAAnB,GAAoC;AAAA,eAAM,CACtC;AAAErB,cAAI,EAAE;AAAR,SADsC,EAEtC;AAAEA,cAAI,EAAE;AAAR,SAFsC,EAGtC;AAAEA,cAAI,EAAEsB,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEvB,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBwB,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAArB;AAA/B,SAHsC,EAItC;AAAExB,cAAI,EAAEyB,MAAR;AAAgBF,oBAAU,EAAE,CAAC;AAAEvB,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBwB,gBAAI,EAAE,CAAC,0FAAD;AAAtB,WAArB;AAA5B,SAJsC,EAKtC;AAAExB,cAAI,EAAEsB,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEvB,gBAAI,EAAE,oDAAR;AAAgBwB,gBAAI,EAAE,CAACrF,oCAAD;AAAtB,WAAD;AAA/B,SALsC,CAAN;AAAA,OAApC;;AAOAM,wBAAkB,CAACiF,cAAnB,GAAoC;AAChCnF,gBAAQ,EAAE,CAAC;AAAEyD,cAAI,EAAE;AAAR,SAAD,CADsB;AAEhCnC,mBAAW,EAAE,CAAC;AAAEmC,cAAI,EAAE;AAAR,SAAD,CAFmB;AAGhC/C,YAAI,EAAE,CAAC;AAAE+C,cAAI,EAAE;AAAR,SAAD,CAH0B;AAIhCR,aAAK,EAAE,CAAC;AAAEQ,cAAI,EAAE;AAAR,SAAD;AAJyB,OAApC;AAMA;;AAAc,OAAC,YAAY;AAAE,wEAAyBvD,kBAAzB,EAA6C,CAAC;AACnEuD,cAAI,EAAE,uDAD6D;AAEnEwB,cAAI,EAAE,CAAC;AACCG,oBAAQ,EAAE,sBADX;AAECnB,oBAAQ,EAAE,oBAFX;AAGCoB,gBAAI,EAAE;AACF,sBAAQ,aADN;AAEF,uBAAS,sBAFP;AAGF,kEAHE;AAIF,kCAAoB,UAJlB;AAKF,mCAAqB,UALnB;AAMF,sCAAwB,mCANtB;AAOF,sCAAwB,qCAPtB;AAQF,sCAAwB,uCARtB;AASF,6BAAe;AATb,aAHP;AAcCtB,kBAAM,EAAE,CAAC,OAAD,CAdT;AAeCO,oBAAQ,EAAE,8qDAfX;AAgBCM,2BAAe,EAAE,sEAAwBU,MAhB1C;AAiBCX,yBAAa,EAAE,gEAAkBY,IAjBlC;AAkBCb,kBAAM,EAAE,CAAC,2tGAAD;AAlBT,WAAD;AAF6D,SAAD,CAA7C,EAsBrB,YAAY;AAAE,iBAAO,CAAC;AAAEjB,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE;AAAR,WAA9B,EAAyD;AAAEA,gBAAI,EAAEsB,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AACtGvB,kBAAI,EAAE;AADgG,aAAD,EAEtG;AACCA,kBAAI,EAAE,oDADP;AAECwB,kBAAI,EAAE,CAAC,wDAAD;AAFP,aAFsG;AAA/B,WAAzD,EAKX;AAAExB,gBAAI,EAAEyB,MAAR;AAAgBF,sBAAU,EAAE,CAAC;AAC/BvB,kBAAI,EAAE;AADyB,aAAD,EAE/B;AACCA,kBAAI,EAAE,oDADP;AAECwB,kBAAI,EAAE,CAAC,0FAAD;AAFP,aAF+B;AAA5B,WALW,EAUX;AAAExB,gBAAI,EAAEsB,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAClCvB,kBAAI,EAAE,oDAD4B;AAElCwB,kBAAI,EAAE,CAACrF,oCAAD;AAF4B,aAAD;AAA/B,WAVW,CAAP;AAaF,SAnCS,EAmCP;AAAEc,cAAI,EAAE,CAAC;AACnB+C,gBAAI,EAAE;AADa,WAAD,CAAR;AAEVzD,kBAAQ,EAAE,CAAC;AACXyD,gBAAI,EAAE;AADK,WAAD,CAFA;AAIVnC,qBAAW,EAAE,CAAC;AACdmC,gBAAI,EAAE;AADQ,WAAD,CAJH;AAMVR,eAAK,EAAE,CAAC;AACRQ,gBAAI,EAAE;AADE,WAAD;AANG,SAnCO;AA2Cb,OA3CF;AA4Cd;;;;;;;;UAMM+B,U;;;;;AACF,4BAAYC,UAAZ,EAAwBtF,QAAxB,EAAkCuF,QAAlC,EAA4CrF,aAA5C,EAA2DC,QAA3D,EAAqE;AAAA;;AAAA;;AACjE,sCAAMmF,UAAN,EAAkBtF,QAAlB,EAA4BuF,QAA5B,EAAsCrF,aAAtC,EAAqDC,QAArD;AACA,iBAAKI,IAAL,GAAY,eAAZ;AAFiE;AAGpE;;;QAJoBR,kB;;AAMzBsF,gBAAU,CAACnC,IAAX,GAAkB,SAASsC,kBAAT,CAA4BpC,CAA5B,EAA+B;AAAE,eAAO,KAAKA,CAAC,IAAIiC,UAAV,EAAsB,gEAAyB,wDAAzB,CAAtB,EAAmE,gEAAyB,8DAAzB,CAAnE,EAA8G,gEAAyB,wDAAzB,EAAmC,CAAnC,CAA9G,EAAqJ,gEAAyB,0FAAzB,EAAgD,CAAhD,CAArJ,EAAyM,gEAAyB5F,oCAAzB,CAAzM,CAAP;AAAkR,OAArU;;AACA4F,gBAAU,CAAChC,IAAX,GAAkB,gEAAyB;AAAEC,YAAI,EAAE+B,UAAR;AAAoB9B,iBAAS,EAAE,CAAC,CAAC,aAAD,CAAD,CAA/B;AAAkDC,iBAAS,EAAE,CAAC,MAAD,EAAS,aAAT,EAAwB,MAAxB,EAAgC,eAAhC,EAAiD,CAAjD,EAAoD,aAApD,EAAmE,sBAAnE,CAA7D;AAAyJC,gBAAQ,EAAE,CAAnK;AAAsKC,oBAAY,EAAE,SAAS+B,uBAAT,CAAiClH,EAAjC,EAAqCC,GAArC,EAA0C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC/Q,sEAAmB,OAAnB,EAA4BC,GAAG,CAACqB,QAAhC,EAA0C,IAA1C,EAAgD,QAAhD,EAA0DrB,GAAG,CAACqB,QAA9D,EAAwE,IAAxE;;AACA,sEAAmB,yBAAnB,EAA8CrB,GAAG,CAACyC,eAAlD;AACH;AAAE,SAHoC;AAGlC2C,cAAM,EAAE;AAAEC,eAAK,EAAE;AAAT,SAH0B;AAGNE,gBAAQ,EAAE,CAAC,wEAAD,CAHJ;AAGyCC,aAAK,EAAE,CAHhD;AAGmDC,YAAI,EAAE,CAHzD;AAG4DC,cAAM,EAAE,CAAC,CAAC,qBAAD,EAAwB,eAAxB,EAAyC,WAAzC,EAAsD,OAAtD,EAA+D,CAA/D,EAAkE,UAAlE,CAAD,EAAgF,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,KAApB,EAA2B,CAA3B,EAA8B,gBAA9B,EAAgD,mBAAhD,EAAqE,kBAArE,EAAyF,cAAzF,EAAyG,CAAzG,EAA4G,cAA5G,CAAhF,EAA6M,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,KAApB,EAA2B,CAA3B,EAA8B,mBAA9B,EAAmD,kBAAnD,EAAuE,cAAvE,EAAuF,CAAvF,EAA0F,cAA1F,CAA7M,EAAwT,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,KAApB,CAAxT,CAHpE;AAGyZC,gBAAQ,EAAE,SAASuB,mBAAT,CAA6BnH,EAA7B,EAAiCC,GAAjC,EAAsC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC1f;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,qEAAkB,CAAlB,EAAqBU,iCAArB,EAAwD,CAAxD,EAA2D,CAA3D,EAA8D,QAA9D,EAAwE,CAAxE;;AACA,qEAAkB,CAAlB,EAAqBC,iCAArB,EAAwD,CAAxD,EAA2D,CAA3D,EAA8D,QAA9D,EAAwE,CAAxE;;AACA;AACH;;AAAC,cAAIX,EAAE,GAAG,CAAT,EAAY;AACV,sEAAmB,OAAnB,EAA4BC,GAAG,CAACqB,QAAhC,EAA0C,IAA1C,EAAgD,QAAhD,EAA0DrB,GAAG,CAACqB,QAA9D,EAAwE,IAAxE;;AACA,qEAAkB,UAAlB,EAA8BrB,GAAG,CAAC+B,IAAJ,KAAa,eAA3C;;AACA,sEAAmB,SAAnB,EAA8B/B,GAAG,CAAC6F,WAAJ,EAA9B;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,cAAlB,EAAkC,IAAlC;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,cAAlB,EAAkC,KAAlC;AACH;AAAE,SAjBoC;AAiBlCC,kBAAU,EAAE,CAAC,wDAAD,EAAkB,4DAAlB,CAjBsB;AAiBkBC,cAAM,EAAE,CAACpF,GAAD,CAjB1B;AAiBiCqF,qBAAa,EAAE,CAjBhD;AAiBmDC,uBAAe,EAAE;AAjBpE,OAAzB,CAAlB;;AAkBAY,gBAAU,CAACV,cAAX,GAA4B;AAAA,eAAM,CAC9B;AAAErB,cAAI,EAAE;AAAR,SAD8B,EAE9B;AAAEA,cAAI,EAAE;AAAR,SAF8B,EAG9B;AAAEA,cAAI,EAAEsB,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEvB,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBwB,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAArB;AAA/B,SAH8B,EAI9B;AAAExB,cAAI,EAAEyB,MAAR;AAAgBF,oBAAU,EAAE,CAAC;AAAEvB,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBwB,gBAAI,EAAE,CAAC,0FAAD;AAAtB,WAArB;AAA5B,SAJ8B,EAK9B;AAAExB,cAAI,EAAEsB,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEvB,gBAAI,EAAE,oDAAR;AAAgBwB,gBAAI,EAAE,CAACrF,oCAAD;AAAtB,WAAD;AAA/B,SAL8B,CAAN;AAAA,OAA5B;AAOA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB4F,UAAzB,EAAqC,CAAC;AAC3D/B,cAAI,EAAE,uDADqD;AAE3DwB,cAAI,EAAE,CAAC;AACCG,oBAAQ,EAAE,aADX;AAECC,gBAAI,EAAE;AACF,sBAAQ,aADN;AAEF,sBAAQ,eAFN;AAGF,uBAAS,kCAHP;AAIF,kEAJE;AAKF,kCAAoB,UALlB;AAMF,mCAAqB;AANnB,aAFP;AAUCtB,kBAAM,EAAE,CAAC,OAAD,CAVT;AAWCO,oBAAQ,EAAE,8qDAXX;AAYCM,2BAAe,EAAE,sEAAwBU,MAZ1C;AAaCX,yBAAa,EAAE,gEAAkBY,IAblC;AAcCb,kBAAM,EAAE,CAAC,2tGAAD;AAdT,WAAD;AAFqD,SAAD,CAArC,EAkBrB,YAAY;AAAE,iBAAO,CAAC;AAAEjB,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE;AAAR,WAA9B,EAAyD;AAAEA,gBAAI,EAAEsB,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AACtGvB,kBAAI,EAAE;AADgG,aAAD,EAEtG;AACCA,kBAAI,EAAE,oDADP;AAECwB,kBAAI,EAAE,CAAC,wDAAD;AAFP,aAFsG;AAA/B,WAAzD,EAKX;AAAExB,gBAAI,EAAEyB,MAAR;AAAgBF,sBAAU,EAAE,CAAC;AAC/BvB,kBAAI,EAAE;AADyB,aAAD,EAE/B;AACCA,kBAAI,EAAE,oDADP;AAECwB,kBAAI,EAAE,CAAC,0FAAD;AAFP,aAF+B;AAA5B,WALW,EAUX;AAAExB,gBAAI,EAAEsB,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAClCvB,kBAAI,EAAE,oDAD4B;AAElCwB,kBAAI,EAAE,CAACrF,oCAAD;AAF4B,aAAD;AAA/B,WAVW,CAAP;AAaF,SA/BS,EA+BP,IA/BO;AA+BC,OA/BhB;AAiCd;;;;;;;;;UAOMkG,wB;;;;AAENA,8BAAwB,CAACC,IAAzB,GAAgC,+DAAwB;AAAEtC,YAAI,EAAEqC;AAAR,OAAxB,CAAhC;AACAA,8BAAwB,CAACE,IAAzB,GAAgC,+DAAwB;AAAElG,eAAO,EAAE,SAASmG,gCAAT,CAA0C1C,CAA1C,EAA6C;AAAE,iBAAO,KAAKA,CAAC,IAAIuC,wBAAV,GAAP;AAA+C,SAAzG;AAA2GI,eAAO,EAAE,CAAC,CAAC,sEAAD,EAAkB,4DAAlB,CAAD,EAAkC,sEAAlC;AAApH,OAAxB,CAAhC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BL,wBAA1B,EAAoD;AAAEM,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAAClG,kBAAD,EAAqBsF,UAArB,CAAP;AAA0C,WAAxE;AAA0EU,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,sEAAD,EAAkB,4DAAlB,CAAP;AAAyC,WAA1I;AAA4IG,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAACnG,kBAAD,EAAqBsF,UAArB,EAAiC,sEAAjC,CAAP;AAA2D;AAA9N,SAApD,CAAnD;AAA2U,OAA1V;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBM,wBAAzB,EAAmD,CAAC;AACzErC,cAAI,EAAE,sDADmE;AAEzEwB,cAAI,EAAE,CAAC;AACCiB,mBAAO,EAAE,CAAC,sEAAD,EAAkB,4DAAlB,CADV;AAECG,mBAAO,EAAE,CACLnG,kBADK,EAELsF,UAFK,EAGL,sEAHK,CAFV;AAOCY,wBAAY,EAAE,CACVlG,kBADU,EAEVsF,UAFU;AAPf,WAAD;AAFmE,SAAD,CAAnD,EAcrB,IAdqB,EAcf,IAde;AAcP,OAdR;AAgBd;;;;;;;;AAQA;;;AAMA;;;;;;;;;;;;;;;;;;AChbgBA;;;;;;;;AAOA;;;;;;AAYA,UAAMc,oBAAoB,GAAG;AACzB;AACAC,oBAAY,EAAE,qEAAQ,OAAR,EAAiB,CAC3B,mEAAM,uBAAN,EAA+B,mEAAM;AAAEC,iBAAO,EAAE,CAAX;AAAcC,mBAAS,EAAE;AAAzB,SAAN,CAA/B,CAD2B,EAE3B,mEAAM,SAAN,EAAiB,mEAAM;AAAEA,mBAAS,EAAE;AAAb,SAAN,CAAjB,CAF2B,EAG3B,wEAAW,cAAX,EAA2B,qEAAQ,kCAAR,EAA4C,uEAAU,CAC7E,mEAAM;AAAED,iBAAO,EAAE,CAAX;AAAcC,mBAAS,EAAE,UAAzB;AAAqCC,gBAAM,EAAE;AAA7C,SAAN,CAD6E,EAE7E,mEAAM;AAAEF,iBAAO,EAAE,GAAX;AAAgBC,mBAAS,EAAE,aAA3B;AAA0CC,gBAAM,EAAE;AAAlD,SAAN,CAF6E,EAG7E,mEAAM;AAAEF,iBAAO,EAAE,CAAX;AAAcC,mBAAS,EAAE,UAAzB;AAAqCC,gBAAM,EAAE;AAA7C,SAAN,CAH6E,CAAV,CAA5C,CAA3B,CAH2B,EAQ3B,wEAAW,aAAX,EAA0B,qEAAQ,kCAAR,EAA4C,mEAAM;AAAEF,iBAAO,EAAE;AAAX,SAAN,CAA5C,CAA1B,CAR2B,CAAjB;AAFW,OAA7B;AAcA;;AACA,UAAMG,kBAAkB,GAAG,EAA3B;AACA;;AACA,UAAMC,mBAAmB,GAAG,mBAA5B;AACA;;AACA,UAAMC,sBAAsB,GAAG,+FAAgC;AAAEC,eAAO,EAAE;AAAX,OAAhC,CAA/B;AACA;;;;;AAIA,UAAMC,eAAe,GAAG,GAAxB;AACA;;;;;AAIA,eAASC,iCAAT,CAA2CC,QAA3C,EAAqD;AACjD,eAAOC,KAAK,8BAAsBD,QAAtB,oBAAZ;AACH;AACD;;;AACA,UAAME,2BAA2B,GAAG,IAAI,4DAAJ,CAAmB,6BAAnB,CAApC;AACA;;AACA,eAASC,mCAAT,CAA6CC,OAA7C,EAAsD;AAClD,eAAO;AAAA,iBAAMA,OAAO,CAACC,gBAAR,CAAyBC,UAAzB,CAAoC;AAAEC,0BAAc,EAAEb;AAAlB,WAApC,CAAN;AAAA,SAAP;AACH;AACD;;;AACA,UAAMc,4CAA4C,GAAG;AACjDC,eAAO,EAAEP,2BADwC;AAEjDQ,YAAI,EAAE,CAAC,4DAAD,CAF2C;AAGjDC,kBAAU,EAAER;AAHqC,OAArD;AAKA;;AACA,UAAMS,2BAA2B,GAAG,IAAI,4DAAJ,CAAmB,6BAAnB,EAAkD;AAClFhI,kBAAU,EAAE,MADsE;AAElFC,eAAO,EAAEgI;AAFyE,OAAlD,CAApC;AAIA;;AACA,eAASA,mCAAT,GAA+C;AAC3C,eAAO;AACHC,mBAAS,EAAE,CADR;AAEHC,mBAAS,EAAE,CAFR;AAGHC,2BAAiB,EAAE;AAHhB,SAAP;AAKH;AACD;;;;;;;;UAMMC,U;AACF,4BAAYC,QAAZ,EAAsBzI,WAAtB,EAAmC0I,iBAAnC,EAAsDC,iBAAtD,EAAyEC,OAAzE,EAAkFC,SAAlF,EAA6FC,cAA7F,EAA6GC,aAA7G,EAA4HC,cAA5H,EAA4IC,IAA5I,EAAkJC,eAAlJ,EAAmK;AAAA;;AAAA;;AAC/J,eAAKT,QAAL,GAAgBA,QAAhB;AACA,eAAKzI,WAAL,GAAmBA,WAAnB;AACA,eAAK0I,iBAAL,GAAyBA,iBAAzB;AACA,eAAKC,iBAAL,GAAyBA,iBAAzB;AACA,eAAKC,OAAL,GAAeA,OAAf;AACA,eAAKC,SAAL,GAAiBA,SAAjB;AACA,eAAKC,cAAL,GAAsBA,cAAtB;AACA,eAAKC,aAAL,GAAqBA,aAArB;AACA,eAAKE,IAAL,GAAYA,IAAZ;AACA,eAAKC,eAAL,GAAuBA,eAAvB;AACA,eAAKC,SAAL,GAAiB,OAAjB;AACA,eAAKC,SAAL,GAAiB,KAAjB;AACA,eAAKC,gBAAL,GAAwB,KAAxB;AACA,eAAKC,6BAAL,GAAqC,KAArC;AACA;;AACA,eAAKjB,SAAL,GAAiB,KAAKa,eAAL,CAAqBb,SAAtC;AACA;;AACA,eAAKC,SAAL,GAAiB,KAAKY,eAAL,CAAqBZ,SAAtC;AACA;;;;;;;;;;;;;;;AAcA,eAAKiB,aAAL,GAAqB,MAArB;AACA,eAAKC,QAAL,GAAgB,EAAhB;AACA;;AACA,eAAKC,iBAAL,GAAyB,EAAzB;AACA;;AACA,eAAKC,UAAL,GAAkB,IAAI,6CAAJ,EAAlB;AACA;;;;;AAIA,eAAKC,cAAL,GAAsB,UAACC,KAAD,EAAW;AAC7B,gBAAI,MAAI,CAACC,iBAAL,MAA4BD,KAAK,CAACE,OAAN,KAAkB,4DAA9C,IAAwD,CAAC,6EAAeF,KAAf,CAA7D,EAAoF;AAChFA,mBAAK,CAACG,cAAN;AACAH,mBAAK,CAACI,eAAN;;AACA,oBAAI,CAACpB,OAAL,CAAaqB,GAAb,CAAiB;AAAA,uBAAM,MAAI,CAACC,IAAL,CAAU,CAAV,CAAN;AAAA,eAAjB;AACH;AACJ,WAND;;AAOA,eAAKC,eAAL,GAAuBnB,cAAvB;;AACA,cAAIE,eAAJ,EAAqB;AACjB,gBAAIA,eAAe,CAAC3B,QAApB,EAA8B;AAC1B,mBAAKA,QAAL,GAAgB2B,eAAe,CAAC3B,QAAhC;AACH;;AACD,gBAAI2B,eAAe,CAACK,aAApB,EAAmC;AAC/B,mBAAKA,aAAL,GAAqBL,eAAe,CAACK,aAArC;AACH;AACJ;;AACDX,iBAAO,CAACwB,iBAAR,CAA0B,YAAM;AAC5BpK,uBAAW,CAAC8B,aAAZ,CAA0BuI,gBAA1B,CAA2C,SAA3C,EAAsD,MAAI,CAACV,cAA3D;AACH,WAFD;AAGH;AACD;;;;;4CAyDkB;AAAA;;AACd;AACA,iBAAKN,gBAAL,GAAwB,IAAxB;;AACA,iBAAKiB,gCAAL;;AACA,iBAAKvB,aAAL,CAAmBwB,OAAnB,CAA2B,KAAKvK,WAAhC,EACKwK,IADL,CACU,kEAAU,KAAKd,UAAf,CADV,EAEKe,SAFL,CAEe,UAAAC,MAAM,EAAI;AACrB;AACA,kBAAI,CAACA,MAAL,EAAa;AACT,sBAAI,CAAC9B,OAAL,CAAaqB,GAAb,CAAiB;AAAA,yBAAM,MAAI,CAACC,IAAL,CAAU,CAAV,CAAN;AAAA,iBAAjB;AACH,eAFD,MAGK,IAAIQ,MAAM,KAAK,UAAf,EAA2B;AAC5B,sBAAI,CAAC9B,OAAL,CAAaqB,GAAb,CAAiB;AAAA,yBAAM,MAAI,CAACU,IAAL,EAAN;AAAA,iBAAjB;AACH;AACJ,aAVD;AAWH;AACD;;;;;;wCAGc;AACV,gBAAM7I,aAAa,GAAG,KAAK9B,WAAL,CAAiB8B,aAAvC;AACA8I,wBAAY,CAAC,KAAKC,kBAAN,CAAZ;;AACA,gBAAI,KAAKC,WAAT,EAAsB;AAClB,mBAAKA,WAAL,CAAiBC,OAAjB;;AACA,mBAAKC,gBAAL,GAAwB,IAAxB;AACH,aANS,CAOV;;;AACAlJ,yBAAa,CAACmJ,mBAAd,CAAkC,SAAlC,EAA6C,KAAKtB,cAAlD;;AACA,iBAAKF,iBAAL,CAAuByB,OAAvB,CAA+B,gBAAuB;AAAA;AAAA,kBAArBtB,KAAqB;AAAA,kBAAduB,QAAc;;AAClDrJ,2BAAa,CAACmJ,mBAAd,CAAkCrB,KAAlC,EAAyCuB,QAAzC,EAAmDhE,sBAAnD;AACH,aAFD;;AAGA,iBAAKsC,iBAAL,CAAuB2B,MAAvB,GAAgC,CAAhC;;AACA,iBAAK1B,UAAL,CAAgB2B,IAAhB;;AACA,iBAAK3B,UAAL,CAAgB4B,QAAhB;;AACA,iBAAKxC,cAAL,CAAoByC,iBAApB,CAAsCzJ,aAAtC,EAAqD,KAAK0J,OAA1D;;AACA,iBAAKzC,aAAL,CAAmB0C,cAAnB,CAAkC3J,aAAlC;AACH;AACD;;;;iCAC6B;AAAA;;AAAA,gBAAxB4J,KAAwB,uEAAhB,KAAKrD,SAAW;;AACzB,gBAAI,KAAKsD,QAAL,IAAiB,CAAC,KAAKH,OAAvB,IAAmC,KAAK3B,iBAAL,MACnC,CAAC,KAAKmB,gBAAL,CAAsBY,cADY,IACM,CAAC,KAAKZ,gBAAL,CAAsBa,cADpE,EACqF;AACjF;AACH;;AACD,gBAAMC,UAAU,GAAG,KAAKC,cAAL,EAAnB;;AACA,iBAAKC,OAAL;;AACA,iBAAKC,OAAL,GAAe,KAAKA,OAAL,IAAgB,IAAI,oEAAJ,CAAoBC,gBAApB,EAAsC,KAAKvD,iBAA3C,CAA/B;AACA,iBAAKqC,gBAAL,GAAwBc,UAAU,CAACK,MAAX,CAAkB,KAAKF,OAAvB,EAAgCG,QAAxD;;AACA,iBAAKpB,gBAAL,CAAsBqB,WAAtB,GACK7B,IADL,CACU,kEAAU,KAAKd,UAAf,CADV,EAEKe,SAFL,CAEe;AAAA,qBAAM,MAAI,CAACuB,OAAL,EAAN;AAAA,aAFf;;AAGA,iBAAKM,gBAAL,CAAsB,KAAKC,aAA3B;;AACA,iBAAKC,qBAAL;;AACA,iBAAKxB,gBAAL,CAAsBL,IAAtB,CAA2Be,KAA3B;AACH;AACD;;;;iCAC6B;AAAA,gBAAxBA,KAAwB,uEAAhB,KAAKpD,SAAW;;AACzB,gBAAI,KAAK0C,gBAAT,EAA2B;AACvB,mBAAKA,gBAAL,CAAsBd,IAAtB,CAA2BwB,KAA3B;AACH;AACJ;AACD;;;;mCACS;AACL,iBAAK7B,iBAAL,KAA2B,KAAKK,IAAL,EAA3B,GAAyC,KAAKS,IAAL,EAAzC;AACH;AACD;;;;8CACoB;AAChB,mBAAO,CAAC,CAAC,KAAKK,gBAAP,IAA2B,KAAKA,gBAAL,CAAsByB,SAAtB,EAAlC;AACH;AACD;;;;2CACiB;AAAA;;AACb,gBAAI,KAAK3B,WAAT,EAAsB;AAClB,qBAAO,KAAKA,WAAZ;AACH;;AACD,gBAAM4B,mBAAmB,GAAG,KAAKhE,iBAAL,CAAuBiE,2BAAvB,CAAmD,KAAK3M,WAAxD,CAA5B,CAJa,CAKb;;;AACA,gBAAM4M,QAAQ,GAAG,KAAKnE,QAAL,CAAclB,QAAd,GACZsF,mBADY,CACQ,KAAK7M,WADb,EAEZ8M,qBAFY,CAEU,cAFV,EAGZC,sBAHY,CAGW,KAHX,EAIZC,kBAJY,CAIO,CAJP,EAKZC,wBALY,CAKaP,mBALb,CAAjB;;AAMAE,oBAAQ,CAACM,eAAT,CAAyB1C,IAAzB,CAA8B,kEAAU,KAAKd,UAAf,CAA9B,EAA0De,SAA1D,CAAoE,UAAA0C,MAAM,EAAI;AAC1E,kBAAI,MAAI,CAACnC,gBAAT,EAA2B;AACvB,oBAAImC,MAAM,CAACC,wBAAP,CAAgCC,gBAAhC,IAAoD,MAAI,CAACrC,gBAAL,CAAsByB,SAAtB,EAAxD,EAA2F;AACvF;AACA;AACA,wBAAI,CAAC7D,OAAL,CAAaqB,GAAb,CAAiB;AAAA,2BAAM,MAAI,CAACC,IAAL,CAAU,CAAV,CAAN;AAAA,mBAAjB;AACH;AACJ;AACJ,aARD;AASA,iBAAKY,WAAL,GAAmB,KAAKrC,QAAL,CAAc6E,MAAd,CAAqB;AACpCC,uBAAS,EAAE,KAAKtE,IADoB;AAEpCuE,8BAAgB,EAAEZ,QAFkB;AAGpCa,wBAAU,EAAEvG,mBAHwB;AAIpC8B,4BAAc,EAAE,KAAKmB,eAAL;AAJoB,aAArB,CAAnB;;AAMA,iBAAKuD,eAAL;;AACA,iBAAK5C,WAAL,CAAiB6C,WAAjB,GACKnD,IADL,CACU,kEAAU,KAAKd,UAAf,CADV,EAEKe,SAFL,CAEe;AAAA,qBAAM,MAAI,CAACuB,OAAL,EAAN;AAAA,aAFf;;AAGA,mBAAO,KAAKlB,WAAZ;AACH;AACD;;;;oCACU;AACN,gBAAI,KAAKA,WAAL,IAAoB,KAAKA,WAAL,CAAiB8C,WAAjB,EAAxB,EAAwD;AACpD,mBAAK9C,WAAL,CAAiB+C,MAAjB;AACH;;AACD,iBAAK7C,gBAAL,GAAwB,IAAxB;AACH;AACD;;;;4CACkB;AACd,gBAAMzD,QAAQ,GAAG,KAAKuD,WAAL,CAAiBgD,SAAjB,GAA6BN,gBAA9C;;AACA,gBAAM9C,MAAM,GAAG,KAAKqD,UAAL,EAAf;;AACA,gBAAMpG,OAAO,GAAG,KAAKqG,mBAAL,EAAhB;;AACAzG,oBAAQ,CAAC0G,aAAT,CAAuB,CACnBC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBzD,MAAM,CAAC0D,IAAzB,CAAd,EAA8CzG,OAAO,CAACyG,IAAtD,CADmB,EAEnBF,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBzD,MAAM,CAAC2D,QAAzB,CAAd,EAAkD1G,OAAO,CAAC0G,QAA1D,CAFmB,CAAvB;AAIH;AACD;;;;;;;uCAIa;AACT,gBAAMC,KAAK,GAAG,CAAC,KAAKrF,IAAN,IAAc,KAAKA,IAAL,CAAU1F,KAAV,IAAmB,KAA/C;AACA,gBAAMgE,QAAQ,GAAG,KAAKA,QAAtB;AACA,gBAAIgH,cAAJ;;AACA,gBAAIhH,QAAQ,IAAI,OAAZ,IAAuBA,QAAQ,IAAI,OAAvC,EAAgD;AAC5CgH,4BAAc,GAAG;AAAEC,uBAAO,EAAE,QAAX;AAAqBC,uBAAO,EAAElH,QAAQ,IAAI,OAAZ,GAAsB,KAAtB,GAA8B;AAA5D,eAAjB;AACH,aAFD,MAGK,IAAIA,QAAQ,IAAI,QAAZ,IACJA,QAAQ,IAAI,MAAZ,IAAsB+G,KADlB,IAEJ/G,QAAQ,IAAI,OAAZ,IAAuB,CAAC+G,KAFxB,EAEgC;AACjCC,4BAAc,GAAG;AAAEC,uBAAO,EAAE,OAAX;AAAoBC,uBAAO,EAAE;AAA7B,eAAjB;AACH,aAJI,MAKA,IAAIlH,QAAQ,IAAI,OAAZ,IACJA,QAAQ,IAAI,OAAZ,IAAuB+G,KADnB,IAEJ/G,QAAQ,IAAI,MAAZ,IAAsB,CAAC+G,KAFvB,EAE+B;AAChCC,4BAAc,GAAG;AAAEC,uBAAO,EAAE,KAAX;AAAkBC,uBAAO,EAAE;AAA3B,eAAjB;AACH,aAJI,MAKA,IAAI,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAAxC,EAAmD;AACpD,oBAAMpH,iCAAiC,CAACC,QAAD,CAAvC;AACH;;AAnBQ,wCAoBQ,KAAKoH,eAAL,CAAqBJ,cAAc,CAACC,OAApC,EAA6CD,cAAc,CAACE,OAA5D,CApBR;AAAA,gBAoBDG,CApBC,yBAoBDA,CApBC;AAAA,gBAoBEC,CApBF,yBAoBEA,CApBF;;AAqBT,mBAAO;AACHT,kBAAI,EAAEG,cADH;AAEHF,sBAAQ,EAAE;AAAEG,uBAAO,EAAEI,CAAX;AAAcH,uBAAO,EAAEI;AAAvB;AAFP,aAAP;AAIH;AACD;;;;gDACsB;AAClB,gBAAMP,KAAK,GAAG,CAAC,KAAKrF,IAAN,IAAc,KAAKA,IAAL,CAAU1F,KAAV,IAAmB,KAA/C;AACA,gBAAMgE,QAAQ,GAAG,KAAKA,QAAtB;AACA,gBAAIuH,eAAJ;;AACA,gBAAIvH,QAAQ,IAAI,OAAhB,EAAyB;AACrBuH,6BAAe,GAAG;AAAEC,wBAAQ,EAAE,QAAZ;AAAsBC,wBAAQ,EAAE;AAAhC,eAAlB;AACH,aAFD,MAGK,IAAIzH,QAAQ,IAAI,OAAhB,EAAyB;AAC1BuH,6BAAe,GAAG;AAAEC,wBAAQ,EAAE,QAAZ;AAAsBC,wBAAQ,EAAE;AAAhC,eAAlB;AACH,aAFI,MAGA,IAAIzH,QAAQ,IAAI,QAAZ,IACJA,QAAQ,IAAI,MAAZ,IAAsB+G,KADlB,IAEJ/G,QAAQ,IAAI,OAAZ,IAAuB,CAAC+G,KAFxB,EAEgC;AACjCQ,6BAAe,GAAG;AAAEC,wBAAQ,EAAE,KAAZ;AAAmBC,wBAAQ,EAAE;AAA7B,eAAlB;AACH,aAJI,MAKA,IAAIzH,QAAQ,IAAI,OAAZ,IACJA,QAAQ,IAAI,OAAZ,IAAuB+G,KADnB,IAEJ/G,QAAQ,IAAI,MAAZ,IAAsB,CAAC+G,KAFvB,EAE+B;AAChCQ,6BAAe,GAAG;AAAEC,wBAAQ,EAAE,OAAZ;AAAqBC,wBAAQ,EAAE;AAA/B,eAAlB;AACH,aAJI,MAKA,IAAI,OAAON,SAAP,KAAqB,WAArB,IAAoCA,SAAxC,EAAmD;AACpD,oBAAMpH,iCAAiC,CAACC,QAAD,CAAvC;AACH;;AAtBiB,yCAuBD,KAAKoH,eAAL,CAAqBG,eAAe,CAACC,QAArC,EAA+CD,eAAe,CAACE,QAA/D,CAvBC;AAAA,gBAuBVJ,CAvBU,0BAuBVA,CAvBU;AAAA,gBAuBPC,CAvBO,0BAuBPA,CAvBO;;AAwBlB,mBAAO;AACHT,kBAAI,EAAEU,eADH;AAEHT,sBAAQ,EAAE;AAAEU,wBAAQ,EAAEH,CAAZ;AAAeI,wBAAQ,EAAEH;AAAzB;AAFP,aAAP;AAIH;AACD;;;;kDACwB;AAAA;;AACpB;AACA;AACA,gBAAI,KAAK7D,gBAAT,EAA2B;AACvB,mBAAKA,gBAAL,CAAsBQ,OAAtB,GAAgC,KAAKA,OAArC;;AACA,mBAAKR,gBAAL,CAAsBiE,aAAtB;;AACA,mBAAKrG,OAAL,CAAasG,gBAAb,CAA8B1E,IAA9B,CAAmC,6DAAK,CAAL,CAAnC,EAA4C,kEAAU,KAAKd,UAAf,CAA5C,EAAwEe,SAAxE,CAAkF,YAAM;AACpF,oBAAI,MAAI,CAACO,gBAAT,EAA2B;AACvB,wBAAI,CAACF,WAAL,CAAiBqE,cAAjB;AACH;AACJ,eAJD;AAKH;AACJ;AACD;;;;2CACiBC,Y,EAAc;AAC3B,gBAAI,KAAKpE,gBAAT,EAA2B;AACvB,mBAAKA,gBAAL,CAAsBoE,YAAtB,GAAqCA,YAArC;;AACA,mBAAKpE,gBAAL,CAAsBiE,aAAtB;AACH;AACJ;AACD;;;;0CACgBL,C,EAAGC,C,EAAG;AAClB,gBAAI,KAAKtH,QAAL,KAAkB,OAAlB,IAA6B,KAAKA,QAAL,KAAkB,OAAnD,EAA4D;AACxD,kBAAIsH,CAAC,KAAK,KAAV,EAAiB;AACbA,iBAAC,GAAG,QAAJ;AACH,eAFD,MAGK,IAAIA,CAAC,KAAK,QAAV,EAAoB;AACrBA,iBAAC,GAAG,KAAJ;AACH;AACJ,aAPD,MAQK;AACD,kBAAID,CAAC,KAAK,KAAV,EAAiB;AACbA,iBAAC,GAAG,OAAJ;AACH,eAFD,MAGK,IAAIA,CAAC,KAAK,OAAV,EAAmB;AACpBA,iBAAC,GAAG,KAAJ;AACH;AACJ;;AACD,mBAAO;AAAEA,eAAC,EAADA,CAAF;AAAKC,eAAC,EAADA;AAAL,aAAP;AACH;AACD;;;;6DACmC;AAAA;;AAC/B;AACA,gBAAI,KAAKzF,SAAL,IAAkB,CAAC,KAAKoC,OAAxB,IAAmC,CAAC,KAAKnC,gBAAzC,IACA,KAAKI,iBAAL,CAAuB2B,MAD3B,EACmC;AAC/B;AACH,aAL8B,CAM/B;AACA;;;AACA,gBAAI,KAAKiE,4BAAL,EAAJ,EAAyC;AACrC,mBAAK5F,iBAAL,CACK6F,IADL,CACU,CAAC,YAAD,EAAe,YAAM;AACvB,sBAAI,CAACC,+BAAL;;AACA,sBAAI,CAAC5E,IAAL;AACH,eAHK,CADV;AAKH,aAND,MAOK,IAAI,KAAKpB,aAAL,KAAuB,KAA3B,EAAkC;AACnC,mBAAKiG,iCAAL;;AACA,mBAAK/F,iBAAL,CACK6F,IADL,CACU,CAAC,YAAD,EAAe,YAAM;AACvB;AACA;AACA,sBAAI,CAACC,+BAAL;;AACA3E,4BAAY,CAAC,MAAI,CAACC,kBAAN,CAAZ;AACA,sBAAI,CAACA,kBAAL,GAA0B4E,UAAU,CAAC;AAAA,yBAAM,MAAI,CAAC9E,IAAL,EAAN;AAAA,iBAAD,EAAoBtD,eAApB,CAApC;AACH,eANK,CADV;AAQH;;AACD,iBAAKqI,aAAL,CAAmB,KAAKjG,iBAAxB;AACH;;;4DACiC;AAAA;AAAA;;AAC9B,gBAAI,KAAKH,6BAAT,EAAwC;AACpC;AACH;;AACD,iBAAKA,6BAAL,GAAqC,IAArC;AACA,gBAAMqG,aAAa,GAAG,EAAtB;;AACA,gBAAI,KAAKN,4BAAL,EAAJ,EAAyC;AACrCM,2BAAa,CAACL,IAAd,CAAmB,CAAC,YAAD,EAAe;AAAA,uBAAM,MAAI,CAACpF,IAAL,EAAN;AAAA,eAAf,CAAnB;AACH,aAFD,MAGK,IAAI,KAAKX,aAAL,KAAuB,KAA3B,EAAkC;AACnC,mBAAKiG,iCAAL;;AACA,kBAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3BhF,4BAAY,CAAC,MAAI,CAACC,kBAAN,CAAZ;;AACA,sBAAI,CAACX,IAAL,CAAU,MAAI,CAAChB,eAAL,CAAqBX,iBAA/B;AACH,eAHD;;AAIAoH,2BAAa,CAACL,IAAd,CAAmB,CAAC,UAAD,EAAaM,gBAAb,CAAnB,EAAmD,CAAC,aAAD,EAAgBA,gBAAhB,CAAnD;AACH;;AACD,iBAAKF,aAAL,CAAmBC,aAAnB;;AACA,0CAAKlG,iBAAL,EAAuB6F,IAAvB,8BAA+BK,aAA/B;AACH;;;wCACaE,S,EAAW;AAAA;;AACrBA,qBAAS,CAAC3E,OAAV,CAAkB,iBAAuB;AAAA;AAAA,kBAArBtB,KAAqB;AAAA,kBAAduB,QAAc;;AACrC,qBAAI,CAACnL,WAAL,CAAiB8B,aAAjB,CAA+BuI,gBAA/B,CAAgDT,KAAhD,EAAuDuB,QAAvD,EAAiEhE,sBAAjE;AACH,aAFD;AAGH;;;yDAC8B;AAC3B,mBAAO,CAAC,KAAK0B,SAAL,CAAeiH,GAAhB,IAAuB,CAAC,KAAKjH,SAAL,CAAekH,OAA9C;AACH;AACD;;;;8DACoC;AAChC,gBAAMC,QAAQ,GAAG,KAAKzG,aAAtB;;AACA,gBAAIyG,QAAQ,KAAK,KAAjB,EAAwB;AACpB,kBAAMnO,OAAO,GAAG,KAAK7B,WAAL,CAAiB8B,aAAjC;AACA,kBAAMmO,KAAK,GAAGpO,OAAO,CAACoO,KAAtB,CAFoB,CAGpB;AACA;;AACA,kBAAID,QAAQ,KAAK,IAAb,IAAsBnO,OAAO,CAACqO,QAAR,KAAqB,OAArB,IAAgCrO,OAAO,CAACqO,QAAR,KAAqB,UAA/E,EAA4F;AACxFD,qBAAK,CAACE,UAAN,GAAmBF,KAAK,CAACG,YAAN,GAAqBH,KAAK,CAACI,gBAAN,GACpCJ,KAAK,CAACK,aAAN,GAAsB,MAD1B;AAEH,eARmB,CASpB;AACA;;;AACA,kBAAIN,QAAQ,KAAK,IAAb,IAAqB,CAACnO,OAAO,CAAC0O,SAAlC,EAA6C;AACzCN,qBAAK,CAACO,cAAN,GAAuB,MAAvB;AACH;;AACDP,mBAAK,CAACQ,WAAN,GAAoB,MAApB;AACAR,mBAAK,CAACS,uBAAN,GAAgC,aAAhC;AACH;AACJ;;;8BAjWc;AAAE,mBAAO,KAAKvH,SAAZ;AAAwB,W;4BAC5B5F,K,EAAO;AAChB,gBAAIA,KAAK,KAAK,KAAK4F,SAAnB,EAA8B;AAC1B,mBAAKA,SAAL,GAAiB5F,KAAjB;;AACA,kBAAI,KAAKuH,WAAT,EAAsB;AAClB,qBAAK4C,eAAL;;AACA,oBAAI,KAAK1C,gBAAT,EAA2B;AACvB,uBAAKA,gBAAL,CAAsBL,IAAtB,CAA2B,CAA3B;AACH;;AACD,qBAAKG,WAAL,CAAiBqE,cAAjB;AACH;AACJ;AACJ;AACD;;;;8BACe;AAAE,mBAAO,KAAK/F,SAAZ;AAAwB,W;4BAC5B7F,K,EAAO;AAChB,iBAAK6F,SAAL,GAAiB,oFAAsB7F,KAAtB,CAAjB,CADgB,CAEhB;;AACA,gBAAI,KAAK6F,SAAT,EAAoB;AAChB,mBAAKc,IAAL,CAAU,CAAV;AACH,aAFD,MAGK;AACD,mBAAKI,gCAAL;AACH;AACJ;AACD;;;;8BACc;AAAE,mBAAO,KAAKd,QAAZ;AAAuB,W;4BAC3BjG,K,EAAO;AAAA;;AACf,iBAAKuF,cAAL,CAAoByC,iBAApB,CAAsC,KAAKvL,WAAL,CAAiB8B,aAAvD,EAAsE,KAAK0H,QAA3E,EADe,CAEf;;;AACA,iBAAKA,QAAL,GAAgBjG,KAAK,IAAI,IAAT,GAAgB,UAAGA,KAAH,EAAWoN,IAAX,EAAhB,GAAoC,EAApD;;AACA,gBAAI,CAAC,KAAKnH,QAAN,IAAkB,KAAKK,iBAAL,EAAtB,EAAgD;AAC5C,mBAAKK,IAAL,CAAU,CAAV;AACH,aAFD,MAGK;AACD,mBAAKI,gCAAL;;AACA,mBAAKkC,qBAAL;;AACA,mBAAK5D,OAAL,CAAawB,iBAAb,CAA+B,YAAM;AACjC;AACA;AACA;AACA;AACAwG,uBAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAM;AACzB,yBAAI,CAAChI,cAAL,CAAoBiI,QAApB,CAA6B,OAAI,CAAC/Q,WAAL,CAAiB8B,aAA9C,EAA6D,OAAI,CAAC0J,OAAlE;AACH,iBAFD;AAGH,eARD;AASH;AACJ;AACD;;;;8BACmB;AAAE,mBAAO,KAAKe,aAAZ;AAA4B,W;4BAChChJ,K,EAAO;AACpB,iBAAKgJ,aAAL,GAAqBhJ,KAArB;;AACA,gBAAI,KAAKyH,gBAAT,EAA2B;AACvB,mBAAKsB,gBAAL,CAAsB,KAAKC,aAA3B;AACH;AACJ;;;;;;AA4SL/D,gBAAU,CAAC7E,IAAX,GAAkB,SAASqN,kBAAT,CAA4BnN,CAA5B,EAA+B;AAAE,eAAO,KAAKA,CAAC,IAAI2E,UAAV,EAAsB,gEAAyB,4DAAzB,CAAtB,EAAgE,gEAAyB,wDAAzB,CAAhE,EAA6G,gEAAyB,uEAAzB,CAA7G,EAAgK,gEAAyB,8DAAzB,CAAhK,EAAmN,gEAAyB,oDAAzB,CAAnN,EAA4P,gEAAyB,+DAAzB,CAA5P,EAAuS,gEAAyB,+DAAzB,CAAvS,EAAuV,gEAAyB,8DAAzB,CAAvV,EAAsY,gEAAyBf,2BAAzB,CAAtY,EAA6b,gEAAyB,gEAAzB,EAAgD,CAAhD,CAA7b,EAAif,gEAAyBU,2BAAzB,EAAsD,CAAtD,CAAjf,CAAP;AAAojB,OAAvmB;;AACAK,gBAAU,CAACyI,IAAX,GAAkB,gEAAyB;AAAElN,YAAI,EAAEyE,UAAR;AAAoBxE,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,YAAL,EAAmB,EAAnB,CAAD,CAA/B;AAAyDC,iBAAS,EAAE,CAAC,CAAD,EAAI,qBAAJ,CAApE;AAAgGI,cAAM,EAAE;AAAEgE,mBAAS,EAAE,CAAC,qBAAD,EAAwB,WAAxB,CAAb;AAAmDC,mBAAS,EAAE,CAAC,qBAAD,EAAwB,WAAxB,CAA9D;AAAoGiB,uBAAa,EAAE,CAAC,yBAAD,EAA4B,eAA5B,CAAnH;AAAiKhC,kBAAQ,EAAE,CAAC,oBAAD,EAAuB,UAAvB,CAA3K;AAA+MoE,kBAAQ,EAAE,CAAC,oBAAD,EAAuB,UAAvB,CAAzN;AAA6PH,iBAAO,EAAE,CAAC,YAAD,EAAe,SAAf,CAAtQ;AAAiS4D,sBAAY,EAAE,CAAC,iBAAD,EAAoB,cAApB;AAA/S,SAAxG;AAA8b7K,gBAAQ,EAAE,CAAC,YAAD;AAAxc,OAAzB,CAAlB;;AACAiE,gBAAU,CAACpD,cAAX,GAA4B;AAAA,eAAM,CAC9B;AAAErB,cAAI,EAAE;AAAR,SAD8B,EAE9B;AAAEA,cAAI,EAAE;AAAR,SAF8B,EAG9B;AAAEA,cAAI,EAAE;AAAR,SAH8B,EAI9B;AAAEA,cAAI,EAAE;AAAR,SAJ8B,EAK9B;AAAEA,cAAI,EAAE;AAAR,SAL8B,EAM9B;AAAEA,cAAI,EAAE;AAAR,SAN8B,EAO9B;AAAEA,cAAI,EAAE;AAAR,SAP8B,EAQ9B;AAAEA,cAAI,EAAE;AAAR,SAR8B,EAS9B;AAAEA,cAAI,EAAEsB,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEvB,gBAAI,EAAE,oDAAR;AAAgBwB,gBAAI,EAAE,CAACkC,2BAAD;AAAtB,WAAD;AAA/B,SAT8B,EAU9B;AAAE1D,cAAI,EAAE,gEAAR;AAAwBuB,oBAAU,EAAE,CAAC;AAAEvB,gBAAI,EAAE;AAAR,WAAD;AAApC,SAV8B,EAW9B;AAAEA,cAAI,EAAEsB,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEvB,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBwB,gBAAI,EAAE,CAAC4C,2BAAD;AAAtB,WAArB;AAA/B,SAX8B,CAAN;AAAA,OAA5B;;AAaAK,gBAAU,CAAC/C,cAAX,GAA4B;AACxB8B,gBAAQ,EAAE,CAAC;AAAExD,cAAI,EAAE,mDAAR;AAAewB,cAAI,EAAE,CAAC,oBAAD;AAArB,SAAD,CADc;AAExBoG,gBAAQ,EAAE,CAAC;AAAE5H,cAAI,EAAE,mDAAR;AAAewB,cAAI,EAAE,CAAC,oBAAD;AAArB,SAAD,CAFc;AAGxB8C,iBAAS,EAAE,CAAC;AAAEtE,cAAI,EAAE,mDAAR;AAAewB,cAAI,EAAE,CAAC,qBAAD;AAArB,SAAD,CAHa;AAIxB+C,iBAAS,EAAE,CAAC;AAAEvE,cAAI,EAAE,mDAAR;AAAewB,cAAI,EAAE,CAAC,qBAAD;AAArB,SAAD,CAJa;AAKxBgE,qBAAa,EAAE,CAAC;AAAExF,cAAI,EAAE,mDAAR;AAAewB,cAAI,EAAE,CAAC,yBAAD;AAArB,SAAD,CALS;AAMxBiG,eAAO,EAAE,CAAC;AAAEzH,cAAI,EAAE,mDAAR;AAAewB,cAAI,EAAE,CAAC,YAAD;AAArB,SAAD,CANe;AAOxB6J,oBAAY,EAAE,CAAC;AAAErL,cAAI,EAAE,mDAAR;AAAewB,cAAI,EAAE,CAAC,iBAAD;AAArB,SAAD;AAPU,OAA5B;AASA;;AAAc,OAAC,YAAY;AAAE,wEAAyBiD,UAAzB,EAAqC,CAAC;AAC3DzE,cAAI,EAAE,uDADqD;AAE3DwB,cAAI,EAAE,CAAC;AACCG,oBAAQ,EAAE,cADX;AAECnB,oBAAQ,EAAE,YAFX;AAGCoB,gBAAI,EAAE;AACF,uBAAS;AADP;AAHP,WAAD;AAFqD,SAAD,CAArC,EASrB,YAAY;AAAE,iBAAO,CAAC;AAAE5B,gBAAI,EAAE;AAAR,WAAD,EAA2B;AAAEA,gBAAI,EAAE;AAAR,WAA3B,EAAwD;AAAEA,gBAAI,EAAE;AAAR,WAAxD,EAA2F;AAAEA,gBAAI,EAAE;AAAR,WAA3F,EAA8H;AAAEA,gBAAI,EAAE;AAAR,WAA9H,EAAuJ;AAAEA,gBAAI,EAAE;AAAR,WAAvJ,EAAkL;AAAEA,gBAAI,EAAE;AAAR,WAAlL,EAAkN;AAAEA,gBAAI,EAAE;AAAR,WAAlN,EAAiP;AAAEA,gBAAI,EAAEsB,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC9RvB,kBAAI,EAAE,oDADwR;AAE9RwB,kBAAI,EAAE,CAACkC,2BAAD;AAFwR,aAAD;AAA/B,WAAjP,EAGX;AAAE1D,gBAAI,EAAE,gEAAR;AAA+BuB,sBAAU,EAAE,CAAC;AAC9CvB,kBAAI,EAAE;AADwC,aAAD;AAA3C,WAHW,EAKX;AAAEA,gBAAI,EAAEsB,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAClCvB,kBAAI,EAAE;AAD4B,aAAD,EAElC;AACCA,kBAAI,EAAE,oDADP;AAECwB,kBAAI,EAAE,CAAC4C,2BAAD;AAFP,aAFkC;AAA/B,WALW,CAAP;AAUF,SAnBS,EAmBP;AAAEE,mBAAS,EAAE,CAAC;AACxBtE,gBAAI,EAAE,mDADkB;AAExBwB,gBAAI,EAAE,CAAC,qBAAD;AAFkB,WAAD,CAAb;AAGV+C,mBAAS,EAAE,CAAC;AACZvE,gBAAI,EAAE,mDADM;AAEZwB,gBAAI,EAAE,CAAC,qBAAD;AAFM,WAAD,CAHD;AAMVgE,uBAAa,EAAE,CAAC;AAChBxF,gBAAI,EAAE,mDADU;AAEhBwB,gBAAI,EAAE,CAAC,yBAAD;AAFU,WAAD,CANL;AASVgC,kBAAQ,EAAE,CAAC;AACXxD,gBAAI,EAAE,mDADK;AAEXwB,gBAAI,EAAE,CAAC,oBAAD;AAFK,WAAD,CATA;AAYVoG,kBAAQ,EAAE,CAAC;AACX5H,gBAAI,EAAE,mDADK;AAEXwB,gBAAI,EAAE,CAAC,oBAAD;AAFK,WAAD,CAZA;AAeViG,iBAAO,EAAE,CAAC;AACVzH,gBAAI,EAAE,mDADI;AAEVwB,gBAAI,EAAE,CAAC,YAAD;AAFI,WAAD,CAfC;AAkBV6J,sBAAY,EAAE,CAAC;AACfrL,gBAAI,EAAE,mDADS;AAEfwB,gBAAI,EAAE,CAAC,iBAAD;AAFS,WAAD;AAlBJ,SAnBO;AAwCb,OAxCF;AAyCd;;;;;;UAIM2G,gB;AACF,kCAAYgF,kBAAZ,EAAgCC,mBAAhC,EAAqD;AAAA;;AACjD,eAAKD,kBAAL,GAA0BA,kBAA1B;AACA,eAAKC,mBAAL,GAA2BA,mBAA3B;AACA;;AACA,eAAKC,WAAL,GAAmB,SAAnB;AACA;;AACA,eAAKC,mBAAL,GAA2B,KAA3B;AACA;;AACA,eAAKC,OAAL,GAAe,IAAI,6CAAJ,EAAf;AACA;;AACA,eAAKC,UAAL,GAAkB,KAAKJ,mBAAL,CAAyBK,OAAzB,CAAiC,gEAAYC,OAA7C,CAAlB;AACH;AACD;;;;;;;;+BAIK/F,K,EAAO;AAAA;;AACR;AACA,gBAAI,KAAKG,cAAT,EAAyB;AACrBjB,0BAAY,CAAC,KAAKiB,cAAN,CAAZ;AACA,mBAAKA,cAAL,GAAsB,IAAtB;AACH,aALO,CAMR;;;AACA,iBAAKwF,mBAAL,GAA2B,IAA3B;AACA,iBAAKzF,cAAL,GAAsB6D,UAAU,CAAC,YAAM;AACnC,qBAAI,CAAC2B,WAAL,GAAmB,SAAnB;AACA,qBAAI,CAACxF,cAAL,GAAsB,IAAtB,CAFmC,CAGnC;AACA;;AACA,qBAAI,CAACqD,aAAL;AACH,aAN+B,EAM7BvD,KAN6B,CAAhC;AAOH;AACD;;;;;;;+BAIKA,K,EAAO;AAAA;;AACR;AACA,gBAAI,KAAKE,cAAT,EAAyB;AACrBhB,0BAAY,CAAC,KAAKgB,cAAN,CAAZ;AACA,mBAAKA,cAAL,GAAsB,IAAtB;AACH;;AACD,iBAAKC,cAAL,GAAsB4D,UAAU,CAAC,YAAM;AACnC,qBAAI,CAAC2B,WAAL,GAAmB,QAAnB;AACA,qBAAI,CAACvF,cAAL,GAAsB,IAAtB,CAFmC,CAGnC;AACA;;AACA,qBAAI,CAACoD,aAAL;AACH,aAN+B,EAM7BvD,KAN6B,CAAhC;AAOH;AACD;;;;wCACc;AACV,mBAAO,KAAK4F,OAAZ;AACH;AACD;;;;sCACY;AACR,mBAAO,KAAKF,WAAL,KAAqB,SAA5B;AACH;;;wCACa;AACV,iBAAKE,OAAL,CAAahG,QAAb;AACH;;;4CACiB;AACd,iBAAK+F,mBAAL,GAA2B,KAA3B;AACH;;;yCACczH,K,EAAO;AAClB,gBAAM8H,OAAO,GAAG9H,KAAK,CAAC8H,OAAtB;;AACA,gBAAIA,OAAO,KAAK,QAAZ,IAAwB,CAAC,KAAKjF,SAAL,EAA7B,EAA+C;AAC3C,mBAAK6E,OAAL,CAAajG,IAAb;AACH;;AACD,gBAAIqG,OAAO,KAAK,SAAZ,IAAyBA,OAAO,KAAK,QAAzC,EAAmD;AAC/C,mBAAKL,mBAAL,GAA2B,IAA3B;AACH;AACJ;AACD;;;;;;;;mDAKyB;AACrB,gBAAI,KAAKA,mBAAT,EAA8B;AAC1B,mBAAKnH,IAAL,CAAU,CAAV;AACH;AACJ;AACD;;;;;;;;0CAKgB;AACZ,iBAAKgH,kBAAL,CAAwBS,YAAxB;AACH;;;;;;AAELzF,sBAAgB,CAACvI,IAAjB,GAAwB,SAASiO,wBAAT,CAAkC/N,CAAlC,EAAqC;AAAE,eAAO,KAAKA,CAAC,IAAIqI,gBAAV,EAA4B,gEAAyB,+DAAzB,CAA5B,EAAgF,gEAAyB,sEAAzB,CAAhF,CAAP;AAA8I,OAA7M;;AACAA,sBAAgB,CAACpI,IAAjB,GAAwB,gEAAyB;AAAEC,YAAI,EAAEmI,gBAAR;AAA0BlI,iBAAS,EAAE,CAAC,CAAC,uBAAD,CAAD,CAArC;AAAkEC,iBAAS,EAAE,CAAC,aAAD,EAAgB,MAAhB,CAA7E;AAAsGC,gBAAQ,EAAE,CAAhH;AAAmHC,oBAAY,EAAE,SAAS0N,6BAAT,CAAuC7S,EAAvC,EAA2CC,GAA3C,EAAgD;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACxO,qEAAkB,OAAlB,EAA2B,SAAS8S,yCAAT,GAAqD;AAAE,qBAAO7S,GAAG,CAAC8S,sBAAJ,EAAP;AAAsC,aAAxH,EAA0H,KAA1H,EAAiI,2DAAjI;AACH;;AAAC,cAAI/S,EAAE,GAAG,CAAT,EAAY;AACV,sEAAmB,MAAnB,EAA2BC,GAAG,CAACmS,WAAJ,KAAoB,SAApB,GAAgC,CAAhC,GAAoC,IAA/D;AACH;AAAE,SAJ0C;AAIxC3M,aAAK,EAAE,CAJiC;AAI9BC,YAAI,EAAE,CAJwB;AAIrBC,cAAM,EAAE,CAAC,CAAC,CAAD,EAAI,aAAJ,EAAmB,CAAnB,EAAsB,SAAtB,CAAD,CAJa;AAIuBC,gBAAQ,EAAE,SAASoN,yBAAT,CAAmChT,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACpI,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,qEAAkB,cAAlB,EAAkC,SAASiT,8DAAT,GAA0E;AAAE,qBAAOhT,GAAG,CAACiT,eAAJ,EAAP;AAA+B,aAA7I,EAA+I,aAA/I,EAA8J,SAASC,6DAAT,CAAuEC,MAAvE,EAA+E;AAAE,qBAAOnT,GAAG,CAACoT,cAAJ,CAAmBD,MAAnB,CAAP;AAAoC,aAAnR;;AACA,iEAAc,CAAd,EAAiB,OAAjB;;AACA,iEAAc,CAAd;;AACA;AACH;;AAAC,cAAIpT,EAAE,GAAG,CAAT,EAAY;AACV,gBAAIsT,OAAO,GAAG,IAAd;;AACA,sEAAmB,qBAAnB,EAA0C,CAACA,OAAO,GAAG,0DAAmB,CAAnB,EAAsB,CAAtB,EAAyBrT,GAAG,CAACsS,UAA7B,CAAX,KAAwD,IAAxD,GAA+D,IAA/D,GAAsEe,OAAO,CAACC,OAAxH;;AACA,qEAAkB,SAAlB,EAA6BtT,GAAG,CAACmQ,YAAjC,EAA+C,QAA/C,EAAyDnQ,GAAG,CAACmS,WAA7D;;AACA,oEAAiB,CAAjB;;AACA,4EAAyBnS,GAAG,CAACuM,OAA7B;AACH;AAAE,SAhB0C;AAgBxCzG,kBAAU,EAAE,CAAC,uDAAD,CAhB4B;AAgBVyN,aAAK,EAAE,CAAC,yDAAD,CAhBG;AAgBiBxN,cAAM,EAAE,CAAC,qUAAD,CAhBzB;AAgBkWC,qBAAa,EAAE,CAhBjX;AAgBoXwN,YAAI,EAAE;AAAEC,mBAAS,EAAE,CAAC9L,oBAAoB,CAACC,YAAtB;AAAb,SAhB1X;AAgB8a3B,uBAAe,EAAE;AAhB/b,OAAzB,CAAxB;;AAiBAgH,sBAAgB,CAAC9G,cAAjB,GAAkC;AAAA,eAAM,CACpC;AAAErB,cAAI,EAAE;AAAR,SADoC,EAEpC;AAAEA,cAAI,EAAE;AAAR,SAFoC,CAAN;AAAA,OAAlC;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBmI,gBAAzB,EAA2C,CAAC;AACjEnI,cAAI,EAAE,uDAD2D;AAEjEwB,cAAI,EAAE,CAAC;AACCG,oBAAQ,EAAE,uBADX;AAECd,oBAAQ,EAAE,8QAFX;AAGCK,yBAAa,EAAE,gEAAkBY,IAHlC;AAICX,2BAAe,EAAE,sEAAwBU,MAJ1C;AAKC+M,sBAAU,EAAE,CAAC/L,oBAAoB,CAACC,YAAtB,CALb;AAMClB,gBAAI,EAAE;AACF;AACA;AACA,8BAAgB,sCAHd;AAIF,8BAAgB,+BAJd;AAKF,6BAAe;AALb,aANP;AAaCX,kBAAM,EAAE,CAAC,qUAAD;AAbT,WAAD;AAF2D,SAAD,CAA3C,EAiBrB,YAAY;AAAE,iBAAO,CAAC;AAAEjB,gBAAI,EAAE;AAAR,WAAD,EAAqC;AAAEA,gBAAI,EAAE;AAAR,WAArC,CAAP;AAAmF,SAjB5E,EAiB8E,IAjB9E;AAiBsF,OAjBrG;AAmBd;;;;;;;;;UAOM6O,gB;;;;AAENA,sBAAgB,CAACvM,IAAjB,GAAwB,+DAAwB;AAAEtC,YAAI,EAAE6O;AAAR,OAAxB,CAAxB;AACAA,sBAAgB,CAACtM,IAAjB,GAAwB,+DAAwB;AAAElG,eAAO,EAAE,SAASyS,wBAAT,CAAkChP,CAAlC,EAAqC;AAAE,iBAAO,KAAKA,CAAC,IAAI+O,gBAAV,GAAP;AAAuC,SAAzF;AAA2FE,iBAAS,EAAE,CAAC/K,4CAAD,CAAtG;AAAsJvB,eAAO,EAAE,CAAC,CACpM,4DADoM,EAEpM,4DAFoM,EAGpM,kEAHoM,EAIpM,sEAJoM,CAAD,EAKpM,sEALoM,EAKnL,0EALmL;AAA/J,OAAxB,CAAxB;;AAMA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BmM,gBAA1B,EAA4C;AAAElM,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAAC8B,UAAD,EAAa0D,gBAAb,CAAP;AAAwC,WAAtE;AAAwE1F,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,4DAAD,EAC5M,4DAD4M,EAE5M,kEAF4M,EAG5M,sEAH4M,CAAP;AAGlL,WAHmF;AAGjFG,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC6B,UAAD,EAAa0D,gBAAb,EAA+B,sEAA/B,EAAgD,0EAAhD,CAAP;AAA8E;AAHpB,SAA5C,CAAnD;AAGyH,OAHxI;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB0G,gBAAzB,EAA2C,CAAC;AACjE7O,cAAI,EAAE,sDAD2D;AAEjEwB,cAAI,EAAE,CAAC;AACCiB,mBAAO,EAAE,CACL,4DADK,EAEL,4DAFK,EAGL,kEAHK,EAIL,sEAJK,CADV;AAOCG,mBAAO,EAAE,CAAC6B,UAAD,EAAa0D,gBAAb,EAA+B,sEAA/B,EAAgD,0EAAhD,CAPV;AAQCxF,wBAAY,EAAE,CAAC8B,UAAD,EAAa0D,gBAAb,CARf;AASC6G,2BAAe,EAAE,CAAC7G,gBAAD,CATlB;AAUC4G,qBAAS,EAAE,CAAC/K,4CAAD;AAVZ,WAAD;AAF2D,SAAD,CAA3C,EAcrB,IAdqB,EAcf,IAde;AAcP,OAdR;AAgBd;;;;;;;;AAQA;;;AAMA","file":"default~modules-material-material-module~modules-notification-notification-module-es5.js","sourcesContent":["import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nconst _c0 = \".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\";\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nclass MatProgressSpinnerBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /** Mode of the progress circle */\n        this.mode = 'determinate';\n        const trackedDiameters = MatProgressSpinner._diameters;\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() { return this._diameter; }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** Value of the progress circle. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    ngOnInit() {\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _getCircleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _getViewBox() {\n        const viewBox = this._getCircleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _getStrokeCircumference() {\n        return 2 * Math.PI * this._getCircleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _getStrokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._getStrokeCircumference() * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._getStrokeCircumference() * 0.2;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _getCircleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    _attachStyleNode() {\n        const styleRoot = this._styleRoot;\n        const currentDiameter = this._diameter;\n        const diameters = MatProgressSpinner._diameters;\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', this._spinnerAnimationLabel);\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    _getAnimationText() {\n        const strokeCircumference = this._getStrokeCircumference();\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`);\n    }\n    /** Returns the circle diameter formatted for use with the animation-name CSS property. */\n    _getSpinnerAnimationLabel() {\n        // The string of a float point number will include a period ‘.’ character,\n        // which is not valid for a CSS animation-name.\n        return this.diameter.toString().replace('.', '_');\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner, MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner, MatSpinner, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map","import { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, ViewContainerRef, NgZone, Inject, Optional, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { ScrollDispatcher, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/cdk/scrolling';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nimport * as ɵngcc6 from '@angular/cdk/layout';\nimport * as ɵngcc7 from '@angular/common';\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/** CSS class that will be attached to the overlay panel. */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        /** The default delay in ms before showing the tooltip after show is called */\n        this.showDelay = this._defaultOptions.showDelay;\n        /** The default delay in ms before hiding the tooltip after hide is called */\n        this.hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Handles the keydown events on the host element.\n         * Needs to be an arrow function so that we can use it in addEventListener.\n         */\n        this._handleKeydown = (event) => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        };\n        this._scrollStrategy = scrollStrategy;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _ngZone.runOutsideAngular(() => {\n            _elementRef.nativeElement.addEventListener('keydown', this._handleKeydown);\n        });\n    }\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() { return this._position; }\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition();\n                if (this._tooltipInstance) {\n                    this._tooltipInstance.show(0);\n                }\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n        }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() { return this._message; }\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        this._message = value != null ? `${value}`.trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular(() => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then(() => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n                });\n            });\n        }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() { return this._tooltipClass; }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor.monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        nativeElement.removeEventListener('keydown', this._handleKeydown);\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message);\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay) {\n        if (this.disabled || !this.message || (this._isTooltipVisible() &&\n            !this._tooltipInstance._showTimeoutId && !this._tooltipInstance._hideTimeoutId)) {\n            return;\n        }\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance.afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        this._tooltipInstance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn('.mat-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: TOOLTIP_PANEL_CLASS,\n            scrollStrategy: this._scrollStrategy()\n        });\n        this._updatePosition();\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition() {\n        const position = this._overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            Object.assign(Object.assign({}, origin.main), overlay.main),\n            Object.assign(Object.assign({}, origin.fallback), overlay.fallback)\n        ]);\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y }\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled || !this.message || !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners\n                .push(['mouseenter', () => {\n                    this._setupPointerExitEventsIfNeeded();\n                    this.show();\n                }]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners\n                .push(['touchstart', () => {\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    clearTimeout(this._touchstartTimeout);\n                    this._touchstartTimeout = setTimeout(() => this.show(), LONGPRESS_DELAY);\n                }]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push(['mouseleave', () => this.hide()]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect = style.msUserSelect = style.webkitUserSelect =\n                    style.MozUserSelect = 'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\nMatTooltip.ɵfac = function MatTooltip_Factory(t) { return new (t || MatTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_DEFAULT_OPTIONS, 8)); };\nMatTooltip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTooltip, selectors: [[\"\", \"matTooltip\", \"\"]], hostAttrs: [1, \"mat-tooltip-trigger\"], inputs: { showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, exportAs: [\"matTooltip\"] });\nMatTooltip.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: AriaDescriber },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TOOLTIP_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TOOLTIP_DEFAULT_OPTIONS,] }] }\n];\nMatTooltip.propDecorators = {\n    position: [{ type: Input, args: ['matTooltipPosition',] }],\n    disabled: [{ type: Input, args: ['matTooltipDisabled',] }],\n    showDelay: [{ type: Input, args: ['matTooltipShowDelay',] }],\n    hideDelay: [{ type: Input, args: ['matTooltipHideDelay',] }],\n    touchGestures: [{ type: Input, args: ['matTooltipTouchGestures',] }],\n    message: [{ type: Input, args: ['matTooltip',] }],\n    tooltipClass: [{ type: Input, args: ['matTooltipClass',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltip, [{\n        type: Directive,\n        args: [{\n                selector: '[matTooltip]',\n                exportAs: 'matTooltip',\n                host: {\n                    'class': 'mat-tooltip-trigger'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ScrollDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.Platform }, { type: ɵngcc4.AriaDescriber }, { type: ɵngcc4.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n            }] }]; }, { showDelay: [{\n            type: Input,\n            args: ['matTooltipShowDelay']\n        }], hideDelay: [{\n            type: Input,\n            args: ['matTooltipHideDelay']\n        }], touchGestures: [{\n            type: Input,\n            args: ['matTooltipTouchGestures']\n        }], position: [{\n            type: Input,\n            args: ['matTooltipPosition']\n        }], disabled: [{\n            type: Input,\n            args: ['matTooltipDisabled']\n        }], message: [{\n            type: Input,\n            args: ['matTooltip']\n        }], tooltipClass: [{\n            type: Input,\n            args: ['matTooltipClass']\n        }] }); })();\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent {\n    constructor(_changeDetectorRef, _breakpointObserver) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._breakpointObserver = _breakpointObserver;\n        /** Property watched by the animation framework to show or hide the tooltip */\n        this._visibility = 'initial';\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n        /** Stream that emits whether the user has a handset-sized display.  */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n            this._hideTimeoutId = null;\n        }\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout(() => {\n            this._visibility = 'visible';\n            this._showTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n            this._showTimeoutId = null;\n        }\n        this._hideTimeoutId = setTimeout(() => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._visibility === 'visible';\n    }\n    ngOnDestroy() {\n        this._onHide.complete();\n    }\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n    _animationDone(event) {\n        const toState = event.toState;\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n}\nTooltipComponent.ɵfac = function TooltipComponent_Factory(t) { return new (t || TooltipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.BreakpointObserver)); };\nTooltipComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TooltipComponent, selectors: [[\"mat-tooltip-component\"]], hostAttrs: [\"aria-hidden\", \"true\"], hostVars: 2, hostBindings: function TooltipComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function TooltipComponent_click_HostBindingHandler() { return ctx._handleBodyInteraction(); }, false, ɵngcc0.ɵɵresolveBody);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"zoom\", ctx._visibility === \"visible\" ? 1 : null);\n    } }, decls: 3, vars: 7, consts: [[1, \"mat-tooltip\", 3, \"ngClass\"]], template: function TooltipComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"@state.start\", function TooltipComponent_Template_div_animation_state_start_0_listener() { return ctx._animationStart(); })(\"@state.done\", function TooltipComponent_Template_div_animation_state_done_0_listener($event) { return ctx._animationDone($event); });\n        ɵngcc0.ɵɵpipe(1, \"async\");\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var tmp_0_0 = null;\n        ɵngcc0.ɵɵclassProp(\"mat-tooltip-handset\", (tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 5, ctx._isHandset)) == null ? null : tmp_0_0.matches);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.tooltipClass)(\"@state\", ctx._visibility);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.message);\n    } }, directives: [ɵngcc7.NgClass], pipes: [ɵngcc7.AsyncPipe], styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"], encapsulation: 2, data: { animation: [matTooltipAnimations.tooltipState] }, changeDetection: 0 });\nTooltipComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: BreakpointObserver }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipComponent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tooltip-component',\n                template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTooltipAnimations.tooltipState],\n                host: {\n                    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                    '(body:click)': 'this._handleBodyInteraction()',\n                    'aria-hidden': 'true'\n                },\n                styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.BreakpointObserver }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTooltipModule });\nMatTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTooltipModule_Factory(t) { return new (t || MatTooltipModule)(); }, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            A11yModule,\n            CommonModule,\n            OverlayModule,\n            MatCommonModule,\n        ], MatCommonModule, CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTooltipModule, { declarations: function () { return [MatTooltip, TooltipComponent]; }, imports: function () { return [A11yModule,\n        CommonModule,\n        OverlayModule,\n        MatCommonModule]; }, exports: function () { return [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltipModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    CommonModule,\n                    OverlayModule,\n                    MatCommonModule,\n                ],\n                exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                declarations: [MatTooltip, TooltipComponent],\n                entryComponents: [TooltipComponent],\n                providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n\n//# sourceMappingURL=tooltip.js.map"]}